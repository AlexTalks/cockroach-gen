// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}

//line sql-gen.y:934
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14652

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1737,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 454,
	-2, 0,
	-1, 71,
	8, 905,
	29, 905,
	623, 905,
	624, 905,
	-2, 0,
	-1, 72,
	8, 905,
	29, 905,
	623, 905,
	624, 905,
	-2, 0,
	-1, 79,
	254, 268,
	544, 268,
	-2, 0,
	-1, 92,
	242, 1468,
	256, 1468,
	272, 450,
	410, 450,
	422, 1211,
	464, 450,
	478, 1211,
	528, 1211,
	556, 450,
	583, 1211,
	-2, 0,
	-1, 98,
	137, 1737,
	249, 1737,
	567, 1737,
	568, 1737,
	-2, 0,
	-1, 116,
	156, 1708,
	176, 1708,
	189, 1708,
	252, 1708,
	285, 1708,
	359, 1708,
	370, 1708,
	562, 1708,
	-2, 1679,
	-1, 158,
	164, 1039,
	271, 1039,
	413, 1000,
	483, 1000,
	527, 1000,
	547, 1039,
	549, 1000,
	-2, 0,
	-1, 163,
	4, 1739,
	21, 1739,
	22, 1739,
	23, 1739,
	24, 1739,
	25, 1739,
	26, 1739,
	27, 1739,
	28, 1739,
	30, 1739,
	31, 1739,
	37, 1739,
	41, 1739,
	43, 1739,
	44, 1739,
	46, 1739,
	47, 1739,
	48, 1739,
	49, 1739,
	50, 1739,
	51, 1739,
	52, 1739,
	53, 1739,
	54, 1739,
	56, 1739,
	57, 1739,
	58, 1739,
	59, 1739,
	61, 1739,
	62, 1739,
	63, 1739,
	64, 1739,
	65, 1739,
	66, 1739,
	67, 1739,
	71, 1739,
	72, 1739,
	73, 1739,
	74, 1739,
	76, 1739,
	77, 1739,
	78, 1739,
	82, 1739,
	83, 1739,
	84, 1739,
	85, 1739,
	86, 1739,
	87, 1739,
	88, 1739,
	89, 1739,
	92, 1739,
	93, 1739,
	94, 1739,
	95, 1739,
	96, 1739,
	98, 1739,
	100, 1739,
	101, 1739,
	102, 1739,
	103, 1739,
	104, 1739,
	105, 1739,
	107, 1739,
	108, 1739,
	109, 1739,
	111, 1739,
	112, 1739,
	113, 1739,
	121, 1739,
	122, 1739,
	123, 1739,
	124, 1739,
	125, 1739,
	127, 1739,
	128, 1739,
	129, 1739,
	130, 1739,
	132, 1739,
	133, 1739,
	134, 1739,
	136, 1739,
	137, 1739,
	138, 1739,
	140, 1739,
	141, 1739,
	142, 1739,
	145, 1739,
	146, 1739,
	147, 1739,
	149, 1739,
	150, 1739,
	151, 1739,
	153, 1739,
	154, 1739,
	155, 1739,
	157, 1739,
	158, 1739,
	159, 1739,
	160, 1739,
	161, 1739,
	162, 1739,
	163, 1739,
	164, 1739,
	165, 1739,
	166, 1739,
	167, 1739,
	168, 1739,
	169, 1739,
	170, 1739,
	171, 1739,
	172, 1739,
	173, 1739,
	175, 1739,
	181, 1739,
	182, 1739,
	183, 1739,
	184, 1739,
	188, 1739,
	190, 1739,
	191, 1739,
	192, 1739,
	194, 1739,
	195, 1739,
	198, 1739,
	199, 1739,
	200, 1739,
	201, 1739,
	202, 1739,
	203, 1739,
	204, 1739,
	205, 1739,
	206, 1739,
	207, 1739,
	208, 1739,
	209, 1739,
	210, 1739,
	211, 1739,
	213, 1739,
	214, 1739,
	216, 1739,
	217, 1739,
	219, 1739,
	220, 1739,
	221, 1739,
	222, 1739,
	223, 1739,
	224, 1739,
	225, 1739,
	226, 1739,
	227, 1739,
	228, 1739,
	229, 1739,
	231, 1739,
	232, 1739,
	234, 1739,
	235, 1739,
	236, 1739,
	237, 1739,
	238, 1739,
	242, 1739,
	243, 1739,
	244, 1739,
	245, 1739,
	248, 1739,
	249, 1739,
	250, 1739,
	251, 1739,
	253, 1739,
	255, 1739,
	256, 1739,
	258, 1739,
	260, 1739,
	261, 1739,
	262, 1739,
	264, 1739,
	268, 1739,
	269, 1739,
	270, 1739,
	271, 1739,
	272, 1739,
	273, 1739,
	275, 1739,
	276, 1739,
	277, 1739,
	279, 1739,
	280, 1739,
	282, 1739,
	283, 1739,
	286, 1739,
	287, 1739,
	288, 1739,
	289, 1739,
	290, 1739,
	291, 1739,
	292, 1739,
	295, 1739,
	296, 1739,
	297, 1739,
	298, 1739,
	300, 1739,
	301, 1739,
	302, 1739,
	303, 1739,
	304, 1739,
	305, 1739,
	306, 1739,
	307, 1739,
	308, 1739,
	309, 1739,
	310, 1739,
	311, 1739,
	312, 1739,
	313, 1739,
	314, 1739,
	315, 1739,
	316, 1739,
	317, 1739,
	318, 1739,
	319, 1739,
	320, 1739,
	321, 1739,
	322, 1739,
	324, 1739,
	326, 1739,
	327, 1739,
	328, 1739,
	329, 1739,
	330, 1739,
	331, 1739,
	332, 1739,
	333, 1739,
	334, 1739,
	335, 1739,
	336, 1739,
	337, 1739,
	338, 1739,
	339, 1739,
	340, 1739,
	341, 1739,
	342, 1739,
	344, 1739,
	345, 1739,
	347, 1739,
	349, 1739,
	350, 1739,
	351, 1739,
	352, 1739,
	354, 1739,
	355, 1739,
	356, 1739,
	357, 1739,
	358, 1739,
	361, 1739,
	363, 1739,
	365, 1739,
	366, 1739,
	367, 1739,
	368, 1739,
	371, 1739,
	372, 1739,
	373, 1739,
	375, 1739,
	377, 1739,
	378, 1739,
	379, 1739,
	380, 1739,
	381, 1739,
	382, 1739,
	383, 1739,
	384, 1739,
	385, 1739,
	386, 1739,
	387, 1739,
	388, 1739,
	389, 1739,
	391, 1739,
	392, 1739,
	393, 1739,
	394, 1739,
	395, 1739,
	396, 1739,
	397, 1739,
	398, 1739,
	399, 1739,
	400, 1739,
	401, 1739,
	402, 1739,
	403, 1739,
	404, 1739,
	405, 1739,
	407, 1739,
	408, 1739,
	409, 1739,
	411, 1739,
	412, 1739,
	413, 1739,
	414, 1739,
	415, 1739,
	416, 1739,
	417, 1739,
	418, 1739,
	419, 1739,
	420, 1739,
	421, 1739,
	422, 1739,
	423, 1739,
	424, 1739,
	426, 1739,
	428, 1739,
	429, 1739,
	430, 1739,
	436, 1739,
	437, 1739,
	438, 1739,
	440, 1739,
	441, 1739,
	442, 1739,
	443, 1739,
	444, 1739,
	445, 1739,
	446, 1739,
	447, 1739,
	448, 1739,
	449, 1739,
	450, 1739,
	452, 1739,
	453, 1739,
	454, 1739,
	456, 1739,
	457, 1739,
	458, 1739,
	459, 1739,
	460, 1739,
	461, 1739,
	462, 1739,
	464, 1739,
	465, 1739,
	466, 1739,
	467, 1739,
	468, 1739,
	469, 1739,
	470, 1739,
	471, 1739,
	472, 1739,
	473, 1739,
	474, 1739,
	475, 1739,
	476, 1739,
	478, 1739,
	479, 1739,
	480, 1739,
	481, 1739,
	482, 1739,
	483, 1739,
	485, 1739,
	486, 1739,
	487, 1739,
	488, 1739,
	489, 1739,
	490, 1739,
	492, 1739,
	493, 1739,
	494, 1739,
	495, 1739,
	496, 1739,
	497, 1739,
	498, 1739,
	499, 1739,
	501, 1739,
	503, 1739,
	504, 1739,
	505, 1739,
	506, 1739,
	507, 1739,
	508, 1739,
	509, 1739,
	510, 1739,
	511, 1739,
	512, 1739,
	513, 1739,
	514, 1739,
	515, 1739,
	516, 1739,
	517, 1739,
	518, 1739,
	519, 1739,
	520, 1739,
	521, 1739,
	523, 1739,
	524, 1739,
	526, 1739,
	527, 1739,
	529, 1739,
	530, 1739,
	531, 1739,
	532, 1739,
	533, 1739,
	534, 1739,
	536, 1739,
	537, 1739,
	539, 1739,
	540, 1739,
	541, 1739,
	542, 1739,
	543, 1739,
	545, 1739,
	547, 1739,
	548, 1739,
	549, 1739,
	550, 1739,
	551, 1739,
	552, 1739,
	553, 1739,
	555, 1739,
	556, 1739,
	557, 1739,
	558, 1739,
	559, 1739,
	560, 1739,
	561, 1739,
	564, 1739,
	565, 1739,
	566, 1739,
	567, 1739,
	568, 1739,
	569, 1739,
	570, 1739,
	571, 1739,
	573, 1739,
	576, 1739,
	577, 1739,
	578, 1739,
	579, 1739,
	580, 1739,
	581, 1739,
	583, 1739,
	584, 1739,
	585, 1739,
	586, 1739,
	587, 1739,
	588, 1739,
	589, 1739,
	590, 1739,
	595, 1739,
	596, 1739,
	597, 1739,
	598, 1739,
	599, 1739,
	600, 1739,
	-2, 0,
	-1, 164,
	1, 1587,
	135, 1587,
	260, 1587,
	346, 1587,
	408, 1587,
	418, 1587,
	604, 1587,
	636, 1587,
	-2, 0,
	-1, 166,
	1, 1587,
	636, 1587,
	-2, 0,
	-1, 167,
	1, 1587,
	636, 1587,
	-2, 0,
	-1, 168,
	1, 1587,
	544, 1587,
	636, 1587,
	-2, 0,
	-1, 200,
	156, 1707,
	176, 1707,
	189, 1707,
	252, 1707,
	285, 1707,
	359, 1707,
	370, 1707,
	562, 1707,
	-2, 1682,
	-1, 252,
	4, 1746,
	5, 1746,
	6, 1746,
	7, 1746,
	8, 1746,
	9, 1746,
	10, 1746,
	21, 1746,
	22, 1746,
	23, 1746,
	24, 1746,
	25, 1746,
	26, 1746,
	27, 1746,
	28, 1746,
	30, 1746,
	31, 1746,
	37, 1746,
	38, 1746,
	41, 1746,
	43, 1746,
	44, 1746,
	45, 1746,
	46, 1746,
	47, 1746,
	48, 1746,
	49, 1746,
	50, 1746,
	51, 1746,
	52, 1746,
	53, 1746,
	54, 1746,
	56, 1746,
	57, 1746,
	58, 1746,
	59, 1746,
	61, 1746,
	62, 1746,
	63, 1746,
	64, 1746,
	65, 1746,
	66, 1746,
	67, 1746,
	68, 1746,
	69, 1746,
	70, 1746,
	71, 1746,
	72, 1746,
	73, 1746,
	74, 1746,
	76, 1746,
	77, 1746,
	78, 1746,
	80, 1746,
	82, 1746,
	83, 1746,
	84, 1746,
	85, 1746,
	86, 1746,
	87, 1746,
	88, 1746,
	89, 1746,
	92, 1746,
	93, 1746,
	94, 1746,
	95, 1746,
	96, 1746,
	98, 1746,
	100, 1746,
	101, 1746,
	102, 1746,
	103, 1746,
	104, 1746,
	105, 1746,
	107, 1746,
	108, 1746,
	109, 1746,
	110, 1746,
	111, 1746,
	112, 1746,
	113, 1746,
	114, 1746,
	115, 1746,
	116, 1746,
	117, 1746,
	118, 1746,
	119, 1746,
	120, 1746,
	121, 1746,
	122, 1746,
	123, 1746,
	124, 1746,
	125, 1746,
	126, 1746,
	127, 1746,
	128, 1746,
	129, 1746,
	130, 1746,
	131, 1746,
	132, 1746,
	133, 1746,
	134, 1746,
	136, 1746,
	137, 1746,
	138, 1746,
	140, 1746,
	141, 1746,
	142, 1746,
	145, 1746,
	146, 1746,
	147, 1746,
	149, 1746,
	150, 1746,
	151, 1746,
	153, 1746,
	154, 1746,
	155, 1746,
	157, 1746,
	158, 1746,
	159, 1746,
	160, 1746,
	161, 1746,
	162, 1746,
	163, 1746,
	164, 1746,
	165, 1746,
	166, 1746,
	167, 1746,
	168, 1746,
	169, 1746,
	170, 1746,
	171, 1746,
	172, 1746,
	173, 1746,
	174, 1746,
	175, 1746,
	181, 1746,
	182, 1746,
	183, 1746,
	184, 1746,
	188, 1746,
	190, 1746,
	191, 1746,
	192, 1746,
	194, 1746,
	195, 1746,
	197, 1746,
	198, 1746,
	199, 1746,
	200, 1746,
	201, 1746,
	202, 1746,
	203, 1746,
	204, 1746,
	205, 1746,
	206, 1746,
	207, 1746,
	208, 1746,
	209, 1746,
	210, 1746,
	211, 1746,
	213, 1746,
	214, 1746,
	216, 1746,
	217, 1746,
	219, 1746,
	220, 1746,
	221, 1746,
	222, 1746,
	223, 1746,
	224, 1746,
	225, 1746,
	226, 1746,
	227, 1746,
	228, 1746,
	229, 1746,
	230, 1746,
	231, 1746,
	232, 1746,
	234, 1746,
	235, 1746,
	236, 1746,
	237, 1746,
	238, 1746,
	242, 1746,
	243, 1746,
	244, 1746,
	245, 1746,
	247, 1746,
	248, 1746,
	249, 1746,
	250, 1746,
	251, 1746,
	253, 1746,
	255, 1746,
	256, 1746,
	257, 1746,
	258, 1746,
	259, 1746,
	260, 1746,
	261, 1746,
	262, 1746,
	263, 1746,
	264, 1746,
	268, 1746,
	269, 1746,
	270, 1746,
	271, 1746,
	272, 1746,
	273, 1746,
	275, 1746,
	276, 1746,
	277, 1746,
	279, 1746,
	280, 1746,
	281, 1746,
	282, 1746,
	283, 1746,
	284, 1746,
	286, 1746,
	287, 1746,
	288, 1746,
	289, 1746,
	290, 1746,
	291, 1746,
	292, 1746,
	293, 1746,
	294, 1746,
	295, 1746,
	296, 1746,
	297, 1746,
	298, 1746,
	300, 1746,
	301, 1746,
	302, 1746,
	303, 1746,
	304, 1746,
	305, 1746,
	306, 1746,
	307, 1746,
	308, 1746,
	309, 1746,
	310, 1746,
	311, 1746,
	312, 1746,
	313, 1746,
	314, 1746,
	315, 1746,
	316, 1746,
	317, 1746,
	318, 1746,
	319, 1746,
	320, 1746,
	321, 1746,
	322, 1746,
	324, 1746,
	325, 1746,
	326, 1746,
	327, 1746,
	328, 1746,
	329, 1746,
	330, 1746,
	331, 1746,
	332, 1746,
	333, 1746,
	334, 1746,
	335, 1746,
	336, 1746,
	337, 1746,
	338, 1746,
	339, 1746,
	340, 1746,
	341, 1746,
	342, 1746,
	343, 1746,
	344, 1746,
	345, 1746,
	346, 1746,
	347, 1746,
	348, 1746,
	349, 1746,
	350, 1746,
	351, 1746,
	352, 1746,
	353, 1746,
	354, 1746,
	355, 1746,
	356, 1746,
	357, 1746,
	358, 1746,
	361, 1746,
	363, 1746,
	366, 1746,
	367, 1746,
	368, 1746,
	371, 1746,
	372, 1746,
	373, 1746,
	374, 1746,
	375, 1746,
	376, 1746,
	377, 1746,
	378, 1746,
	379, 1746,
	380, 1746,
	381, 1746,
	382, 1746,
	383, 1746,
	384, 1746,
	385, 1746,
	386, 1746,
	387, 1746,
	388, 1746,
	389, 1746,
	391, 1746,
	392, 1746,
	393, 1746,
	394, 1746,
	395, 1746,
	396, 1746,
	397, 1746,
	398, 1746,
	399, 1746,
	400, 1746,
	401, 1746,
	402, 1746,
	403, 1746,
	404, 1746,
	405, 1746,
	407, 1746,
	408, 1746,
	409, 1746,
	411, 1746,
	412, 1746,
	413, 1746,
	414, 1746,
	415, 1746,
	416, 1746,
	417, 1746,
	418, 1746,
	419, 1746,
	420, 1746,
	421, 1746,
	422, 1746,
	423, 1746,
	424, 1746,
	426, 1746,
	428, 1746,
	429, 1746,
	430, 1746,
	436, 1746,
	437, 1746,
	438, 1746,
	440, 1746,
	441, 1746,
	442, 1746,
	443, 1746,
	444, 1746,
	445, 1746,
	446, 1746,
	447, 1746,
	448, 1746,
	449, 1746,
	450, 1746,
	452, 1746,
	453, 1746,
	454, 1746,
	455, 1746,
	456, 1746,
	457, 1746,
	458, 1746,
	459, 1746,
	460, 1746,
	461, 1746,
	462, 1746,
	464, 1746,
	465, 1746,
	466, 1746,
	467, 1746,
	468, 1746,
	469, 1746,
	470, 1746,
	471, 1746,
	472, 1746,
	473, 1746,
	474, 1746,
	475, 1746,
	476, 1746,
	478, 1746,
	479, 1746,
	480, 1746,
	481, 1746,
	482, 1746,
	483, 1746,
	484, 1746,
	485, 1746,
	486, 1746,
	487, 1746,
	488, 1746,
	489, 1746,
	490, 1746,
	491, 1746,
	492, 1746,
	493, 1746,
	494, 1746,
	495, 1746,
	496, 1746,
	497, 1746,
	498, 1746,
	499, 1746,
	501, 1746,
	503, 1746,
	504, 1746,
	505, 1746,
	506, 1746,
	507, 1746,
	508, 1746,
	509, 1746,
	510, 1746,
	511, 1746,
	512, 1746,
	513, 1746,
	514, 1746,
	515, 1746,
	516, 1746,
	517, 1746,
	518, 1746,
	519, 1746,
	520, 1746,
	521, 1746,
	523, 1746,
	524, 1746,
	525, 1746,
	526, 1746,
	527, 1746,
	529, 1746,
	530, 1746,
	531, 1746,
	532, 1746,
	533, 1746,
	534, 1746,
	536, 1746,
	537, 1746,
	539, 1746,
	540, 1746,
	541, 1746,
	542, 1746,
	543, 1746,
	545, 1746,
	547, 1746,
	548, 1746,
	549, 1746,
	550, 1746,
	551, 1746,
	552, 1746,
	553, 1746,
	554, 1746,
	555, 1746,
	556, 1746,
	557, 1746,
	558, 1746,
	559, 1746,
	560, 1746,
	561, 1746,
	563, 1746,
	564, 1746,
	565, 1746,
	566, 1746,
	567, 1746,
	568, 1746,
	569, 1746,
	570, 1746,
	571, 1746,
	572, 1746,
	573, 1746,
	576, 1746,
	577, 1746,
	578, 1746,
	579, 1746,
	580, 1746,
	581, 1746,
	583, 1746,
	584, 1746,
	585, 1746,
	586, 1746,
	587, 1746,
	588, 1746,
	589, 1746,
	590, 1746,
	595, 1746,
	596, 1746,
	597, 1746,
	598, 1746,
	599, 1746,
	600, 1746,
	601, 1746,
	616, 1746,
	623, 1746,
	624, 1746,
	625, 1746,
	633, 1746,
	637, 1746,
	-2, 0,
	-1, 799,
	4, 1466,
	21, 1466,
	22, 1466,
	23, 1466,
	24, 1466,
	25, 1466,
	26, 1466,
	27, 1466,
	28, 1466,
	30, 1466,
	31, 1466,
	37, 1466,
	41, 1466,
	43, 1466,
	44, 1466,
	46, 1466,
	47, 1466,
	48, 1466,
	49, 1466,
	50, 1466,
	51, 1466,
	52, 1466,
	53, 1466,
	54, 1466,
	56, 1466,
	57, 1466,
	58, 1466,
	59, 1466,
	61, 1466,
	62, 1466,
	63, 1466,
	64, 1466,
	65, 1466,
	66, 1466,
	67, 1466,
	71, 1466,
	72, 1466,
	73, 1466,
	74, 1466,
	76, 1466,
	77, 1466,
	78, 1466,
	82, 1466,
	83, 1466,
	84, 1466,
	85, 1466,
	86, 1466,
	87, 1466,
	88, 1466,
	89, 1466,
	92, 1466,
	93, 1466,
	94, 1466,
	95, 1466,
	96, 1466,
	98, 1466,
	100, 1466,
	101, 1466,
	102, 1466,
	103, 1466,
	104, 1466,
	105, 1466,
	107, 1466,
	108, 1466,
	109, 1466,
	111, 1466,
	112, 1466,
	113, 1466,
	121, 1466,
	122, 1466,
	123, 1466,
	124, 1466,
	125, 1466,
	127, 1466,
	128, 1466,
	129, 1466,
	130, 1466,
	132, 1466,
	133, 1466,
	134, 1466,
	136, 1466,
	137, 1466,
	138, 1466,
	140, 1466,
	141, 1466,
	142, 1466,
	145, 1466,
	146, 1466,
	147, 1466,
	149, 1466,
	150, 1466,
	151, 1466,
	153, 1466,
	154, 1466,
	155, 1466,
	157, 1466,
	158, 1466,
	159, 1466,
	160, 1466,
	161, 1466,
	162, 1466,
	163, 1466,
	164, 1466,
	165, 1466,
	166, 1466,
	167, 1466,
	168, 1466,
	169, 1466,
	170, 1466,
	171, 1466,
	172, 1466,
	173, 1466,
	175, 1466,
	181, 1466,
	182, 1466,
	183, 1466,
	184, 1466,
	188, 1466,
	190, 1466,
	191, 1466,
	192, 1466,
	194, 1466,
	195, 1466,
	198, 1466,
	199, 1466,
	200, 1466,
	201, 1466,
	202, 1466,
	203, 1466,
	204, 1466,
	205, 1466,
	206, 1466,
	207, 1466,
	208, 1466,
	209, 1466,
	210, 1466,
	211, 1466,
	213, 1466,
	214, 1466,
	216, 1466,
	217, 1466,
	219, 1466,
	220, 1466,
	221, 1466,
	222, 1466,
	223, 1466,
	224, 1466,
	225, 1466,
	226, 1466,
	227, 1466,
	228, 1466,
	229, 1466,
	231, 1466,
	232, 1466,
	234, 1466,
	235, 1466,
	236, 1466,
	237, 1466,
	238, 1466,
	242, 1466,
	243, 1466,
	244, 1466,
	245, 1466,
	248, 1466,
	249, 1466,
	250, 1466,
	251, 1466,
	253, 1466,
	255, 1466,
	256, 1466,
	258, 1466,
	260, 1466,
	261, 1466,
	262, 1466,
	264, 1466,
	268, 1466,
	269, 1466,
	270, 1466,
	271, 1466,
	272, 1466,
	273, 1466,
	275, 1466,
	276, 1466,
	277, 1466,
	279, 1466,
	280, 1466,
	282, 1466,
	283, 1466,
	286, 1466,
	287, 1466,
	288, 1466,
	289, 1466,
	290, 1466,
	291, 1466,
	292, 1466,
	295, 1466,
	296, 1466,
	297, 1466,
	298, 1466,
	300, 1466,
	301, 1466,
	302, 1466,
	303, 1466,
	304, 1466,
	305, 1466,
	306, 1466,
	307, 1466,
	308, 1466,
	309, 1466,
	310, 1466,
	311, 1466,
	312, 1466,
	313, 1466,
	314, 1466,
	315, 1466,
	316, 1466,
	317, 1466,
	318, 1466,
	319, 1466,
	320, 1466,
	321, 1466,
	322, 1466,
	324, 1466,
	326, 1466,
	327, 1466,
	328, 1466,
	329, 1466,
	330, 1466,
	331, 1466,
	332, 1466,
	333, 1466,
	334, 1466,
	335, 1466,
	336, 1466,
	337, 1466,
	338, 1466,
	339, 1466,
	340, 1466,
	341, 1466,
	342, 1466,
	344, 1466,
	345, 1466,
	347, 1466,
	349, 1466,
	350, 1466,
	351, 1466,
	352, 1466,
	354, 1466,
	355, 1466,
	356, 1466,
	357, 1466,
	358, 1466,
	361, 1466,
	363, 1466,
	366, 1466,
	367, 1466,
	368, 1466,
	371, 1466,
	372, 1466,
	373, 1466,
	375, 1466,
	377, 1466,
	378, 1466,
	379, 1466,
	380, 1466,
	381, 1466,
	382, 1466,
	383, 1466,
	384, 1466,
	385, 1466,
	386, 1466,
	387, 1466,
	388, 1466,
	389, 1466,
	391, 1466,
	392, 1466,
	393, 1466,
	394, 1466,
	395, 1466,
	396, 1466,
	397, 1466,
	398, 1466,
	399, 1466,
	400, 1466,
	401, 1466,
	402, 1466,
	403, 1466,
	404, 1466,
	405, 1466,
	407, 1466,
	408, 1466,
	409, 1466,
	411, 1466,
	412, 1466,
	413, 1466,
	414, 1466,
	415, 1466,
	416, 1466,
	417, 1466,
	418, 1466,
	419, 1466,
	420, 1466,
	421, 1466,
	422, 1466,
	423, 1466,
	424, 1466,
	426, 1466,
	428, 1466,
	429, 1466,
	430, 1466,
	436, 1466,
	437, 1466,
	438, 1466,
	440, 1466,
	441, 1466,
	442, 1466,
	443, 1466,
	444, 1466,
	445, 1466,
	446, 1466,
	447, 1466,
	448, 1466,
	449, 1466,
	450, 1466,
	452, 1466,
	453, 1466,
	454, 1466,
	456, 1466,
	457, 1466,
	458, 1466,
	459, 1466,
	460, 1466,
	461, 1466,
	462, 1466,
	464, 1466,
	465, 1466,
	466, 1466,
	467, 1466,
	468, 1466,
	469, 1466,
	470, 1466,
	471, 1466,
	472, 1466,
	473, 1466,
	474, 1466,
	475, 1466,
	476, 1466,
	478, 1466,
	479, 1466,
	480, 1466,
	481, 1466,
	482, 1466,
	483, 1466,
	485, 1466,
	486, 1466,
	487, 1466,
	488, 1466,
	489, 1466,
	490, 1466,
	492, 1466,
	493, 1466,
	494, 1466,
	495, 1466,
	496, 1466,
	497, 1466,
	498, 1466,
	499, 1466,
	501, 1466,
	503, 1466,
	504, 1466,
	505, 1466,
	506, 1466,
	507, 1466,
	508, 1466,
	509, 1466,
	510, 1466,
	511, 1466,
	512, 1466,
	513, 1466,
	514, 1466,
	515, 1466,
	516, 1466,
	517, 1466,
	518, 1466,
	519, 1466,
	520, 1466,
	521, 1466,
	523, 1466,
	524, 1466,
	526, 1466,
	527, 1466,
	529, 1466,
	530, 1466,
	531, 1466,
	532, 1466,
	533, 1466,
	534, 1466,
	536, 1466,
	537, 1466,
	539, 1466,
	540, 1466,
	541, 1466,
	542, 1466,
	543, 1466,
	545, 1466,
	547, 1466,
	548, 1466,
	549, 1466,
	550, 1466,
	551, 1466,
	552, 1466,
	553, 1466,
	555, 1466,
	556, 1466,
	557, 1466,
	558, 1466,
	559, 1466,
	560, 1466,
	561, 1466,
	564, 1466,
	565, 1466,
	566, 1466,
	567, 1466,
	568, 1466,
	569, 1466,
	570, 1466,
	571, 1466,
	573, 1466,
	576, 1466,
	577, 1466,
	578, 1466,
	579, 1466,
	580, 1466,
	581, 1466,
	583, 1466,
	584, 1466,
	585, 1466,
	586, 1466,
	587, 1466,
	588, 1466,
	589, 1466,
	590, 1466,
	595, 1466,
	596, 1466,
	597, 1466,
	598, 1466,
	599, 1466,
	600, 1466,
	-2, 0,
	-1, 818,
	196, 2544,
	544, 2544,
	615, 2544,
	635, 2544,
	-2, 0,
	-1, 819,
	196, 2530,
	544, 2530,
	615, 2530,
	635, 2530,
	-2, 0,
	-1, 821,
	196, 2812,
	544, 2812,
	615, 2812,
	635, 2812,
	-2, 0,
	-1, 824,
	196, 2660,
	544, 2660,
	615, 2660,
	635, 2660,
	-2, 0,
	-1, 825,
	196, 2857,
	544, 2857,
	615, 2857,
	635, 2857,
	-2, 0,
	-1, 833,
	196, 2688,
	544, 2688,
	615, 2688,
	635, 2688,
	-2, 771,
	-1, 849,
	8, 904,
	29, 904,
	623, 904,
	624, 904,
	-2, 909,
	-1, 853,
	1, 2598,
	636, 2598,
	-2, 909,
	-1, 854,
	1, 2648,
	636, 2648,
	-2, 909,
	-1, 857,
	1, 2693,
	636, 2693,
	-2, 902,
	-1, 858,
	1, 2749,
	636, 2749,
	-2, 903,
	-1, 859,
	1, 2603,
	636, 2603,
	-2, 906,
	-1, 860,
	1, 2517,
	636, 2517,
	-2, 907,
	-1, 895,
	635, 2476,
	638, 2476,
	-2, 1126,
	-1, 896,
	635, 2478,
	638, 2478,
	-2, 1127,
	-1, 897,
	635, 2477,
	638, 2477,
	-2, 1128,
	-1, 898,
	638, 2400,
	-2, 1129,
	-1, 924,
	189, 287,
	-2, 0,
	-1, 947,
	45, 2449,
	-2, 0,
	-1, 948,
	583, 1444,
	-2, 1212,
	-1, 964,
	4, 1880,
	21, 1880,
	22, 1880,
	23, 1880,
	24, 1880,
	25, 1880,
	26, 1880,
	27, 1880,
	28, 1880,
	30, 1880,
	31, 1880,
	37, 1880,
	41, 1880,
	43, 1880,
	44, 1880,
	46, 1880,
	47, 1880,
	48, 1880,
	49, 1880,
	50, 1880,
	51, 1880,
	52, 1880,
	53, 1880,
	54, 1880,
	56, 1880,
	57, 1880,
	58, 1880,
	59, 1880,
	61, 1880,
	62, 1880,
	63, 1880,
	64, 1880,
	65, 1880,
	66, 1880,
	67, 1880,
	71, 1880,
	72, 1880,
	73, 1880,
	74, 1880,
	76, 1880,
	77, 1880,
	78, 1880,
	82, 1880,
	83, 1880,
	84, 1880,
	85, 1880,
	86, 1880,
	87, 1880,
	88, 1880,
	89, 1880,
	92, 1880,
	93, 1880,
	94, 1880,
	95, 1880,
	96, 1880,
	98, 1880,
	100, 1880,
	101, 1880,
	102, 1880,
	103, 1880,
	104, 1880,
	105, 1880,
	107, 1880,
	108, 1880,
	109, 1880,
	111, 1880,
	112, 1880,
	113, 1880,
	121, 1880,
	122, 1880,
	123, 1880,
	124, 1880,
	125, 1880,
	127, 1880,
	128, 1880,
	129, 1880,
	130, 1880,
	132, 1880,
	133, 1880,
	134, 1880,
	136, 1880,
	137, 1880,
	138, 1880,
	140, 1880,
	141, 1880,
	142, 1880,
	145, 1880,
	146, 1880,
	147, 1880,
	149, 1880,
	150, 1880,
	151, 1880,
	153, 1880,
	154, 1880,
	155, 1880,
	157, 1880,
	158, 1880,
	159, 1880,
	160, 1880,
	161, 1880,
	162, 1880,
	163, 1880,
	164, 1880,
	165, 1880,
	166, 1880,
	167, 1880,
	168, 1880,
	169, 1880,
	170, 1880,
	171, 1880,
	172, 1880,
	173, 1880,
	175, 1880,
	181, 1880,
	182, 1880,
	183, 1880,
	184, 1880,
	188, 1880,
	190, 1880,
	191, 1880,
	192, 1880,
	194, 1880,
	195, 1880,
	198, 1880,
	199, 1880,
	200, 1880,
	201, 1880,
	202, 1880,
	203, 1880,
	204, 1880,
	205, 1880,
	206, 1880,
	207, 1880,
	208, 1880,
	209, 1880,
	210, 1880,
	211, 1880,
	213, 1880,
	214, 1880,
	216, 1880,
	217, 1880,
	219, 1880,
	220, 1880,
	221, 1880,
	222, 1880,
	223, 1880,
	224, 1880,
	225, 1880,
	226, 1880,
	227, 1880,
	228, 1880,
	229, 1880,
	231, 1880,
	232, 1880,
	234, 1880,
	235, 1880,
	236, 1880,
	237, 1880,
	238, 1880,
	242, 1880,
	243, 1880,
	244, 1880,
	245, 1880,
	248, 1880,
	249, 1880,
	250, 1880,
	251, 1880,
	253, 1880,
	255, 1880,
	256, 1880,
	258, 1880,
	260, 1880,
	261, 1880,
	262, 1880,
	264, 1880,
	268, 1880,
	269, 1880,
	270, 1880,
	271, 1880,
	272, 1880,
	273, 1880,
	275, 1880,
	276, 1880,
	277, 1880,
	279, 1880,
	280, 1880,
	282, 1880,
	283, 1880,
	286, 1880,
	287, 1880,
	288, 1880,
	289, 1880,
	290, 1880,
	291, 1880,
	292, 1880,
	295, 1880,
	296, 1880,
	297, 1880,
	298, 1880,
	300, 1880,
	301, 1880,
	302, 1880,
	303, 1880,
	304, 1880,
	305, 1880,
	306, 1880,
	307, 1880,
	308, 1880,
	309, 1880,
	310, 1880,
	311, 1880,
	312, 1880,
	313, 1880,
	314, 1880,
	315, 1880,
	316, 1880,
	317, 1880,
	318, 1880,
	319, 1880,
	320, 1880,
	321, 1880,
	322, 1880,
	324, 1880,
	326, 1880,
	327, 1880,
	328, 1880,
	329, 1880,
	330, 1880,
	331, 1880,
	332, 1880,
	333, 1880,
	334, 1880,
	335, 1880,
	336, 1880,
	337, 1880,
	338, 1880,
	339, 1880,
	340, 1880,
	341, 1880,
	342, 1880,
	344, 1880,
	345, 1880,
	347, 1880,
	349, 1880,
	350, 1880,
	351, 1880,
	352, 1880,
	354, 1880,
	355, 1880,
	356, 1880,
	357, 1880,
	358, 1880,
	361, 1880,
	363, 1880,
	366, 1880,
	367, 1880,
	368, 1880,
	371, 1880,
	372, 1880,
	373, 1880,
	375, 1880,
	377, 1880,
	378, 1880,
	379, 1880,
	380, 1880,
	381, 1880,
	382, 1880,
	383, 1880,
	384, 1880,
	385, 1880,
	386, 1880,
	387, 1880,
	388, 1880,
	389, 1880,
	391, 1880,
	392, 1880,
	393, 1880,
	394, 1880,
	395, 1880,
	396, 1880,
	397, 1880,
	398, 1880,
	399, 1880,
	400, 1880,
	401, 1880,
	402, 1880,
	403, 1880,
	404, 1880,
	405, 1880,
	407, 1880,
	408, 1880,
	409, 1880,
	411, 1880,
	412, 1880,
	413, 1880,
	414, 1880,
	415, 1880,
	416, 1880,
	417, 1880,
	418, 1880,
	419, 1880,
	420, 1880,
	421, 1880,
	422, 1880,
	423, 1880,
	424, 1880,
	426, 1880,
	428, 1880,
	429, 1880,
	430, 1880,
	436, 1880,
	437, 1880,
	438, 1880,
	440, 1880,
	441, 1880,
	442, 1880,
	443, 1880,
	444, 1880,
	445, 1880,
	446, 1880,
	447, 1880,
	448, 1880,
	449, 1880,
	450, 1880,
	452, 1880,
	453, 1880,
	454, 1880,
	456, 1880,
	457, 1880,
	458, 1880,
	459, 1880,
	460, 1880,
	461, 1880,
	462, 1880,
	464, 1880,
	465, 1880,
	466, 1880,
	467, 1880,
	468, 1880,
	469, 1880,
	470, 1880,
	471, 1880,
	472, 1880,
	473, 1880,
	474, 1880,
	475, 1880,
	476, 1880,
	478, 1880,
	479, 1880,
	480, 1880,
	481, 1880,
	482, 1880,
	483, 1880,
	485, 1880,
	486, 1880,
	487, 1880,
	488, 1880,
	489, 1880,
	490, 1880,
	492, 1880,
	493, 1880,
	494, 1880,
	495, 1880,
	496, 1880,
	497, 1880,
	498, 1880,
	499, 1880,
	501, 1880,
	503, 1880,
	504, 1880,
	505, 1880,
	506, 1880,
	507, 1880,
	508, 1880,
	509, 1880,
	510, 1880,
	511, 1880,
	512, 1880,
	513, 1880,
	514, 1880,
	515, 1880,
	516, 1880,
	517, 1880,
	518, 1880,
	519, 1880,
	520, 1880,
	521, 1880,
	523, 1880,
	524, 1880,
	526, 1880,
	527, 1880,
	529, 1880,
	530, 1880,
	531, 1880,
	532, 1880,
	533, 1880,
	534, 1880,
	536, 1880,
	537, 1880,
	539, 1880,
	540, 1880,
	541, 1880,
	542, 1880,
	543, 1880,
	545, 1880,
	547, 1880,
	548, 1880,
	549, 1880,
	550, 1880,
	551, 1880,
	552, 1880,
	553, 1880,
	555, 1880,
	556, 1880,
	557, 1880,
	558, 1880,
	559, 1880,
	560, 1880,
	561, 1880,
	564, 1880,
	565, 1880,
	566, 1880,
	567, 1880,
	568, 1880,
	569, 1880,
	570, 1880,
	571, 1880,
	573, 1880,
	576, 1880,
	577, 1880,
	578, 1880,
	579, 1880,
	580, 1880,
	581, 1880,
	583, 1880,
	584, 1880,
	585, 1880,
	586, 1880,
	587, 1880,
	588, 1880,
	589, 1880,
	590, 1880,
	595, 1880,
	596, 1880,
	597, 1880,
	598, 1880,
	599, 1880,
	600, 1880,
	-2, 0,
	-1, 974,
	272, 454,
	-2, 0,
	-1, 1052,
	196, 948,
	-2, 0,
	-1, 1053,
	413, 1001,
	483, 1001,
	527, 1001,
	549, 1001,
	-2, 0,
	-1, 1054,
	413, 1000,
	483, 1000,
	527, 1000,
	549, 1000,
	-2, 922,
	-1, 1058,
	1, 1053,
	632, 1053,
	634, 1053,
	636, 1053,
	-2, 0,
	-1, 1060,
	1, 975,
	632, 975,
	634, 975,
	636, 975,
	-2, 0,
	-1, 1061,
	1, 979,
	632, 979,
	634, 979,
	636, 979,
	-2, 0,
	-1, 1062,
	1, 1125,
	189, 1125,
	632, 1125,
	634, 1125,
	636, 1125,
	-2, 0,
	-1, 1070,
	1, 1006,
	632, 1006,
	634, 1006,
	636, 1006,
	-2, 0,
	-1, 1077,
	1, 1053,
	632, 1053,
	634, 1053,
	636, 1053,
	-2, 0,
	-1, 1078,
	1, 1055,
	632, 1055,
	634, 1055,
	636, 1055,
	-2, 0,
	-1, 1079,
	1, 1058,
	632, 1058,
	634, 1058,
	636, 1058,
	-2, 0,
	-1, 1087,
	1, 1088,
	632, 1088,
	634, 1088,
	636, 1088,
	-2, 0,
	-1, 1088,
	1, 1090,
	632, 1090,
	634, 1090,
	636, 1090,
	-2, 0,
	-1, 1093,
	1, 1118,
	632, 1118,
	634, 1118,
	636, 1118,
	-2, 0,
	-1, 1149,
	176, 1750,
	189, 1750,
	285, 1750,
	359, 1750,
	-2, 1686,
	-1, 1165,
	176, 1749,
	189, 1749,
	285, 1749,
	359, 1749,
	-2, 1683,
	-1, 1194,
	635, 2475,
	-2, 779,
	-1, 1223,
	5, 2467,
	633, 2465,
	-2, 2456,
	-1, 1231,
	5, 2488,
	633, 2485,
	-2, 2476,
	-1, 1232,
	5, 2489,
	633, 2486,
	-2, 2477,
	-1, 1240,
	635, 2473,
	-2, 2455,
	-1, 1241,
	633, 2945,
	-2, 2474,
	-1, 1264,
	633, 2944,
	-2, 2490,
	-1, 1265,
	5, 1955,
	-2, 2915,
	-1, 1266,
	5, 1956,
	-2, 2916,
	-1, 1267,
	5, 1957,
	-2, 2930,
	-1, 1268,
	5, 1958,
	-2, 2894,
	-1, 1269,
	5, 1959,
	-2, 2928,
	-1, 1270,
	5, 1967,
	-2, 2907,
	-1, 1271,
	5, 1954,
	-2, 2903,
	-1, 1272,
	5, 1954,
	-2, 2902,
	-1, 1273,
	5, 1954,
	-2, 2921,
	-1, 1274,
	5, 1965,
	-2, 2896,
	-1, 1275,
	5, 1970,
	-2, 2895,
	-1, 1276,
	5, 1972,
	-2, 2940,
	-1, 1279,
	5, 1994,
	-2, 2933,
	-1, 1280,
	5, 1986,
	-2, 2934,
	-1, 1281,
	5, 1994,
	-2, 2935,
	-1, 1282,
	5, 1990,
	-2, 2936,
	-1, 1283,
	5, 1940,
	-2, 2908,
	-1, 1284,
	5, 1941,
	-2, 2909,
	-1, 1285,
	5, 1942,
	-2, 2897,
	-1, 1313,
	5, 1977,
	-2, 2941,
	-1, 1314,
	5, 1978,
	-2, 2931,
	-1, 1315,
	5, 1979,
	584, 1979,
	-2, 2898,
	-1, 1316,
	5, 1980,
	584, 1980,
	-2, 2899,
	-1, 1354,
	633, 2485,
	-2, 2476,
	-1, 1355,
	633, 2486,
	-2, 2477,
	-1, 1453,
	196, 2857,
	544, 2857,
	615, 2857,
	635, 2857,
	-2, 0,
	-1, 1458,
	1, 755,
	636, 755,
	-2, 1595,
	-1, 1605,
	379, 2450,
	440, 2450,
	485, 2450,
	625, 2450,
	-2, 2438,
	-1, 1611,
	196, 147,
	279, 147,
	344, 147,
	590, 147,
	-2, 2852,
	-1, 1612,
	196, 148,
	279, 148,
	344, 148,
	590, 148,
	-2, 2589,
	-1, 1613,
	196, 149,
	279, 149,
	344, 149,
	590, 149,
	-2, 2772,
	-1, 1619,
	637, 2450,
	-2, 2452,
	-1, 1643,
	1, 1441,
	445, 1395,
	485, 1395,
	607, 1395,
	612, 1395,
	632, 1441,
	634, 1441,
	636, 1441,
	-2, 1735,
	-1, 1649,
	212, 1538,
	233, 1538,
	454, 1538,
	-2, 0,
	-1, 1699,
	422, 1211,
	583, 1211,
	-2, 449,
	-1, 1715,
	45, 2448,
	-2, 1174,
	-1, 1722,
	1, 1441,
	632, 1441,
	634, 1441,
	636, 1441,
	-2, 1735,
	-1, 1730,
	4, 1466,
	21, 1466,
	22, 1466,
	23, 1466,
	24, 1466,
	25, 1466,
	26, 1466,
	27, 1466,
	28, 1466,
	30, 1466,
	31, 1466,
	37, 1466,
	41, 1466,
	43, 1466,
	44, 1466,
	46, 1466,
	47, 1466,
	48, 1466,
	49, 1466,
	50, 1466,
	51, 1466,
	52, 1466,
	53, 1466,
	54, 1466,
	56, 1466,
	57, 1466,
	58, 1466,
	59, 1466,
	61, 1466,
	62, 1466,
	63, 1466,
	64, 1466,
	65, 1466,
	66, 1466,
	67, 1466,
	71, 1466,
	72, 1466,
	73, 1466,
	74, 1466,
	76, 1466,
	77, 1466,
	78, 1466,
	82, 1466,
	83, 1466,
	84, 1466,
	85, 1466,
	86, 1466,
	87, 1466,
	88, 1466,
	89, 1466,
	92, 1466,
	93, 1466,
	94, 1466,
	95, 1466,
	96, 1466,
	98, 1466,
	100, 1466,
	101, 1466,
	102, 1466,
	103, 1466,
	104, 1466,
	105, 1466,
	107, 1466,
	108, 1466,
	109, 1466,
	111, 1466,
	112, 1466,
	113, 1466,
	121, 1466,
	122, 1466,
	123, 1466,
	124, 1466,
	125, 1466,
	127, 1466,
	128, 1466,
	129, 1466,
	130, 1466,
	132, 1466,
	133, 1466,
	134, 1466,
	136, 1466,
	137, 1466,
	138, 1466,
	140, 1466,
	141, 1466,
	142, 1466,
	145, 1466,
	146, 1466,
	147, 1466,
	149, 1466,
	150, 1466,
	151, 1466,
	153, 1466,
	154, 1466,
	155, 1466,
	157, 1466,
	158, 1466,
	159, 1466,
	160, 1466,
	161, 1466,
	162, 1466,
	163, 1466,
	164, 1466,
	165, 1466,
	166, 1466,
	167, 1466,
	168, 1466,
	169, 1466,
	170, 1466,
	171, 1466,
	172, 1466,
	173, 1466,
	181, 1466,
	182, 1466,
	183, 1466,
	184, 1466,
	188, 1466,
	190, 1466,
	191, 1466,
	192, 1466,
	194, 1466,
	195, 1466,
	198, 1466,
	199, 1466,
	200, 1466,
	201, 1466,
	202, 1466,
	203, 1466,
	204, 1466,
	205, 1466,
	206, 1466,
	207, 1466,
	208, 1466,
	209, 1466,
	210, 1466,
	211, 1466,
	213, 1466,
	214, 1466,
	216, 1466,
	217, 1466,
	219, 1466,
	220, 1466,
	221, 1466,
	222, 1466,
	223, 1466,
	224, 1466,
	225, 1466,
	226, 1466,
	227, 1466,
	228, 1466,
	229, 1466,
	231, 1466,
	232, 1466,
	234, 1466,
	235, 1466,
	236, 1466,
	237, 1466,
	238, 1466,
	243, 1466,
	244, 1466,
	245, 1466,
	248, 1466,
	249, 1466,
	250, 1466,
	251, 1466,
	253, 1466,
	255, 1466,
	256, 1466,
	258, 1466,
	260, 1466,
	261, 1466,
	262, 1466,
	264, 1466,
	268, 1466,
	269, 1466,
	270, 1466,
	271, 1466,
	272, 1466,
	273, 1466,
	275, 1466,
	276, 1466,
	277, 1466,
	279, 1466,
	280, 1466,
	282, 1466,
	283, 1466,
	286, 1466,
	287, 1466,
	288, 1466,
	289, 1466,
	290, 1466,
	291, 1466,
	292, 1466,
	295, 1466,
	296, 1466,
	297, 1466,
	298, 1466,
	300, 1466,
	301, 1466,
	302, 1466,
	303, 1466,
	304, 1466,
	305, 1466,
	306, 1466,
	307, 1466,
	308, 1466,
	309, 1466,
	310, 1466,
	311, 1466,
	312, 1466,
	313, 1466,
	314, 1466,
	315, 1466,
	316, 1466,
	317, 1466,
	318, 1466,
	319, 1466,
	320, 1466,
	321, 1466,
	322, 1466,
	324, 1466,
	326, 1466,
	327, 1466,
	328, 1466,
	329, 1466,
	330, 1466,
	331, 1466,
	332, 1466,
	333, 1466,
	334, 1466,
	335, 1466,
	336, 1466,
	337, 1466,
	338, 1466,
	339, 1466,
	340, 1466,
	341, 1466,
	342, 1466,
	344, 1466,
	345, 1466,
	349, 1466,
	350, 1466,
	351, 1466,
	352, 1466,
	354, 1466,
	355, 1466,
	356, 1466,
	357, 1466,
	358, 1466,
	361, 1466,
	363, 1466,
	364, 1466,
	366, 1466,
	367, 1466,
	368, 1466,
	371, 1466,
	372, 1466,
	373, 1466,
	375, 1466,
	377, 1466,
	378, 1466,
	379, 1466,
	380, 1466,
	381, 1466,
	382, 1466,
	383, 1466,
	384, 1466,
	385, 1466,
	386, 1466,
	387, 1466,
	388, 1466,
	389, 1466,
	391, 1466,
	392, 1466,
	393, 1466,
	394, 1466,
	395, 1466,
	396, 1466,
	397, 1466,
	398, 1466,
	399, 1466,
	400, 1466,
	401, 1466,
	402, 1466,
	403, 1466,
	404, 1466,
	405, 1466,
	407, 1466,
	408, 1466,
	409, 1466,
	411, 1466,
	412, 1466,
	413, 1466,
	414, 1466,
	415, 1466,
	416, 1466,
	417, 1466,
	418, 1466,
	419, 1466,
	420, 1466,
	421, 1466,
	422, 1466,
	423, 1466,
	424, 1466,
	426, 1466,
	428, 1466,
	429, 1466,
	430, 1466,
	436, 1466,
	437, 1466,
	438, 1466,
	440, 1466,
	441, 1466,
	442, 1466,
	443, 1466,
	444, 1466,
	445, 1466,
	446, 1466,
	447, 1466,
	448, 1466,
	449, 1466,
	450, 1466,
	452, 1466,
	453, 1466,
	454, 1466,
	456, 1466,
	457, 1466,
	458, 1466,
	459, 1466,
	460, 1466,
	461, 1466,
	462, 1466,
	464, 1466,
	465, 1466,
	466, 1466,
	467, 1466,
	468, 1466,
	469, 1466,
	470, 1466,
	471, 1466,
	472, 1466,
	473, 1466,
	474, 1466,
	475, 1466,
	476, 1466,
	478, 1466,
	479, 1466,
	480, 1466,
	481, 1466,
	482, 1466,
	483, 1466,
	485, 1466,
	486, 1466,
	487, 1466,
	488, 1466,
	489, 1466,
	490, 1466,
	492, 1466,
	493, 1466,
	494, 1466,
	495, 1466,
	496, 1466,
	497, 1466,
	498, 1466,
	499, 1466,
	501, 1466,
	503, 1466,
	504, 1466,
	505, 1466,
	506, 1466,
	507, 1466,
	508, 1466,
	509, 1466,
	510, 1466,
	511, 1466,
	512, 1466,
	513, 1466,
	514, 1466,
	515, 1466,
	516, 1466,
	517, 1466,
	518, 1466,
	519, 1466,
	520, 1466,
	521, 1466,
	523, 1466,
	524, 1466,
	526, 1466,
	527, 1466,
	529, 1466,
	530, 1466,
	531, 1466,
	532, 1466,
	533, 1466,
	534, 1466,
	536, 1466,
	537, 1466,
	539, 1466,
	540, 1466,
	541, 1466,
	542, 1466,
	543, 1466,
	545, 1466,
	547, 1466,
	548, 1466,
	549, 1466,
	550, 1466,
	551, 1466,
	552, 1466,
	553, 1466,
	555, 1466,
	556, 1466,
	557, 1466,
	558, 1466,
	559, 1466,
	560, 1466,
	561, 1466,
	564, 1466,
	565, 1466,
	566, 1466,
	567, 1466,
	568, 1466,
	569, 1466,
	570, 1466,
	571, 1466,
	573, 1466,
	576, 1466,
	577, 1466,
	578, 1466,
	579, 1466,
	580, 1466,
	581, 1466,
	583, 1466,
	584, 1466,
	585, 1466,
	586, 1466,
	587, 1466,
	588, 1466,
	589, 1466,
	590, 1466,
	595, 1466,
	596, 1466,
	597, 1466,
	598, 1466,
	599, 1466,
	600, 1466,
	-2, 0,
	-1, 1753,
	1, 588,
	632, 588,
	634, 588,
	636, 588,
	-2, 1706,
	-1, 1756,
	4, 2939,
	11, 2939,
	12, 2939,
	14, 2939,
	15, 2939,
	16, 2939,
	17, 2939,
	18, 2939,
	19, 2939,
	21, 2939,
	22, 2939,
	23, 2939,
	24, 2939,
	25, 2939,
	26, 2939,
	27, 2939,
	28, 2939,
	30, 2939,
	31, 2939,
	34, 2939,
	35, 2939,
	37, 2939,
	39, 2939,
	41, 2939,
	43, 2939,
	44, 2939,
	46, 2939,
	47, 2939,
	48, 2939,
	49, 2939,
	50, 2939,
	51, 2939,
	52, 2939,
	53, 2939,
	54, 2939,
	56, 2939,
	57, 2939,
	58, 2939,
	59, 2939,
	61, 2939,
	62, 2939,
	63, 2939,
	64, 2939,
	65, 2939,
	66, 2939,
	67, 2939,
	70, 2939,
	71, 2939,
	72, 2939,
	73, 2939,
	74, 2939,
	76, 2939,
	77, 2939,
	78, 2939,
	79, 2939,
	82, 2939,
	83, 2939,
	84, 2939,
	85, 2939,
	86, 2939,
	87, 2939,
	88, 2939,
	89, 2939,
	90, 2939,
	92, 2939,
	93, 2939,
	94, 2939,
	95, 2939,
	96, 2939,
	98, 2939,
	99, 2939,
	100, 2939,
	101, 2939,
	102, 2939,
	103, 2939,
	104, 2939,
	105, 2939,
	107, 2939,
	108, 2939,
	109, 2939,
	110, 2939,
	111, 2939,
	112, 2939,
	113, 2939,
	121, 2939,
	122, 2939,
	123, 2939,
	124, 2939,
	125, 2939,
	127, 2939,
	128, 2939,
	129, 2939,
	130, 2939,
	132, 2939,
	133, 2939,
	134, 2939,
	136, 2939,
	137, 2939,
	138, 2939,
	140, 2939,
	141, 2939,
	142, 2939,
	145, 2939,
	146, 2939,
	147, 2939,
	149, 2939,
	150, 2939,
	151, 2939,
	153, 2939,
	154, 2939,
	155, 2939,
	157, 2939,
	158, 2939,
	159, 2939,
	160, 2939,
	161, 2939,
	162, 2939,
	163, 2939,
	164, 2939,
	165, 2939,
	166, 2939,
	167, 2939,
	168, 2939,
	169, 2939,
	170, 2939,
	171, 2939,
	172, 2939,
	173, 2939,
	177, 2939,
	178, 2939,
	179, 2939,
	180, 2939,
	181, 2939,
	182, 2939,
	183, 2939,
	184, 2939,
	187, 2939,
	188, 2939,
	190, 2939,
	191, 2939,
	192, 2939,
	194, 2939,
	195, 2939,
	197, 2939,
	198, 2939,
	199, 2939,
	200, 2939,
	201, 2939,
	202, 2939,
	203, 2939,
	204, 2939,
	205, 2939,
	206, 2939,
	207, 2939,
	208, 2939,
	209, 2939,
	210, 2939,
	211, 2939,
	213, 2939,
	214, 2939,
	216, 2939,
	217, 2939,
	219, 2939,
	220, 2939,
	221, 2939,
	222, 2939,
	223, 2939,
	224, 2939,
	225, 2939,
	226, 2939,
	227, 2939,
	228, 2939,
	229, 2939,
	230, 2939,
	231, 2939,
	232, 2939,
	233, 2939,
	234, 2939,
	235, 2939,
	236, 2939,
	237, 2939,
	238, 2939,
	240, 2939,
	241, 2939,
	243, 2939,
	244, 2939,
	245, 2939,
	247, 2939,
	248, 2939,
	249, 2939,
	250, 2939,
	251, 2939,
	253, 2939,
	255, 2939,
	256, 2939,
	257, 2939,
	258, 2939,
	259, 2939,
	260, 2939,
	261, 2939,
	262, 2939,
	263, 2939,
	264, 2939,
	266, 2939,
	267, 2939,
	268, 2939,
	269, 2939,
	270, 2939,
	271, 2939,
	272, 2939,
	273, 2939,
	275, 2939,
	276, 2939,
	277, 2939,
	279, 2939,
	280, 2939,
	281, 2939,
	282, 2939,
	283, 2939,
	284, 2939,
	286, 2939,
	287, 2939,
	288, 2939,
	289, 2939,
	290, 2939,
	291, 2939,
	292, 2939,
	295, 2939,
	296, 2939,
	297, 2939,
	298, 2939,
	299, 2939,
	300, 2939,
	301, 2939,
	302, 2939,
	303, 2939,
	304, 2939,
	305, 2939,
	306, 2939,
	307, 2939,
	308, 2939,
	309, 2939,
	310, 2939,
	311, 2939,
	312, 2939,
	313, 2939,
	314, 2939,
	315, 2939,
	316, 2939,
	317, 2939,
	318, 2939,
	319, 2939,
	320, 2939,
	321, 2939,
	322, 2939,
	324, 2939,
	325, 2939,
	326, 2939,
	327, 2939,
	328, 2939,
	329, 2939,
	330, 2939,
	331, 2939,
	332, 2939,
	333, 2939,
	334, 2939,
	335, 2939,
	336, 2939,
	337, 2939,
	338, 2939,
	339, 2939,
	340, 2939,
	341, 2939,
	342, 2939,
	344, 2939,
	345, 2939,
	348, 2939,
	349, 2939,
	350, 2939,
	351, 2939,
	352, 2939,
	354, 2939,
	355, 2939,
	356, 2939,
	357, 2939,
	358, 2939,
	361, 2939,
	363, 2939,
	366, 2939,
	367, 2939,
	368, 2939,
	369, 2939,
	371, 2939,
	372, 2939,
	373, 2939,
	375, 2939,
	377, 2939,
	378, 2939,
	379, 2939,
	380, 2939,
	381, 2939,
	382, 2939,
	383, 2939,
	384, 2939,
	385, 2939,
	386, 2939,
	387, 2939,
	388, 2939,
	389, 2939,
	391, 2939,
	392, 2939,
	393, 2939,
	394, 2939,
	395, 2939,
	396, 2939,
	397, 2939,
	398, 2939,
	399, 2939,
	400, 2939,
	401, 2939,
	402, 2939,
	403, 2939,
	404, 2939,
	405, 2939,
	407, 2939,
	408, 2939,
	409, 2939,
	411, 2939,
	412, 2939,
	413, 2939,
	414, 2939,
	415, 2939,
	416, 2939,
	417, 2939,
	418, 2939,
	419, 2939,
	420, 2939,
	421, 2939,
	422, 2939,
	423, 2939,
	424, 2939,
	426, 2939,
	428, 2939,
	429, 2939,
	430, 2939,
	436, 2939,
	437, 2939,
	438, 2939,
	439, 2939,
	440, 2939,
	441, 2939,
	442, 2939,
	443, 2939,
	444, 2939,
	445, 2939,
	446, 2939,
	447, 2939,
	448, 2939,
	449, 2939,
	450, 2939,
	452, 2939,
	453, 2939,
	454, 2939,
	455, 2939,
	456, 2939,
	457, 2939,
	458, 2939,
	459, 2939,
	460, 2939,
	461, 2939,
	462, 2939,
	463, 2939,
	464, 2939,
	465, 2939,
	466, 2939,
	467, 2939,
	468, 2939,
	469, 2939,
	470, 2939,
	471, 2939,
	472, 2939,
	473, 2939,
	474, 2939,
	475, 2939,
	476, 2939,
	478, 2939,
	479, 2939,
	480, 2939,
	481, 2939,
	482, 2939,
	483, 2939,
	485, 2939,
	486, 2939,
	487, 2939,
	488, 2939,
	489, 2939,
	490, 2939,
	491, 2939,
	492, 2939,
	493, 2939,
	494, 2939,
	495, 2939,
	496, 2939,
	497, 2939,
	498, 2939,
	499, 2939,
	501, 2939,
	503, 2939,
	504, 2939,
	505, 2939,
	506, 2939,
	507, 2939,
	508, 2939,
	509, 2939,
	510, 2939,
	511, 2939,
	512, 2939,
	513, 2939,
	514, 2939,
	515, 2939,
	516, 2939,
	517, 2939,
	518, 2939,
	519, 2939,
	520, 2939,
	521, 2939,
	523, 2939,
	524, 2939,
	525, 2939,
	526, 2939,
	527, 2939,
	529, 2939,
	530, 2939,
	531, 2939,
	532, 2939,
	533, 2939,
	534, 2939,
	536, 2939,
	537, 2939,
	539, 2939,
	540, 2939,
	541, 2939,
	542, 2939,
	543, 2939,
	545, 2939,
	547, 2939,
	548, 2939,
	549, 2939,
	550, 2939,
	551, 2939,
	552, 2939,
	553, 2939,
	555, 2939,
	556, 2939,
	557, 2939,
	558, 2939,
	559, 2939,
	560, 2939,
	561, 2939,
	564, 2939,
	565, 2939,
	566, 2939,
	567, 2939,
	568, 2939,
	569, 2939,
	570, 2939,
	571, 2939,
	573, 2939,
	576, 2939,
	577, 2939,
	578, 2939,
	579, 2939,
	580, 2939,
	581, 2939,
	583, 2939,
	584, 2939,
	585, 2939,
	586, 2939,
	587, 2939,
	588, 2939,
	589, 2939,
	590, 2939,
	595, 2939,
	596, 2939,
	597, 2939,
	598, 2939,
	599, 2939,
	600, 2939,
	601, 2939,
	603, 2939,
	613, 2939,
	614, 2939,
	615, 2939,
	616, 2939,
	617, 2939,
	618, 2939,
	620, 2939,
	621, 2939,
	622, 2939,
	623, 2939,
	624, 2939,
	625, 2939,
	626, 2939,
	627, 2939,
	628, 2939,
	631, 2939,
	634, 2939,
	635, 2939,
	637, 2939,
	638, 2939,
	-2, 0,
	-1, 1761,
	196, 2812,
	544, 2812,
	615, 2812,
	635, 2812,
	-2, 0,
	-1, 1809,
	196, 949,
	-2, 2804,
	-1, 1810,
	196, 950,
	-2, 2596,
	-1, 1811,
	196, 951,
	-2, 2758,
	-1, 1816,
	413, 1001,
	483, 1001,
	527, 1001,
	549, 1001,
	-2, 0,
	-1, 1827,
	1, 1538,
	233, 1538,
	632, 1538,
	634, 1538,
	636, 1538,
	-2, 0,
	-1, 1844,
	1, 996,
	632, 996,
	634, 996,
	636, 996,
	-2, 0,
	-1, 1845,
	1, 1040,
	632, 1040,
	634, 1040,
	636, 1040,
	-2, 0,
	-1, 1846,
	1, 1048,
	632, 1048,
	634, 1048,
	636, 1048,
	-2, 0,
	-1, 1849,
	1, 1005,
	632, 1005,
	634, 1005,
	636, 1005,
	-2, 0,
	-1, 1851,
	1, 1011,
	632, 1011,
	634, 1011,
	636, 1011,
	-2, 0,
	-1, 1854,
	1, 1007,
	632, 1007,
	634, 1007,
	636, 1007,
	-2, 0,
	-1, 1859,
	1, 1021,
	632, 1021,
	634, 1021,
	636, 1021,
	-2, 0,
	-1, 1893,
	1, 2794,
	632, 2794,
	634, 2794,
	635, 2794,
	636, 2794,
	-2, 0,
	-1, 1897,
	1, 1099,
	632, 1099,
	634, 1099,
	636, 1099,
	-2, 0,
	-1, 1916,
	1, 1590,
	636, 1590,
	-2, 1595,
	-1, 1919,
	176, 1749,
	189, 1749,
	285, 1749,
	359, 1749,
	-2, 1687,
	-1, 2021,
	156, 1708,
	176, 1708,
	189, 1708,
	252, 1708,
	285, 1708,
	359, 1708,
	370, 1708,
	562, 1708,
	-2, 2159,
	-1, 2082,
	634, 2334,
	-2, 0,
	-1, 2118,
	156, 1708,
	176, 1708,
	189, 1708,
	252, 1708,
	285, 1708,
	359, 1708,
	370, 1708,
	562, 1708,
	-2, 1841,
	-1, 2173,
	633, 1982,
	-2, 1970,
	-1, 2247,
	1, 757,
	636, 757,
	-2, 1595,
	-1, 2424,
	233, 282,
	-2, 2484,
	-1, 2425,
	233, 283,
	-2, 341,
	-1, 2536,
	1, 998,
	632, 998,
	634, 998,
	636, 998,
	-2, 0,
	-1, 2537,
	1, 1042,
	632, 1042,
	634, 1042,
	636, 1042,
	-2, 0,
	-1, 2538,
	1, 1050,
	632, 1050,
	634, 1050,
	636, 1050,
	-2, 0,
	-1, 2539,
	1, 1101,
	632, 1101,
	634, 1101,
	636, 1101,
	-2, 0,
	-1, 2580,
	1, 1023,
	632, 1023,
	634, 1023,
	636, 1023,
	-2, 0,
	-1, 2602,
	1, 1084,
	632, 1084,
	634, 1084,
	636, 1084,
	-2, 0,
	-1, 2650,
	461, 1776,
	462, 1776,
	-2, 2015,
	-1, 2683,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2035,
	-1, 2684,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2036,
	-1, 2685,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2037,
	-1, 2686,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2038,
	-1, 2687,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2039,
	-1, 2688,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2040,
	-1, 2689,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2041,
	-1, 2690,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2042,
	-1, 2702,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2054,
	-1, 2703,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2055,
	-1, 2704,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2056,
	-1, 2708,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2063,
	-1, 2714,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2067,
	-1, 2716,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2075,
	-1, 2717,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2076,
	-1, 2718,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2077,
	-1, 2719,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2078,
	-1, 2893,
	5, 2488,
	196, 2345,
	633, 2485,
	-2, 2476,
	-1, 2894,
	196, 2346,
	-2, 2890,
	-1, 2895,
	196, 2347,
	-2, 2686,
	-1, 2896,
	196, 2348,
	-2, 2562,
	-1, 2897,
	196, 2349,
	-2, 2624,
	-1, 2898,
	196, 2350,
	-2, 2671,
	-1, 2899,
	196, 2351,
	-2, 2807,
	-1, 2900,
	196, 2352,
	-2, 2142,
	-1, 2972,
	1, 1842,
	2, 1842,
	110, 1842,
	156, 1842,
	176, 1842,
	189, 1842,
	197, 1842,
	215, 1842,
	218, 1842,
	247, 1842,
	252, 1842,
	263, 1842,
	281, 1842,
	285, 1842,
	325, 1842,
	359, 1842,
	364, 1842,
	370, 1842,
	451, 1842,
	455, 1842,
	562, 1842,
	574, 1842,
	592, 1842,
	593, 1842,
	594, 1842,
	604, 1842,
	632, 1842,
	634, 1842,
	636, 1842,
	638, 1842,
	-2, 1841,
	-1, 2985,
	633, 2457,
	-2, 2471,
	-1, 2987,
	1, 358,
	592, 358,
	-2, 1735,
	-1, 3017,
	633, 1981,
	-2, 1971,
	-1, 3235,
	1, 1441,
	445, 1395,
	485, 1395,
	607, 1395,
	612, 1395,
	632, 1441,
	634, 1441,
	636, 1441,
	-2, 1735,
	-1, 3419,
	365, 1779,
	-2, 2929,
	-1, 3420,
	365, 1780,
	-2, 2791,
	-1, 3424,
	461, 2411,
	462, 2411,
	-2, 2140,
	-1, 3425,
	461, 2415,
	462, 2415,
	-2, 2141,
	-1, 3426,
	461, 2412,
	462, 2412,
	-2, 2140,
	-1, 3427,
	461, 2416,
	462, 2416,
	-2, 2141,
	-1, 3441,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2065,
	-1, 3442,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2069,
	-1, 3448,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2071,
	-1, 3677,
	1, 752,
	632, 752,
	634, 752,
	636, 752,
	-2, 1595,
	-1, 3877,
	45, 2448,
	-2, 1175,
	-1, 3882,
	1, 1441,
	632, 1441,
	634, 1441,
	636, 1441,
	-2, 1735,
	-1, 3992,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2073,
	-1, 3999,
	257, 0,
	259, 0,
	348, 0,
	-2, 2092,
	-1, 4067,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2121,
	-1, 4068,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2122,
	-1, 4069,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2123,
	-1, 4073,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2127,
	-1, 4074,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2128,
	-1, 4075,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2129,
	-1, 4123,
	633, 2458,
	-2, 2472,
	-1, 4340,
	635, 3046,
	-2, 1661,
	-1, 4400,
	257, 0,
	259, 0,
	348, 0,
	-2, 2093,
	-1, 4403,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2096,
	-1, 4404,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2098,
	-1, 4529,
	635, 2473,
	-2, 1476,
	-1, 4688,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2097,
	-1, 4689,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2099,
	-1, 4700,
	257, 0,
	-2, 2132,
	-1, 4895,
	257, 0,
	-2, 2133,
	-1, 5118,
	53, 0,
	230, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2893,
}

const sqlPrivate = 57344

const sqlLast = 148522

var sqlAct = [...]int{
	292, 3308, 5052, 5051, 5309, 3579, 4938, 4763, 1434, 5236,
	5180, 4946, 3189, 5117, 5130, 5102, 5164, 3159, 3864, 5250,
	4990, 5006, 3863, 4525, 5085, 5063, 2421, 5042, 5066, 5131,
	3875, 5189, 5132, 4862, 4383, 4842, 1431, 1490, 4813, 5128,
	4829, 4032, 1660, 4899, 3088, 2307, 4646, 4641, 4635, 4580,
	2498, 5116, 4140, 1358, 3984, 4709, 4768, 4607, 3704, 3278,
	2278, 2124, 2510, 4676, 4332, 2660, 4324, 3899, 1347, 1629,
	4526, 4848, 4975, 4249, 758, 2229, 4506, 1424, 3089, 3848,
	897, 3893, 2508, 2731, 4299, 3433, 4651, 2670, 4280, 2925,
	4705, 1928, 3330, 4282, 3710, 1166, 3927, 3768, 1509, 3707,
	2160, 2316, 3267, 3853, 3294, 3830, 1426, 897, 3297, 830,
	3929, 3691, 3852, 3829, 3292, 1779, 3692, 3625, 2161, 3855,
	1602, 2999, 2661, 3837, 3693, 2216, 3594, 3602, 3562, 4126,
	4382, 769, 3361, 1174, 190, 1777, 3583, 976, 3325, 3242,
	3632, 4439, 2408, 2410, 2397, 3309, 3696, 2093, 3190, 5165,
	2345, 3731, 972, 4, 1824, 2328, 4093, 3561, 2811, 4900,
	2965, 3174, 894, 2029, 3585, 2667, 1999, 2744, 286, 2068,
	3417, 3324, 1717, 2967, 115, 3204, 892, 2395, 967, 2506,
	1338, 2459, 285, 2409, 1429, 2809, 826, 2387, 2375, 1227,
	3279, 2964, 2227, 2368, 2295, 2299, 1473, 2800, 1403, 1916,
	2277, 2945, 2094, 2728, 2632, 1232, 1492, 2649, 2630, 803,
	3000, 1754, 1417, 2458, 3302, 2113, 3074, 1720, 898, 900,
	2390, 3113, 1460, 3856, 5007, 745, 2922, 1631, 3114, 767,
	2803, 1047, 190, 1341, 2471, 3028, 2103, 2954, 2063, 2935,
	1195, 2889, 2962, 846, 2110, 2013, 1320, 2855, 904, 1488,
	1929, 2781, 2631, 200, 1930, 1355, 1859, 2633, 201, 1844,
	2418, 811, 907, 822, 1337, 1177, 119, 1414, 2484, 993,
	1652, 1745, 105, 1223, 2399, 904, 1752, 1610, 5181, 1485,
	5237, 2654, 1230, 1208, 762, 46, 45, 43, 887, 907,
	759, 34, 771, 786, 32, 948, 30, 1343, 1935, 1318,
	1908, 1068, 949, 3471, 1234, 1666, 1915, 4107, 3465, 4108,
	3581, 5320, 5126, 839, 842, 2944, 2218, 5312, 5300, 2218,
	2218, 3810, 2944, 4141, 2218, 5299, 1659, 2218, 2218, 2944,
	1945, 1946, 4736, 1978, 1979, 1980, 1989, 1990, 1991, 5269,
	5267, 5210, 5166, 4767, 4767, 2430, 5167, 5156, 5154, 4733,
	4732, 2944, 2944, 1982, 1976, 5151, 3908, 5148, 4729, 5152,
	5114, 5149, 1948, 4728, 2430, 1170, 5113, 2239, 1170, 1229,
	2430, 3909, 1995, 3662, 5110, 1789, 5100, 1171, 3335, 5098,
	4767, 5089, 5088, 4767, 5061, 4767, 4767, 5027, 4767, 2001,
	5020, 3008, 5019, 5011, 2944, 4989, 2944, 2430, 1947, 2430,
	4986, 4968, 4897, 4876, 4767, 4597, 3008, 4358, 4844, 1967,
	4786, 4785, 4176, 4774, 2430, 2430, 4475, 2430, 1964, 1335,
	1321, 1321, 4773, 3658, 3532, 3533, 4767, 3550, 3551, 3552,
	1159, 4766, 4716, 4690, 1469, 4767, 2430, 3008, 4662, 4659,
	3642, 4575, 3335, 3810, 1150, 2944, 1469, 4398, 2499, 1149,
	3532, 3533, 2236, 3273, 4553, 4402, 3030, 2236, 2944, 3008,
	2239, 4348, 4342, 4296, 2937, 3922, 3922, 4297, 2507, 4207,
	4175, 4118, 4116, 4208, 4176, 4119, 4117, 4100, 4016, 4012,
	4097, 2944, 2430, 2944, 3921, 3578, 98, 3573, 3922, 2944,
	3572, 2944, 3272, 1373, 2944, 3480, 1970, 1971, 1972, 1973,
	3523, 3481, 3004, 3547, 3524, 1165, 1953, 3521, 3513, 3511,
	3482, 3522, 3514, 2944, 2944, 3334, 1770, 3319, 3318, 3335,
	3053, 2494, 2494, 3007, 2944, 3810, 2997, 3008, 1353, 3547,
	2944, 2989, 2943, 1381, 2236, 2430, 2944, 1350, 2493, 1324,
	2430, 1325, 2494, 2239, 3432, 2944, 2239, 1322, 5028, 1986,
	2239, 4901, 1996, 4892, 252, 4880, 3335, 4097, 2936, 1975,
	1977, 4639, 1668, 4597, 2236, 4554, 4358, 4298, 3166, 2321,
	3073, 2253, 3064, 2217, 2233, 3272, 1992, 1374, 1993, 2428,
	3184, 2089, 1655, 4225, 3987, 1962, 1963, 1374, 3956, 2111,
	2380, 3910, 2981, 1945, 1946, 2980, 1826, 2979, 2978, 2977,
	3538, 1326, 1323, 1984, 1158, 254, 1157, 1156, 1155, 1154,
	1153, 3911, 5141, 1152, 252, 1148, 1147, 1976, 1968, 1146,
	1145, 1144, 1143, 1142, 1349, 1948, 3538, 1141, 1140, 1139,
	1138, 3081, 1137, 2944, 1850, 1136, 3470, 3387, 4653, 1135,
	3532, 3533, 1134, 3550, 3551, 3552, 1133, 1132, 1131, 1130,
	2806, 1129, 2001, 1111, 1045, 1044, 253, 1043, 1042, 1041,
	1040, 1947, 1039, 4397, 1038, 254, 1037, 1994, 1036, 1035,
	3554, 246, 1967, 1034, 1033, 1032, 1031, 1030, 1029, 1028,
	247, 1964, 1027, 1026, 1025, 1945, 1946, 1024, 1983, 1023,
	1022, 1021, 1020, 968, 1019, 1018, 1017, 2219, 1016, 1998,
	2219, 2219, 1015, 1668, 1014, 2219, 3532, 3533, 2219, 2219,
	202, 1013, 3548, 1659, 1012, 1011, 253, 1948, 1010, 3547,
	1009, 78, 998, 971, 970, 997, 996, 991, 990, 1206,
	983, 982, 981, 966, 965, 923, 922, 4396, 3548, 79,
	921, 920, 911, 910, 909, 908, 869, 2807, 868, 837,
	1680, 836, 4457, 1947, 2236, 835, 84, 817, 1974, 1970,
	1971, 1972, 1973, 280, 279, 3305, 278, 277, 276, 1953,
	202, 275, 4904, 4414, 2236, 274, 273, 272, 271, 270,
	269, 268, 1969, 267, 3532, 3533, 266, 3550, 3551, 3552,
	4151, 2236, 2236, 1998, 265, 252, 264, 92, 263, 262,
	261, 260, 259, 258, 1436, 1232, 257, 256, 158, 255,
	1987, 4213, 2114, 3908, 4112, 1374, 3538, 3960, 3923, 1998,
	3628, 1668, 1975, 1977, 3493, 3476, 3467, 3576, 3364, 2808,
	3252, 2805, 1232, 1232, 1232, 1667, 3081, 3272, 974, 3012,
	2986, 2971, 2622, 1942, 2000, 2280, 254, 2238, 1962, 1963,
	252, 51, 2838, 114, 2836, 2822, 2137, 1674, 4655, 98,
	111, 1953, 5140, 3547, 2820, 2236, 2040, 2071, 3287, 1909,
	1662, 1481, 3577, 1512, 2070, 1357, 3549, 1232, 2572, 2031,
	5137, 1968, 3538, 1232, 1634, 1232, 3554, 2239, 1436, 5115,
	3040, 2217, 1477, 1478, 1479, 2236, 1643, 253, 2233, 2625,
	5097, 254, 3549, 4994, 2074, 2038, 2936, 4889, 1464, 4758,
	4883, 4704, 246, 4660, 1232, 4881, 1232, 2071, 1232, 2033,
	1985, 247, 4638, 99, 2070, 1634, 4482, 4437, 3548, 4436,
	4430, 4429, 1959, 1960, 1966, 1988, 1965, 1961, 4428, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 4421, 4420,
	1436, 202, 253, 1615, 2069, 4309, 1620, 4422, 1722, 4418,
	3538, 4413, 1998, 4410, 1657, 4409, 4295, 246, 1793, 4155,
	1634, 1334, 3078, 2031, 1679, 1374, 247, 1634, 3532, 3533,
	4154, 3550, 3551, 3552, 1351, 4153, 1232, 4122, 1232, 4088,
	4087, 252, 4086, 1634, 3548, 4008, 1408, 1411, 4003, 2810,
	3623, 4002, 1232, 3569, 1232, 3560, 202, 2474, 3531, 1998,
	3528, 1456, 1421, 3527, 1277, 3525, 3079, 3520, 3519, 3518,
	3515, 1974, 1668, 3512, 3492, 1458, 3544, 3545, 3546, 1726,
	1729, 3475, 3468, 3543, 3541, 3542, 3534, 3535, 3536, 3537,
	3539, 3540, 254, 3466, 3320, 1969, 2972, 2437, 2793, 2032,
	1942, 2030, 1505, 1634, 1599, 1604, 2435, 3547, 1941, 3543,
	3541, 3542, 3534, 3535, 3536, 3537, 3539, 3540, 904, 5315,
	904, 1641, 3548, 1232, 5258, 1998, 1232, 103, 5257, 5179,
	5177, 1673, 907, 1774, 907, 1450, 1359, 4034, 1607, 5053,
	4310, 1484, 3549, 253, 4973, 4958, 1442, 4954, 4953, 4952,
	4932, 1495, 1496, 4931, 190, 190, 4929, 2000, 246, 252,
	4903, 252, 4223, 4902, 4874, 1510, 2734, 247, 1654, 1653,
	1654, 1653, 2804, 4860, 4857, 1637, 4856, 4654, 4840, 1487,
	4839, 3289, 1715, 1497, 1498, 4782, 198, 4753, 106, 4702,
	4685, 110, 4684, 1794, 1171, 2740, 1173, 202, 4627, 1757,
	1759, 4623, 4620, 1998, 3538, 4598, 3021, 78, 3549, 3574,
	254, 4456, 254, 4435, 4359, 4211, 4210, 1732, 252, 4191,
	4190, 4188, 1656, 3532, 3533, 79, 975, 3078, 3078, 4103,
	4091, 158, 3998, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 2018, 84, 3924, 3918, 3885, 3790, 1755, 1464, 1965,
	1961, 1464, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 253, 3742, 253, 3709, 1746, 1232, 3652, 3650, 254,
	3497, 3496, 1232, 1852, 3554, 252, 246, 4310, 246, 1748,
	3491, 3457, 1868, 92, 3266, 247, 3549, 247, 3532, 3533,
	3106, 2077, 3544, 3545, 3546, 1920, 163, 2076, 2075, 3543,
	3541, 3542, 3534, 3535, 3536, 3537, 3539, 3540, 2072, 2064,
	2062, 3019, 204, 3018, 2983, 202, 3548, 3304, 2976, 2942,
	253, 2818, 2017, 2136, 974, 2020, 254, 2092, 2086, 2085,
	1799, 2084, 2083, 2082, 2081, 246, 2080, 51, 2079, 114,
	2078, 2059, 1769, 1914, 247, 98, 111, 2058, 199, 1951,
	1952, 1954, 1955, 203, 2057, 2056, 2055, 4906, 1788, 2054,
	252, 2053, 2052, 2051, 2050, 3543, 3541, 3542, 3534, 3535,
	3536, 3537, 3539, 3540, 969, 2049, 2048, 253, 1232, 1232,
	1232, 2047, 252, 2046, 1232, 2045, 2044, 2033, 4905, 3620,
	2019, 1355, 246, 1355, 2016, 2011, 1449, 1998, 3288, 3538,
	1378, 247, 1369, 252, 4630, 4478, 1817, 4406, 1512, 99,
	4150, 254, 4115, 4106, 3479, 2974, 4730, 1751, 4480, 4149,
	1232, 2032, 1943, 897, 1436, 2091, 1853, 3648, 2014, 2178,
	897, 202, 1436, 254, 1436, 3914, 3544, 3545, 3546, 2132,
	1171, 1476, 1921, 3543, 3541, 3542, 3534, 3535, 3536, 3537,
	3539, 3540, 2140, 4556, 254, 3160, 1910, 1945, 1946, 5249,
	2157, 4962, 253, 1491, 3538, 4955, 1474, 4658, 2206, 1925,
	2208, 3010, 4601, 2100, 1924, 1917, 3745, 246, 1150, 1491,
	3549, 4600, 4599, 1149, 253, 4555, 247, 4459, 4366, 1948,
	2146, 4365, 4364, 252, 1436, 4363, 3532, 3533, 5133, 246,
	1232, 2073, 1491, 1919, 4362, 253, 4361, 4360, 247, 2152,
	1491, 4177, 1475, 4110, 4109, 2147, 202, 1938, 1939, 3926,
	246, 3925, 3814, 3812, 1232, 1947, 2097, 2098, 190, 247,
	2241, 1489, 1512, 1491, 2837, 3811, 2835, 2821, 202, 5206,
	5204, 1469, 4849, 1321, 254, 4313, 2819, 2265, 2264, 2071,
	3985, 1491, 2273, 1912, 2358, 1469, 2070, 2121, 2310, 202,
	2271, 2065, 2066, 103, 4884, 3532, 3533, 1171, 5129, 4882,
	2114, 2054, 4240, 1816, 3517, 3516, 3548, 3439, 3117, 1472,
	2054, 4206, 2259, 2039, 2223, 2153, 1464, 2225, 3132, 2245,
	4757, 904, 2201, 2230, 3202, 253, 2142, 2232, 904, 3532,
	3533, 1469, 2235, 2144, 1127, 907, 3711, 2244, 252, 2122,
	246, 3780, 907, 1869, 3866, 4303, 3865, 2411, 2527, 247,
	41, 252, 198, 2141, 106, 2042, 2119, 110, 1751, 1825,
	3544, 3545, 3546, 2112, 4171, 4924, 4172, 3543, 3541, 3542,
	3534, 3535, 3536, 3537, 3539, 3540, 4706, 1470, 4925, 202,
	2138, 2475, 1333, 1128, 252, 4925, 2221, 1998, 2499, 254,
	4843, 5162, 975, 4636, 1353, 3331, 1353, 158, 2377, 2090,
	3838, 252, 254, 1350, 2268, 1350, 4587, 1826, 2412, 4292,
	2131, 2130, 2129, 1750, 4246, 4237, 2127, 2145, 2116, 2126,
	4216, 2125, 3952, 3675, 2593, 2504, 2443, 3581, 4036, 4540,
	3017, 1634, 1634, 2247, 3485, 254, 2801, 4537, 2087, 2158,
	253, 4777, 4749, 1512, 5138, 3846, 2357, 2067, 2468, 1725,
	1648, 2356, 254, 253, 1445, 246, 1407, 3181, 5153, 5150,
	4568, 2806, 163, 2172, 247, 4566, 3115, 3904, 246, 4182,
	3549, 3538, 1803, 3178, 4947, 4642, 5060, 247, 204, 3363,
	3714, 3176, 4201, 3301, 1782, 961, 253, 3162, 3821, 2353,
	1349, 2362, 1349, 2243, 202, 5208, 3244, 2372, 2640, 5207,
	5241, 246, 1466, 253, 2281, 3538, 4780, 202, 4776, 2285,
	247, 2286, 4755, 3979, 199, 2391, 5139, 1107, 246, 203,
	2364, 2293, 2294, 1176, 1944, 3679, 2270, 247, 4808, 4259,
	4542, 2367, 1693, 1701, 2274, 2602, 2266, 1867, 2599, 1634,
	202, 1634, 1125, 1634, 1476, 2260, 2422, 2427, 2287, 2288,
	1123, 1866, 2367, 3054, 1121, 2291, 2292, 202, 2807, 1650,
	2638, 1634, 1634, 5186, 2269, 2315, 5311, 3536, 3537, 3539,
	3540, 4963, 4801, 2327, 1848, 1634, 2586, 1119, 4788, 4590,
	4589, 2640, 1116, 4257, 4256, 2367, 4248, 1634, 1471, 3077,
	1634, 1634, 1634, 1848, 2600, 2584, 4231, 962, 4230, 3091,
	1175, 4258, 4228, 4227, 904, 3075, 4215, 4174, 1476, 2416,
	2414, 2415, 2350, 3681, 897, 1475, 4173, 3548, 907, 2365,
	2464, 3827, 3649, 2601, 1750, 1702, 3826, 3782, 3541, 3542,
	3534, 3535, 3536, 3537, 3539, 3540, 1232, 2392, 3744, 2528,
	2808, 3641, 2805, 2638, 2537, 2469, 3490, 2449, 2636, 3489,
	1467, 3488, 4536, 3487, 1654, 1653, 2481, 3443, 1865, 1801,
	1468, 3200, 3199, 1845, 1998, 809, 2349, 2363, 2346, 3183,
	4538, 3172, 3164, 2371, 1232, 3153, 3077, 4778, 4750, 1475,
	3152, 4185, 809, 2502, 2401, 2431, 3144, 2401, 1847, 3143,
	2400, 1169, 3075, 2400, 3142, 2404, 3122, 2512, 1998, 3711,
	3121, 2489, 2525, 2532, 3082, 2851, 2429, 1847, 2412, 2499,
	2538, 2998, 1232, 1171, 1232, 1171, 2715, 3094, 1918, 2639,
	5242, 1232, 3778, 2850, 1232, 2248, 2178, 2178, 1512, 1846,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1755, 1232, 1755, 1232,
	1232, 1232, 1232, 2491, 2451, 2450, 2557, 2366, 2478, 3138,
	2672, 3549, 904, 5187, 1748, 5244, 2486, 1168, 2486, 2518,
	2519, 2483, 2487, 5015, 3011, 1232, 907, 2637, 2366, 1232,
	1232, 2642, 2639, 2088, 1955, 1450, 4557, 1232, 1493, 1494,
	2810, 1232, 2629, 1232, 1232, 2495, 4488, 2496, 3136, 2624,
	3298, 1512, 1945, 1946, 1493, 1494, 1818, 1232, 1232, 1232,
	1232, 2366, 3026, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 3532, 3533, 3540, 2668, 2669, 1469, 1493, 1494, 1651,
	1351, 1225, 1351, 3953, 1948, 1493, 1494, 2536, 1470, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 2547, 1232,
	1738, 1796, 1737, 1232, 1736, 2321, 1735, 2801, 1493, 1494,
	2637, 1911, 3025, 4818, 1697, 1355, 3002, 5245, 2782, 2783,
	1947, 2620, 1512, 4683, 3779, 4539, 2275, 2276, 2580, 4498,
	3119, 1355, 2782, 2798, 2611, 1170, 808, 3534, 3535, 3536,
	3537, 3539, 3540, 2523, 1393, 964, 963, 1232, 1512, 1907,
	2653, 2666, 1459, 808, 2665, 5207, 1710, 2614, 2544, 2846,
	3093, 2360, 3061, 2804, 1864, 1826, 3003, 2730, 3147, 1113,
	3542, 3534, 3535, 3536, 3537, 3539, 3540, 2319, 2892, 2892,
	2906, 1826, 2782, 2628, 3151, 2926, 2928, 3180, 2627, 2641,
	2626, 2634, 2934, 3338, 2746, 3145, 4497, 1879, 1883, 1150,
	2671, 1171, 1150, 1150, 2657, 2393, 2797, 2658, 2659, 3382,
	959, 1171, 958, 1466, 2988, 1171, 3105, 2591, 2730, 757,
	4940, 3179, 3415, 1797, 3430, 866, 1885, 5273, 1953, 2102,
	3678, 4272, 5247, 2848, 2578, 5243, 2984, 3177, 2849, 1945,
	1946, 2852, 3057, 2853, 2854, 3175, 752, 3538, 1814, 3454,
	1436, 1436, 810, 3104, 4198, 2738, 2541, 2535, 3048, 3148,
	2172, 2172, 2736, 1976, 1448, 3059, 2488, 3965, 2742, 810,
	1923, 1948, 3001, 1321, 1802, 2613, 2545, 3964, 3384, 2951,
	3452, 4915, 4212, 2959, 2810, 1470, 3146, 3049, 4588, 2394,
	3027, 1512, 4273, 2813, 2795, 2121, 1861, 3068, 2001, 1471,
	4025, 4229, 4226, 190, 3060, 1171, 3762, 1947, 4159, 4158,
	2402, 4145, 3753, 4144, 3957, 2950, 2106, 3092, 1117, 5253,
	3024, 3043, 3005, 1721, 2973, 3058, 1117, 1167, 5135, 2321,
	1117, 2901, 2405, 3013, 3023, 2888, 2958, 4271, 2963, 2930,
	2178, 2969, 2970, 864, 2917, 1464, 2932, 2940, 2941, 4942,
	2403, 2585, 2952, 1118, 3046, 2956, 2957, 3035, 1117, 3548,
	3395, 1467, 1007, 3039, 2119, 3429, 2109, 3763, 3833, 3076,
	2583, 1468, 2073, 3754, 4819, 3825, 4196, 3050, 3776, 1719,
	3182, 3239, 2104, 3141, 3120, 5219, 1441, 4817, 1353, 3684,
	2985, 1512, 2621, 4815, 4521, 2434, 2433, 1350, 3422, 3423,
	2107, 2319, 5228, 2175, 1353, 5227, 2996, 1634, 5275, 4682,
	1466, 5194, 3761, 1350, 3083, 1953, 3118, 3020, 3752, 4388,
	2610, 1998, 4387, 1363, 1436, 3958, 4534, 4022, 3449, 3034,
	4514, 3045, 3235, 3037, 4507, 3038, 2065, 2066, 3067, 1365,
	1998, 5246, 3240, 4814, 2105, 1232, 1232, 3193, 1232, 2320,
	3834, 3052, 4505, 3029, 3042, 3044, 1880, 3080, 3125, 3450,
	2342, 4509, 1699, 3455, 3902, 3173, 1360, 3901, 1975, 1977,
	2810, 3139, 4816, 3831, 1436, 2324, 3391, 2218, 3398, 2317,
	4521, 3158, 3277, 3596, 1349, 3055, 4515, 3238, 3051, 1905,
	5024, 2407, 5104, 3124, 5105, 1665, 1471, 1672, 5037, 1678,
	1349, 4741, 3775, 3109, 3774, 1634, 3771, 2378, 3161, 4023,
	3270, 4948, 1366, 5136, 2313, 4970, 4514, 3123, 1634, 1696,
	1634, 2343, 3321, 3549, 1721, 3698, 1634, 1968, 3096, 3099,
	4508, 3140, 3680, 3065, 3086, 3285, 2325, 1634, 1634, 807,
	1367, 3069, 3070, 3312, 1877, 3071, 3072, 2318, 3150, 1392,
	3194, 3901, 2406, 3154, 2300, 3329, 3326, 1469, 1467, 2301,
	3328, 2612, 2543, 1436, 3793, 1436, 2341, 1768, 1468, 1773,
	3201, 1827, 4515, 865, 2108, 3236, 3237, 2314, 3341, 3342,
	1649, 2323, 5251, 1787, 1364, 1792, 3149, 1232, 1376, 3726,
	3349, 3350, 3351, 3130, 3131, 3133, 3134, 3135, 3137, 3365,
	3156, 3366, 3163, 3170, 1881, 4617, 2361, 904, 1998, 753,
	2060, 3646, 3247, 999, 2726, 3187, 3188, 3249, 2378, 3397,
	3186, 907, 2359, 5134, 5172, 867, 2712, 1798, 5193, 863,
	3818, 3359, 4941, 3332, 5173, 5271, 2132, 190, 2381, 3245,
	1000, 4532, 2378, 2388, 2172, 2724, 4678, 3445, 3323, 3725,
	4384, 1851, 3394, 3348, 2311, 3333, 1232, 1654, 3250, 4535,
	3451, 3339, 1232, 1232, 1949, 1950, 1951, 1952, 1954, 1955,
	3453, 4695, 3367, 2320, 3314, 2374, 2302, 1232, 3264, 2810,
	5217, 5071, 3316, 3534, 3535, 3536, 3537, 3539, 3540, 5022,
	2579, 1969, 4569, 3595, 2306, 1114, 754, 3400, 2729, 3402,
	5252, 4510, 3336, 2373, 1878, 1882, 3732, 3356, 4511, 3343,
	776, 3344, 3307, 3281, 4197, 3832, 3317, 1181, 2792, 4516,
	1232, 1232, 2987, 3372, 2010, 3374, 1232, 3376, 2737, 3378,
	3379, 1884, 1755, 1813, 1815, 5023, 3495, 5254, 2369, 1232,
	1232, 3077, 2540, 2534, 3699, 1232, 1232, 3315, 755, 1447,
	756, 1232, 3388, 2000, 1469, 1922, 2955, 3097, 3296, 5276,
	2382, 4513, 2968, 3734, 3396, 1008, 1170, 3358, 3245, 4038,
	5260, 2318, 4468, 2303, 2308, 2402, 4629, 3371, 4726, 4469,
	4517, 4373, 3373, 4991, 3375, 4593, 3377, 4510, 4146, 1382,
	1380, 4677, 912, 2720, 4511, 1098, 1232, 1232, 1232, 3157,
	4285, 2370, 1232, 2710, 4389, 4516, 2713, 3446, 3981, 3413,
	4283, 4533, 1232, 2329, 1361, 2403, 3410, 2721, 2106, 919,
	1163, 5077, 2102, 1832, 2722, 4984, 5005, 4859, 2727, 1232,
	3421, 4592, 3733, 4591, 4330, 4809, 4618, 3403, 2333, 3889,
	3405, 4467, 5192, 3412, 1351, 3478, 3411, 4513, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 2709, 2219, 2304,
	1351, 3661, 2653, 3416, 2995, 3431, 4517, 2457, 2109, 2099,
	1362, 1379, 1001, 1002, 984, 2908, 2300, 3438, 1372, 744,
	4976, 2301, 1932, 4285, 2953, 4308, 3473, 3474, 4077, 3469,
	1932, 3477, 5171, 4283, 4977, 1927, 2330, 4287, 1933, 2590,
	4433, 989, 2107, 4385, 2656, 2322, 3633, 2261, 3738, 2106,
	4775, 4723, 2311, 4868, 5281, 1099, 3705, 4922, 4512, 1171,
	4331, 1232, 1232, 1232, 1232, 2128, 3444, 4252, 4978, 4286,
	1232, 1232, 1232, 4232, 2258, 1232, 4183, 4679, 4181, 3890,
	3881, 3701, 3286, 3280, 3268, 2482, 2476, 1232, 1355, 1512,
	2470, 2462, 2442, 1232, 2441, 1232, 3588, 3589, 3197, 2109,
	4522, 4523, 4992, 2646, 1355, 4021, 1690, 1384, 4092, 3736,
	2175, 2175, 5043, 3982, 2309, 2104, 3081, 4853, 1932, 816,
	4287, 5008, 1512, 2592, 2254, 4167, 4333, 4647, 3265, 1395,
	4835, 1931, 2385, 2107, 1355, 4390, 4980, 1512, 2302, 1931,
	4833, 2946, 4752, 3717, 4512, 3713, 3712, 3484, 3436, 1436,
	2334, 2256, 4286, 4105, 3737, 3126, 2306, 3414, 2524, 2178,
	2516, 4979, 3593, 1512, 3571, 2723, 3592, 4281, 1855, 1854,
	2505, 3613, 3600, 1436, 2439, 2725, 4139, 2105, 2949, 4981,
	1849, 1436, 3590, 2994, 2993, 3640, 4522, 4523, 3622, 3663,
	2992, 913, 914, 2383, 2991, 2010, 2990, 1730, 2257, 1744,
	4291, 1742, 3626, 1232, 2711, 1933, 3098, 1104, 1103, 3656,
	1006, 1731, 1168, 1933, 2284, 1232, 2108, 2335, 2336, 2948,
	1003, 1004, 4764, 4935, 2947, 4391, 2310, 1931, 4608, 3102,
	3627, 4078, 4304, 1436, 4189, 2303, 2308, 2480, 2384, 2178,
	3841, 3700, 4079, 5214, 2331, 4760, 2305, 2398, 4739, 2647,
	3604, 855, 4284, 4178, 4434, 1100, 1232, 4737, 3362, 3243,
	3954, 3949, 2310, 3676, 4837, 3660, 3669, 3659, 3598, 3688,
	3689, 3644, 1436, 985, 986, 3682, 5280, 3647, 3643, 3337,
	3750, 3631, 3635, 3636, 3637, 3638, 3619, 1464, 856, 3582,
	3612, 3715, 2332, 1436, 3719, 1436, 3566, 3567, 3568, 3248,
	3599, 3765, 3246, 3767, 3597, 3611, 2509, 2108, 2411, 4993,
	3665, 3614, 3615, 3667, 3668, 1232, 1232, 1806, 3671, 2377,
	3672, 2304, 3673, 1512, 4852, 1833, 2377, 3653, 3654, 3781,
	3655, 3587, 4168, 4765, 1436, 4284, 3127, 3128, 3617, 3702,
	3618, 4836, 3804, 916, 915, 3747, 3794, 3716, 4759, 3605,
	3721, 1436, 5049, 3723, 4936, 4747, 4492, 3708, 4491, 3816,
	2338, 1353, 5057, 5040, 3616, 4440, 4094, 2817, 4472, 1902,
	1350, 3796, 4727, 3798, 2311, 5079, 3802, 1353, 5218, 3629,
	3808, 3729, 1904, 1634, 3670, 3666, 1350, 1101, 3809, 5216,
	5155, 4966, 4956, 1901, 3634, 3772, 1436, 1634, 4735, 1634,
	4701, 3603, 3610, 1512, 3677, 3651, 4748, 1353, 4485, 4432,
	897, 1634, 917, 918, 3766, 1102, 1350, 3749, 815, 3685,
	2337, 2283, 4290, 4179, 1634, 2606, 1899, 3563, 1873, 3997,
	3950, 3686, 3835, 3947, 1871, 1436, 2309, 1843, 3764, 3609,
	1841, 3783, 3657, 3882, 4982, 1839, 3526, 5050, 1837, 4937,
	4983, 1743, 1355, 1741, 3735, 2396, 3897, 1349, 1835, 1829,
	3456, 3851, 1005, 2172, 3743, 3269, 3895, 3171, 3165, 3756,
	1823, 1106, 3871, 1349, 1634, 3116, 3687, 1821, 1740, 3803,
	3760, 987, 988, 3022, 3791, 3880, 1634, 2619, 1634, 2615,
	1105, 2526, 2515, 2500, 2175, 2139, 3815, 2135, 1906, 3326,
	1781, 4821, 2339, 1349, 4490, 3786, 3564, 3751, 3326, 3976,
	3975, 3967, 3836, 1190, 3839, 1927, 3777, 3792, 3386, 3888,
	2582, 3917, 3805, 3813, 2549, 3906, 2420, 3385, 3823, 3817,
	5127, 3939, 3757, 3346, 2635, 1860, 3758, 2552, 3759, 3150,
	2440, 2207, 2205, 2172, 3937, 1512, 2043, 1795, 1512, 3955,
	3606, 3607, 3608, 2145, 3930, 1714, 1317, 2816, 3874, 3275,
	4570, 3891, 4239, 4238, 4574, 4552, 5039, 3795, 2305, 3824,
	4645, 1115, 3828, 2426, 4579, 2573, 1903, 4565, 904, 3945,
	284, 4503, 4472, 1232, 3968, 3124, 3843, 1900, 3898, 4502,
	1232, 1232, 907, 4329, 1232, 1232, 1232, 3822, 1232, 3878,
	2166, 4320, 190, 190, 3872, 5190, 4255, 1232, 2178, 4234,
	4204, 3877, 2608, 1800, 4202, 1098, 1232, 4180, 3884, 2607,
	1898, 1232, 1872, 3946, 3974, 3879, 3903, 1512, 1870, 1171,
	3905, 1842, 3867, 3299, 1840, 3912, 1232, 3291, 3284, 1838,
	1163, 3941, 1836, 3276, 1512, 3629, 3973, 3915, 3916, 3261,
	3260, 3241, 1834, 1828, 2178, 2178, 1232, 1232, 3932, 1232,
	1232, 1232, 3896, 3943, 1822, 3041, 3036, 2438, 2436, 3948,
	2413, 1820, 1739, 3931, 2379, 2340, 2326, 1232, 3961, 2312,
	3962, 1232, 3963, 2178, 2178, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 3983, 1232, 2581, 4000, 2240,
	4050, 2548, 4051, 2419, 1232, 1232, 2178, 2237, 4010, 4011,
	2234, 1232, 2231, 2226, 2224, 1353, 2220, 2211, 4640, 4018,
	3940, 3894, 1232, 1330, 1350, 1099, 5185, 3980, 1120, 1122,
	1124, 5109, 1936, 1355, 1355, 3806, 2151, 1232, 3434, 5208,
	2388, 2262, 2250, 2251, 4934, 2618, 3406, 3407, 3971, 3404,
	1331, 3234, 5091, 4999, 4661, 4586, 4489, 3977, 3327, 3683,
	3978, 3928, 2668, 4041, 2279, 1695, 4870, 3103, 3077, 1512,
	3077, 4863, 4341, 4005, 4007, 2321, 4124, 3970, 1896, 1897,
	1510, 2539, 1436, 1436, 3075, 4017, 3100, 1416, 2576, 2571,
	4028, 2668, 4056, 2616, 5090, 4033, 2546, 4543, 1436, 1436,
	4089, 4581, 897, 1436, 2479, 1415, 4111, 1351, 3198, 4040,
	1162, 1349, 1819, 4047, 4024, 4026, 4027, 3107, 4142, 4143,
	4891, 2300, 1232, 1351, 4085, 4048, 2301, 4053, 1486, 4049,
	4081, 1945, 1946, 844, 4156, 4157, 4762, 3435, 4055, 4164,
	2617, 1945, 1946, 4441, 4419, 3730, 1937, 3108, 190, 3129,
	1232, 3108, 1940, 1351, 1443, 1383, 5202, 3807, 4251, 4014,
	4082, 1483, 281, 1948, 1332, 5163, 3259, 4090, 4317, 2249,
	2463, 1454, 3178, 3176, 5248, 3167, 4030, 1104, 1103, 3185,
	3110, 3169, 4250, 1232, 1232, 4098, 4099, 3938, 3933, 3934,
	3935, 3936, 1876, 1416, 1416, 3168, 3112, 4101, 4102, 1947,
	847, 847, 2172, 4096, 5048, 5029, 861, 4998, 4995, 1947,
	3111, 741, 4933, 4878, 4854, 4828, 4740, 4327, 4113, 4319,
	4307, 4121, 3883, 1232, 1232, 1100, 4184, 3942, 3306, 2933,
	2246, 1232, 4165, 2159, 5081, 4761, 4166, 3155, 1647, 5082,
	1646, 1640, 1164, 2302, 3645, 2398, 5279, 4997, 2172, 2172,
	4114, 4152, 1634, 1634, 1659, 1634, 3532, 3533, 5081, 1634,
	5221, 2306, 1634, 5082, 4160, 1945, 1946, 1436, 2290, 3063,
	904, 4411, 4217, 2289, 3062, 4269, 5112, 2172, 2172, 1658,
	1659, 2812, 4148, 1659, 907, 4203, 3389, 4205, 4222, 4224,
	1805, 2847, 2178, 2290, 4221, 2289, 1804, 1875, 4326, 4855,
	1874, 4802, 4583, 4578, 4577, 4470, 1353, 1353, 4466, 4465,
	2172, 4123, 4407, 4381, 4253, 1350, 1350, 4147, 4029, 4241,
	4247, 3800, 4209, 3797, 3392, 2037, 2036, 4214, 3409, 2623,
	5264, 5229, 5095, 5033, 5032, 5031, 1634, 4965, 4964, 4910,
	2303, 2308, 1232, 4907, 4831, 4316, 4274, 4275, 4792, 4731,
	1355, 1232, 4334, 4343, 4725, 4300, 3124, 1101, 4724, 4722,
	1634, 4721, 4719, 4625, 4254, 1634, 1634, 1634, 4605, 4541,
	4263, 4349, 4315, 4479, 4464, 4463, 4462, 4354, 4347, 4294,
	4277, 4200, 4192, 3887, 3886, 1102, 3722, 3664, 1634, 3393,
	1634, 4314, 3383, 3312, 3355, 1634, 3354, 1512, 3194, 4260,
	3353, 3352, 1349, 1349, 4289, 4335, 4306, 3326, 4338, 3290,
	3708, 4351, 4268, 4302, 4278, 4267, 3263, 3262, 3101, 3032,
	3015, 3014, 2741, 2609, 2577, 2570, 2304, 4355, 1512, 2569,
	2568, 1232, 1232, 4337, 2567, 1240, 2566, 1232, 1232, 2178,
	4318, 1106, 1232, 1232, 3253, 1232, 2477, 3256, 2452, 3258,
	1232, 2448, 2447, 2446, 2445, 2444, 4279, 2166, 2166, 4288,
	1105, 1232, 2214, 2175, 2213, 4321, 2212, 2210, 2150, 2149,
	1895, 1351, 1894, 1830, 1709, 2298, 4367, 1232, 1708, 2311,
	4336, 4370, 1707, 288, 288, 288, 4345, 747, 748, 4339,
	763, 747, 763, 774, 4344, 3303, 814, 1706, 3303, 4352,
	834, 4353, 4270, 4369, 1705, 841, 841, 841, 841, 1704,
	4375, 1703, 4392, 1698, 1694, 288, 1692, 1691, 1624, 1623,
	1622, 4293, 1503, 1502, 1501, 4371, 1500, 1499, 1446, 1402,
	1401, 4378, 1400, 1399, 4405, 980, 2296, 1398, 1355, 4401,
	1397, 2309, 288, 2175, 4377, 4386, 1355, 1396, 1394, 1389,
	1512, 1512, 1388, 1512, 1387, 1386, 1312, 1385, 2252, 4323,
	1355, 4380, 973, 8, 1126, 1112, 4368, 4939, 4520, 4519,
	4518, 1634, 1634, 2605, 97, 1700, 936, 91, 2386, 2347,
	4199, 2297, 3380, 4877, 2352, 1074, 4446, 5078, 4969, 4393,
	1683, 944, 1512, 5059, 3724, 3203, 2172, 2551, 1831, 2553,
	3621, 2975, 5021, 4415, 3494, 4898, 4694, 2815, 2041, 3575,
	93, 1216, 1262, 4616, 4615, 4504, 4186, 3854, 1232, 4454,
	4612, 4611, 4431, 1353, 2163, 2165, 1180, 1515, 3626, 1355,
	5103, 1355, 1350, 2263, 5270, 4473, 4474, 1222, 2272, 3016,
	2891, 1239, 1236, 2167, 2169, 1238, 1237, 2168, 2321, 2061,
	1235, 2162, 4325, 3271, 4530, 3310, 1436, 2354, 4493, 4494,
	3913, 1749, 1747, 1076, 4551, 190, 1512, 2267, 1436, 4445,
	2735, 1436, 1425, 2305, 4531, 4448, 4560, 4455, 4496, 4563,
	4443, 4444, 747, 747, 4438, 2799, 1232, 4544, 1639, 1512,
	288, 4476, 4477, 4547, 4548, 4458, 3483, 4527, 2034, 4527,
	1196, 2348, 4442, 1218, 2796, 4483, 4484, 1377, 1207, 4487,
	4447, 4449, 4451, 3601, 3580, 3900, 4120, 4499, 2645, 1349,
	4471, 953, 3529, 4486, 4501, 2802, 1368, 2914, 2907, 2903,
	3674, 1634, 1634, 4495, 3300, 1913, 4708, 2012, 3311, 1480,
	4582, 1200, 4584, 2172, 4545, 1605, 2733, 1627, 1619, 1425,
	2025, 3461, 2655, 3907, 3624, 3009, 5084, 4037, 1436, 3390,
	2456, 1329, 1351, 1351, 1328, 1375, 4631, 1327, 5065, 5062,
	1512, 2376, 4567, 4546, 4619, 1634, 4585, 3849, 3850, 2255,
	3056, 2745, 4609, 3868, 1212, 3368, 3369, 4606, 1685, 1618,
	2597, 4648, 4564, 4603, 3969, 4453, 3586, 4305, 1711, 4769,
	4550, 1634, 1634, 1634, 1634, 1634, 1634, 1634, 1224, 1997,
	3230, 1353, 3229, 4559, 4928, 1465, 4562, 4637, 4632, 1353,
	1350, 1463, 1425, 1425, 4595, 1512, 1462, 1461, 1350, 5238,
	3196, 2389, 4594, 1353, 4481, 4195, 4194, 1232, 1232, 1232,
	1763, 2166, 1350, 4596, 4649, 4193, 251, 4604, 3428, 4622,
	4576, 4614, 4602, 1934, 4628, 1512, 1778, 4610, 4621, 1926,
	1232, 248, 4626, 1232, 1232, 250, 4680, 249, 3728, 4652,
	4125, 3630, 1807, 1232, 5161, 4219, 2178, 3840, 25, 4657,
	848, 1232, 1232, 849, 850, 4650, 3066, 2282, 1482, 4170,
	24, 23, 22, 21, 120, 44, 4664, 20, 1512, 162,
	1634, 4672, 1353, 4561, 1353, 160, 137, 1349, 157, 4663,
	156, 1350, 2175, 1350, 129, 1349, 1808, 4666, 155, 4686,
	154, 4670, 153, 4681, 152, 151, 1436, 159, 150, 1349,
	149, 4643, 144, 2344, 148, 147, 146, 145, 143, 141,
	142, 136, 140, 2359, 4691, 139, 138, 135, 1512, 134,
	133, 132, 4717, 131, 4718, 130, 1232, 128, 2175, 2175,
	2361, 161, 4734, 127, 126, 205, 125, 124, 123, 1232,
	122, 121, 827, 828, 4714, 4715, 4703, 63, 1232, 4746,
	62, 117, 4697, 2178, 118, 19, 42, 2175, 2175, 4673,
	14, 4674, 67, 1232, 2355, 4634, 1232, 68, 1349, 2358,
	1349, 18, 13, 37, 96, 109, 108, 107, 38, 104,
	36, 17, 1232, 16, 15, 1232, 102, 101, 100, 2023,
	2175, 35, 1512, 2028, 33, 11, 4772, 9, 39, 2123,
	1436, 12, 5, 195, 194, 4745, 197, 193, 4811, 2351,
	1634, 1634, 1634, 4743, 196, 4744, 4742, 4751, 95, 4795,
	2310, 4796, 192, 191, 94, 31, 4791, 10, 187, 4847,
	4312, 1355, 87, 189, 188, 186, 185, 1510, 184, 88,
	85, 4820, 183, 90, 2360, 4807, 182, 86, 89, 1351,
	29, 2650, 6, 66, 4838, 7, 1512, 4675, 4834, 1634,
	3951, 4846, 112, 4830, 113, 40, 83, 4692, 82, 81,
	4793, 4781, 80, 4794, 4789, 4864, 4841, 28, 65, 4804,
	4783, 4784, 3851, 27, 179, 229, 228, 227, 226, 225,
	224, 3739, 3740, 223, 3741, 1232, 1232, 4823, 4851, 4527,
	222, 4822, 217, 221, 4832, 219, 218, 4869, 220, 216,
	4692, 242, 1232, 2178, 241, 240, 4803, 4845, 4805, 239,
	4806, 4873, 4850, 4875, 238, 232, 4825, 4826, 4865, 4867,
	231, 2357, 237, 236, 235, 234, 2356, 233, 4827, 1436,
	1436, 230, 4866, 1436, 1436, 4810, 1436, 1436, 3787, 3788,
	2172, 3789, 4872, 245, 4871, 1370, 76, 215, 214, 4652,
	2671, 213, 211, 207, 1232, 210, 1232, 212, 1232, 4886,
	209, 208, 206, 244, 243, 4908, 4909, 4879, 1355, 4911,
	4912, 4923, 4913, 4914, 4887, 4888, 77, 177, 4921, 1391,
	178, 1232, 4797, 1355, 75, 176, 175, 174, 173, 2909,
	4890, 288, 172, 288, 288, 1619, 1420, 288, 1430, 171,
	170, 74, 181, 4896, 180, 26, 4951, 4861, 2, 1444,
	1, 0, 0, 0, 0, 0, 0, 834, 0, 0,
	834, 4920, 4919, 0, 2671, 4812, 0, 1351, 0, 0,
	0, 4950, 0, 0, 0, 1351, 4527, 4916, 4943, 0,
	1355, 1355, 0, 841, 0, 1619, 0, 2172, 0, 1351,
	0, 4527, 4972, 0, 4974, 4944, 0, 0, 1355, 0,
	0, 1355, 0, 4987, 4988, 1634, 2175, 288, 0, 288,
	288, 1420, 0, 288, 288, 1634, 4959, 0, 0, 0,
	0, 5002, 1430, 0, 5004, 0, 4961, 0, 0, 0,
	0, 0, 1232, 1232, 1353, 288, 4967, 288, 0, 1661,
	0, 0, 1232, 1350, 0, 0, 0, 0, 4527, 4527,
	4985, 0, 0, 0, 0, 1681, 0, 0, 1351, 4996,
	1351, 0, 1688, 5001, 0, 5017, 4527, 5018, 0, 4527,
	4850, 5010, 0, 4960, 5009, 0, 0, 5014, 0, 5013,
	0, 1713, 0, 1430, 5016, 0, 0, 288, 288, 0,
	1420, 0, 0, 0, 0, 1232, 1232, 5030, 5026, 1232,
	0, 5034, 5035, 1634, 1436, 5056, 0, 1436, 0, 0,
	5012, 834, 0, 288, 288, 0, 0, 0, 5038, 0,
	0, 5025, 0, 0, 0, 1775, 0, 5064, 5067, 0,
	1349, 5046, 5047, 5083, 0, 0, 1783, 5080, 5087, 5054,
	5075, 980, 5055, 5076, 0, 0, 0, 2172, 290, 0,
	0, 5073, 0, 2175, 0, 0, 5069, 5108, 5086, 0,
	0, 0, 5036, 1232, 1232, 1232, 5106, 0, 0, 0,
	0, 0, 3939, 0, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 0, 5068, 3937, 0, 0, 5072, 5096,
	1350, 5099, 5092, 0, 0, 3930, 1353, 5107, 0, 5142,
	0, 1232, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 5125, 5124, 5147, 0, 5122, 5123, 5111, 5074, 0,
	2166, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5170, 5168, 2310, 5143, 5144, 0, 0,
	5169, 0, 0, 0, 0, 0, 0, 5178, 288, 0,
	5176, 0, 5145, 1353, 1353, 0, 5160, 0, 0, 1232,
	0, 5182, 1350, 1350, 0, 0, 0, 1436, 5158, 5175,
	0, 1353, 5191, 5174, 1353, 0, 0, 1349, 4830, 0,
	1350, 5184, 3941, 1350, 5183, 0, 0, 5201, 5209, 0,
	2467, 0, 1349, 0, 5197, 5198, 0, 0, 5200, 3932,
	2166, 5188, 5205, 5199, 5203, 0, 5212, 0, 0, 0,
	0, 0, 5224, 5211, 3931, 5213, 5225, 0, 1355, 0,
	1355, 5215, 5234, 5232, 5064, 5222, 2497, 5067, 0, 5226,
	5220, 0, 5223, 0, 0, 0, 5231, 5230, 0, 5157,
	0, 5233, 5159, 5235, 2511, 2513, 5240, 0, 0, 1349,
	1349, 0, 5086, 1194, 0, 0, 0, 0, 2517, 1436,
	0, 0, 0, 0, 0, 5239, 5256, 1349, 5255, 5262,
	1349, 3940, 5263, 2529, 2530, 2531, 5266, 0, 0, 0,
	0, 0, 1161, 5261, 1098, 5274, 4527, 0, 4527, 1232,
	1232, 5265, 0, 5268, 0, 5259, 5272, 0, 1232, 1232,
	0, 0, 5277, 0, 5282, 0, 0, 5288, 0, 1163,
	0, 0, 0, 5286, 5293, 5297, 5294, 0, 0, 5292,
	5298, 5289, 5290, 5296, 0, 5291, 0, 0, 3312, 5295,
	0, 0, 0, 0, 0, 5302, 1436, 5303, 5305, 5304,
	5301, 0, 5310, 5308, 5306, 0, 5307, 0, 5313, 0,
	0, 0, 0, 0, 0, 747, 1232, 1162, 3312, 0,
	5317, 2598, 5319, 5310, 5314, 5321, 0, 0, 0, 0,
	0, 4128, 5316, 0, 0, 0, 288, 0, 288, 0,
	0, 0, 288, 0, 0, 0, 0, 5283, 5284, 0,
	1351, 0, 0, 3418, 0, 1661, 1420, 1430, 288, 0,
	288, 2148, 0, 0, 1099, 0, 0, 0, 288, 0,
	763, 0, 0, 0, 2739, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5285, 4129, 1945, 1946, 0,
	2023, 2215, 0, 0, 0, 0, 0, 0, 3938, 3933,
	3934, 3935, 3936, 288, 0, 5318, 0, 0, 0, 0,
	288, 1976, 0, 4130, 0, 4127, 0, 0, 0, 1948,
	0, 0, 0, 0, 4138, 0, 0, 0, 0, 0,
	4136, 0, 0, 0, 0, 0, 2909, 2909, 3942, 0,
	0, 0, 0, 834, 0, 1639, 2001, 0, 0, 0,
	2175, 1353, 1639, 1353, 4322, 1947, 0, 0, 0, 0,
	1350, 0, 1350, 0, 0, 4137, 0, 0, 0, 0,
	4133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 841, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 841, 841, 4134, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 1351, 0, 0, 0, 1104, 1103, 0, 0,
	0, 4372, 0, 0, 0, 0, 84, 0, 0, 2166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 2175, 0, 0,
	0, 0, 0, 1953, 1100, 78, 0, 92, 0, 1351,
	1351, 0, 0, 0, 0, 2166, 2166, 0, 0, 0,
	0, 0, 0, 79, 0, 1425, 0, 1351, 0, 0,
	1351, 0, 0, 0, 3458, 3459, 0, 0, 0, 0,
	84, 0, 0, 0, 2166, 2166, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 1975, 1977, 2909, 2909,
	2909, 2909, 0, 114, 0, 0, 0, 0, 4131, 98,
	111, 0, 0, 1425, 0, 0, 4132, 2166, 0, 0,
	0, 92, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1425, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	4135, 0, 0, 99, 0, 51, 1101, 114, 0, 0,
	0, 0, 0, 98, 111, 0, 288, 0, 0, 0,
	288, 0, 0, 0, 0, 288, 0, 2175, 0, 0,
	0, 288, 1160, 0, 1102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 288,
	0, 0, 0, 747, 0, 288, 0, 0, 0, 1187,
	0, 0, 0, 0, 0, 0, 1998, 834, 0, 0,
	0, 980, 0, 0, 0, 0, 0, 99, 0, 0,
	0, 1605, 0, 0, 0, 0, 3556, 3557, 3558, 3559,
	1106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 1420, 288, 0, 0, 0, 0, 1105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 834,
	1619, 0, 0, 0, 0, 4572, 288, 0, 0, 0,
	3195, 0, 0, 0, 2550, 0, 0, 3006, 0, 288,
	288, 0, 288, 0, 288, 0, 288, 0, 288, 1969,
	1194, 1194, 1194, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2587, 0, 0, 2588, 0, 2589, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4624, 0,
	0, 1596, 0, 288, 288, 288, 288, 0, 0, 0,
	4633, 0, 0, 0, 0, 0, 0, 0, 0, 3532,
	3533, 2000, 3550, 3551, 3552, 0, 198, 1351, 106, 1351,
	0, 110, 0, 4656, 814, 0, 0, 0, 834, 0,
	0, 103, 4001, 2166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 3340,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 0,
	3347, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 0, 3547, 0,
	198, 0, 106, 0, 0, 110, 0, 1425, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 1949,
	1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0, 1639,
	0, 0, 252, 2747, 0, 0, 163, 0, 0, 0,
	975, 0, 0, 78, 0, 158, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 0, 0,
	253, 79, 1619, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 84, 0,
	0, 4738, 0, 254, 247, 1945, 1946, 0, 199, 0,
	2166, 0, 0, 203, 0, 3538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 0, 1976,
	163, 0, 1639, 1639, 202, 0, 0, 1948, 0, 92,
	288, 0, 0, 0, 1945, 1946, 204, 0, 0, 747,
	1989, 1990, 1991, 0, 253, 0, 288, 0, 747, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 1976, 246,
	288, 0, 0, 1947, 0, 0, 1948, 0, 247, 0,
	974, 0, 199, 0, 0, 3554, 1995, 203, 0, 0,
	288, 1430, 2909, 2909, 0, 114, 0, 0, 0, 0,
	0, 98, 111, 2001, 0, 0, 0, 0, 1760, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 0, 0, 3548, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 288, 1430,
	0, 763, 0, 763, 0, 0, 0, 3031, 0, 0,
	0, 0, 0, 288, 0, 0, 288, 0, 0, 0,
	288, 0, 288, 0, 0, 99, 0, 1420, 0, 288,
	288, 0, 1430, 1430, 3047, 0, 0, 0, 0, 288,
	0, 1953, 2909, 2909, 2909, 2909, 2909, 2909, 2909, 2909,
	2909, 2909, 2909, 2909, 2909, 2909, 2909, 2909, 2909, 2909,
	2909, 2909, 0, 2909, 0, 0, 0, 0, 1998, 0,
	1970, 1971, 1972, 1973, 1639, 1639, 1639, 1639, 0, 0,
	1953, 0, 0, 841, 841, 0, 0, 841, 841, 0,
	0, 0, 0, 0, 1975, 1977, 3090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	3993, 3994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 0, 0,
	0, 3549, 834, 1968, 0, 0, 0, 0, 0, 1962,
	1963, 1945, 1946, 0, 0, 0, 1596, 0, 0, 0,
	4957, 0, 0, 0, 0, 288, 0, 1984, 0, 103,
	0, 0, 0, 0, 0, 1976, 0, 288, 288, 3191,
	1661, 0, 1968, 1948, 0, 0, 0, 0, 0, 4971,
	4057, 4058, 4059, 4060, 4061, 4062, 4063, 4064, 4065, 4066,
	4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076,
	2001, 4080, 0, 0, 288, 5000, 3251, 0, 0, 1947,
	0, 0, 0, 0, 1998, 0, 0, 0, 198, 0,
	106, 0, 0, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	252, 1619, 1619, 1998, 3295, 0, 0, 0, 975, 0,
	0, 0, 1194, 158, 3090, 0, 747, 0, 0, 0,
	1596, 0, 0, 0, 0, 3191, 980, 3090, 0, 0,
	0, 3544, 3545, 3546, 0, 0, 0, 2166, 3543, 3541,
	3542, 3534, 3535, 3536, 3537, 3539, 3540, 1969, 0, 288,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 1953, 0, 288,
	1420, 288, 0, 0, 0, 0, 0, 0, 163, 0,
	1619, 3370, 288, 0, 0, 1420, 1969, 1420, 0, 1420,
	0, 0, 0, 0, 204, 0, 5093, 0, 0, 5094,
	0, 0, 253, 0, 2467, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 1987, 0, 0, 246, 0, 0,
	1975, 1977, 0, 0, 0, 0, 247, 0, 0, 0,
	199, 0, 0, 0, 0, 203, 288, 288, 288, 288,
	1420, 0, 0, 1420, 2166, 0, 288, 0, 2000, 0,
	0, 288, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 288, 0, 0, 0, 3819, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 0, 3844, 2884, 2885, 2886, 2887, 2880,
	2881, 2882, 2883, 0, 1985, 0, 0, 3873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 1425, 0, 0, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2860,
	2861, 2862, 2863, 0, 2166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 0,
	0, 0, 0, 2872, 2873, 2874, 2875, 2868, 2869, 2870,
	2871, 2876, 2877, 2878, 2879, 0, 0, 0, 1639, 1639,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 2856, 2857, 2858, 2859,
	2864, 2865, 2866, 2867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1639,
	1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
	1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 1194, 0, 747, 0, 1596, 0, 0, 747,
	0, 0, 747, 0, 0, 747, 747, 0, 0, 0,
	0, 747, 0, 1949, 1950, 1951, 1952, 1954, 1955, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 288, 288, 0, 0,
	0, 2757, 2758, 2759, 2776, 2777, 2778, 2001, 0, 1596,
	0, 0, 0, 0, 0, 0, 1947, 0, 0, 0,
	0, 0, 2779, 0, 0, 0, 0, 1967, 0, 0,
	3090, 3090, 288, 0, 3694, 3697, 1964, 0, 0, 0,
	0, 3090, 0, 2148, 3532, 3533, 0, 3550, 3551, 3552,
	0, 0, 3090, 2148, 0, 3090, 2148, 2001, 0, 2148,
	0, 0, 3694, 0, 0, 0, 0, 0, 3532, 3533,
	0, 3550, 3551, 3552, 288, 288, 3697, 2769, 288, 0,
	1596, 0, 0, 0, 0, 0, 2765, 0, 0, 0,
	0, 0, 3996, 0, 0, 0, 0, 3697, 0, 288,
	2909, 3770, 0, 3770, 0, 0, 1596, 0, 0, 1420,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 0, 3547, 1953, 0, 0, 0, 0, 0,
	0, 0, 3090, 0, 3090, 0, 3801, 3090, 3697, 0,
	0, 3090, 0, 0, 0, 0, 0, 3547, 0, 1981,
	0, 0, 0, 0, 0, 3697, 0, 0, 834, 0,
	0, 0, 0, 0, 2770, 2771, 2772, 2773, 0, 0,
	0, 0, 0, 0, 2764, 0, 0, 1975, 1977, 0,
	0, 0, 0, 2909, 0, 0, 0, 1425, 0, 0,
	1420, 0, 0, 0, 0, 4261, 4262, 288, 0, 0,
	0, 0, 4264, 1962, 1963, 4265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 3845, 0, 0,
	3538, 3847, 3090, 0, 0, 288, 0, 0, 288, 0,
	0, 3876, 1430, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 3538, 0, 0, 288, 0, 1596,
	0, 0, 3295, 2774, 2775, 1420, 0, 288, 4700, 0,
	3090, 0, 747, 0, 0, 0, 3555, 0, 0, 3090,
	2467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2767, 0, 0, 0,
	3554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4350, 0, 0, 0, 0, 2511, 4356,
	4357, 0, 0, 0, 3554, 0, 0, 1998, 0, 1981,
	3959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3548, 0, 0, 1981, 0, 0, 0, 0,
	0, 4754, 0, 3966, 0, 0, 0, 1661, 78, 1596,
	0, 1420, 288, 0, 288, 0, 3548, 1945, 1946, 0,
	1420, 0, 0, 1420, 0, 0, 79, 0, 0, 2909,
	0, 0, 0, 1981, 0, 0, 1974, 0, 0, 1981,
	0, 1976, 0, 84, 0, 1981, 0, 0, 0, 1948,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 2909, 92, 1947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2909, 0,
	2768, 4035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 51, 0,
	114, 1981, 0, 0, 0, 0, 98, 111, 0, 0,
	0, 0, 0, 0, 0, 1981, 3549, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 4460, 4461, 0, 0, 0, 0,
	3549, 0, 0, 1970, 1971, 1972, 1973, 4895, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 288,
	99, 0, 1425, 0, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 1981, 0, 0, 0,
	0, 0, 1981, 747, 747, 0, 0, 0, 0, 0,
	0, 4927, 0, 0, 0, 0, 1975, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2754, 2755, 2756, 2780, 2766, 2760, 4949, 2762, 2763, 2761,
	2748, 2749, 2750, 2751, 2752, 2753, 0, 288, 0, 0,
	0, 0, 2467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 3544, 3545, 3546, 1425,
	0, 0, 0, 3543, 3541, 3542, 3534, 3535, 3536, 3537,
	3539, 3540, 0, 0, 0, 0, 0, 0, 0, 0,
	3544, 3545, 3546, 0, 2511, 0, 0, 3543, 3541, 3542,
	3534, 3535, 3536, 3537, 3539, 3540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	834, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	0, 0, 0, 0, 0, 0, 1998, 4233, 0, 0,
	4235, 4236, 1981, 0, 0, 0, 0, 3770, 0, 0,
	0, 0, 0, 0, 4665, 1981, 4667, 4668, 4669, 0,
	4671, 0, 288, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 198, 0, 106, 3191, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3697, 0, 288, 0, 1974, 0, 763, 763, 1430,
	0, 2913, 0, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 288, 975, 0, 1981, 0, 0, 158, 1969,
	0, 1981, 0, 288, 3295, 0, 0, 3295, 2148, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	3876, 0, 0, 0, 0, 288, 0, 0, 0, 1639,
	288, 0, 0, 4720, 0, 288, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3090, 288, 0, 0, 0, 0,
	0, 2000, 0, 163, 3191, 0, 0, 980, 3090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 288,
	0, 0, 246, 3697, 0, 0, 3047, 0, 0, 0,
	0, 247, 0, 0, 0, 199, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 1956, 1957, 1949,
	1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0, 0,
	0, 1596, 0, 4824, 0, 0, 0, 0, 0, 0,
	4416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2101, 0, 0,
	0, 1194, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 1194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 1661,
	0, 288, 0, 1945, 1946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 288, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	1430, 1430, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1430, 1430, 0, 288, 1430, 0,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 3090,
	3090, 1947, 3694, 0, 0, 3770, 3090, 0, 0, 0,
	0, 1596, 1967, 0, 4529, 0, 4529, 1661, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 3090, 0,
	2148, 0, 0, 0, 3694, 0, 1661, 1661, 288, 3697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3697, 0, 288, 3697, 0, 288, 0, 0,
	3770, 0, 0, 0, 0, 0, 0, 0, 0, 1425,
	0, 0, 0, 0, 0, 0, 0, 3991, 0, 0,
	0, 3090, 0, 3090, 288, 0, 0, 0, 0, 0,
	0, 1596, 1179, 0, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3090, 3090, 0, 0, 0, 2511, 3295,
	3295, 0, 0, 0, 0, 0, 3694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 288, 0, 0, 0,
	0, 0, 1975, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 1962, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 1981, 0, 0, 0, 1981, 0,
	0, 0, 0, 1596, 0, 0, 1596, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 0,
	0, 0, 0, 0, 1981, 0, 1981, 1981, 1981, 1981,
	0, 0, 1998, 0, 0, 0, 0, 0, 2913, 2913,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 3090, 2148,
	0, 2148, 1596, 0, 3876, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4770, 0, 4770, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	834, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 3770, 1661, 0, 1661, 1420, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 1981, 0, 0,
	1981, 0, 0, 1981, 3697, 0, 288, 0, 0, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3876, 0, 0, 4529, 2000, 0, 1661,
	0, 0, 0, 3090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 4858, 0,
	0, 0, 0, 0, 0, 0, 0, 3221, 0, 0,
	1661, 0, 0, 0, 0, 1981, 0, 0, 3553, 0,
	2913, 2913, 2913, 2913, 0, 0, 1981, 0, 1981, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 288, 288,
	0, 3211, 3209, 0, 0, 0, 0, 0, 3213, 3215,
	3205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4035, 0, 0, 0, 1945, 1946, 0, 1965,
	1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 3231, 0, 0, 0, 3770, 4918, 0, 1948, 0,
	0, 0, 0, 3876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4529, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 0, 4529, 0,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4529, 4529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3990, 0, 0, 4529, 0, 288, 4529, 0, 0, 0,
	0, 0, 1439, 0, 0, 0, 2148, 0, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 3207, 1661, 0,
	1661, 0, 1953, 0, 0, 0, 0, 0, 3223, 1179,
	1179, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1430, 3222, 3212, 3210, 3214, 3216, 3206, 3208, 3224,
	3226, 0, 0, 0, 0, 5044, 0, 0, 0, 0,
	3218, 3220, 3228, 0, 1609, 1975, 1977, 0, 0, 0,
	1625, 4770, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 1963, 0, 0, 1596, 3232, 0, 0, 3090,
	0, 1663, 0, 1669, 0, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 1596, 0, 0, 0,
	0, 288, 0, 0, 1981, 1981, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 1771, 0, 0, 0, 1661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 1596,
	0, 1596, 0, 3876, 0, 0, 0, 0, 0, 0,
	1856, 1981, 0, 1862, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3233, 1969, 0,
	1596, 0, 0, 3090, 0, 0, 3217, 3219, 3227, 0,
	0, 0, 0, 4529, 0, 4529, 0, 0, 1661, 0,
	0, 0, 0, 0, 0, 0, 1194, 0, 0, 0,
	0, 1981, 1981, 0, 2913, 2913, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3553, 3553,
	0, 0, 1981, 1981, 0, 0, 0, 0, 0, 0,
	2000, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 0, 1981, 0, 0, 3090,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 1981, 0,
	0, 0, 0, 0, 0, 0, 3191, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3090,
	0, 0, 0, 2022, 0, 0, 0, 0, 0, 2035,
	0, 0, 0, 3191, 2913, 2913, 2913, 2913, 2913, 2913,
	2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913,
	2913, 2913, 2913, 2913, 0, 2913, 3553, 3553, 3553, 3553,
	0, 0, 1965, 1961, 870, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 0, 0, 1945,
	1946, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	881, 1981, 0, 0, 0, 0, 1945, 1946, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	883, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 0, 0, 0, 0, 1264, 0, 0, 1948, 0,
	0, 0, 0, 882, 0, 2095, 2095, 2095, 2001, 0,
	0, 0, 0, 1596, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 1967, 0,
	0, 0, 0, 0, 1947, 0, 0, 1964, 0, 0,
	0, 0, 0, 1596, 0, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 875, 0, 0, 0,
	0, 0, 0, 891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 3447, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3440, 0, 0, 0, 0, 1970, 1971, 1972, 1973, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	879, 0, 1970, 1971, 1972, 1973, 1596, 0, 0, 0,
	1228, 0, 1953, 0, 0, 0, 0, 809, 0, 0,
	0, 1179, 0, 0, 1981, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 877, 0, 0, 0, 1975, 1977,
	0, 0, 0, 0, 1194, 0, 0, 0, 287, 287,
	287, 0, 0, 0, 0, 1975, 1977, 0, 0, 0,
	0, 0, 0, 0, 1962, 1963, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	905, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 0, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 905, 0, 0,
	1356, 0, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 872, 0, 0, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1981, 1981,
	0, 0, 1981, 3553, 3553, 1981, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 1981, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 808, 1981,
	0, 0, 0, 0, 1974, 1352, 0, 0, 0, 0,
	0, 1969, 0, 0, 886, 0, 0, 0, 0, 0,
	874, 0, 1981, 1981, 1981, 1981, 1981, 0, 1969, 0,
	0, 0, 1981, 0, 1981, 0, 0, 3553, 3553, 3553,
	3553, 3553, 3553, 3553, 3553, 3553, 3553, 3553, 3553, 3553,
	3553, 3553, 3553, 3553, 3553, 3553, 3553, 0, 0, 0,
	3553, 0, 0, 1981, 1981, 0, 0, 0, 0, 0,
	871, 0, 0, 2000, 0, 1981, 884, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2574, 0, 0, 0, 0, 0, 1981,
	888, 889, 0, 885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1965, 1961, 1981, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0,
	0, 2603, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 1194, 0, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2644,
	0, 2648, 1981, 1981, 0, 0, 0, 0, 2662, 0,
	0, 1179, 0, 0, 0, 0, 0, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 0, 2714, 0, 2716, 2717, 2718, 2719,
	0, 0, 0, 0, 0, 794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2743, 0, 0, 0, 777, 0, 0, 0,
	0, 778, 0, 0, 2022, 0, 0, 0, 2794, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 0, 2824, 2827, 2830, 2833, 0, 0,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 0, 0, 0,
	0, 0, 779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 780, 0, 0, 0, 0, 2905, 0,
	2916, 2918, 2923, 0, 1981, 1981, 0, 0, 0, 1981,
	1981, 0, 0, 1981, 1981, 781, 0, 0, 1981, 0,
	0, 0, 1981, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 800, 0, 0,
	0, 0, 2913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 784, 0, 1356, 0,
	0, 785, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 2913, 0, 0, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 799, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 287, 287,
	0, 0, 287, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 1356, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 287, 287, 0, 0, 287, 287,
	0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	905, 0, 905, 0, 0, 1982, 1976, 0, 1356, 0,
	0, 806, 0, 787, 1948, 0, 0, 1981, 1981, 1981,
	0, 0, 0, 0, 1995, 0, 0, 0, 1981, 1981,
	3553, 2913, 0, 0, 0, 0, 0, 1981, 0, 0,
	1981, 2001, 0, 807, 0, 788, 0, 0, 0, 0,
	1947, 0, 287, 287, 0, 0, 0, 0, 0, 0,
	0, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 3254, 3255, 0, 3257, 0, 0, 287, 287,
	0, 0, 0, 0, 3553, 2913, 0, 0, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 789, 0, 0,
	0, 1981, 804, 805, 0, 802, 0, 0, 0, 1981,
	2913, 797, 0, 0, 790, 1945, 1946, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1981, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 1976,
	0, 0, 0, 0, 0, 0, 0, 1948, 1970, 1971,
	1972, 1973, 0, 0, 0, 0, 0, 0, 1953, 791,
	0, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 0, 793, 0, 287, 0, 0,
	801, 0, 0, 0, 1967, 0, 0, 0, 0, 0,
	0, 1986, 0, 1964, 1996, 810, 0, 0, 0, 0,
	0, 1975, 1977, 287, 3381, 0, 795, 0, 0, 0,
	0, 0, 0, 0, 0, 3553, 0, 0, 1992, 0,
	1993, 0, 0, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 1981, 3553, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 3553,
	0, 1970, 1971, 1972, 1973, 0, 0, 0, 0, 2002,
	2003, 1953, 0, 0, 0, 0, 1356, 0, 1356, 0,
	0, 0, 0, 0, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2179, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 1975, 1977, 0, 3441, 3442, 0,
	0, 1998, 0, 3448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 1963, 3462, 3463, 0, 0, 0, 0, 2794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 1356, 0, 3486,
	0, 2117, 0, 1352, 0, 0, 0, 287, 0, 0,
	0, 1981, 0, 0, 0, 0, 3498, 0, 0, 0,
	0, 0, 1987, 287, 2117, 287, 0, 0, 0, 0,
	0, 0, 0, 905, 0, 0, 1981, 0, 0, 0,
	905, 0, 0, 0, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2923, 2923, 2923,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 1985, 0, 2095, 0, 0, 0, 0, 0,
	0, 0, 3591, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 4424, 1356, 1356, 1981, 4423,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 0, 1356, 0, 1356, 0,
	0, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 0, 0, 0, 1356, 1356, 0, 0,
	0, 0, 0, 3727, 0, 0, 0, 0, 0, 287,
	1356, 0, 0, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 1356, 0, 0, 1356, 1356, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3784, 3785, 1982, 1976, 0, 0, 0, 0,
	0, 287, 0, 1948, 0, 287, 0, 0, 0, 0,
	287, 0, 0, 1995, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2001, 0, 287, 0, 287, 0, 0, 0, 0, 1947,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 287,
	0, 2179, 2179, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 905, 287, 0, 287, 0, 287,
	0, 287, 0, 287, 0, 0, 0, 1970, 1971, 1972,
	1973, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 287,
	287, 287, 0, 0, 0, 0, 1356, 0, 0, 0,
	1986, 0, 0, 1996, 0, 0, 0, 0, 0, 0,
	1975, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1992, 0, 1993,
	0, 0, 0, 0, 0, 0, 1962, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 1356, 0, 1968,
	2662, 0, 0, 0, 0, 0, 1356, 3988, 3989, 0,
	0, 3992, 0, 0, 0, 3995, 0, 0, 0, 0,
	0, 0, 0, 1356, 3999, 0, 0, 0, 0, 0,
	0, 0, 0, 4006, 0, 0, 0, 0, 3591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1994, 0,
	0, 0, 0, 4019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 0, 1983,
	0, 0, 0, 4042, 4043, 0, 4044, 4045, 4046, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 0, 0, 778, 4052, 0, 0, 0, 4054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4083, 4084, 0, 779, 1352, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 780, 0, 0, 0, 4095,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 4104, 287, 1356, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 800,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 0, 0, 0, 0, 2179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 4169,
	0, 287, 0, 0, 0, 287, 0, 287, 784, 0,
	0, 0, 0, 785, 287, 287, 1356, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 4187, 0, 0,
	809, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 799, 0, 0,
	0, 4218, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0,
	1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0,
	0, 0, 0, 0, 3507, 0, 0, 0, 3508, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	4242, 4243, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 796, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 1356, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 1356, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 287, 0, 0, 0, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 0, 0, 0, 0, 787, 0, 0, 0, 0,
	0, 0, 0, 1982, 1976, 0, 0, 0, 0, 905,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 2095,
	0, 0, 1995, 0, 0, 807, 0, 788, 4346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 287, 0, 0, 0, 0, 0, 0, 1947, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 808, 0, 0, 0, 0, 0, 0, 0, 789,
	0, 0, 0, 0, 804, 805, 0, 802, 0, 0,
	0, 0, 0, 797, 0, 925, 790, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 4394, 4395,
	0, 0, 0, 0, 4399, 4400, 927, 0, 0, 4403,
	4404, 928, 0, 0, 287, 0, 287, 4408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 4412, 0,
	0, 791, 0, 798, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 792, 0, 4417, 0, 1953, 0, 0, 0,
	0, 0, 929, 0, 946, 0, 0, 793, 0, 0,
	0, 0, 801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 0,
	930, 287, 287, 287, 287, 931, 0, 0, 795, 1986,
	0, 287, 1996, 0, 0, 0, 287, 0, 0, 1975,
	1977, 0, 0, 0, 0, 0, 0, 954, 0, 0,
	0, 0, 0, 0, 932, 0, 1992, 0, 1993, 0,
	0, 0, 0, 0, 0, 1962, 1963, 287, 952, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 934, 0, 0, 0, 1179, 0, 0, 0, 0,
	0, 0, 0, 956, 0, 0, 0, 0, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 1356, 0, 0, 0, 0, 0,
	0, 289, 289, 289, 955, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 1974, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 1356,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 2179, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 938, 0, 0, 0, 0,
	0, 0, 0, 0, 4687, 4688, 4689, 0, 1352, 0,
	0, 0, 0, 1345, 2179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 0, 2662, 0, 0,
	4698, 4699, 0, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 4707, 4710,
	0, 0, 924, 0, 2117, 947, 0, 0, 0, 0,
	1985, 283, 283, 743, 939, 0, 287, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 945, 0, 2790, 0, 0, 0, 2791, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 940,
	0, 287, 287, 941, 959, 0, 958, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 4771, 0, 0, 0,
	951, 0, 0, 0, 0, 4779, 960, 287, 957, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 1356, 0,
	4787, 0, 0, 1179, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 1356, 0, 0, 0, 1356, 4798,
	0, 0, 4800, 0, 0, 0, 1356, 0, 0, 287,
	287, 0, 0, 287, 0, 0, 0, 0, 0, 1356,
	2117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4926, 287, 0, 0, 4930, 0, 0, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2179,
	2179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2179, 2179,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2179, 0, 0, 0, 0, 0, 0, 0, 0,
	2662, 0, 0, 0, 0, 0, 0, 287, 0, 4710,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 1356, 48, 47, 0, 0, 0,
	0, 0, 0, 1179, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 50, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 289, 289, 0, 0, 289, 0, 49, 0, 92,
	5121, 5121, 5121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 70, 0, 0,
	0, 0, 0, 1352, 1352, 53, 0, 0, 5146, 0,
	59, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 114, 0, 0, 0, 0,
	0, 98, 111, 0, 0, 289, 1516, 289, 289, 71,
	0, 289, 289, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 289, 5121, 0, 0, 0,
	0, 0, 905, 0, 0, 54, 0, 1356, 1356, 0,
	1356, 0, 0, 0, 1356, 0, 0, 1356, 1516, 0,
	0, 0, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 289, 2179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	1516, 289, 289, 0, 0, 0, 0, 0, 0, 1406,
	0, 1406, 1406, 0, 0, 0, 1516, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 72, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	1356, 1356, 1356, 0, 0, 0, 5121, 5278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 1356, 0, 1356, 1516, 0, 0, 0,
	1356, 0, 1356, 0, 0, 1507, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	289, 0, 0, 1356, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 2179, 0, 0, 55, 287, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 287, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 61,
	287, 0, 0, 0, 0, 287, 0, 0, 0, 73,
	287, 0, 0, 0, 0, 0, 0, 60, 198, 0,
	106, 0, 0, 110, 0, 0, 0, 56, 0, 0,
	1352, 168, 0, 0, 0, 0, 0, 0, 0, 57,
	0, 1764, 1765, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 287, 0, 0, 0, 0, 165,
	0, 1356, 0, 0, 0, 1356, 1356, 0, 1356, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 1356, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 163, 0,
	0, 1217, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 0, 0,
	1886, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 0, 1356, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	199, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 202, 0, 0, 3,
	0, 0, 0, 0, 0, 0, 0, 0, 1352, 0,
	289, 0, 0, 0, 1356, 0, 1352, 0, 0, 0,
	116, 1516, 0, 0, 0, 0, 289, 289, 289, 0,
	2117, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 287, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 2117,
	1356, 2117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 1172, 0, 1356, 1356, 1356, 1356,
	1356, 1356, 1356, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 287, 0, 0, 1516, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2133, 2179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2143, 0, 1617, 0,
	0, 0, 0, 1356, 0, 1356, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 1617, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2179, 0,
	0, 0, 289, 0, 1516, 1516, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 1356, 1356, 0, 293,
	0, 0, 0, 0, 289, 0, 0, 0, 289, 0,
	0, 0, 0, 289, 0, 0, 1356, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 289, 0, 0,
	0, 1356, 0, 289, 1356, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 1516, 0, 1516, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 1516, 0, 0, 0, 896,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 289,
	0, 0, 289, 0, 0, 0, 0, 0, 2179, 0,
	1516, 0, 0, 1516, 1516, 1516, 896, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 289, 0,
	289, 287, 289, 0, 289, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2117, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 289, 289, 289, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2454, 0, 0, 0, 2461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 287, 2485, 0, 2485, 0, 0,
	0, 0, 0, 2492, 0, 1356, 1356, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 1356, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 2461,
	0, 0, 2521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2542, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2558, 0,
	2560, 0, 2562, 2117, 2564, 0, 2565, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 116, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2594, 2595, 2596, 0, 0, 0, 0, 0, 0,
	2117, 2117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2117, 0,
	287, 2117, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 116, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 289, 0, 0, 0, 289, 0,
	289, 1172, 116, 116, 0, 0, 0, 289, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 116, 0,
	116, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 1516, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2982, 0,
	289, 0, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 289, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3033, 0, 0, 1406, 0, 0, 0, 1406, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 2117, 0,
	2117, 0, 289, 0, 0, 0, 1151, 2473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2015,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 2021, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1516, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	1516, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 2461, 2461, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 2118, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 289, 289, 289, 289, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3274, 0, 0, 0, 0, 0,
	289, 0, 2473, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3357, 0, 3360,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 3399, 1617, 3401, 1617, 1947, 0,
	0, 0, 0, 0, 3408, 0, 0, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 3437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 1993, 0,
	1516, 0, 0, 0, 0, 1962, 1963, 0, 0, 289,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 1636, 1516, 0, 0, 0,
	1172, 0, 1172, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 289, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	289, 0, 896, 0, 0, 0, 0, 0, 0, 896,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 1636, 0, 0, 0, 0, 0, 0, 1636, 1998,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 289, 289, 1636, 0, 289, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 3639,
	0, 1513, 1969, 0, 0, 0, 0, 1151, 0, 0,
	1151, 1151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 1617, 1617, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	1516, 0, 1516, 0, 2000, 0, 1516, 0, 2732, 0,
	0, 0, 0, 289, 1516, 0, 0, 0, 0, 0,
	3690, 0, 0, 289, 0, 0, 289, 1516, 1172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2021, 0,
	0, 0, 2021, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3746, 3748, 0, 0, 2473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 1516, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	1635, 1635, 0, 0, 0, 0, 1339, 4004, 0, 0,
	0, 0, 1513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	289, 1516, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3869, 0, 0, 2461, 0, 1635, 0,
	1635, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	1635, 1635, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 0, 0, 1635,
	1635, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3972, 0, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3986, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 116, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 116,
	1513, 0, 0, 0, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 1516, 0, 1516, 0,
	0, 1513, 1516, 0, 0, 1516, 0, 0, 0, 0,
	0, 289, 0, 116, 0, 0, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 1513, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 1982,
	1976, 289, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 289, 0,
	1636, 0, 1636, 289, 1636, 2001, 0, 0, 0, 1516,
	0, 0, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 1636, 1636, 0, 1967, 0, 0, 0, 0,
	0, 0, 0, 1516, 1964, 0, 1636, 0, 1516, 1516,
	1516, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	0, 1636, 1636, 1636, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1516, 0, 0, 0, 289, 1516, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 1516, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 2473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4301, 0, 0, 0, 1986, 0, 0, 1996, 0,
	0, 4311, 0, 0, 0, 1975, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2473, 1514,
	0, 0, 1992, 4328, 1993, 0, 0, 0, 0, 0,
	1513, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 0, 0, 1984,
	0, 0, 0, 1516, 1516, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4374, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 1514, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 1635, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 289, 1635, 0, 1635,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 1516,
	0, 0, 289, 0, 0, 289, 1635, 1635, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 1974, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 1516, 1516, 0, 0, 0, 0,
	0, 0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989,
	1990, 1991, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 1982, 1976, 0, 0,
	0, 0, 0, 1516, 289, 1948, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 1995, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 0, 1516, 1516, 1516, 1516, 1516, 1516,
	1516, 1947, 116, 116, 0, 116, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 1516, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4549, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 2473, 0, 0, 0, 1985, 0, 0, 116,
	116, 0, 116, 0, 0, 0, 0, 0, 1959, 1960,
	1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 0, 0, 5045,
	0, 1516, 0, 1516, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 1514, 0, 2473, 0, 0, 0, 0, 0,
	0, 289, 1986, 0, 4644, 1996, 0, 0, 1636, 0,
	0, 0, 1975, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1992,
	0, 1993, 0, 0, 0, 0, 0, 0, 1962, 1963,
	0, 0, 0, 1339, 0, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	116, 116, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 1968, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 1516, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	1994, 1636, 0, 0, 0, 0, 0, 1636, 1513, 1516,
	0, 0, 1516, 0, 0, 0, 0, 0, 1636, 1636,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 0, 289, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 2473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 1339, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 4885, 1617, 1516, 0,
	0, 0, 1513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965,
	1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 1635, 0, 1635, 0,
	0, 0, 1513, 0, 0, 0, 1516, 0, 0, 896,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 1635, 0, 0,
	0, 0, 0, 5003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989,
	1990, 1991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 1976, 0, 0,
	0, 0, 0, 1514, 1513, 1948, 0, 1513, 0, 0,
	0, 0, 0, 0, 0, 1995, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 5058, 0, 1514, 116, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5101,
	0, 0, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 0, 1982, 1976, 0, 0, 1953,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	1947, 0, 1986, 0, 0, 1996, 0, 0, 0, 0,
	0, 1967, 1975, 1977, 1514, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 1992,
	0, 1993, 0, 0, 0, 0, 0, 0, 1962, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 1339,
	0, 1968, 0, 0, 1636, 0, 0, 1339, 0, 0,
	0, 896, 0, 0, 0, 0, 0, 0, 1636, 0,
	1636, 0, 0, 0, 1514, 0, 0, 0, 1970, 1971,
	1972, 1973, 1636, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 1636, 0, 0, 0, 0,
	1994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 1998, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 0, 0, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 1992, 1636,
	1993, 0, 0, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 116, 0, 0, 0,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 1635, 0, 1635, 1969, 1514, 0, 1635, 1514,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 116, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 1998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 1635, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 1635,
	0, 0, 0, 0, 1635, 1635, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 1635, 0, 1635,
	0, 0, 0, 1985, 1635, 0, 1513, 0, 0, 0,
	0, 0, 0, 0, 1969, 1959, 1960, 1966, 1988, 1965,
	1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	3509, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 1976, 2000, 0, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 1995, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 1513,
	1513, 0, 1513, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	1635, 1635, 0, 0, 0, 0, 0, 0, 0, 3506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 1971, 1972,
	1973, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 1996, 0, 1513, 0, 0, 0, 0,
	1975, 1977, 0, 1636, 1636, 0, 1636, 0, 0, 0,
	1636, 0, 0, 1636, 0, 0, 0, 1992, 1513, 1993,
	0, 0, 0, 0, 0, 0, 1962, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	1635, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 0, 1635, 0, 0, 0, 1994, 0,
	0, 1636, 0, 0, 0, 0, 1636, 1636, 1636, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 1983,
	1635, 1635, 1635, 1635, 1635, 1635, 1635, 0, 0, 1636,
	1998, 1636, 0, 0, 0, 0, 1636, 0, 1514, 0,
	116, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 1514,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 1513, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 1513, 0, 0,
	0, 0, 1995, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 1514, 1514, 0, 1514, 0, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 1967,
	116, 0, 1636, 1636, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 1635,
	1635, 1635, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0,
	1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3505, 0,
	0, 0, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 1513, 1953, 1514, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 1636, 0, 0, 1992, 0, 1993, 0,
	0, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 1636, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 1514,
	0, 1636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 1636, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1514, 0, 0,
	1636, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 1517, 305, 306, 1518, 1519, 1520,
	0, 1521, 689, 1522, 1523, 1524, 307, 1525, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 1526, 694, 319, 320, 321,
	322, 323, 324, 1527, 1528, 0, 325, 695, 696, 697,
	1529, 326, 327, 698, 1530, 1597, 1531, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1532, 337, 338, 339,
	336, 340, 1533, 341, 1636, 342, 343, 344, 345, 346,
	347, 1534, 348, 349, 350, 1296, 351, 352, 353, 1535,
	1536, 1538, 1537, 1539, 1540, 1541, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 1542, 364, 360, 362,
	1543, 365, 363, 366, 1544, 367, 368, 369, 1545, 1546,
	370, 371, 372, 1547, 373, 374, 375, 1548, 376, 377,
	378, 1549, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 1550,
	294, 1551, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 1552, 397, 398, 399, 1553, 400,
	401, 1554, 1297, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1555, 414, 707,
	1556, 708, 415, 1557, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1299, 423, 424, 1558, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1559, 1298, 512, 433, 712, 713, 1560, 714, 1561,
	434, 435, 1300, 715, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1562,
	446, 448, 447, 1563, 449, 716, 1303, 450, 451, 1304,
	1564, 452, 453, 454, 455, 456, 457, 460, 1565, 1566,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1567, 296, 1307, 506, 507, 508, 509, 1568, 717,
	510, 718, 513, 514, 1569, 0, 515, 0, 516, 1570,
	1571, 518, 519, 520, 1572, 1573, 521, 522, 719, 1308,
	523, 1309, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1574, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 1575, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	1576, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 1577, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 1578, 606, 607, 605, 608, 609, 610, 1579,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 1580, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 1581, 641, 642,
	0, 637, 628, 1582, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 1583, 651, 730, 731, 732, 733, 1584,
	662, 1585, 652, 654, 655, 656, 734, 657, 735, 1586,
	658, 659, 660, 661, 653, 663, 664, 1587, 1588, 665,
	666, 668, 670, 671, 667, 669, 672, 1589, 673, 1590,
	0, 674, 675, 676, 736, 737, 738, 1591, 678, 677,
	679, 680, 681, 739, 682, 683, 1592, 1593, 1594, 1595,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 2960, 0, 0, 0,
	0, 0, 0, 0, 2961, 297, 298, 300, 299, 301,
	302, 303, 304, 1517, 305, 306, 1518, 1519, 1520, 0,
	1521, 689, 1522, 1523, 1524, 307, 1525, 308, 309, 1295,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 1526, 694, 319, 320, 321, 322,
	323, 324, 1527, 1528, 0, 325, 695, 696, 697, 1529,
	326, 327, 698, 1530, 1597, 1531, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1532, 337, 338, 339, 336,
	340, 1533, 341, 0, 342, 343, 344, 345, 346, 347,
	1534, 348, 349, 350, 1296, 351, 352, 353, 1535, 1536,
	1538, 1537, 1539, 1540, 1541, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 1542, 364, 360, 362, 1543,
	365, 363, 366, 1544, 367, 368, 369, 1545, 1546, 370,
	371, 372, 1547, 373, 374, 375, 1548, 376, 377, 378,
	1549, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 1550, 294,
	1551, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 1552, 397, 398, 399, 1553, 400, 401,
	1554, 1297, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1555, 414, 707, 1556,
	708, 415, 1557, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1299, 423, 424, 1558, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1559, 1298, 512, 433, 712, 713, 1560, 714, 1561, 434,
	435, 1300, 715, 1301, 436, 437, 438, 1302, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1562, 446,
	448, 447, 1563, 449, 716, 1303, 450, 451, 1304, 1564,
	452, 453, 454, 455, 456, 457, 460, 1565, 1566, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1305,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1306, 504, 492,
	1567, 296, 1307, 506, 507, 508, 509, 1568, 717, 510,
	718, 513, 514, 1569, 0, 515, 0, 516, 1570, 1571,
	518, 519, 520, 1572, 1573, 521, 522, 719, 1308, 523,
	1309, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1574, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	1575, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 1576,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 1577, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 1578, 606, 607, 605, 608, 609, 610, 1579, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 1580, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 1581, 641, 642, 0,
	637, 628, 1582, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 1583, 651, 730, 731, 732, 733, 1584, 662,
	1585, 652, 654, 655, 656, 734, 657, 735, 1586, 658,
	659, 660, 661, 653, 663, 664, 1587, 1588, 665, 666,
	668, 670, 671, 667, 669, 672, 1589, 673, 1590, 0,
	674, 675, 676, 736, 737, 738, 1591, 678, 677, 679,
	680, 681, 739, 682, 683, 1592, 1593, 1594, 1595, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 4013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4015, 297, 298, 300, 299, 301, 302, 303, 304,
	1517, 305, 306, 1518, 1519, 1520, 0, 1521, 689, 1522,
	1523, 1524, 307, 1525, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 1526, 694, 319, 320, 321, 322, 323, 324, 1527,
	1528, 0, 325, 695, 696, 697, 1529, 326, 327, 698,
	1530, 1597, 1531, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1532, 337, 338, 339, 336, 340, 1533, 341,
	0, 342, 343, 344, 345, 346, 347, 1534, 348, 349,
	350, 1296, 351, 352, 353, 1535, 1536, 1538, 1537, 1539,
	1540, 1541, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 1542, 364, 360, 362, 1543, 365, 363, 366,
	1544, 367, 368, 369, 1545, 1546, 370, 371, 372, 1547,
	373, 374, 375, 1548, 376, 377, 378, 1549, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 1550, 294, 1551, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	1552, 397, 398, 399, 1553, 400, 401, 1554, 1297, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1555, 414, 707, 1556, 708, 415, 1557,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1299, 423, 424, 1558, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1559, 1298, 512,
	433, 712, 713, 1560, 714, 1561, 434, 435, 1300, 715,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1562, 446, 448, 447, 1563,
	449, 716, 1303, 450, 451, 1304, 1564, 452, 453, 454,
	455, 456, 457, 460, 1565, 1566, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1567, 296, 1307,
	506, 507, 508, 509, 1568, 717, 510, 718, 513, 514,
	1569, 0, 515, 0, 516, 1570, 1571, 518, 519, 520,
	1572, 1573, 521, 522, 719, 1308, 523, 1309, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1574, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 1575, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 1576, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 1577, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1578, 606,
	607, 605, 608, 609, 610, 1579, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1580, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1581, 641, 642, 0, 637, 628, 1582,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1583,
	651, 730, 731, 732, 733, 1584, 662, 1585, 652, 654,
	655, 656, 734, 657, 735, 1586, 658, 659, 660, 661,
	653, 663, 664, 1587, 1588, 665, 666, 668, 670, 671,
	667, 669, 672, 1589, 673, 1590, 0, 674, 675, 676,
	736, 737, 738, 1591, 678, 677, 679, 680, 681, 739,
	682, 683, 1592, 1593, 1594, 1595, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4452, 297, 298, 300, 299, 301, 302, 303,
	304, 1517, 305, 306, 1518, 1519, 1520, 0, 1521, 689,
	1522, 1523, 1524, 307, 1525, 308, 309, 1295, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 1526, 694, 319, 320, 321, 322, 323, 324,
	1527, 1528, 0, 325, 695, 696, 697, 1529, 326, 327,
	698, 1530, 1597, 1531, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1532, 337, 338, 339, 336, 340, 1533,
	341, 0, 342, 343, 344, 345, 346, 347, 1534, 348,
	349, 350, 1296, 351, 352, 353, 1535, 1536, 1538, 1537,
	1539, 1540, 1541, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 1542, 364, 360, 362, 1543, 365, 363,
	366, 1544, 367, 368, 369, 1545, 1546, 370, 371, 372,
	1547, 373, 374, 375, 1548, 376, 377, 378, 1549, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 1550, 294, 1551, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 1552, 397, 398, 399, 1553, 400, 401, 1554, 1297,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1555, 414, 707, 1556, 708, 415,
	1557, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 1299, 423, 424, 1558, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1559, 1298,
	512, 433, 712, 713, 1560, 714, 1561, 434, 435, 1300,
	715, 1301, 436, 437, 438, 1302, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1562, 446, 448, 447,
	1563, 449, 716, 1303, 450, 451, 1304, 1564, 452, 453,
	454, 455, 456, 457, 460, 1565, 1566, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1305, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1306, 504, 492, 1567, 296,
	1307, 506, 507, 508, 509, 1568, 717, 510, 718, 513,
	514, 1569, 0, 515, 0, 516, 1570, 1571, 518, 519,
	520, 1572, 1573, 521, 522, 719, 1308, 523, 1309, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1574, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 1575, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 1576, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 1577, 580, 581, 582, 1310, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 1578,
	606, 607, 605, 608, 609, 610, 1579, 611, 612, 594,
	595, 613, 614, 1311, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 1580, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 1581, 641, 642, 0, 637, 628,
	1582, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	1583, 651, 730, 731, 732, 733, 1584, 662, 1585, 652,
	654, 655, 656, 734, 657, 735, 1586, 658, 659, 660,
	661, 653, 663, 664, 1587, 1588, 665, 666, 668, 670,
	671, 667, 669, 672, 1589, 673, 1590, 0, 674, 675,
	676, 736, 737, 738, 1591, 678, 677, 679, 680, 681,
	739, 682, 683, 1592, 1593, 1594, 1595, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4450, 297, 298, 300, 299, 301, 302,
	303, 304, 1517, 305, 306, 1518, 1519, 1520, 0, 1521,
	689, 1522, 1523, 1524, 307, 1525, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 1526, 694, 319, 320, 321, 322, 323,
	324, 1527, 1528, 0, 325, 695, 696, 697, 1529, 326,
	327, 698, 1530, 1597, 1531, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1532, 337, 338, 339, 336, 340,
	1533, 341, 0, 342, 343, 344, 345, 346, 347, 1534,
	348, 349, 350, 1296, 351, 352, 353, 1535, 1536, 1538,
	1537, 1539, 1540, 1541, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 1542, 364, 360, 362, 1543, 365,
	363, 366, 1544, 367, 368, 369, 1545, 1546, 370, 371,
	372, 1547, 373, 374, 375, 1548, 376, 377, 378, 1549,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 1550, 294, 1551,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 1552, 397, 398, 399, 1553, 400, 401, 1554,
	1297, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1555, 414, 707, 1556, 708,
	415, 1557, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 1299, 423, 424, 1558, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1559,
	1298, 512, 433, 712, 713, 1560, 714, 1561, 434, 435,
	1300, 715, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1562, 446, 448,
	447, 1563, 449, 716, 1303, 450, 451, 1304, 1564, 452,
	453, 454, 455, 456, 457, 460, 1565, 1566, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1567,
	296, 1307, 506, 507, 508, 509, 1568, 717, 510, 718,
	513, 514, 1569, 0, 515, 0, 516, 1570, 1571, 518,
	519, 520, 1572, 1573, 521, 522, 719, 1308, 523, 1309,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1574, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 1575,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 1576, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 1577, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	1578, 606, 607, 605, 608, 609, 610, 1579, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 1580, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 1581, 641, 642, 0, 637,
	628, 1582, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 1583, 651, 730, 731, 732, 733, 1584, 662, 1585,
	652, 654, 655, 656, 734, 657, 735, 1586, 658, 659,
	660, 661, 653, 663, 664, 1587, 1588, 665, 666, 668,
	670, 671, 667, 669, 672, 1589, 673, 1590, 0, 674,
	675, 676, 736, 737, 738, 1591, 678, 677, 679, 680,
	681, 739, 682, 683, 1592, 1593, 1594, 1595, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4693, 297,
	298, 300, 299, 301, 302, 303, 304, 1517, 305, 306,
	1518, 1519, 1520, 0, 1521, 689, 1522, 1523, 1524, 307,
	1525, 308, 309, 1295, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 1526, 694,
	319, 320, 321, 322, 323, 324, 1527, 1528, 0, 325,
	695, 696, 697, 1529, 326, 327, 698, 1530, 1597, 1531,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1532,
	337, 338, 339, 336, 340, 1533, 341, 0, 342, 343,
	344, 345, 346, 347, 1534, 348, 349, 350, 1296, 351,
	352, 353, 1535, 1536, 1538, 1537, 1539, 1540, 1541, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 1542,
	364, 360, 362, 1543, 365, 363, 366, 1544, 367, 368,
	369, 1545, 1546, 370, 371, 372, 1547, 373, 374, 375,
	1548, 376, 377, 378, 1549, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 1550, 294, 1551, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 1552, 397, 398,
	399, 1553, 400, 401, 1554, 1297, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1555, 414, 707, 1556, 708, 415, 1557, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1299, 423,
	424, 1558, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1559, 1298, 512, 433, 712, 713,
	1560, 714, 1561, 434, 435, 1300, 715, 1301, 436, 437,
	438, 1302, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1562, 446, 448, 447, 1563, 449, 716, 1303,
	450, 451, 1304, 1564, 452, 453, 454, 455, 456, 457,
	460, 1565, 1566, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1305, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1306, 504, 492, 1567, 296, 1307, 506, 507, 508,
	509, 1568, 717, 510, 718, 513, 514, 1569, 0, 515,
	0, 516, 1570, 1571, 518, 519, 520, 1572, 1573, 521,
	522, 719, 1308, 523, 1309, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1574, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 1575, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 1576, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 1577,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 1578, 606, 607, 605, 608,
	609, 610, 1579, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	1580, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	1581, 641, 642, 0, 637, 628, 1582, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 1583, 651, 730, 731,
	732, 733, 1584, 662, 1585, 652, 654, 655, 656, 734,
	657, 735, 1586, 658, 659, 660, 661, 653, 663, 664,
	1587, 1588, 665, 666, 668, 670, 671, 667, 669, 672,
	1589, 673, 1590, 0, 674, 675, 676, 736, 737, 738,
	1591, 678, 677, 679, 680, 681, 739, 682, 683, 1592,
	1593, 1594, 1595, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4558, 297, 298, 300, 299, 301, 302,
	303, 304, 1517, 305, 306, 1518, 1519, 1520, 0, 1521,
	689, 1522, 1523, 1524, 307, 1525, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 1526, 694, 319, 320, 321, 322, 323,
	324, 1527, 1528, 0, 325, 695, 696, 697, 1529, 326,
	327, 698, 1530, 1597, 1531, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1532, 337, 338, 339, 336, 340,
	1533, 341, 0, 342, 343, 344, 345, 346, 347, 1534,
	348, 349, 350, 1296, 351, 352, 353, 1535, 1536, 1538,
	1537, 1539, 1540, 1541, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 1542, 364, 360, 362, 1543, 365,
	363, 366, 1544, 367, 368, 369, 1545, 1546, 370, 371,
	372, 1547, 373, 374, 375, 1548, 376, 377, 378, 1549,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 1550, 294, 1551,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 1552, 397, 398, 399, 1553, 400, 401, 1554,
	1297, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1555, 414, 707, 1556, 708,
	415, 1557, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 1299, 423, 424, 1558, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1559,
	1298, 512, 433, 712, 713, 1560, 714, 1561, 434, 435,
	1300, 715, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1562, 446, 448,
	447, 1563, 449, 716, 1303, 450, 451, 1304, 1564, 452,
	453, 454, 455, 456, 457, 460, 1565, 1566, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1567,
	296, 1307, 506, 507, 508, 509, 1568, 717, 510, 718,
	513, 514, 1569, 0, 515, 0, 516, 1570, 1571, 518,
	519, 520, 1572, 1573, 521, 522, 719, 1308, 523, 1309,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1574, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 1575,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 1576, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 1577, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	1578, 606, 607, 605, 608, 609, 610, 1579, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 1580, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 1581, 641, 642, 0, 637,
	628, 1582, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 1583, 651, 730, 731, 732, 733, 1584, 662, 1585,
	652, 654, 655, 656, 734, 657, 735, 1586, 658, 659,
	660, 661, 653, 663, 664, 1587, 1588, 665, 666, 668,
	670, 671, 667, 669, 672, 1589, 673, 1590, 0, 674,
	675, 676, 736, 737, 738, 1591, 678, 677, 679, 680,
	681, 739, 682, 683, 1592, 1593, 1594, 1595, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4376, 297,
	298, 300, 299, 301, 302, 303, 304, 1517, 305, 306,
	1518, 1519, 1520, 0, 1521, 689, 1522, 1523, 1524, 307,
	1525, 308, 309, 1295, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 1526, 694,
	319, 320, 321, 322, 323, 324, 1527, 1528, 0, 325,
	695, 696, 697, 1529, 326, 327, 698, 1530, 1597, 1531,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1532,
	337, 338, 339, 336, 340, 1533, 341, 0, 342, 343,
	344, 345, 346, 347, 1534, 348, 349, 350, 1296, 351,
	352, 353, 1535, 1536, 1538, 1537, 1539, 1540, 1541, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 1542,
	364, 360, 362, 1543, 365, 363, 366, 1544, 367, 368,
	369, 1545, 1546, 370, 371, 372, 1547, 373, 374, 375,
	1548, 376, 377, 378, 1549, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 1550, 294, 1551, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 1552, 397, 398,
	399, 1553, 400, 401, 1554, 1297, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1555, 414, 707, 1556, 708, 415, 1557, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1299, 423,
	424, 1558, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1559, 1298, 512, 433, 712, 713,
	1560, 714, 1561, 434, 435, 1300, 715, 1301, 436, 437,
	438, 1302, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1562, 446, 448, 447, 1563, 449, 716, 1303,
	450, 451, 1304, 1564, 452, 453, 454, 455, 456, 457,
	460, 1565, 1566, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1305, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1306, 504, 492, 1567, 296, 1307, 506, 507, 508,
	509, 1568, 717, 510, 718, 513, 514, 1569, 0, 515,
	0, 516, 1570, 1571, 518, 519, 520, 1572, 1573, 521,
	522, 719, 1308, 523, 1309, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1574, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 1575, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 1576, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 1577,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 1578, 606, 607, 605, 608,
	609, 610, 1579, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	1580, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	1581, 641, 642, 0, 637, 628, 1582, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 1583, 651, 730, 731,
	732, 733, 1584, 662, 1585, 652, 654, 655, 656, 734,
	657, 735, 1586, 658, 659, 660, 661, 653, 663, 664,
	1587, 1588, 665, 666, 668, 670, 671, 667, 669, 672,
	1589, 673, 1590, 0, 674, 675, 676, 736, 737, 738,
	1591, 678, 677, 679, 680, 681, 739, 682, 683, 1592,
	1593, 1594, 1595, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4031, 297, 298, 300, 299, 301, 302,
	303, 304, 1517, 305, 306, 1518, 1519, 1520, 0, 1521,
	689, 1522, 1523, 1524, 307, 1525, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 1526, 694, 319, 320, 321, 322, 323,
	324, 1527, 1528, 0, 325, 695, 696, 697, 1529, 326,
	327, 698, 1530, 1597, 1531, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1532, 337, 338, 339, 336, 340,
	1533, 341, 0, 342, 343, 344, 345, 346, 347, 1534,
	348, 349, 350, 1296, 351, 352, 353, 1535, 1536, 1538,
	1537, 1539, 1540, 1541, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 1542, 364, 360, 362, 1543, 365,
	363, 366, 1544, 367, 368, 369, 1545, 1546, 370, 371,
	372, 1547, 373, 374, 375, 1548, 376, 377, 378, 1549,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 1550, 294, 1551,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 1552, 397, 398, 399, 1553, 400, 401, 1554,
	1297, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1555, 414, 707, 1556, 708,
	415, 1557, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 1299, 423, 424, 1558, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1559,
	1298, 512, 433, 712, 713, 1560, 714, 1561, 434, 435,
	1300, 715, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1562, 446, 448,
	447, 1563, 449, 716, 1303, 450, 451, 1304, 1564, 452,
	453, 454, 455, 456, 457, 460, 1565, 1566, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1567,
	296, 1307, 506, 507, 508, 509, 1568, 717, 510, 718,
	513, 514, 1569, 0, 515, 0, 516, 1570, 1571, 518,
	519, 520, 1572, 1573, 521, 522, 719, 1308, 523, 1309,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1574, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 1575,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 1576, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 1577, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	1578, 606, 607, 605, 608, 609, 610, 1579, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 1580, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 1581, 641, 642, 0, 637,
	628, 1582, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 1583, 651, 730, 731, 732, 733, 1584, 662, 1585,
	652, 654, 655, 656, 734, 657, 735, 1586, 658, 659,
	660, 661, 653, 663, 664, 1587, 1588, 665, 666, 668,
	670, 671, 667, 669, 672, 1589, 673, 1590, 0, 674,
	675, 676, 736, 737, 738, 1591, 678, 677, 679, 680,
	681, 739, 682, 683, 1592, 1593, 1594, 1595, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3842, 297,
	298, 300, 299, 301, 302, 303, 304, 1517, 305, 306,
	1518, 1519, 1520, 0, 1521, 689, 1522, 1523, 1524, 307,
	1525, 308, 309, 1295, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 1526, 694,
	319, 320, 321, 322, 323, 324, 1527, 1528, 0, 325,
	695, 696, 697, 1529, 326, 327, 698, 1530, 1597, 1531,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1532,
	337, 338, 339, 336, 340, 1533, 341, 0, 342, 343,
	344, 345, 346, 347, 1534, 348, 349, 350, 1296, 351,
	352, 353, 1535, 1536, 1538, 1537, 1539, 1540, 1541, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 1542,
	364, 360, 362, 1543, 365, 363, 366, 1544, 367, 368,
	369, 1545, 1546, 370, 371, 372, 1547, 373, 374, 375,
	1548, 376, 377, 378, 1549, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 1550, 294, 1551, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 1552, 397, 398,
	399, 1553, 400, 401, 1554, 1297, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1555, 414, 707, 1556, 708, 415, 1557, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1299, 423,
	424, 1558, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1559, 1298, 512, 433, 712, 713,
	1560, 714, 1561, 434, 435, 1300, 715, 1301, 436, 437,
	438, 1302, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1562, 446, 448, 447, 1563, 449, 716, 1303,
	450, 451, 1304, 1564, 452, 453, 454, 455, 456, 457,
	460, 1565, 1566, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1305, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1306, 504, 492, 1567, 296, 1307, 506, 507, 508,
	509, 1568, 717, 510, 718, 513, 514, 1569, 0, 515,
	0, 516, 1570, 1571, 518, 519, 520, 1572, 1573, 521,
	522, 719, 1308, 523, 1309, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1574, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 1575, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 1576, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 1577,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 1578, 606, 607, 605, 608,
	609, 610, 1579, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	1580, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	1581, 641, 642, 0, 637, 628, 1582, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 1583, 651, 730, 731,
	732, 733, 1584, 662, 1585, 652, 654, 655, 656, 734,
	657, 735, 1586, 658, 659, 660, 661, 653, 663, 664,
	1587, 1588, 665, 666, 668, 670, 671, 667, 669, 672,
	1589, 673, 1590, 0, 674, 675, 676, 736, 737, 738,
	1591, 678, 677, 679, 680, 681, 739, 682, 683, 1592,
	1593, 1594, 1595, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2814, 297, 298, 300, 299, 301, 302,
	303, 304, 1517, 305, 306, 1518, 1519, 1520, 0, 1521,
	689, 1522, 1523, 1524, 307, 1525, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 1526, 694, 319, 320, 321, 322, 323,
	324, 1527, 1528, 0, 325, 695, 696, 697, 1529, 326,
	327, 698, 1530, 1597, 1531, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1532, 337, 338, 339, 336, 340,
	1533, 341, 0, 342, 343, 344, 345, 346, 347, 1534,
	348, 349, 350, 1296, 351, 352, 353, 1535, 1536, 1538,
	1537, 1539, 1540, 1541, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 1542, 364, 360, 362, 1543, 365,
	363, 366, 1544, 367, 368, 369, 1545, 1546, 370, 371,
	372, 1547, 373, 374, 375, 1548, 376, 377, 378, 1549,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 1550, 294, 1551,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 1552, 397, 398, 399, 1553, 400, 401, 1554,
	1297, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1555, 414, 707, 1556, 708,
	415, 1557, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 1299, 423, 424, 1558, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1559,
	1298, 512, 433, 712, 713, 1560, 714, 1561, 434, 435,
	1300, 715, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1562, 446, 448,
	447, 1563, 449, 716, 1303, 450, 451, 1304, 1564, 452,
	453, 454, 455, 456, 457, 460, 1565, 1566, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1567,
	296, 1307, 506, 507, 508, 509, 1568, 717, 510, 718,
	513, 514, 1569, 0, 515, 0, 516, 1570, 1571, 518,
	519, 520, 1572, 1573, 521, 522, 719, 1308, 523, 1309,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1574, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 1575,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 1576, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 1577, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	1578, 606, 607, 605, 608, 609, 610, 1579, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 1580, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 1581, 641, 642, 0, 637,
	628, 1582, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 1583, 651, 730, 731, 732, 733, 1584, 662, 1585,
	652, 654, 655, 656, 734, 657, 735, 1586, 658, 659,
	660, 661, 653, 663, 664, 1587, 1588, 665, 666, 668,
	670, 671, 667, 669, 672, 1589, 673, 1590, 0, 674,
	675, 676, 736, 737, 738, 1591, 678, 677, 679, 680,
	681, 739, 682, 683, 1592, 1593, 1594, 1595, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	1508, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2432, 297,
	298, 300, 299, 301, 302, 303, 304, 1517, 305, 306,
	1518, 1519, 1520, 0, 1521, 689, 1522, 1523, 1524, 307,
	1525, 308, 309, 1295, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 1526, 694,
	319, 320, 321, 322, 323, 324, 1527, 1528, 0, 325,
	695, 696, 697, 1529, 326, 327, 698, 1530, 1597, 1531,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1532,
	337, 338, 339, 336, 340, 1533, 341, 0, 342, 343,
	344, 345, 346, 347, 1534, 348, 349, 350, 1296, 351,
	352, 353, 1535, 1536, 1538, 1537, 1539, 1540, 1541, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 1542,
	364, 360, 362, 1543, 365, 363, 366, 1544, 367, 368,
	369, 1545, 1546, 370, 371, 372, 1547, 373, 374, 375,
	1548, 376, 377, 378, 1549, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 1550, 294, 1551, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 1552, 397, 398,
	399, 1553, 400, 401, 1554, 1297, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1555, 414, 707, 1556, 708, 415, 1557, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1299, 423,
	424, 1558, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1559, 1298, 512, 433, 712, 713,
	1560, 714, 1561, 434, 435, 1300, 715, 1301, 436, 437,
	438, 1302, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1562, 446, 448, 447, 1563, 449, 716, 1303,
	450, 451, 1304, 1564, 452, 453, 454, 455, 456, 457,
	460, 1565, 1566, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1305, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1306, 504, 492, 1567, 296, 1307, 506, 507, 508,
	509, 1568, 717, 510, 718, 513, 514, 1569, 0, 515,
	0, 516, 1570, 1571, 518, 519, 520, 1572, 1573, 521,
	522, 719, 1308, 523, 1309, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1574, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 1575, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 1576, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 1577,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 1578, 606, 607, 605, 608,
	609, 610, 1579, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	1580, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	1581, 641, 642, 0, 637, 628, 1582, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 1583, 651, 730, 731,
	732, 733, 1584, 662, 1585, 652, 654, 655, 656, 734,
	657, 735, 1586, 658, 659, 660, 661, 653, 663, 664,
	1587, 1588, 665, 666, 668, 670, 671, 667, 669, 672,
	1589, 673, 1590, 0, 674, 675, 676, 736, 737, 738,
	1591, 678, 677, 679, 680, 681, 739, 682, 683, 1592,
	1593, 1594, 1595, 684, 685, 740, 686, 687, 688, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 1517, 305, 306, 1518, 1519, 1520,
	0, 1521, 689, 1522, 1523, 1524, 307, 1525, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 1526, 694, 319, 320, 321,
	322, 323, 324, 1527, 1528, 0, 325, 695, 696, 697,
	1529, 326, 327, 698, 1530, 1597, 1531, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1532, 337, 338, 339,
	336, 340, 1533, 341, 0, 342, 343, 344, 345, 346,
	347, 1534, 348, 349, 350, 1296, 351, 352, 353, 1535,
	1536, 1538, 1537, 1539, 1540, 1541, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 1542, 364, 360, 362,
	1543, 365, 363, 366, 1544, 367, 368, 369, 1545, 1546,
	370, 371, 372, 1547, 373, 374, 375, 1548, 376, 377,
	378, 1549, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 1550,
	294, 1551, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 1552, 397, 398, 399, 1553, 400,
	401, 1554, 1297, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1555, 414, 707,
	1556, 708, 415, 1557, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1299, 423, 424, 1558, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1559, 1298, 512, 433, 712, 713, 1560, 714, 1561,
	434, 435, 1300, 715, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1562,
	446, 448, 447, 1563, 449, 716, 1303, 450, 451, 1304,
	1564, 452, 453, 454, 455, 456, 457, 460, 1565, 1566,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1567, 296, 1307, 506, 507, 508, 509, 1568, 717,
	510, 718, 513, 514, 1569, 0, 515, 0, 516, 1570,
	1571, 518, 519, 520, 1572, 1573, 521, 522, 719, 1308,
	523, 1309, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1574, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 1575, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	1576, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 1577, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 1578, 606, 607, 605, 608, 609, 610, 1579,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 1580, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 1581, 641, 642,
	0, 637, 628, 1582, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 1583, 651, 730, 731, 732, 733, 1584,
	662, 1585, 652, 654, 655, 656, 734, 657, 735, 1586,
	658, 659, 660, 661, 653, 663, 664, 1587, 1588, 665,
	666, 668, 670, 671, 667, 669, 672, 1589, 673, 1590,
	0, 674, 675, 676, 736, 737, 738, 1591, 678, 677,
	679, 680, 681, 739, 682, 683, 1592, 1593, 1594, 1595,
	684, 685, 740, 686, 687, 688, 2789, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 2786, 305, 306, 0, 0, 0, 0,
	0, 1255, 1219, 0, 0, 307, 0, 308, 309, 1295,
	310, 311, 312, 313, 314, 315, 316, 690, 1268, 0,
	317, 1275, 318, 1274, 0, 1285, 319, 320, 321, 322,
	323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0,
	326, 327, 1261, 0, 1242, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1296, 351, 352, 353, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357, 358,
	1278, 359, 361, 1272, 1271, 1191, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 2787, 0, 370,
	1263, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1197, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1286, 1287, 392, 1210, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1270, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1297, 402, 403, 404, 1283, 1284, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1293, 0,
	1220, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1256, 1257, 1260, 511, 1299, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1298, 512, 433, 1265, 1266, 0, 1226, 0, 434,
	435, 1300, 1258, 1301, 436, 437, 438, 1302, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1294, 1303, 450, 451, 1304, 0,
	452, 453, 454, 455, 456, 457, 460, 1249, 1248, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1305,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1306, 504, 492,
	1188, 296, 1307, 506, 507, 508, 509, 1211, 1259, 510,
	1273, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1308, 523,
	1309, 1288, 524, 525, 1198, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1289, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1269, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 1199, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1252, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 1267, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1314, 631, 632,
	633, 634, 1290, 638, 639, 640, 0, 641, 642, 1185,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1279, 1280, 1281, 1282, 0, 662,
	0, 652, 654, 655, 656, 1291, 657, 1292, 1209, 658,
	659, 660, 661, 653, 663, 664, 0, 1192, 665, 666,
	668, 670, 671, 667, 669, 672, 1253, 673, 0, 0,
	674, 675, 676, 736, 1276, 1313, 2785, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1184, 0, 0, 0, 0, 0, 0, 1182, 1183, 2788,
	0, 0, 0, 0, 0, 0, 0, 1215, 2784, 0,
	1173, 1213, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1255, 1219, 0, 0, 307,
	0, 308, 309, 1295, 310, 311, 312, 313, 314, 315,
	316, 690, 1268, 0, 317, 1275, 318, 1274, 0, 1285,
	319, 320, 321, 322, 323, 324, 1221, 1254, 1186, 325,
	1315, 1316, 697, 0, 326, 327, 1261, 0, 1242, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1296, 351,
	352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354,
	355, 356, 357, 358, 1278, 359, 361, 1272, 1271, 1191,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1263, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1197, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1286,
	1287, 392, 1210, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1270, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1297, 402, 403, 404, 1283,
	1284, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1293, 0, 1220, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1256, 1257, 1260, 511, 1299, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1298, 512, 433, 1265, 1266,
	0, 1226, 0, 434, 435, 1300, 1258, 1301, 436, 437,
	438, 1302, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1294, 1303,
	450, 451, 1304, 0, 452, 453, 454, 455, 456, 457,
	460, 1249, 1248, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1305, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1306, 504, 492, 1188, 296, 1307, 506, 507, 508,
	509, 1211, 1259, 510, 1273, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1308, 523, 1309, 1288, 524, 525, 1198, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1289,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1269, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 1199,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 252, 606, 607, 605, 608,
	609, 610, 1252, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 1267, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1314, 631, 632, 633, 634, 1290, 638, 639, 640,
	0, 641, 642, 1185, 637, 628, 254, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1279, 1280,
	1281, 1282, 0, 662, 0, 652, 654, 655, 656, 1291,
	657, 1292, 1209, 658, 659, 660, 661, 653, 663, 664,
	0, 1192, 665, 666, 668, 670, 671, 667, 669, 672,
	1253, 673, 0, 0, 674, 675, 676, 1756, 1276, 1313,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 246, 684, 685, 740, 686, 687, 688, 1189,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1184, 0, 0, 0, 0, 0,
	0, 1182, 1183, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 2026, 2024, 0, 0, 1213, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 252, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 254, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 1756, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 246, 684, 685, 740, 686, 687, 688,
	1189, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 1231, 1203, 1204, 1205, 1201, 1202,
	1214, 0, 2026, 3460, 0, 0, 1213, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1255, 1219, 0,
	0, 307, 0, 308, 309, 1295, 310, 311, 312, 313,
	314, 315, 316, 690, 1268, 0, 317, 1275, 318, 1274,
	0, 1285, 319, 320, 321, 322, 323, 324, 1221, 1254,
	1186, 325, 1315, 1316, 697, 0, 326, 327, 1261, 0,
	1242, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 354, 355, 356, 357, 358, 1278, 359, 361, 1272,
	1271, 1191, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1263, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1197,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1286, 1287, 392, 1210, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1270, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1297, 402, 403,
	404, 1283, 1284, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1293, 0, 1220, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1256, 1257, 1260, 511,
	1299, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1298, 512, 433,
	1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301,
	436, 437, 438, 1302, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1294, 1303, 450, 451, 1304, 0, 452, 453, 454, 455,
	456, 457, 460, 1249, 1248, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1305, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1306, 504, 492, 1188, 296, 1307, 506,
	507, 508, 509, 1211, 1259, 510, 1273, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1308, 523, 1309, 1288, 524, 525,
	1198, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1289, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1269,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 1199, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 252, 606, 607,
	605, 608, 609, 610, 1252, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 1267,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1314, 631, 632, 633, 634, 1290, 638,
	639, 640, 0, 641, 642, 1185, 637, 628, 254, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1279, 1280, 1281, 1282, 0, 662, 0, 652, 654, 655,
	656, 1291, 657, 1292, 1209, 658, 659, 660, 661, 653,
	663, 664, 0, 1192, 665, 666, 668, 670, 671, 667,
	669, 672, 1253, 673, 0, 0, 674, 675, 676, 1756,
	1276, 1313, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 246, 684, 685, 740, 686, 687,
	688, 1189, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1184, 0, 0, 0,
	0, 0, 0, 1182, 1183, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 2026, 2024, 0, 0, 1213, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 2919, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 2924, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 2920,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 2921, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 2834, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 1215, 2832,
	0, 2831, 1213, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 2829, 0, 2828, 1213, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 1191, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1188,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 2826, 0, 2825,
	1213, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	1215, 2823, 0, 1858, 1213, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1857, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 1178, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 1193,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 0, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	297, 298, 300, 299, 301, 302, 303, 304, 1215, 305,
	306, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 5070, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 1193, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 0, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 297, 298, 300, 299, 301, 302,
	303, 304, 1215, 305, 306, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 1191, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 2664, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1188,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 2663,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 0,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 297, 298,
	300, 299, 301, 302, 303, 304, 1215, 305, 306, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 4790, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 1193, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 0, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 297, 298, 300, 299, 301, 302, 303, 304,
	1215, 305, 306, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 1193, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 0, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 4340, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	2096, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 1215, 0,
	0, 0, 1213, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 4009,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 0, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 297, 298, 300, 299, 301, 302, 303, 304,
	1215, 305, 306, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 2096, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 1215, 0, 0, 0, 1213, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 1191, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 2924,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1188,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 0,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 297, 298,
	300, 299, 301, 302, 303, 304, 1215, 305, 306, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	1215, 2024, 0, 2929, 1213, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 2927, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 2915, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	297, 298, 300, 299, 301, 302, 303, 304, 1215, 305,
	306, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 2904, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 297, 298, 300, 299, 301, 302,
	303, 304, 1215, 305, 306, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 1191, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1188,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 2902,
	0, 2893, 2900, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 297, 298,
	300, 299, 301, 302, 303, 304, 1215, 305, 306, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 2896, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 2897, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 2898, 470, 2895, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 2899, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 2894, 688, 1189, 0,
	0, 0, 0, 2890, 0, 2893, 2900, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 297, 298, 300, 299, 301, 302, 303, 304,
	1215, 305, 306, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 2896, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 2897, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 2898, 470, 2895,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 2899, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	2894, 688, 1189, 0, 0, 0, 0, 0, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	0, 0, 0, 0, 0, 0, 2032, 0, 1215, 0,
	0, 0, 1213, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 2643, 305,
	306, 0, 0, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 2604, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 297, 298, 300, 299, 301, 302,
	303, 304, 1215, 305, 306, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 1191, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1188,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 2575,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 297, 298,
	300, 299, 301, 302, 303, 304, 1215, 305, 306, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 1863, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 297, 298, 300, 299, 301, 302, 303, 304,
	1215, 305, 306, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 1791, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 1786, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	297, 298, 300, 299, 301, 302, 303, 304, 1215, 305,
	306, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 1772, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 297, 298, 300, 299, 301, 302,
	303, 304, 1215, 305, 306, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 1191, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1188,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 1767,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 297, 298,
	300, 299, 301, 302, 303, 304, 1215, 305, 306, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 1677, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 297, 298, 300, 299, 301, 302, 303, 304,
	1215, 305, 306, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1676, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 1671, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1670, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 1664, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	297, 298, 300, 299, 301, 302, 303, 304, 1215, 305,
	306, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 1626, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 297, 298, 300, 299, 301, 302,
	303, 304, 1215, 305, 306, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 1191, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1188,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 1608,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 297, 298,
	300, 299, 301, 302, 303, 304, 1215, 305, 306, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 1612, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 1613, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 1611, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 1440, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 297, 298, 300, 299, 301, 302, 303, 304,
	1215, 305, 306, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 0, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 0, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	297, 298, 300, 299, 301, 302, 303, 304, 1215, 305,
	306, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 5120, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 5119,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 0, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 297, 298, 300, 299, 301, 302,
	303, 304, 1215, 305, 306, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 5118, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 1186, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 5120, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 1191, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 1188,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 5119, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 0,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 297, 298,
	300, 299, 301, 302, 303, 304, 1215, 305, 306, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 1186, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 4712,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 1191, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 4713, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 1188, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 1198, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 4711, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 0, 0, 1231, 1203, 1204, 1205, 3426,
	3427, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 297, 298, 300, 299, 301, 302, 303, 304,
	1215, 305, 306, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 1307,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 0, 0, 1231,
	1203, 1204, 1205, 3424, 3425, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 1221, 1254, 1186, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 1191, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1197, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 1188, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 1198, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 0, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	297, 298, 300, 299, 301, 302, 303, 304, 1215, 305,
	306, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 1268, 0, 317, 1275, 318, 1274, 0,
	1285, 319, 320, 321, 322, 323, 324, 1221, 1254, 1186,
	325, 1315, 1316, 697, 0, 326, 327, 1261, 0, 1242,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	354, 355, 356, 357, 358, 1278, 359, 361, 1272, 1271,
	1191, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1263, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1197, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1286, 1287, 392, 1210, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1270, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	1283, 1284, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1293, 0, 1220, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1256, 1257, 1260, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1298, 512, 433, 1265,
	1266, 0, 1226, 0, 434, 435, 1300, 1258, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1294,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 1249, 1248, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 1188, 296, 1307, 506, 507,
	508, 509, 1211, 1259, 510, 1273, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 1288, 524, 525, 1198,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1289, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1269, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 0, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 2651, 2652, 297, 298, 300, 299, 301, 302,
	303, 304, 1215, 305, 306, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 1268, 0, 317,
	1275, 318, 1274, 0, 1285, 319, 320, 321, 322, 323,
	324, 1221, 1254, 0, 325, 1315, 1316, 697, 0, 326,
	327, 1261, 0, 1242, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 354, 355, 356, 357, 358, 1278,
	359, 361, 1272, 1271, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1263,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1197, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1286, 1287, 392, 1210, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1270, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 1283, 1284, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1293, 0, 1220,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1256,
	1257, 1260, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1298, 512, 433, 1265, 1266, 0, 1226, 0, 434, 435,
	1300, 1258, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1294, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 1249, 1248, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 0,
	296, 1307, 506, 507, 508, 509, 1211, 1259, 510, 1273,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	1288, 524, 525, 1198, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1289, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1269, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 2912,
	0, 0, 0, 0, 0, 0, 2910, 2911, 297, 298,
	300, 299, 301, 302, 303, 304, 1215, 305, 306, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 1268, 0, 317, 1275, 318, 1274, 0, 1285, 319,
	320, 321, 322, 323, 324, 1221, 1254, 0, 325, 1315,
	1316, 697, 0, 326, 327, 1261, 0, 1242, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355,
	356, 357, 358, 1278, 359, 361, 1272, 1271, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1263, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1197, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1286, 1287,
	392, 1210, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1270, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 1283, 1284,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1293, 0, 1220, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1256, 1257, 1260, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1298, 512, 433, 1265, 1266, 0,
	1226, 0, 434, 435, 1300, 1258, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1294, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	1249, 1248, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 0, 296, 1307, 506, 507, 508, 509,
	1211, 1259, 510, 1273, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 1288, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1289, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1269, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 3419, 3420,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	2275, 2276, 297, 298, 300, 299, 301, 302, 303, 304,
	1215, 305, 306, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 0, 1268, 0, 317, 1275, 318,
	1274, 0, 1285, 319, 320, 321, 322, 323, 324, 1221,
	1254, 1186, 325, 1315, 1316, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 5120, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 1278, 359, 361,
	1272, 1271, 1191, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1263, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1197, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 1210, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1270, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 1283, 1284, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 1220, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 1265, 1266, 0, 1226, 0, 434, 435, 0, 1258,
	0, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 1188, 296, 0,
	506, 507, 508, 509, 1211, 1259, 510, 1273, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 1198, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1269, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 5119, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 2931, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 0, 0, 0,
	0, 0, 0, 0, 1182, 1183, 297, 298, 300, 299,
	301, 302, 303, 304, 1215, 305, 306, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 1268,
	0, 317, 1275, 318, 1274, 0, 1285, 319, 320, 321,
	322, 323, 324, 0, 1254, 0, 325, 1315, 1316, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 1278, 359, 361, 1272, 1271, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1263, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 1210,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1270,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 1283, 1284, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 1220, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 1265, 1266, 0, 1226, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 0, 296, 1307, 506, 507, 508, 509, 1211, 1259,
	510, 1273, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1269, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 1638, 0,
	1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 1215, 0,
	0, 0, 1213, 1255, 1219, 0, 0, 307, 0, 308,
	309, 1295, 310, 311, 312, 313, 314, 315, 316, 690,
	1268, 0, 317, 1275, 318, 1274, 0, 1285, 319, 320,
	321, 322, 323, 324, 0, 1254, 0, 325, 1315, 1316,
	697, 0, 326, 327, 1261, 0, 1242, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1296, 351, 352, 353,
	1245, 1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356,
	357, 358, 1278, 359, 361, 1272, 1271, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1263, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1286, 1287, 392,
	1210, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1270, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1297, 402, 403, 404, 1283, 1284, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1293, 0, 1220, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1256, 1257, 1260, 511, 1299, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1298, 512, 433, 1265, 1266, 0, 1226,
	0, 434, 435, 1300, 1258, 1301, 436, 437, 438, 1302,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1294, 1303, 450, 451,
	1304, 0, 452, 453, 454, 455, 456, 457, 460, 1249,
	1248, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1305, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1306,
	504, 492, 0, 296, 1307, 506, 507, 508, 509, 1211,
	1259, 510, 1273, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1308, 523, 1309, 1288, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1289, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1269, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 0, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 736, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1173, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 1215,
	0, 0, 1255, 1213, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 1254, 0, 325, 695, 696, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1340,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 0, 296, 1307, 506, 507, 508, 509, 0, 1259,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	1346, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 1348, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 252, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 254, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 1756, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 246,
	684, 685, 740, 686, 687, 688, 1354, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 1344, 0, 2120, 1255,
	0, 0, 0, 307, 0, 308, 309, 1295, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 1254, 0, 325, 695, 696, 697, 0, 326, 327,
	1261, 0, 1242, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251,
	1247, 1246, 1250, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1286, 1287, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1297,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1293, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1256, 1257,
	1260, 511, 1299, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1298,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 1300,
	1258, 1301, 436, 437, 438, 1302, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1340, 446, 448, 447,
	0, 449, 1294, 1303, 450, 451, 1304, 0, 452, 453,
	454, 455, 456, 457, 460, 1249, 1248, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1305, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1306, 504, 492, 0, 296,
	1307, 506, 507, 508, 509, 0, 1259, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 1346, 518, 519,
	520, 0, 0, 521, 522, 719, 1308, 523, 1309, 1288,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1289, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1310, 583, 584,
	585, 586, 587, 726, 1348, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 252,
	606, 607, 605, 608, 609, 610, 1252, 611, 612, 594,
	595, 613, 614, 1311, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	1290, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	254, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 1291, 657, 1292, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 1253, 673, 0, 0, 674, 675,
	676, 1756, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 246, 684, 685, 740,
	686, 687, 688, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3584, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 2120, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1255, 0, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 1254, 0, 325, 695, 696, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1340,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 0, 296, 1307, 506, 507, 508, 509, 0, 1259,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	1346, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 1348, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1336, 0, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 1344, 0, 1342, 0,
	0, 1255, 0, 0, 0, 307, 0, 308, 309, 1295,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 1254, 0, 325, 695, 696, 697, 0,
	326, 327, 1261, 0, 1242, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1296, 351, 352, 353, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1286, 1287, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1297, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1293, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1256, 1257, 1260, 511, 1299, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1298, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1300, 1258, 1301, 436, 437, 438, 1302, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1340, 446,
	448, 447, 0, 449, 1294, 1303, 450, 451, 1304, 0,
	452, 453, 454, 455, 456, 457, 460, 1249, 1248, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1305,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1306, 504, 492,
	0, 296, 1307, 506, 507, 508, 509, 0, 1259, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 1346,
	518, 519, 520, 0, 0, 521, 522, 719, 1308, 523,
	1309, 1288, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1289, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 726, 1348, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1252, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 1290, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 1291, 657, 1292, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 1253, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 1344, 0, 1342, 1255, 0,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	1254, 0, 325, 695, 696, 697, 0, 326, 327, 1261,
	0, 1242, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1286, 1287, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1293, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1256, 1257, 1260,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1298, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1300, 1258,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1340, 446, 448, 447, 0,
	449, 1294, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 1249, 1248, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 0, 296, 1307,
	506, 507, 508, 509, 0, 1259, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 1346, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 1288, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1289, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 1348, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 1344, 0, 1342, 1255, 0, 0, 0, 307,
	0, 308, 309, 1295, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 1254, 0, 325,
	695, 696, 697, 0, 326, 327, 1261, 0, 1242, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1296, 351,
	352, 353, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1286,
	1287, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1297, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1293, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1256, 1257, 1260, 511, 1299, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1298, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1300, 1258, 1301, 436, 437,
	438, 1302, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1294, 1303,
	450, 451, 1304, 0, 452, 453, 454, 455, 456, 457,
	460, 1249, 1248, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1305, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1306, 504, 492, 0, 296, 1307, 506, 507, 508,
	509, 0, 1259, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1308, 523, 1309, 1288, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1289,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1252, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 1290, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 1291,
	657, 1292, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	1253, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 4528, 1255, 0, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 1254, 0, 325, 695, 696, 697,
	0, 326, 327, 1261, 0, 1242, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1286, 1287, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1293,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1256, 1257, 1260, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1298, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1300, 1258, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1294, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 1249, 1248,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 0, 296, 1307, 506, 507, 508, 509, 0, 1259,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 1288, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1289, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 1348, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 291, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 2757, 2758, 2759,
	2776, 2777, 2778, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 2779, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 2016, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 2001, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 2769, 0, 337, 338, 339, 336, 340,
	0, 341, 2765, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	2770, 2771, 2772, 2773, 393, 394, 395, 704, 0, 0,
	2764, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 2774,
	2775, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 2767, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 2768, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 2000, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1173, 0, 1633, 2754, 2755, 2756, 2780,
	2766, 2760, 0, 2762, 2763, 2761, 2748, 2749, 2750, 2751,
	2752, 2753, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 1597, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1298, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1300, 715,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 0, 0, 1307,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 252, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 254,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	1756, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 246, 684, 685, 740, 686,
	687, 688, 0, 1753, 247, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 202, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 1295, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 1597, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1296, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1297, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1299, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1298, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1300, 715,
	1301, 436, 437, 438, 1302, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 1303, 450, 451, 1304, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1305, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1306, 504, 492, 0, 0, 1307,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1308, 523, 1309, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 252, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 254,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	1756, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 246, 684, 685, 740, 686,
	687, 688, 1633, 1632, 247, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 202, 689, 0, 0, 0, 307,
	0, 308, 309, 1295, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 1597, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1296, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1297, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1299, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1298, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1300, 715, 1301, 436, 437,
	438, 1302, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 1303,
	450, 451, 1304, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1305, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1306, 504, 492, 0, 0, 1307, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1308, 523, 1309, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1633,
	1632, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 1780, 689, 0, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 1597, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1298, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1300, 715, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 0, 0, 1307, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1633, 1632, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 3919, 689,
	0, 0, 0, 307, 0, 308, 309, 1295, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 1597, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1296, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1297,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 1299, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 1298,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 1300,
	715, 1301, 436, 437, 438, 1302, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 1303, 450, 451, 1304, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1305, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1306, 504, 492, 0, 0,
	1307, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1308, 523, 1309, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 2514, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1310, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 1311, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1633, 2424, 0, 0, 0, 0, 2425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 1780, 689, 0, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 1597,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1298, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 1300, 715, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 2423, 448, 447, 0, 449, 716,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 0, 0, 1307, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1633, 1632, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 1780, 689, 0, 0, 0, 307, 0, 308,
	309, 1295, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 1597, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1296, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1297, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 1299, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1298, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 1300, 715, 1301, 436, 437, 438, 1302,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 1303, 450, 451,
	1304, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1305, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1306,
	504, 492, 0, 0, 1307, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1308, 523, 1309, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1173, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 1762,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 252, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 254, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 1756, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 291, 0, 246,
	684, 685, 740, 686, 687, 688, 0, 0, 247, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 202, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 291, 3192, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 2134, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 291, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 5287, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	3870, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 1750,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 291,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	3313, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 291, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 4034, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 2501, 1255, 0, 0,
	0, 307, 0, 308, 309, 1295, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 1254,
	0, 325, 695, 696, 697, 0, 326, 327, 1261, 0,
	1242, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1296, 351, 352, 353, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1286, 1287, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1297, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1293, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1256, 1257, 1260, 511,
	1299, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1298, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 1300, 1258, 1301,
	436, 437, 438, 1302, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1294, 1303, 450, 451, 1304, 0, 452, 453, 454, 455,
	456, 457, 460, 1249, 1248, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1305, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1306, 504, 492, 0, 296, 1307, 506,
	507, 508, 509, 0, 1259, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1308, 523, 1309, 1288, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1289, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1252, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 1290, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 1291, 657, 1292, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 1253, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 995, 0, 895, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 903, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 992, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 899, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 994, 0, 637, 628, 901, 643, 644,
	645, 646, 647, 902, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	2177, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 906, 0, 0, 307, 0, 308,
	309, 1295, 310, 311, 312, 313, 314, 315, 316, 0,
	2183, 0, 317, 2173, 318, 2189, 0, 2196, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 2199, 2200,
	0, 0, 326, 327, 0, 0, 1597, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1296, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 1278, 359, 361, 2187, 2186, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1263, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 0, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	2185, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1297, 402, 403, 404, 2194, 2195, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 0, 0, 0, 511, 1299, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1298, 512, 433, 2180, 2181, 0, 2176,
	0, 434, 435, 1300, 0, 1301, 436, 437, 438, 1302,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 0, 1303, 450, 451,
	1304, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1305, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1306,
	504, 492, 0, 0, 1307, 506, 507, 508, 509, 0,
	0, 510, 2188, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 0,
	1308, 523, 1309, 0, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 2170,
	537, 538, 539, 2171, 540, 541, 542, 0, 543, 0,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 2184, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 0, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 2182, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 2198,
	631, 632, 633, 634, 0, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 2190, 2191, 2192, 2193,
	0, 662, 0, 652, 654, 655, 656, 0, 657, 0,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 0, 2174, 2197, 0, 678,
	677, 679, 680, 681, 0, 682, 683, 0, 0, 0,
	0, 684, 685, 0, 686, 687, 688, 895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 4163, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 2164, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 903, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 4162, 601, 602, 603, 604,
	0, 899, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 901, 643, 644, 645, 646, 647, 902, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	4161, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 895, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 2204,
	305, 306, 0, 0, 0, 0, 0, 689, 906, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 903, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 2203, 601, 602, 603, 604, 0, 899, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 901, 643,
	644, 645, 646, 647, 902, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 2202, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 895, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 2156, 305, 306, 0,
	0, 0, 0, 0, 689, 906, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 903, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 2155,
	601, 602, 603, 604, 0, 899, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 901, 643, 644, 645, 646,
	647, 902, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 2154, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 893, 0,
	895, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 906, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	903, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 899, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 901, 643, 644, 645, 646, 647,
	902, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 895, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 906, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 903, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 899, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 901, 643, 644, 645, 646, 647, 902, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 895, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 906, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 903, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 2554, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 2555, 601, 602, 603, 604, 0, 899, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 901, 643,
	644, 645, 646, 647, 902, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 2556, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 906, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 906, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 1632, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4379,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 1295, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 1597,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1296,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1297, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 1299,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1298, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 1300, 715, 1301, 436,
	437, 438, 1302, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	1303, 450, 451, 1304, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1305, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1306, 504, 492, 0, 0, 1307, 506, 507,
	508, 509, 4266, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1308, 523, 1309, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1633, 1632, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 1295, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 1597, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1296, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1297, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 1299, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1298, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 1300, 715, 1301, 436, 437, 438, 1302,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 1303, 450, 451,
	1304, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1305, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1306,
	504, 492, 0, 0, 1307, 506, 507, 508, 509, 3820,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1308, 523, 1309, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1812, 0, 1633,
	1632, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	1295, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 1597, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1296, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 1810, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1297, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1299, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1298, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1300, 715, 1301, 436, 437, 438, 1302, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 1303, 450, 451, 1304,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1305, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1306, 504,
	492, 0, 0, 1307, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1308,
	523, 1309, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 1811, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 1809, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1684, 0, 1633, 1632,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 1295,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 1597, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1296, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1297, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1686, 710, 711, 511, 1299, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1298, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1300, 715, 1301, 436, 437, 438, 1302, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 1303, 450, 451, 1304, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1305,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1306, 504, 492,
	0, 0, 1307, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1308, 523,
	1309, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1628, 0, 1633, 1632, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 1295, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 1597, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1296, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1297, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 1299, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	1298, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	1300, 715, 1301, 436, 437, 438, 1302, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 1303, 450, 451, 1304, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1305, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1306, 504, 492, 0,
	0, 1307, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1308, 523, 1309,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1633, 1632, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 1295, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	1597, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1296, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1297, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	1299, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1298, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 1300, 715, 1301,
	436, 437, 438, 1302, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 1303, 450, 451, 1304, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1305, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1306, 504, 492, 0, 0, 1307, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1308, 523, 1309, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1633, 1632, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 1295, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 1597, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1296, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1297, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1299, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1298, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 1300, 715, 1301, 436, 437, 438,
	1302, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 1303, 450,
	451, 1304, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1305, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1306, 504, 492, 0, 0, 1307, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1308, 523, 1309, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1633, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 1295,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 1597, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1296, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1297, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1299, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1298, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1300, 715, 1301, 436, 437, 438, 1302, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 1303, 450, 451, 1304, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1305,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1306, 504, 492,
	0, 0, 1307, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1308, 523,
	1309, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 3091, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 3862, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 3095, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 3861, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 3094, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 3858, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 3860, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 3857, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 3093, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 3859, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 3091, 326, 327, 698, 0, 0, 3085,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 3087, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 3095, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 3094, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3084, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 3093, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 3092, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1892,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 1891, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 1890, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 1893, 592, 593, 600,
	601, 602, 603, 604, 0, 1889, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 1887, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	1888, 677, 679, 680, 681, 739, 682, 683, 1601, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1603, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 1346, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 1598, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1600, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	1346, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1504, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1506, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 1346,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 773, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 772,
	303, 304, 761, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 764,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 770, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	766, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 760, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 761, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 764, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 765, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 766,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 761, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 764, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 765, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 766, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 761, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 764, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 4276, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 766, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 2460, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 1346, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	3755, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 3283, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 3282, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 2522, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 2466, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	2465, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 2453, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 2455,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 2417, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 1346, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1728, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1727, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1621, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1614,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1616, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1423, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1422, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 1413, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1412, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1410, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1409, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 1405, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1404,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 742, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 282, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 764, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 765, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 766, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 2563, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 2561, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	2559, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 2472,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 2228, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 2222, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 979, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	978, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 977, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 862, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 851, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 860, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 853, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 859,
	401, 855, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 856, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 854, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 857, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 858, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 852, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 845, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 851, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 860, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 853, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 859, 401,
	855, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 856, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 854, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 857, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 858, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 852, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 3861, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 4613, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1451, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 1454, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 1452, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 833, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 832, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 831, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 1455, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	829, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1451, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 1454, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 1452, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 833, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 832, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 831, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 1455, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 829,
	731, 732, 733, 0, 662, 0, 652, 1453, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	840, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 838, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 751,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 750, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 749, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 3192,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 4917, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 3695, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 4500, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 4220, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 2966, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 3192, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 3322, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 2361,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 832,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 831, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 829, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 2533,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 2520, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1784, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1776,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 823, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 819, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 824, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	833, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 832, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 831, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 1761, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 829, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 1734, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1733, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1718, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1716, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 1712, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1689, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1687, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 1682, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1642, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1606, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1457, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 832, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	831, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 829, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1428,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1427, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1419, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1418, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 1371, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 843, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 823, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 819, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 818,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 824, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 833, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 832, 584, 585,
	586, 587, 820, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 831, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 821, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 829, 731, 732, 733, 0, 662, 0, 652, 825,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 812, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 813, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 775, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	768, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 746,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 3892, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 832, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	831, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 829, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 3799, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 3773, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3769, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 3720, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 3718,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 3706, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 3703, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	3293, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 813, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 2490, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 0, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1390, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 1319, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 0, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 0, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 0, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 0, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1724, 0, 1435, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 318, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 0, 0, 0, 326, 327, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 1437, 354,
	355, 356, 357, 358, 0, 359, 361, 0, 0, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 0, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1723, 0, 0, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 0, 0,
	0, 0, 0, 434, 435, 0, 0, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 0, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 0, 510, 0, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 0, 0, 523, 0, 0, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 0, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 0, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 0,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1438, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 0, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 0, 631, 632, 633, 634, 0, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 0, 0,
	0, 0, 0, 662, 0, 652, 654, 655, 656, 0,
	657, 0, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 0, 0, 0,
	0, 678, 677, 679, 680, 681, 0, 682, 683, 1645,
	0, 1435, 0, 684, 685, 0, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 0, 317, 0, 318, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 0,
	0, 0, 0, 326, 327, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 1437, 354, 355,
	356, 357, 358, 0, 359, 361, 0, 0, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 0, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 0, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1644, 0, 0, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 0, 0, 0,
	0, 0, 434, 435, 0, 0, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 0, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 0, 510, 0, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	0, 0, 523, 0, 0, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	0, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 0, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 0, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1438, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 0, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	0, 631, 632, 633, 634, 0, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 0, 0, 0,
	0, 0, 662, 0, 652, 654, 655, 656, 0, 657,
	0, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 0, 0, 0, 0,
	678, 677, 679, 680, 681, 0, 682, 683, 1433, 0,
	1435, 0, 684, 685, 0, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 0, 318, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 0, 0,
	0, 0, 326, 327, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 1437, 354, 355, 356,
	357, 358, 0, 359, 361, 0, 0, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 0, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	0, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1432, 0, 0, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 0, 0, 0, 0,
	0, 434, 435, 0, 0, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 0, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	0, 510, 0, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 0,
	0, 523, 0, 0, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 0,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 0, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 0, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1438, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 0, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 0,
	631, 632, 633, 634, 0, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 0, 0, 0, 0,
	0, 662, 0, 652, 654, 655, 656, 0, 657, 0,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 0, 0, 0, 0, 678,
	677, 679, 680, 681, 0, 682, 683, 2242, 0, 1435,
	0, 684, 685, 0, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	0, 317, 0, 318, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 0, 0, 0,
	0, 326, 327, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 1437, 354, 355, 356, 357,
	358, 0, 359, 361, 0, 0, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 0, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 0,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 0, 0, 0, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 0, 0, 0, 0, 0,
	434, 435, 0, 0, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 0, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 0,
	510, 0, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 0, 0,
	523, 0, 0, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 0, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 0, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 0, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1438,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 0, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 0, 631,
	632, 633, 634, 0, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 0, 0, 0, 0, 0,
	662, 0, 652, 654, 655, 656, 0, 657, 0, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 0, 0, 0, 0, 678, 677,
	679, 680, 681, 0, 682, 683, 2209, 0, 1435, 0,
	684, 685, 0, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 0, 318, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 0, 0, 0, 0,
	326, 327, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 1437, 354, 355, 356, 357, 358,
	0, 359, 361, 0, 0, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 0, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 0, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	0, 0, 0, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 0, 0, 0, 0, 0, 434,
	435, 0, 0, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 0, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 0, 510,
	0, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 0, 0, 523,
	0, 0, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 0, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 0, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 0, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1438, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 0, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 0, 631, 632,
	633, 634, 0, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 0, 0, 0, 0, 0, 662,
	0, 652, 654, 655, 656, 0, 657, 0, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 0, 0, 0, 0, 678, 677, 679,
	680, 681, 1435, 682, 683, 0, 0, 0, 0, 684,
	685, 0, 686, 687, 688, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 318, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 0, 0, 0, 326, 327, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 1437, 354,
	355, 356, 357, 358, 0, 359, 361, 0, 0, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 0, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 0, 0, 0, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 0, 0,
	0, 0, 0, 434, 435, 0, 0, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 0, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 0, 510, 0, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 0, 0, 523, 0, 0, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 0, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 0, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 0,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1438, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 0, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 0, 631, 632, 633, 634, 0, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 0, 0,
	0, 0, 0, 662, 0, 652, 654, 655, 656, 0,
	657, 0, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 0, 0, 0,
	0, 678, 677, 679, 680, 681, 0, 682, 683, 0,
	0, 0, 0, 684, 685, 0, 686, 687, 688, 1945,
	1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 1976, 0, 0, 0, 0, 0, 1945,
	1946, 1948, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 1976, 0, 0, 0, 0, 2001, 0,
	0, 1948, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 2001, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 1971, 1972, 1973, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 1971, 1972, 1973, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 1975, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 1993, 1986, 0,
	0, 1996, 0, 0, 1962, 1963, 0, 0, 1975, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 1992, 0, 1993, 0, 0,
	0, 0, 0, 0, 1962, 1963, 0, 1968, 0, 0,
	0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1982, 1976, 1968, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 0, 1994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 1983, 0, 0,
	1947, 0, 0, 0, 0, 0, 1994, 0, 1998, 0,
	0, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 1974, 1970, 1971,
	1972, 1973, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 1987,
	0, 1986, 0, 2000, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 1992, 0,
	1993, 0, 1995, 2000, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 1984, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 1964, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 2791, 0, 0, 1994,
	0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0,
	1983, 0, 5041, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 1986,
	1974, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 1982, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 1969, 0, 1992, 0, 1993, 0,
	1995, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 1987, 1984, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 1985, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 4945, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 1986, 1974, 0,
	1996, 0, 0, 0, 0, 0, 0, 1975, 1977, 1982,
	1976, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 1969, 0, 1992, 0, 1993, 0, 1995, 0,
	0, 0, 0, 1962, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	1987, 1984, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 0, 0, 0,
	1985, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 4894, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 1986, 1974, 0, 1996, 0,
	0, 0, 0, 0, 0, 1975, 1977, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	1969, 0, 1992, 0, 1993, 0, 1995, 0, 0, 0,
	0, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 1987, 1984,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 1985, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 4893, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 0, 1986, 1974, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 1982, 1976, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 1969, 0,
	1992, 0, 1993, 0, 1995, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 1987, 1984, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 1970, 1971,
	1972, 1973, 0, 0, 0, 0, 1985, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 0, 0, 4696,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 1986, 1974, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 1969, 0, 1992, 0,
	1993, 0, 1995, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 1987, 1984, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 1985, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 4524, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 1986,
	1974, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 1982, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 1969, 0, 1992, 0, 1993, 0,
	1995, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 1987, 1984, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 1985, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 4427, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 1986, 1974, 0,
	1996, 0, 0, 0, 0, 0, 0, 1975, 1977, 1982,
	1976, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 1969, 0, 1992, 0, 1993, 0, 1995, 0,
	0, 0, 0, 1962, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	1987, 1984, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 0, 0, 0,
	1985, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 4426, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 1986, 1974, 0, 1996, 0,
	0, 0, 0, 0, 0, 1975, 1977, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	1969, 0, 1992, 0, 1993, 0, 1995, 0, 0, 0,
	0, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 1987, 1984,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 1985, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 4425, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 0, 1986, 1974, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 1982, 1976, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 1969, 0,
	1992, 0, 1993, 0, 1995, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 1987, 1984, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 1970, 1971,
	1972, 1973, 0, 0, 0, 0, 1985, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 0, 0, 4039,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 1986, 1974, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 1969, 0, 1992, 0,
	1993, 0, 1995, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 1987, 1984, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 1985, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 3502, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 1986,
	1974, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 1982, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 1969, 0, 1992, 0, 1993, 0,
	1995, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 1987, 1984, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 1985, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 3501, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 1986, 1974, 0,
	1996, 0, 0, 0, 0, 0, 0, 1975, 1977, 1982,
	1976, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 1969, 0, 1992, 0, 1993, 0, 1995, 0,
	0, 0, 0, 1962, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	1987, 1984, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 0, 0, 0,
	1985, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 3500, 0, 0, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 1986, 1974, 0, 1996, 0,
	2391, 0, 0, 0, 0, 1975, 1977, 0, 0, 1982,
	1976, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	1969, 0, 1992, 0, 1993, 0, 0, 0, 1995, 0,
	0, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 1987, 1984,
	0, 0, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 2392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 0, 1985, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 3499, 0, 0, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 1974, 1986, 0, 0, 1996, 0,
	0, 0, 0, 0, 0, 1975, 1977, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 1969, 0,
	0, 0, 1992, 0, 1993, 0, 1995, 0, 0, 0,
	0, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 1987, 0, 0, 1984,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1968, 0, 0, 2321, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 2319,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 1985, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 3464, 0, 0,
	0, 0, 0, 0, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 1986, 1974, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 0, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 1969, 0,
	1992, 0, 1993, 0, 0, 0, 1995, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2393, 0, 0, 2001, 0, 0, 1987, 1984, 0, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2394, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 1985, 0, 0, 0,
	1953, 5196, 0, 0, 0, 0, 0, 0, 1959, 1960,
	1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2320, 1974, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	1992, 0, 1993, 0, 0, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 1945, 1946, 1984, 1978, 1979,
	1980, 1989, 1990, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 1982, 1976,
	0, 0, 0, 0, 0, 0, 0, 1948, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 0, 2318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 1994, 0, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 0, 0, 0,
	0, 0, 1983, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5195, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989,
	1990, 1991, 1974, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 1971, 1972, 1973, 0, 1982, 1976, 0, 0,
	0, 1953, 3434, 3564, 0, 1948, 1969, 0, 0, 0,
	3563, 0, 0, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 0, 1987, 0, 0, 0, 0, 0,
	0, 1947, 0, 0, 1986, 0, 0, 1996, 0, 0,
	0, 0, 1967, 0, 1975, 1977, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 1992, 0, 1993, 0, 0, 0, 0, 0, 0,
	1962, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 3435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 1985, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 1994, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 1998, 1996, 0, 0, 0, 0,
	0, 0, 1975, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1992,
	0, 1993, 0, 0, 0, 0, 0, 0, 1962, 1963,
	0, 0, 0, 0, 0, 0, 0, 2939, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1984, 1978, 1979, 1980,
	1989, 1990, 1991, 1974, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 1982, 1976, 0,
	0, 0, 2938, 0, 0, 0, 1948, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 1995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 1987, 0, 0, 0, 0,
	1994, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 1983, 1964, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 1985, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 1969, 0, 1959, 1960, 1966,
	1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 0, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 2000, 0, 0,
	1992, 0, 1993, 0, 0, 0, 1995, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 1984, 0, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965,
	1961, 1994, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 0, 0,
	1953, 0, 4799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 1974, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 1982, 1976, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 1969, 0, 0, 0,
	1992, 0, 1993, 0, 1995, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 1987, 0, 0, 1984, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 1970, 1971,
	1972, 1973, 0, 0, 1985, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 1986, 1974, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 1969, 0, 1992, 0,
	1993, 0, 1995, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 1987, 1984, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 1985, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 1986,
	1974, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 1982, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 1969, 0, 1992, 0, 1993, 0,
	1995, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 1987, 1984, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 1985, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 0, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 1986, 1974, 0,
	1996, 0, 0, 0, 0, 0, 0, 1975, 1977, 1982,
	1976, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 1969, 0, 1992, 0, 1993, 0, 1995, 0,
	0, 0, 0, 1962, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	1987, 1984, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 0, 0, 0,
	1985, 0, 1953, 0, 4244, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 0, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 1986, 1974, 0, 1996, 0,
	0, 0, 0, 0, 0, 1975, 1977, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	1969, 0, 1992, 0, 1993, 0, 1995, 0, 0, 0,
	0, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 1987, 1984,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 1985, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 0, 1986, 1974, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 1982, 1976, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 1969, 0,
	1992, 0, 1993, 0, 1995, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 1987, 1984, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 1970, 1971,
	1972, 1973, 0, 0, 0, 0, 1985, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 3570, 1959, 1960,
	1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 1986, 1974, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 1982, 1976, 0, 0, 0, 3565, 0,
	0, 0, 1948, 0, 0, 0, 1969, 0, 1992, 0,
	1993, 0, 1995, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 1987, 1984, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 1985, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 1986,
	1974, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 1982, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 1969, 0, 1992, 0, 1993, 0,
	1995, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 1987, 1984, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 1985, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 0, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 1986, 1974, 0,
	1996, 0, 0, 0, 0, 0, 0, 1975, 1977, 1982,
	1976, 0, 0, 0, 3503, 0, 0, 0, 1948, 0,
	0, 0, 1969, 0, 1992, 0, 1993, 0, 1995, 0,
	0, 0, 0, 1962, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	1987, 1984, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 3530, 0, 0,
	1985, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 0, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 1986, 1974, 0, 1996, 0,
	0, 0, 0, 0, 0, 1975, 1977, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	1969, 0, 1992, 0, 1993, 0, 1995, 0, 0, 0,
	0, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 1987, 1984,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 1985, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 0, 1986, 1974, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 1982, 1976, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 1969, 0,
	1992, 0, 1993, 0, 1995, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 1987, 1984, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 1970, 1971,
	1972, 1973, 0, 0, 0, 0, 1985, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 1986, 1974, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 0, 0, 1982, 1976, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 1969, 0, 1992, 0,
	1993, 0, 0, 0, 1995, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 1987, 1984, 0, 0, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1968, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 0, 0, 2503, 1970, 1971,
	1972, 1973, 0, 0, 1985, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	1974, 1986, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 0, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 1969, 0, 0, 0, 1992, 0,
	1993, 0, 1995, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 1987, 0, 0, 1984, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 1985, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 1986,
	1974, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 1969, 0, 1992, 0, 1993, 0,
	1995, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 1987, 1984, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 1985, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 1098, 0, 1986, 1974, 0,
	1996, 0, 0, 0, 0, 0, 0, 1975, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 1963, 0, 0, 1069, 0, 1052,
	1051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1071, 0, 0, 0, 1968, 0, 1053, 0,
	0, 0, 0, 1056, 0, 0, 0, 0, 1110, 0,
	1081, 0, 0, 0, 2000, 0, 0, 0, 1066, 1067,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1099, 1058, 0, 0, 0,
	0, 0, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 1998, 0, 0,
	0, 0, 0, 0, 1096, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 1974, 0, 0, 0,
	0, 0, 0, 1050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 1063, 1064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1072, 1070, 0, 0, 0, 0, 1987, 0,
	1065, 0, 0, 0, 1082, 0, 0, 1104, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1107, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 1109, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 0, 1055, 0, 0, 0, 0, 1090, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1101, 1088, 0,
	0, 0, 0, 0, 0, 0, 1108, 1083, 0, 0,
	1075, 1073, 0, 0, 1078, 0, 0, 0, 0, 0,
	1079, 0, 0, 1048, 0, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1094, 0, 1092, 0, 1080, 0, 0, 0, 0, 0,
	1077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 1085, 0, 0, 0, 0, 0, 0, 0, 1061,
	1105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089,
}

var sqlPact = [...]int{
	12973, -1000, -1000, -1000, -1000, 173, -1000, -1000, 171, 170,
	167, 166, 165, 164, 163, 162, 160, 158, 150, -1000,
	-1000, 147, 145, 144, 143, -1000, -1000, 142, -1000, -1000,
	141, -1000, 140, 139, 135, -1000, -1000, 132, -1000, 131,
	-1000, -1000, -1000, -1000, 130, 128, 127, 99691, 99102, 100278,
	2505, 126747, 109097, 2207, 88512, 126158, 87923, 125569, 2322, 10053,
	124980, 2967, 121, -1000, 124391, 119, 115, 113, -1000, 108508,
	123802, 106154, 105565, 2091, -1000, 112, 110, -1000, 9312, 76686,
	109, 108, 107, 106, 2780, 105, -1000, 104, 100, -1000,
	99, -1000, 12033, 1568, -1000, 98, 97, -1000, 691, 104976,
	96, 95, 94, 2862, 92, 91, 73739, 90, 89, 86,
	2601, 3058, -1000, -1000, 2281, -1000, -1000, 84, 82, 79,
	78, 75, 68, 66, 62, 60, 59, 58, 56, 55,
	-1000, 54, 53, 51, 48, 47, -1000, 46, 43, 42,
	-1000, 41, -1000, 40, 39, 38, 37, 33, 32, 30,
	28, 26, 24, 23, 22, 21, 19, 18, 147921, -1000,
	-1000, 17, -1000, 2157, 1800, 1795, 1772, 1768, 1760, 1006,
	15, 13, 12, 11, 10, 6, 3, -1, -4, -6,
	-7, -8, -9, -13, -14, -15, -16, -17, -20, -21,
	137, -23, -26, -27, -28, -29, -30, -32, 5240, 3773,
	-1000, 1755, 1144, 1261, 33395, 3217, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 135552, 127334, -34, -97,
	-35, -1000, 3581, 969, 61264, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 240, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 453, 2332, 719, -1000, -1000, -1000, 123213,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2504, -51,
	-1000, 2169, -1000, -1000, -1000, -1000, -1000, 717, -1000, 2497,
	2413, 337, 2412, -1000, -1000, -1000, 3652, 2652, 4115, 4113,
	4112, 4110, 4107, 134965, 2011, 4106, 2707, 4105, 4098, 4095,
	4091, 4090, 4088, 4087, -1000, 98513, 1093, 97924, 97335, 3663,
	122626, 96746, 122037, 137906, 51611, 1094, 3651, -1000, -1000, -1000,
	-1000, -1000, -1000, 127334, -1000, 1091, -1000, -1000, 4086, 2252,
	713, 107919, -1000, -1000, 121448, 2140, -1000, -1000, -1000, 929,
	1220, 35811, 35811, 35811, 236, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3665, -1000, -1000, -1000, -1000, 127334, 2905, 2905,
	1452, 1421, 1421, 2905, 2905, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4085, 4084, 4082, 4081, 4080, -1000, -1000,
	-1000, 87334, 25958, 86745, 86156, 120859, 51007, 96157, 95568, 4078,
	4077, 4076, 50403, 82033, 58856, 3772, 120270, 137317, 3771, 3769,
	1087, 2161, 1525, -1000, -1000, -1000, -1000, -1000, -1000, 78447,
	-56, 78447, 3835, 127334, -1000, 235, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 49799, 833, 49195, 855, 48591, 748, 119681,
	-1000, -1000, -1000, -1000, 81434, -1000, 119092, 2651, 4075, 4074,
	1200, 4072, 3523, 1981, 4071, 2010, 1289, 4069, 4067, 4062,
	4055, 4040, 4036, 4032, 1618, 118503, 3216, 117914, 1891, 136728,
	1086, 94979, 100278, 2805, 117325, 1563, 1559, -1000, -1000, -1000,
	-1000, 3326, 3049, 3047, 1213, -1000, -1000, -1000, -1000, 64851,
	7358, 5535, -1000, -1000, 11555, 116736, 67836, 100278, 100278, -1000,
	-1000, -1000, -1000, -1000, -1000, 47987, 514, 47383, 1081, 116147,
	-1000, -1000, 65448, 3154, 1131, -1000, -1000, -1000, -1000, -1000,
	115558, 46779, 373, 46175, 966, 127334, -1000, 3208, 2089, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3461, 1690,
	3848, 2934, 80835, 2236, 1446, 3595, 3325, 3318, 1577, 2152,
	3307, 4031, 2811, 3306, 3296, 3293, 3288, 3285, 1400, 2768,
	632, 2757, 32791, 3196, 1816, 45571, 1607, 1561, 3282, 3276,
	3855, 3709, 2120, 2185, 2186, 2214, 85567, 4030, 4028, 3546,
	3274, 3241, 3008, 3230, 2049, -1000, 3152, 1611, 234, -1000,
	-1000, -1000, -1000, -1000, -1000, 234, 1501, -1000, -1000, -1000,
	-1000, -1000, 90860, -1000, -1000, 1462, -1000, -1000, 1462, -1000,
	-1000, -1000, -1000, -1000, 1394, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1755,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2781, -1000, 2258, -1000, -1000, -1000, 2696, 3563, 3563, 3563,
	3649, 424, 416, -1000, 137, 847, 1185, -1000, -1000, 147071,
	-1000, -1000, 52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215,
	2338, -1000, 712, -1000, -1000, 747, -1000, 711, 639, 558,
	-1000, -1000, -1000, -1000, -1000, -1000, 707, -1000, -1000, -1000,
	-1000, -1000, -1000, 3806, -1000, 29030, -1000, -1000, -1000, 418,
	704, 52215, -1000, -1000, 3881, 3880, 900, -1000, 231, 980,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3207, 703, 702, -1000, 700, 698, 693, 692,
	681, -1000, 680, -1000, 679, 678, 676, 673, 672, 671,
	664, 658, -1000, 2197, -1000, -1000, -1000, -1000, -1000, -1000,
	627, 626, 626, 626, -1000, 1083, -1000, -1000, -1000, 321,
	625, 271, 615, 614, 608, -1000, 657, 655, 653, 651,
	650, 649, 648, 646, 645, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1074, -1000, -1000, -1000, -1000, 1489, -57, 127334,
	-1000, 453, -57, -1000, -1000, 644, -1000, 37641, 37641, 37641,
	-1000, -1000, 2495, 52215, -1000, 2702, -1000, -48, -48, 917,
	63055, -1000, 60052, 917, 318, 764, 69023, -1000, 3151, -1000,
	-1000, 640, 221, -1000, -1000, -1000, -1000, 26555, 3149, 127334,
	127334, 127334, 100278, 100278, 100278, 127334, 4027, 4026, 3454, 52215,
	-1000, -1000, 76097, 139668, 100865, -1000, -1000, 3754, 74326, 75510,
	3203, 139668, 3202, 139084, 4025, -1000, -1000, -1000, -1000, -1000,
	3418, 4024, 4022, 4020, -1000, 127334, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 253, 3417, -1000, -1000, 104387, 253, 3415,
	-1000, 253, 3414, -1000, 103800, -1000, -1000, 2400, 3413, -1000,
	-1000, 260, 3411, -1000, -1000, -1000, 257, 3408, -1000, -1000,
	212, -95, 3400, -1000, -1000, -1000, -1000, -1000, -1000, 147071,
	-1000, -1000, -1000, 138495, -1000, 3556, -1000, 127334, -1000, 52215,
	-1000, -1000, 3751, 1943, 3598, 3686, -1000, -1000, -67, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2691, 2703, 1167, 2540,
	-1000, 3466, 1493, 35811, 3511, -1000, -1000, -1000, -1000, -1000,
	210, 26555, 3023, -1000, -1000, 127334, -1000, 127334, 2905, 2905,
	-1000, -1000, -1000, 3847, 3845, 2905, 2905, 127334, 127334, -1000,
	-1000, -1000, -1000, -1000, -1000, 3656, 3370, 2001, -1000, 2538,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2086,
	3367, -1000, 2764, 3366, 2071, -1000, -1000, 4114, -1000, 143673,
	1461, -1000, -1000, -1000, -1000, 2225, 3365, -47, -1000, -1000,
	2603, -1000, -1000, -1000, -1000, 143465, -1000, 3072, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1855, -1000, -1000,
	2320, 2102, -1000, 1334, 3361, -1000, 2925, 2925, 94390, 3374,
	67239, 65448, -59, -1000, -1000, 78447, -59, -1000, -1000, -1000,
	-98, -1000, 25353, 147071, -1000, -1000, -1000, -1000, 1916, 147071,
	897, -1000, -1000, 3359, -1000, 147071, 888, -1000, -1000, 3358,
	-1000, 2762, -1000, 3201, -1000, -1000, 2598, 2596, 1052, -1000,
	4013, -1000, -1000, 4012, -1000, 4011, 4010, 4009, -1000, 1669,
	2119, 4006, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	93803, 2493, -1000, -1000, 90273, -1000, 2595, 3685, -1000, 93214,
	1085, -1000, 1034, 2594, -1000, 103213, 968, 2590, -1000, 4004,
	3662, 2845, 1034, 2589, -1000, -1000, -1000, -1000, -1000, 1002,
	-1000, 70788, -1000, 70788, -1000, 1771, -1000, 134378, -48, 100278,
	3806, -1000, -96, -1000, -1000, -1000, 969, -1000, 64251, -1000,
	64251, 107330, 82630, 1014, 3147, 72553, 146863, -1000, 1051, -1000,
	-1000, 147071, -1000, -1000, -1000, 2758, -1000, -170, 2923, -1000,
	82630, 66642, 3146, 2748, -1000, 147071, -1000, -1000, -1000, -1000,
	147071, -1000, -1000, -1000, 82630, 90273, -1000, 114969, 92625, -1000,
	-1000, 1605, 2744, -1000, -1000, -1000, 65448, 3145, 1335, 82630,
	82630, 82630, -1000, 114380, -1000, -1000, 2245, 1381, 3548, 2244,
	100278, -1000, 2024, -1000, -1000, -1000, 3573, 3372, 127334, -1000,
	-1000, 3198, -1000, 77860, 102626, -1000, 102039, -1000, 101452, -1000,
	100278, -1000, 100278, -1000, 3994, 3992, 3988, -1000, -1000, 3987,
	-1000, 3983, 3561, -1000, 876, 44967, 147071, 3560, -1000, 3982,
	2176, 3196, 147071, -1000, 3368, 1813, 1794, 127334, -1000, -1000,
	127334, -1000, 127334, -1000, -1000, -1000, 2530, 1699, -1000, -1000,
	2690, -1000, -1000, -1000, 1050, -1000, -1000, 100278, 100278, 100278,
	100278, 1285, -1000, 44363, -1000, -1000, 3273, 3981, 1882, -1000,
	2023, -1000, 3143, 3576, -1000, 3141, 1583, 1915, 207, 3885,
	207, -1000, -1000, 261, -1000, -1000, -67, -1000, 133791, -1000,
	2696, -1000, 127334, -1000, 2704, 3176, 3195, 1450, 2529, 2792,
	-1000, 43759, 2770, 55839, 2537, 137, -1000, -1000, 137, 137,
	34603, -1000, -1000, 35811, 847, 74326, 74326, 26555, 1460, 52215,
	52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215,
	52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215,
	52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215,
	52215, 52215, 52215, 52215, 52215, 2563, 52215, 1392, 52215, 52215,
	52215, 52215, 2461, -1000, -1000, 2166, 483, 2216, 639, -1000,
	-1000, -1000, 3814, 3814, 3814, 2031, 2031, 2031, 147489, 147489,
	512, 3980, 747, -1000, 52215, -1000, 77, 63643, 52215, 27154,
	-1000, 416, 11909, 2669, -1000, 414, 27788, -1000, -1000, -1000,
	29030, 558, 43125, 52215, 1065, 147071, -1000, -1000, 1554, 3833,
	24748, 3225, 3002, 638, 862, 853, 32157, 31523, 30889, 30255,
	852, 850, 52215, 52215, 52215, 52215, 52215, 52215, 52215, 52215,
	-1000, -1000, 3843, -1000, 3833, -1000, -1000, -1000, -1000, 3833,
	1403, 1385, 3833, -1000, 3833, 3833, 6483, 6483, 42521, 41917,
	41313, 56443, 40709, 52215, 29651, 40105, 39501, -1000, 58255, 127334,
	-57, 3750, 52215, 268, -1000, 144573, -1000, 268, 268, 636,
	-102, 147071, 2772, 2772, 61861, 2611, 2372, 2372, 2372, -1000,
	917, 19265, 917, 112619, 2381, 917, 917, 206, 209, 412,
	59455, 2702, 112619, 733, 635, -37, -38, -39, -1000, -1000,
	-41, -44, -1000, -1000, 100278, 631, 27154, 26555, 205, 2202,
	-103, 2789, 2787, 2783, 2777, -1000, 2776, 2490, -1000, -1000,
	-1000, 1934, -108, 1387, 100278, 127334, 1627, -92, -1000, 5461,
	-111, -1000, 1383, 204, 3833, -1000, -1000, -1000, -1000, -1000,
	3979, 3978, -1000, 1066, 630, 628, 523, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 627, 626, 626, 626, -1000,
	321, 625, 271, 615, 614, 608, -1000, -1000, -1000, -1000,
	-1000, 3137, 100278, 127334, 1573, 89099, -95, 100865, -88, -1000,
	-1000, 127334, -1000, -1000, -1000, 3977, -1000, 100278, -1000, -1000,
	100278, 253, 3357, -1000, 100278, -1000, 100278, 252, 3356, -1000,
	-1000, 127334, -1000, 100278, 100278, -1000, 127334, 127334, 127334, 139668,
	139668, 249, -1000, 100278, 847, -114, 1225, -67, -1000, -1000,
	-1000, -1000, 1462, -1000, 1814, -1000, -1000, -1000, -1000, -1000,
	-1000, 1628, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	900, -1000, -1000, -1000, -1000, 3825, 3820, -66, -1000, -1000,
	26555, -1000, 1957, -1000, -1000, -1000, -1000, 127334, 127334, -1000,
	-1000, 127334, 127334, -1000, -1000, -68, 1815, 544, 1380, -1000,
	84978, 2650, 3549, 3976, 2835, 3530, 1758, -1000, 1698, 607,
	-1000, 3648, 90860, 3697, 3727, 1407, -1000, 3129, -1000, -1000,
	-1000, 928, 1878, 1902, 1376, 1372, 90860, 2764, -1000, 74326,
	-1000, 2883, 3646, 1421, 1475, 1421, 1421, 1444, 1405, -1000,
	90860, 1901, 1370, 1365, 1362, -1000, -1000, 1757, 1730, -1000,
	-1000, 113793, 1655, -1000, 1356, 1351, 128508, 3768, 2781, 2340,
	790, 2070, -1000, 1428, 1348, 3122, -1000, -1000, -70, 3692,
	3712, 1407, -1000, 3121, 1347, -1000, -1000, -1000, 3644, 100278,
	26555, 1657, 1649, 1633, 1898, 1345, -58, -1000, 3695, 1710,
	-1000, 90273, 90273, 109684, 127334, 3780, 82630, -1000, 2620, -1000,
	-1000, -1000, 3593, 3591, -1000, -1000, 1338, 1337, -1000, 1059,
	8581, 3487, -1000, 139668, 1059, 1059, 1992, 3342, 2876, 1687,
	-1000, 2919, 887, 2916, -1000, -1000, -1000, 887, 78447, -59,
	127334, 195, -1000, 77, 52215, 52215, 77, 52215, 77, -1000,
	3678, 3341, 3340, 3975, -1000, -1000, -1000, -1000, -1000, 3974,
	2092, 2706, -1000, -1000, 601, 2588, 3119, 127334, 199, -1000,
	100278, 3234, 3334, 139668, 2764, 2587, -1000, -1000, 92036, -1000,
	3329, 453, 2586, -1000, 715, 3967, 3328, -1000, 133204, -1000,
	3556, 1508, 3324, 1129, 634, 3749, -1000, 634, 71377, -1000,
	127334, -1000, -48, 1127, 83804, -116, -117, 410, -1000, 113206,
	127334, 127334, 3495, 2130, 2125, -1000, 1021, 65448, -1000, 65448,
	-119, -1000, -170, 2896, 1672, 65448, -1000, 1014, -146, 887,
	-1000, 887, -1000, 100278, 3194, -1000, 82630, 65448, -1000, 1014,
	1014, 1014, -1000, -1000, -1000, -1000, 3959, 3958, 3954, 3952,
	-1000, -1000, 1033, 100278, 127334, 100278, -1000, 2875, 1670, -1000,
	193, -1000, 139668, -1000, 139668, 127334, 100278, -1000, 1033, 127334,
	1033, 127334, 1033, 127334, 1033, 1033, -1000, -1000, -1000, -1000,
	-1000, 77, -1000, -1000, 147071, -1000, 52215, -1000, -1000, 1691,
	3950, 1786, -1000, 3188, -1000, 3179, -1000, 2, -1000, -1000,
	3838, 2015, -1000, 3879, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3947, 147071, -1000, 2226, -1000, -1000, -1000, -1000,
	100278, 100278, 100278, 100278, 127334, 3485, -1000, 127334, 3481, 3483,
	100278, -1000, 3884, -1000, -1000, 90860, -1000, 2704, 3176, -1000,
	-1000, -1000, -1000, -1000, -1000, 1533, 2434, -1000, 2739, -1000,
	1723, -1000, -1000, -1000, 147071, 57047, -1000, -1000, 147071, 1927,
	-1000, 55235, 54631, -1000, -1000, 1862, 100278, 2810, -1000, 2810,
	-94, -1000, 144302, 2730, 100278, -66, 35811, -1000, -1000, -1000,
	-1000, -1000, 927, 674, 674, 1396, 1396, 1396, 1396, 3680,
	6054, 6350, 5376, 6093, 6093, 7386, 7386, 7386, 7386, 7386,
	6093, 2218, 2031, 2031, 2218, 2218, 2218, 2218, 2218, 2031,
	2031, 2031, 6093, 6093, 6093, 2031, 147489, 147281, 9335, 52215,
	52215, 1333, 2115, 483, 9318, 52215, 10524, 10524, 10524, 10524,
	-1000, 2096, -1000, -1000, -1000, -1000, 3114, 598, 56443, 56443,
	-1000, -1000, -1000, -1000, 28409, 52215, -1000, -1000, -1000, -1000,
	38867, -1000, -1000, 143255, -333, 409, -1000, 191, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 398, -93, -2, -1000, 52215, 52215, 52215, 397, -1000,
	190, 52215, 127334, -1000, 140258, 732, -137, -1000, -124, 1506,
	-1000, 52215, -1000, -1000, 1329, -1000, 1327, 1325, 1322, -1000,
	597, 390, -1000, 189, -1000, 2351, 588, 587, 52215, -1000,
	-1000, -1000, -1000, -1000, 143047, -1000, -1000, 142839, -1000, -1000,
	142631, -1000, -1000, 142423, -1000, -1000, -1000, -1000, -1000, 146655,
	18439, 17970, 17481, 11190, 17332, 16562, -125, 389, -126, 386,
	925, 924, 385, 384, 383, -127, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -134, 381,
	-1000, 3100, -93, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 379, -1000, 376, -1000, 146447, -93, 374, 7073, -1000,
	56443, 56443, 56443, 56443, 371, -1000, 144154, -1000, 146239, 38263,
	38263, 38263, 369, 146031, 52215, -93, -144, -1000, -147, -1000,
	-1000, -1000, -1000, 526, -149, 1055, 37641, 60665, 26555, -1000,
	1055, 1055, 52215, -1000, 52215, 2753, -1000, -1000, -1000, -1000,
	2749, 2109, 2772, 61861, -1000, -1000, -1000, -1000, 112619, -1000,
	3806, 3060, -1000, 112619, -1000, -1000, 127334, 453, -1000, 112619,
	112619, 26555, 917, -1000, 917, 112619, 705, -1000, -1000, -1000,
	-1000, -1000, 366, 73150, -2, 185, 26555, 1034, -1000, -1000,
	2891, 2891, 2891, 2891, 2891, 100278, -1000, -1000, 139668, 1317,
	-64, -104, 2895, 2888, 3778, -1000, 2210, -1000, 74326, -1000,
	746, 1210, 26555, -1000, -1000, -1000, 584, -1000, 3833, 3833,
	-1000, 3833, 139668, 3096, 227, 2884, 2882, 2487, -61, 177,
	139668, 3945, -1000, -1000, 253, -1000, 100278, 253, 253, -1000,
	100278, 100278, 2400, -1000, 260, -1000, 257, -1000, -1000, -95,
	-1000, 1049, 35811, -1000, 1462, -1000, -1000, 1659, -1000, 2104,
	-1000, 1293, -1000, -1000, 35811, -1000, 3498, -1000, 1908, -1000,
	-1000, -1000, -1000, 2841, 127334, 127334, 100278, -1000, 110858, 127334,
	-1000, 2305, 139668, -1000, 2585, 132617, 2560, 132030, 74326, -1000,
	-1000, 581, 960, 2728, 2727, 1126, 127334, 127334, 2725, 131443,
	130856, -1000, 3944, 127334, 2221, 52215, 110858, 3642, 2406, 2519,
	77, 77, -1000, 77, -1000, -1000, 579, 1284, 100278, 100278,
	127334, 139668, 100278, 1923, -1000, -1000, -1000, -1000, -1000, 91447,
	-1000, -1000, 1421, -1000, -1000, -1000, 1421, -1000, 1421, 2764,
	1917, 127334, 139668, 100278, 139668, 130269, 2068, 129682, 2066, -1000,
	-1000, 2064, 1896, 127334, -1000, -1000, -1000, -1000, -1000, 1514,
	-1000, 790, 1303, 3095, 52215, 52215, 2249, 77, 77, -1000,
	77, 563, 26555, 2114, -1000, 3191, 127334, 3878, 129095, 3876,
	127334, 127334, 127334, 139668, 3570, 127334, -1000, -146, -63, -113,
	-1000, 870, 858, -98, -1000, 3780, -1000, 857, 2252, 127334,
	139668, -1000, 128508, 8581, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2235, 80236, 1138, 127334, 1334, -1000, -1000, 1893, 1302,
	1297, 90860, 2251, 1886, 1983, 139668, 65448, 1026, 65448, 2853,
	-1000, -1000, 24143, -1000, 147071, 147071, -1000, 147071, -1000, 77273,
	82630, 127334, -1000, -1000, 1082, 127334, 84391, 970, 3323, 70199,
	-98, 1014, 90273, 82630, 3233, 127334, 127334, -1000, -1000, 2764,
	3316, 453, 2584, -1000, 139668, 3743, 3309, 562, 3942, 3941,
	-1000, 100278, 2465, 2583, -1000, -1000, 127921, 3432, 790, 127334,
	1055, 61861, 2090, -1000, 68435, 1108, 127334, 2006, 175, -1000,
	-1000, -1000, -24, 127334, -1000, 760, -1000, -1000, 1127, 1127,
	1014, -113, 561, 66045, -150, -1000, 183, 560, 856, 854,
	-1000, 3253, -1000, -170, -1000, 82630, 1021, 65448, 3087, -170,
	2878, 3084, -1000, -1000, 1048, -1000, 1545, 2877, 1014, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-49, -1000, 1832, 1958, 127334, -95, -95, -74, -1000, -1000,
	182, -64, -1000, 1033, -1000, 1033, -1000, 1033, -1000, -1000,
	-1000, 147071, -1000, -1000, -1000, 1785, 1775, 127334, -1000, 3172,
	-1000, 127334, -1000, -1000, 26555, 127334, 100278, 26555, 100278, 3171,
	3170, -1000, -1000, -1000, 127334, -1000, -1000, 127334, -1000, -1000,
	-1000, -1000, -1000, -1000, 1166, -1000, 1927, 2433, -1000, 558,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2668,
	-1000, -65, 34603, 898, -1000, -1000, 100278, -53, -66, 52215,
	52215, 8695, 8092, 52215, 56443, 56443, -1000, 52215, 6977, -1000,
	-1000, -1000, -1000, -1000, 3083, 549, 52215, 74326, 5888, 967,
	-1000, 364, 14999, 2218, -1000, 52215, -1000, 7027, -1000, 361,
	37037, -1000, 144991, -5, -155, -1000, 19884, -93, -156, -1000,
	-1000, 740, -1000, 3427, -1000, 52215, 145823, 2647, 2193, 1984,
	1798, 3833, 3873, 23538, -1000, 71965, 1056, 2389, 142215, -1000,
	-1000, -1000, -1000, 74326, 74326, 52215, 52215, -1000, 52215, 52215,
	52215, -1000, -1000, -1000, 3833, 903, -1000, -1000, -1000, 903,
	-1000, -1000, 1421, -1000, 1421, -1000, 52215, -1000, -1000, 3081,
	52215, -1000, 74326, 74326, 56443, 56443, 56443, 56443, 56443, 56443,
	56443, 56443, 56443, 56443, 56443, 56443, 56443, 56443, 56443, 56443,
	56443, 56443, 56443, 56443, 2735, 56443, 3805, 3805, 3805, 1504,
	-1000, 3167, 3081, 52215, 52215, 74326, 358, 356, 355, -1000,
	52215, -93, -1000, -1000, 5993, 547, -1000, 2657, -1000, 3001,
	-1000, 52215, -1000, -158, -1000, 2702, -1000, -1000, 3001, 3001,
	-157, 147071, 61861, 61861, -1000, 546, 52215, 2740, -1000, -1000,
	731, -331, -1000, 849, -1000, -1000, -1000, -1000, -1000, -1000,
	848, -1000, 453, -1000, -1000, -1000, 179, 112619, 112619, 730,
	-1000, -162, -1000, -1000, -163, -1000, 3742, 353, 26555, -1000,
	1055, 5275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2769,
	-271, 139668, 139668, 1831, 1829, 2411, 3872, -1000, 3834, 738,
	728, 155, 3833, 351, 346, 335, -95, 139668, 139668, 1827,
	1826, 74923, 139668, -1000, -1000, -1000, 253, -1000, -1000, -1000,
	252, -1000, -1000, -1000, -1000, 2852, -1000, -67, -1000, -1000,
	-1000, 52215, -1000, 990, -1000, -1000, 3547, 545, 1292, 1283,
	-1000, -164, -1000, 846, -1000, -1000, -1000, -1000, -1000, 3040,
	-1000, 3308, -1000, 2582, -1000, 1113, 2580, 1744, -1000, 52215,
	538, 2842, 537, 536, 3940, 2219, 3939, 1128, 3305, 2400,
	3301, 2400, -1000, -1000, -1000, 933, -1000, 147071, -165, -1000,
	2406, -1000, 533, 532, -1000, -68, 1728, 339, 1282, 1046,
	-1000, -1000, 52215, 52215, 112032, -1000, 475, 3541, -54, -1000,
	-1000, -1000, 1820, 1279, 1278, -1000, -1000, -1000, -1000, -1000,
	2764, 1819, 1274, 1272, -1000, -1000, -1000, -1000, -1000, 2577,
	-1000, 127334, -1000, 3300, 127334, 127334, 1041, -1000, 3240, 3239,
	922, 127334, 52215, 52215, 145615, 145407, -1000, 1040, -1000, -1000,
	52215, -1000, -70, 1262, 3691, 2571, 100278, -1000, 2400, 3297,
	1260, -1000, 1259, -1000, -1000, -1000, 3689, 3688, 1264, -1000,
	109684, 82630, 82630, 3780, 65448, -1000, -1000, -1000, 82630, -1000,
	-1000, 79639, -1000, -1000, 1059, 127334, 139668, 100278, 1842, -1000,
	-1000, 89099, 89686, 127334, 2876, -95, 887, -1000, 2649, 887,
	1026, 3076, -1000, 2796, -1000, 1035, 100278, 3937, 332, -171,
	-71, 74326, -1000, -1000, -1000, -1000, 2560, 100278, 127334, 1323,
	2840, 127334, 127334, 3741, -1000, 2514, 594, 100278, 901, -1000,
	3806, -1000, -1000, -1000, 127334, -1000, -1000, -1000, 3683, 100278,
	3740, 3292, 1034, 77, 100278, 3853, -1000, -1000, 3738, 100278,
	3284, 2460, 2564, 2699, 790, 83217, 1034, 2386, -81, -1000,
	2006, 36415, 3537, -172, -1000, -1000, -1000, 1055, 71377, 61861,
	52215, 3936, -173, -1000, -1000, -1000, -1000, -1000, 109684, 82630,
	1014, 127334, 127334, 3935, 82630, 82630, 82630, -72, 531, -1000,
	842, 841, 839, -1000, -1000, -1000, -1000, -1000, -1000, 830,
	827, 826, 823, 1021, -1000, -1000, -170, 65448, 1021, 65448,
	77, -1000, 2403, 100278, 65448, -1000, 22933, 127334, 2875, -1000,
	79034, -1000, -1000, -1000, -1000, -1000, 1033, 3868, -98, -1000,
	-1000, -1000, 2257, 2536, 2257, 1951, 1948, -1000, -1000, -1000,
	2429, -1000, -1000, -1000, -1000, 2802, 3558, 26555, 3690, 10524,
	52215, 52215, 582, 629, 413, 10524, 52215, 52215, 74326, 147697,
	-179, 52215, 52215, -1000, 52215, 725, 147071, -1000, 3867, 52215,
	331, 329, -1000, -1000, -1000, 3823, -1000, -1000, -1000, 147071,
	52215, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 327, -1000,
	138, -1000, -1000, -1000, 136139, -1000, 52215, 325, 3641, -1000,
	315, 314, 319, 10391, 142007, 141799, 141591, 304, -1000, -1000,
	297, 296, 147071, 3167, 147071, -1000, -1000, 1162, 1162, 1435,
	1435, 1435, 1435, 3805, 1538, 2050, 1227, 439, 439, 439,
	695, 1504, 1504, 439, 439, 439, 1504, 3063, 2747, 530,
	7097, -1000, -1000, 147071, 147071, 295, -1000, -1000, -1000, -93,
	293, 5993, -1000, 2997, 3640, 147071, -1000, 61861, 2997, 2997,
	-1000, -1000, 2109, 127334, 147071, 61861, -1000, 3060, -1000, 21112,
	20501, -1000, 26555, -1000, -1000, -1000, -1000, 3806, -1000, 73150,
	-1000, 528, -1000, 117, -1000, 5275, -1000, 822, -1000, -1000,
	82630, 82630, 3934, 3933, 3932, 3864, 3863, 2416, 3860, 2891,
	-1000, 3006, -271, -178, 127334, 127334, -1000, -1000, 723, 3931,
	737, 26555, 292, -1000, -1000, -1000, -95, -95, 127334, 127334,
	3062, 100278, 127334, 1507, -95, -1000, -1000, -1000, 3493, 147071,
	3165, 2985, 2983, 127334, 127334, -1000, 110858, 35811, 1658, 111445,
	127334, 3280, -1000, 3272, -1000, 1126, 2345, 141383, 62458, -1000,
	62458, 127334, -1000, -1000, -1000, -1000, 2285, 1526, 3927, 1193,
	-1000, 3575, 127334, -1000, 127334, -1000, -1000, -1000, 110858, -1000,
	127334, 127334, 100278, 127334, -1000, 139668, 3248, -180, 147071, -73,
	-1000, 820, -1000, 1401, -1000, 22328, 127334, 139668, 100278, 127334,
	139668, 100278, 3268, 1106, 127334, -1000, 1101, 2301, -1000, -1000,
	3237, -1000, 147071, 145199, 77, 52215, 3247, -193, 26555, -1000,
	3859, 3858, 3265, 3582, -1000, 127334, 3857, 127334, 100278, 3492,
	-1000, -1000, -1000, 1032, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1806, 1256, 1255, 2459, 2457, 2408, -74, 2251, 1026,
	-75, 522, -1000, 817, -1000, -1000, 816, 807, 1026, -1000,
	82630, 65448, 3926, 453, -1000, 2834, -1000, 106741, 84391, 2420,
	-1000, -1000, 519, 127334, 127334, 518, -1000, 77, -1000, 3921,
	110858, 515, -1000, 2398, -1000, 722, -1000, 139668, 2764, 77,
	100278, -1000, 1019, 453, 288, -77, -1000, 3425, 1121, 26555,
	100278, 3261, 2701, 790, 83217, -1000, 1508, 2792, -1000, -80,
	-1000, 494, 77, 2386, -1000, -81, 147071, -1000, 802, -195,
	279, -1000, 3491, -1000, -1000, -196, -1000, -1000, 4904, 4904,
	82630, 65448, 82630, 82630, 82630, 65448, 82630, -1000, 1021, 887,
	-1000, -170, -1000, 2539, -1000, 1014, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 26555, 1871, -1000, 509, 507, -1000,
	-1000, -1000, -1000, 3558, 10524, 10524, 52215, 52215, 52215, 10524,
	147697, -201, -1000, 10524, 10524, -93, -1000, -1000, 144991, -1000,
	-1000, -1000, 147071, -1000, 21723, 2278, -1000, 141175, -1000, 34603,
	-1000, -1000, 52215, 52215, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 56443, 3054, 506, 74326, -1000, -1000, 277, 1003,
	52215, 54027, 2702, 1003, 1003, -1000, -202, -1000, -1000, -1000,
	3806, -1000, 3806, 117, -1000, -1000, 3920, 26555, -1000, 82630,
	-1000, -1000, -1000, -1000, -1000, -1000, 3919, 3917, 2548, 3916,
	3912, -1000, 2401, -1000, -1000, 3220, -181, -186, 735, -1000,
	3907, -1000, -1000, 154, 153, 139668, 3052, 136, 2874, -1000,
	77, -1000, -1000, -1000, -1000, -1000, -1000, 2865, 3737, -1000,
	2063, -1000, 127334, 127334, -1000, 127334, -1000, 26555, 127334, 3030,
	1309, -1000, 960, 2724, 504, 56443, 1165, 100278, 907, 2973,
	2870, -1000, 3764, 3633, 2937, -203, -1000, 127334, 52215, 127334,
	-212, -221, 2547, -1000, -1000, 1161, 1308, 52215, 1159, -1000,
	-1000, -1000, 74326, 502, 2400, 2400, -1000, -223, -224, -1000,
	-1000, -1000, 52215, 1254, 127334, 35207, -1000, 3906, 3541, -1000,
	-1000, -1000, -1000, -1000, -1000, 127334, 127334, -1000, 127334, 127334,
	-1000, 52215, -1000, 144783, 52215, 1248, -1000, -1000, -1000, 3856,
	2400, 26555, 2400, -1000, 2400, 3582, 1191, 2462, 127334, 139668,
	100278, 1904, 1904, 3162, -1000, -1000, -1000, 2732, 2732, 82630,
	65448, 65448, -1000, -82, 1026, -1000, 3736, 2261, 3902, -1000,
	-1000, -1000, -1000, 2722, -1000, -1000, -1000, 127334, 2712, 2956,
	62458, 497, 495, 127334, 1016, -1000, -226, 84391, 970, 947,
	-1000, -1000, -1000, -1000, 453, -1000, 2844, 3735, -1000, 3854,
	493, 491, 127334, 2453, 490, 26555, 3535, 790, 83217, -1000,
	3432, 2006, -1000, 2556, 127334, 3529, -1000, 2792, 483, -1000,
	1014, 481, 1014, -1000, -231, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3734, 1021, -83, -1000, 886, 881, -1000,
	-1000, -1000, 100278, 100278, 52215, 52215, -1000, 10524, 10524, 10524,
	-1000, 273, -1000, -1000, 2386, 3617, -1000, -85, 140967, 140759,
	773, 56443, 74326, -232, -1000, -1000, 127334, 147071, -87, -1000,
	147071, 480, 477, 286, -1000, -1000, -1000, 706, 675, -1000,
	-1000, -1000, -1000, 3901, -1000, -1000, -1000, -1000, 139668, 139668,
	3897, -1000, 139668, 139668, -95, 139668, 139668, 1799, -1000, 110271,
	127334, -1000, -1000, 1744, 2431, -1000, -1000, 127334, 2561, -1000,
	-1000, -1000, 1011, 52215, 7097, 56443, 473, 52215, -1000, 470,
	467, 3733, 3473, -1000, 2827, 3068, 2105, 62458, -1000, 3558,
	-1000, 140551, -1000, 1120, 2076, -1000, -1000, -1000, -1000, 147071,
	56443, 3582, 62458, -1000, -1000, 466, 465, 147071, 464, 800,
	3046, -1000, -1000, -1000, -1000, -98, -98, -1000, 147071, 77,
	147071, 462, 3691, -1000, -1000, -1000, -1000, 2400, 100278, 796,
	-1000, -1000, -1000, 1247, -1000, -1000, -1000, -1000, 3896, 3895,
	3045, 89099, -1000, -233, -1000, -1000, -1000, 2082, 77, 970,
	-1000, -1000, 2420, 461, -1000, 1004, 2786, 2786, -234, 62458,
	62458, -239, 2409, 2829, -1000, 269, 3729, 947, -1000, 3798,
	-1000, 3728, 3490, -1000, 77, -1000, 3853, 62458, -1000, 100278,
	62458, 2452, 2190, 2686, 83217, -1000, 2699, -1000, -1000, -241,
	127334, 2006, -1000, -1000, 82630, -1000, -1000, -1000, 1479, -1000,
	2539, -1000, 127334, -1000, 127334, -1000, -1000, -242, -244, -1000,
	2263, 52215, 34603, -1000, -1000, 773, -247, -1000, -90, -1000,
	3726, 54027, 3893, 3892, 3891, -1000, -1000, -1000, -271, -271,
	-1000, -95, -95, -95, -95, 127334, -1000, 2060, -1000, 2560,
	-1000, -1000, 3257, -1000, 2994, 457, 140288, 7097, 2662, 127334,
	16095, 2764, 2764, -1000, 3725, 3066, -1000, -1000, 2249, 456,
	-1000, -1000, -1000, -1000, 898, 127334, 1004, 2993, 100278, 7097,
	1122, -250, 2257, 2257, 52215, 33999, 2290, -1000, 52215, -1000,
	-1000, 3582, 65448, 139668, -1000, -1000, 139668, 2447, -1000, 3028,
	3813, -1000, 2409, 127334, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1120, -252, -253, -1000,
	-1000, 3569, -1000, 3489, 2834, 77, -1000, -1000, 77, 3890,
	1019, 266, -255, 1121, -258, 100278, 2054, -1000, 790, -1000,
	2701, 1055, 3447, -1000, -260, 3832, -1000, -268, -274, -1000,
	-1000, 255, 53423, 53423, 53423, -93, -94, -1000, 127334, 454,
	-1000, -1000, -1000, -1000, -1000, -1000, 116, -1000, -1000, 3205,
	915, -1000, 838, 2121, 246, 1148, 228, -22, -1000, -1000,
	-1000, 2937, -1000, 127334, -1000, -1000, -1000, 915, 453, -1000,
	52215, 1120, -277, -1000, 1100, -279, -1000, 1099, -286, -1000,
	3044, -1000, -287, 2400, -1000, -271, 249, 1904, 1017, 3677,
	-1000, -1000, -1000, 2674, -292, -1000, -1000, 2105, 1120, 2249,
	2477, -1000, 2261, 1016, -1000, -1000, -1000, -1000, 1120, 447,
	2105, 446, 1631, 790, -1000, -1000, 1421, 3535, 3442, 1436,
	1014, -1000, -1000, -1000, -1000, -1000, 3298, -1000, 57651, 2430,
	1940, 143883, 3298, 3298, -1000, -1000, 139668, 127334, 1004, 3658,
	-1000, 880, 879, 1578, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1055, -293, -1000, 2662, 147071, 1004, -1000, 2257,
	2860, -1000, 2257, 3043, -1000, 2289, -1000, -1000, -1000, -1000,
	3032, -1000, 1906, 3789, -1000, -1000, 1004, 127334, 2249, 2105,
	1004, 1933, 1930, 3889, 970, 2409, 2105, 62458, 2249, 62458,
	2223, -1000, 127334, -1000, 2190, 1373, -1000, 1740, -1000, -1000,
	1892, 3700, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -95,
	-1000, -1000, 794, -1000, 3462, -1000, 1152, 2242, 2242, -1000,
	-1000, 838, -1000, -1000, 445, -1000, 441, -1000, 139668, 2392,
	-1000, -1000, -1000, -1000, 1004, 2249, 1055, -1000, 3888, -1000,
	2409, -1000, 2249, -294, 1004, -295, 2246, -1000, -1000, -98,
	2054, -1000, 1732, 71377, 1937, -1000, -1000, 2377, 52819, 52215,
	-1000, 3782, -1000, -1000, 2773, -1000, 2937, 52215, 52215, 249,
	69611, 1055, 1004, -1000, -1000, 2674, 1004, 1120, 1055, 2105,
	-1000, 790, 1631, 71377, -282, -1000, -1000, -1000, 147071, -1000,
	-1000, -1000, -1000, -309, -316, -1000, -113, 109684, -1000, 1055,
	-1000, 1055, 2105, -1000, 2249, 139668, 2223, -282, -1000, 2249,
	1242, -317, -1000, -1000, 2249, 1004, -1000, -1000, -1000, -1000,
	-1000, 436, -1000, 1004, 1055, 52215, 1055, -1000, -323, -1000,
	2249, -1000,
}

var sqlPgo = [...]int{
	0, 4810, 4808, 4805, 4804, 4802, 4801, 4800, 4799, 4792,
	4788, 4787, 4786, 4785, 4784, 150, 4780, 4777, 4776, 4764,
	4763, 4762, 4761, 4760, 4757, 4755, 4753, 4752, 4751, 4748,
	4747, 4746, 4743, 4731, 4727, 4725, 4724, 4723, 4722, 4720,
	4715, 4714, 4709, 4705, 4704, 4701, 4699, 4698, 4696, 4695,
	4693, 4692, 4690, 4683, 4680, 4679, 4678, 4677, 4676, 4675,
	4674, 4673, 4668, 4667, 4662, 4659, 4658, 4656, 4655, 4654,
	4652, 4650, 4647, 63, 4645, 4643, 4642, 4640, 4638, 4637,
	4636, 4633, 4632, 4630, 4629, 4628, 4626, 4625, 4624, 4623,
	4622, 4620, 4619, 71, 4618, 296, 4617, 4615, 4614, 4613,
	4612, 4608, 4604, 4597, 4596, 4594, 4593, 4592, 294, 4591,
	152, 178, 4589, 4588, 4122, 4587, 4585, 291, 4584, 4581,
	4578, 4577, 4576, 305, 4574, 4573, 4571, 4570, 4569, 272,
	4568, 4567, 4566, 4565, 4564, 4563, 115, 135, 4562, 4561,
	1570, 4557, 4552, 4550, 4546, 4545, 4544, 4541, 266, 274,
	4540, 4537, 4533, 263, 186, 4532, 287, 4531, 4530, 4528,
	4527, 4526, 4525, 4524, 4523, 4521, 4517, 4515, 4513, 4511,
	4510, 4509, 4507, 4506, 4505, 4502, 4501, 4500, 4499, 4498,
	4497, 4496, 4495, 4494, 4492, 4490, 4488, 4487, 4485, 4484,
	4482, 4480, 4478, 4474, 4470, 4468, 4466, 4465, 4459, 259,
	231, 140, 4457, 4455, 286, 285, 4454, 4453, 4452, 4451,
	4450, 3693, 4449, 4448, 4447, 4446, 4444, 4443, 4440, 4438,
	4437, 148, 12, 50, 4435, 4434, 123, 93, 88, 92,
	110, 96, 4432, 4431, 129, 4430, 137, 124, 4428, 116,
	111, 22, 18, 174, 258, 13531, 253, 4427, 4425, 4421,
	257, 204, 4419, 254, 4413, 4408, 4406, 4405, 4396, 4395,
	85, 54, 220, 4391, 4390, 144, 177, 195, 194, 188,
	193, 125, 58, 108, 81, 64, 46, 15, 97, 224,
	21, 9, 280, 4389, 278, 10, 149, 16, 33, 4387,
	4386, 4381, 4375, 3995, 104, 4374, 284, 261, 175, 4372,
	4370, 4369, 729, 4368, 4359, 49, 243, 212, 161, 114,
	44, 138, 4358, 159, 183, 30, 4357, 173, 99, 4356,
	4354, 98, 87, 9520, 12463, 4350, 4349, 120, 77, 234,
	3430, 182, 168, 210, 146, 132, 184, 172, 4346, 106,
	4345, 219, 218, 189, 273, 4344, 268, 4343, 3722, 75,
	192, 166, 5749, 4341, 4340, 4339, 79, 4338, 102, 4337,
	4334, 72, 20, 4, 2, 151, 40, 45, 3, 4331,
	34, 130, 57, 25, 4329, 28, 4328, 4327, 4325, 4324,
	48, 4321, 53, 171, 4320, 4319, 303, 4317, 95, 65,
	23, 4316, 42, 235, 4315, 239, 136, 4314, 4313, 270,
	198, 4312, 89, 251, 4311, 4310, 4306, 4301, 4299, 300,
	147, 1, 145, 4298, 4297, 156, 4296, 55, 252, 208,
	4295, 67, 4294, 4290, 190, 59, 155, 298, 154, 237,
	126, 236, 201, 241, 4289, 4288, 4287, 226, 4286, 4285,
	230, 185, 4282, 4281, 267, 301, 94, 47, 91, 250,
	86, 207, 170, 4278, 214, 4276, 4275, 306, 199, 222,
	39, 11, 6, 103, 112, 4274, 5, 245, 167, 244,
	127, 4273, 8057, 2865, 2707, 240, 4268, 157, 128, 83,
	141, 163, 283, 100, 4267, 4264, 3363, 4263, 4260, 4258,
	4256, 197, 4245, 4230, 4227, 160, 191, 215, 4223, 122,
	70, 56, 24, 164, 264, 297, 117, 233, 180, 271,
	4222, 4221, 4220, 202, 4215, 82, 179, 4213, 211, 276,
	66, 4212, 118, 4211, 165, 2071, 73, 169, 4210, 238,
	4209, 4207, 4206, 4205, 4204, 4203, 4202, 1014, 247, 4201,
	4200, 4199, 37, 206, 4198, 281, 158, 249, 61, 60,
	200, 109, 242, 4197, 304, 227, 69, 8, 4194, 36,
	4193, 3423, 62, 4190, 0, 14401, 9375, 12273, 13979, 4187,
	5008, 4186, 4185, 4184, 223, 78, 4181, 4180, 4177, 119,
	4176, 84, 4175, 4174, 76, 4173, 27, 14, 19, 32,
	29, 369, 282, 4172, 4171, 68, 143, 133, 4170, 299,
	246, 4169, 4168, 4167, 4166, 90, 4165, 43, 4164, 41,
	4163, 4162, 51, 13, 31, 4161, 4160, 162, 4159, 121,
	213, 181, 4158, 176, 4157, 74, 142, 4155, 4154, 277,
	221, 228, 101, 4153, 295, 4151, 209, 4150, 4148, 26,
	4147, 4145, 256, 113, 105, 52, 260, 139, 38, 4143,
	196, 216, 4140, 4138, 187, 4137, 4136, 4135, 293, 4134,
	3688, 279, 4133, 35, 4130, 4129, 4128, 7, 4127, 4125,
	217, 3421, 4124, 4118, 17, 4116, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 629, 629, 629,
	630, 630, 631, 631, 631, 26, 51, 19, 20, 20,
	20, 20, 632, 632, 632, 632, 39, 27, 52, 32,
	32, 32, 32, 32, 224, 224, 224, 224, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 628, 628, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 633, 633, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 526, 526, 526, 557, 557, 557, 557, 559,
	559, 653, 653, 654, 654, 654, 654, 654, 139, 139,
	423, 423, 423, 61, 61, 61, 61, 61, 623, 623,
	226, 226, 226, 228, 228, 227, 227, 227, 227, 227,
	84, 84, 639, 639, 638, 637, 637, 637, 640, 640,
	640, 225, 225, 225, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 137, 137, 649, 649, 649, 229,
	229, 229, 231, 231, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 236, 18, 18,
	18, 118, 118, 118, 118, 118, 118, 118, 113, 113,
	561, 561, 562, 562, 220, 220, 221, 221, 221, 221,
	222, 222, 223, 223, 223, 76, 76, 233, 233, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 64, 64, 64, 64, 64, 65,
	65, 65, 65, 65, 65, 66, 66, 66, 66, 66,
	66, 67, 67, 74, 74, 74, 74, 74, 74, 74,
	74, 201, 201, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 81, 81, 81, 81, 81,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 656,
	656, 657, 657, 658, 658, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 90, 90, 384, 384, 347, 347, 91, 91, 91,
	92, 92, 93, 93, 78, 78, 620, 620, 621, 621,
	621, 621, 517, 517, 95, 95, 422, 422, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 105, 105, 105, 105, 105,
	106, 106, 106, 103, 103, 103, 100, 100, 100, 99,
	99, 99, 104, 104, 104, 619, 333, 333, 102, 102,
	102, 101, 101, 101, 400, 400, 107, 107, 107, 107,
	348, 108, 108, 108, 108, 108, 108, 108, 108, 111,
	111, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 519, 519, 4, 4, 263, 263,
	262, 262, 262, 262, 5, 5, 5, 266, 266, 265,
	264, 109, 109, 109, 484, 484, 114, 114, 114, 438,
	438, 115, 115, 115, 115, 115, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 625, 625, 393,
	393, 296, 296, 296, 296, 127, 127, 127, 127, 128,
	128, 128, 128, 129, 129, 206, 206, 145, 145, 145,
	145, 144, 144, 144, 144, 144, 144, 144, 144, 68,
	68, 68, 69, 69, 70, 70, 71, 71, 72, 72,
	73, 73, 73, 73, 73, 148, 148, 31, 31, 31,
	31, 149, 149, 650, 650, 151, 147, 147, 147, 147,
	147, 147, 147, 146, 146, 150, 150, 150, 150, 152,
	154, 154, 154, 154, 154, 153, 153, 153, 153, 153,
	155, 155, 551, 551, 408, 408, 549, 549, 571, 571,
	550, 550, 354, 354, 354, 354, 354, 355, 355, 355,
	560, 560, 560, 560, 560, 560, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 207, 207, 207, 208, 208, 213, 213, 214,
	214, 214, 215, 215, 215, 212, 212, 212, 209, 209,
	210, 210, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 218, 218, 216, 216, 217, 217, 661, 661,
	660, 660, 219, 219, 219, 219, 219, 182, 182, 182,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 409, 409, 185, 185, 185, 169, 169,
	157, 157, 157, 157, 157, 157, 157, 157, 232, 232,
	232, 232, 162, 162, 162, 162, 162, 162, 162, 162,
	163, 163, 163, 158, 158, 171, 171, 171, 171, 171,
	164, 164, 165, 165, 165, 166, 166, 166, 166, 193,
	193, 168, 168, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 159, 159, 159, 159, 173, 173, 173, 173,
	445, 445, 445, 199, 199, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 196, 196, 196, 196, 196, 196, 641, 641, 642,
	642, 642, 189, 189, 189, 189, 189, 189, 498, 498,
	183, 183, 183, 183, 188, 188, 188, 188, 191, 191,
	191, 191, 428, 428, 180, 180, 180, 181, 181, 181,
	186, 186, 198, 187, 385, 385, 184, 184, 190, 190,
	190, 190, 192, 192, 192, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 161, 161, 161, 161, 194, 194,
	179, 179, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 662, 662, 175, 175, 175, 174, 174,
	174, 174, 177, 177, 178, 178, 178, 178, 178, 178,
	178, 176, 167, 197, 622, 622, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 618, 618, 618, 618,
	618, 624, 624, 119, 119, 119, 119, 119, 119, 119,
	130, 130, 130, 130, 130, 130, 130, 133, 133, 120,
	120, 120, 120, 120, 120, 120, 123, 123, 121, 121,
	121, 121, 122, 122, 85, 85, 85, 85, 85, 17,
	17, 17, 86, 86, 287, 287, 241, 241, 241, 372,
	372, 242, 242, 362, 362, 362, 362, 237, 237, 238,
	238, 239, 240, 240, 87, 87, 663, 663, 663, 634,
	634, 634, 635, 635, 635, 635, 635, 635, 356, 356,
	357, 357, 464, 464, 464, 464, 464, 360, 360, 360,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 370,
	371, 371, 363, 363, 369, 368, 368, 367, 367, 366,
	366, 364, 365, 365, 365, 374, 374, 373, 376, 376,
	375, 463, 580, 580, 582, 582, 582, 582, 582, 582,
	582, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 446, 446,
	664, 664, 665, 666, 578, 578, 578, 579, 574, 574,
	575, 575, 575, 575, 575, 358, 358, 359, 359, 359,
	359, 576, 577, 391, 391, 502, 581, 581, 583, 583,
	585, 667, 667, 667, 667, 667, 667, 668, 668, 668,
	462, 462, 461, 461, 460, 460, 382, 382, 586, 586,
	586, 586, 587, 587, 587, 587, 587, 590, 589, 588,
	588, 588, 588, 588, 89, 89, 89, 425, 425, 424,
	424, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 203,
	203, 299, 299, 299, 83, 83, 83, 14, 14, 14,
	14, 14, 14, 14, 314, 314, 15, 15, 15, 15,
	636, 636, 636, 88, 88, 88, 88, 88, 88, 380,
	380, 380, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 627, 627,
	626, 626, 300, 300, 670, 670, 94, 94, 94, 94,
	94, 94, 94, 94, 520, 520, 521, 521, 82, 82,
	82, 82, 82, 447, 447, 444, 444, 443, 443, 390,
	390, 500, 500, 500, 501, 304, 304, 305, 305, 260,
	260, 260, 34, 33, 24, 24, 28, 28, 29, 29,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 30,
	30, 54, 54, 54, 54, 55, 55, 55, 55, 58,
	58, 59, 59, 53, 53, 53, 53, 56, 56, 50,
	50, 60, 60, 60, 60, 60, 643, 645, 645, 644,
	644, 648, 648, 648, 648, 648, 648, 646, 646, 335,
	335, 647, 647, 651, 651, 652, 652, 126, 126, 131,
	131, 131, 131, 131, 132, 132, 132, 132, 134, 134,
	134, 134, 143, 143, 202, 202, 202, 202, 202, 202,
	202, 62, 62, 62, 62, 75, 75, 75, 75, 141,
	672, 672, 672, 142, 142, 142, 671, 671, 297, 297,
	457, 457, 458, 458, 673, 673, 459, 459, 459, 459,
	459, 290, 289, 291, 291, 292, 292, 80, 80, 80,
	280, 280, 279, 281, 281, 282, 282, 277, 277, 563,
	563, 284, 284, 284, 285, 285, 273, 273, 274, 274,
	275, 275, 276, 276, 288, 288, 558, 558, 674, 674,
	117, 117, 117, 205, 205, 346, 346, 346, 454, 454,
	454, 383, 383, 311, 311, 456, 456, 456, 456, 456,
	421, 421, 421, 204, 204, 398, 398, 411, 411, 412,
	412, 514, 514, 413, 124, 124, 125, 125, 140, 140,
	245, 245, 243, 243, 243, 243, 243, 243, 243, 243,
	250, 250, 251, 251, 252, 252, 253, 254, 254, 254,
	254, 401, 401, 255, 255, 255, 244, 244, 244, 246,
	246, 246, 246, 246, 246, 246, 249, 249, 249, 249,
	256, 256, 256, 248, 248, 597, 597, 597, 599, 599,
	601, 601, 600, 600, 596, 596, 598, 598, 669, 669,
	427, 427, 427, 379, 381, 377, 377, 378, 378, 388,
	388, 386, 387, 387, 389, 389, 499, 499, 499, 261,
	261, 261, 418, 418, 418, 418, 419, 419, 450, 450,
	448, 448, 448, 448, 449, 449, 451, 451, 451, 452,
	452, 453, 453, 415, 415, 416, 416, 417, 417, 417,
	417, 480, 480, 247, 247, 247, 395, 395, 395, 396,
	396, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 471, 471, 469, 469, 469, 469, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 504, 505, 505,
	397, 397, 506, 455, 455, 615, 615, 615, 616, 616,
	497, 497, 507, 507, 507, 507, 507, 507, 495, 495,
	496, 496, 515, 516, 516, 431, 431, 431, 431, 429,
	429, 432, 432, 432, 432, 432, 430, 430, 508, 508,
	508, 508, 420, 420, 509, 509, 509, 509, 510, 511,
	511, 512, 512, 465, 466, 466, 522, 522, 522, 522,
	524, 394, 394, 394, 394, 394, 573, 572, 572, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	539, 539, 539, 539, 539, 539, 539, 525, 525, 525,
	525, 525, 529, 529, 529, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 530, 530, 535, 535,
	536, 536, 536, 531, 532, 537, 537, 537, 537, 675,
	675, 541, 541, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 527, 527, 527, 534, 534, 534, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 439, 439, 441, 441, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 474, 474, 474, 474,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 591, 591, 591, 591, 591,
	591, 591, 591, 476, 476, 594, 594, 595, 595, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	602, 602, 603, 603, 605, 605, 606, 606, 607, 608,
	608, 608, 609, 610, 610, 604, 604, 611, 611, 611,
	611, 612, 612, 613, 613, 613, 613, 613, 614, 614,
	614, 614, 614, 486, 486, 487, 487, 493, 493, 493,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 353, 353, 352, 301, 301,
	301, 301, 301, 301, 406, 406, 404, 404, 404, 407,
	407, 405, 405, 403, 403, 402, 402, 483, 483, 481,
	481, 485, 485, 433, 433, 540, 540, 540, 540, 540,
	540, 540, 540, 434, 434, 434, 442, 435, 435, 436,
	436, 436, 436, 436, 477, 478, 437, 437, 437, 479,
	479, 488, 492, 492, 491, 490, 490, 489, 489, 467,
	467, 468, 468, 414, 414, 676, 676, 410, 410, 513,
	513, 513, 513, 350, 350, 399, 399, 349, 349, 341,
	341, 342, 342, 342, 342, 392, 392, 494, 494, 542,
	542, 543, 543, 544, 544, 545, 545, 546, 547, 548,
	482, 482, 322, 321, 308, 309, 320, 319, 318, 307,
	310, 315, 316, 317, 312, 313, 329, 328, 327, 278,
	283, 334, 336, 336, 339, 339, 340, 338, 337, 337,
	324, 325, 326, 518, 306, 343, 343, 344, 344, 344,
	345, 345, 345, 345, 302, 302, 303, 303, 330, 330,
	331, 332, 332, 323, 323, 323, 293, 293, 293, 294,
	294, 295, 295, 556, 556, 553, 553, 553, 554, 554,
	554, 555, 555, 555, 555, 552, 552, 552, 552, 552,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 565, 565, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 567, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 570, 570,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	9, 2, 1, 3, 1, 3, 3, 3, 0, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 2, 2, 2, 2,
	3, 3, 4, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 6, 3, 8, 5, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 3, 2, 1,
	4, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 4, 3, 1, 2,
	3, 2, 2, 2, 4, 6, 3, 1, 2, 2,
	7, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 7, 4, 7, 8,
	8, 9, 11, 11, 2, 6, 9, 4, 7, 7,
	10, 7, 10, 10, 10, 13, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 4, 4, 3,
	4, 1, 1, 1, 1, 5, 4, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 1,
	2, 1, 2, 2, 2, 9, 2, 1, 0, 1,
	1, 0, 1, 2, 0, 2, 2, 0, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 3, 5, 7, 3, 3, 3,
	4, 8, 6, 4, 5, 5, 5, 3, 0, 1,
	1, 1, 4, 4, 3, 4, 4, 3, 4, 4,
	1, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 5, 7, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 5, 3, 5, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 7, 5, 2, 0, 3, 3, 4, 3,
	3, 3, 5, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 6,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 1, 1, 1,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 3, 6, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 10, 11, 9, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 6, 1, 3, 1, 2, 0, 1, 2,
	3, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 3, 0, 4, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 16, 19,
	15, 18, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 3, 0, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 14, 16, 3,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 7, 10,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 636, -110, -107, -76, -74, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -61, -63, -77,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-68, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 454, 466, 421, 147,
	444, 426, -150, -151, 485, -62, -75, -142, -141, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -83, -79, -90, -84, -78,
	-81, -655, 106, -598, -98, -101, -134, -659, 168, 232,
	-120, -121, -122, 386, -128, -129, 447, -131, -132, -133,
	450, 169, -70, -69, 162, -243, -245, -147, -146, -148,
	-206, -157, -158, -159, -160, -161, -163, -164, -166, -193,
	-167, -168, -169, -170, -171, -172, -176, -196, -173, -174,
	-175, -178, -177, -179, -184, -180, -181, -182, -183, -185,
	-186, -188, -189, -190, -191, -192, -194, -195, 490, -187,
	-197, -165, -198, 555, 52, 506, 85, 152, 458, 21,
	-7, -8, -9, -10, -11, -12, -13, -17, -16, -60,
	-4, -5, -80, -82, -85, -86, -87, -94, -88, -89,
	-597, -99, -100, -103, -105, -106, -102, -104, 445, 607,
	-246, -244, 633, 612, 571, -162, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -46, -51, -48, -49,
	-47, -50, -52, -53, -54, -55, -56, -57, -58, -59,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -45, -19, -20, -32, 594, 603, -249, -247,
	-248, -256, 477, 579, 528, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, -348, 2, -324, -330, -331, -332, -323, -293, -567,
	-570, 4, -564, -568, 175, 242, 347, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	46, 47, 48, 49, 50, 51, 52, 56, 58, 62,
	63, 64, 65, 66, 67, 71, 76, 77, 82, 83,
	84, 85, 86, 87, 88, 89, 95, 92, 93, 94,
	96, 98, 100, 101, 102, 103, 104, 105, 107, 108,
	109, 111, 112, 113, 121, 122, 123, 124, 125, 127,
	133, 128, 134, 137, 132, 136, 138, 140, 141, 142,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 157,
	158, 160, 161, 162, 165, 163, 166, 164, 167, 168,
	169, 170, 173, 181, 182, 183, 188, 190, 191, 192,
	194, 195, 198, 199, 200, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 217, 219, 220, 221, 222,
	223, 224, 225, 231, 232, 234, 235, 236, 237, 238,
	243, 244, 245, 249, 255, 256, 260, 261, 262, 264,
	268, 269, 270, 271, 272, 273, 275, 277, 276, 279,
	282, 283, 286, 287, 288, 289, 290, 291, 295, 296,
	292, 297, 298, 300, 301, 304, 302, 305, 306, 303,
	307, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 308, 309, 324, 322, 326, 327, 328,
	329, 330, 345, 340, 341, 342, 334, 335, 331, 336,
	332, 333, 337, 338, 344, 339, 349, 350, 351, 352,
	355, 229, 248, 357, 358, 361, 363, 380, 366, 367,
	368, 371, 372, 375, 378, 379, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 391, 392, 394, 395, 396,
	398, 399, 400, 402, 404, 405, 407, 408, 409, 411,
	412, 413, 414, 415, 416, 417, 418, 420, 421, 423,
	422, 424, 426, 428, 429, 430, 436, 437, 444, 438,
	440, 441, 442, 443, 445, 446, 447, 448, 449, 450,
	452, 453, 454, 456, 457, 458, 459, 460, 462, 464,
	465, 469, 470, 471, 487, 488, 509, 466, 467, 468,
	472, 473, 474, 475, 476, 480, 478, 479, 481, 482,
	483, 485, 486, 489, 490, 492, 493, 494, 495, 496,
	497, 498, 501, 503, 504, 505, 506, 507, 527, 508,
	510, 514, 515, 516, 517, 511, 512, 526, 519, 520,
	521, 523, 524, 529, 530, 531, 532, 533, 534, 536,
	537, 539, 547, 559, 548, 549, 550, 552, 555, 556,
	557, 558, 545, 560, 561, 564, 565, 569, 566, 570,
	567, 568, 571, 573, 576, 577, 578, 584, 583, 585,
	586, 587, 589, 590, 595, 596, 598, 599, 600, 37,
	53, 54, 57, 59, 61, 72, 73, 74, 78, 129,
	130, 159, 171, 172, 184, 201, 202, 214, 216, 226,
	227, 228, 250, 251, 253, 258, 280, 354, 356, 373,
	377, 393, 397, 401, 403, 419, 461, 499, 513, 518,
	540, 541, 542, 543, 551, 553, 579, 580, 581, 588,
	597, -348, 2, -324, 364, -317, 2, -293, -293, 404,
	29, 2, 29, 392, 479, 531, 533, 2, -625, -393,
	2, 29, -296, -293, 106, 212, 477, -317, 2, -625,
	212, -393, 26, 2, -293, 2, 378, 23, 28, 69,
	80, 102, 145, 170, 193, 198, -658, 380, 412, 464,
	481, 526, 537, 552, 2, 583, 301, 478, 528, 242,
	124, 557, 472, -636, 469, 470, 378, 410, 456, 215,
	572, -297, 2, 466, -293, 301, 2, 636, 98, 77,
	461, 482, -153, 2, 291, 548, -154, -155, -152, 540,
	-551, 472, 456, 324, -293, 636, 636, 636, 29, -306,
	2, -293, -306, 2, -211, 2, -306, -660, -218, -217,
	-216, 22, 437, 183, 273, 196, 233, 329, 407, 194,
	50, -211, 2, 528, 242, 472, 124, 524, 636, 636,
	2, 528, 383, 583, 478, 124, 416, 242, 557, 198,
	145, 28, 71, 48, 534, 611, 472, -636, 608, 609,
	301, 131, -623, 2, -617, 4, -568, -564, -342, 478,
	-341, 528, 534, 124, -332, -323, 625, -331, 636, 636,
	636, 636, 2, 261, 262, 414, 413, 482, 483, 29,
	636, 636, 636, 636, 469, 2, 170, 23, 28, 69,
	97, 102, 131, 193, 198, 369, -656, 380, 412, 481,
	526, 530, 537, 552, -635, 508, 71, 472, -634, -636,
	301, 557, 145, -443, 124, 291, 210, 565, 533, 531,
	563, 137, 249, 568, 567, 636, 636, -111, 2, 633,
	33, 32, -110, -114, 147, 485, -236, 528, 254, 2,
	-293, 636, 636, 636, 2, 261, 262, 469, 470, 29,
	636, 636, 196, -617, 524, 2, 636, 636, 636, 2,
	29, 261, 262, 469, 470, 254, 2, 71, 474, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 2, -200, 482, 508,
	222, 49, 48, 77, 29, 411, 82, 384, 125, 131,
	154, 558, 213, 242, 243, 269, 97, 98, -445, 46,
	262, 71, 261, 470, -641, 469, -498, 529, 473, 479,
	523, 89, 273, 466, 548, 550, 106, 573, 457, 600,
	416, 417, 521, 430, 519, 292, 163, 197, 4, 124,
	324, 456, 484, 277, 276, 559, 540, 291, 465, 387,
	87, 636, -669, 2, 528, -671, 2, 548, 548, 2,
	-671, 2, -671, 2, -671, 2, -672, 548, 597, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, -244,
	-246, -245, 636, 636, 636, 636, 636, 636, 636, -200,
	482, 2, 77, 29, 29, -386, -388, 562, 252, 156,
	370, -243, -245, 2, -597, 559, 482, -549, 2, -472,
	-571, -474, 623, 624, 616, 525, 70, -352, 346, 601,
	-486, 131, 563, 364, -570, -475, -488, 159, 380, 461,
	-407, 8, 9, 5, 6, 7, -302, -476, -482, 554,
	174, 353, -345, 637, 10, 633, -594, -245, -487, 38,
	216, 68, -553, -344, -303, -525, 253, -343, -323, -591,
	-592, 4, -564, -565, -554, -528, -536, -532, -533, -539,
	-293, -567, 80, 115, 116, 114, 119, 118, 294, 293,
	120, 117, 484, 572, 69, 37, 226, 227, 258, 354,
	228, 78, -593, 146, -566, 250, 251, 499, 54, 419,
	184, 130, 129, 356, 59, 57, 580, -537, 126, 540,
	541, 542, 543, 201, 202, 61, 171, 172, 377, 401,
	518, 551, 553, 214, 280, 45, 110, 197, 247, 230,
	257, 259, 263, 281, 284, 325, 343, 348, 374, 376,
	455, 491, -675, 581, 513, 72, 73, 189, -599, 422,
	-600, -317, -599, 636, 636, 638, 636, -377, -379, -381,
	2, 29, 143, 633, 2, -503, 2, -504, -508, -245,
	274, -507, 633, -505, 631, -324, 365, -595, 462, -591,
	-592, -302, -323, -344, 4, -564, -566, 635, -382, 633,
	124, 472, 528, 81, 242, 97, 170, 198, -438, 633,
	-293, 29, 364, 544, 638, -378, 409, -484, 633, 364,
	367, 196, 367, 63, 305, 2, 2, 2, 2, 2,
	226, -293, 528, 123, 2, 272, 2, 2, 2, 2,
	2, 2, 2, -400, 226, 2, -324, 583, -400, 226,
	2, -400, 226, 2, -444, 2, 91, -307, 226, 2,
	-293, -333, 226, 2, -328, -330, -339, 226, 2, -336,
	-293, -559, 226, 2, -557, 4, -564, 120, 484, -472,
	2, -140, 2, 63, -293, 583, 2, 487, 2, 633,
	-153, 2, 74, 548, 45, 482, -154, 2, -458, 2,
	-459, -289, -290, -291, -515, -292, 260, 408, 418, 604,
	135, 346, 600, -650, 196, 615, 544, -549, -549, -549,
	-408, 635, -213, 56, -306, -661, -660, -661, -547, 29,
	-542, 8, -543, 623, 624, -547, -547, -661, -661, 2,
	2, 2, 2, 2, 2, -508, 226, -324, 2, -321,
	-552, 4, -564, -568, -565, -569, -567, 29, 32, 33,
	34, 36, 38, 39, 40, 42, 60, 68, 69, 75,
	79, 81, 91, 97, 106, 114, 115, 117, 116, 118,
	119, 120, 131, 135, 139, 143, 144, 148, 152, 156,
	174, 176, 189, 193, 196, 212, 215, 218, 233, 246,
	252, 254, 274, 278, 285, 293, 294, 346, 353, 359,
	364, 365, 369, 370, 390, 406, 425, 451, 477, 484,
	502, 522, 528, 538, 544, 546, 554, 562, 563, 572,
	574, 582, 591, 592, 593, 594, -570, 80, 2, -508,
	226, 2, -327, 226, -508, -330, 2, -307, 2, -472,
	-629, 536, 166, 438, 2, -349, 226, -324, -326, -330,
	-328, 2, 2, 2, 2, -472, 2, -561, 2, -556,
	10, -555, 5, 4, -564, -568, -565, -475, 2, -486,
	29, -336, 2, -557, 226, 2, 29, 29, 583, 409,
	254, 544, -399, -341, -342, 638, -399, -548, 4, 8,
	-392, -293, 635, -472, 2, -140, -123, 2, 189, -472,
	226, 2, -140, 226, 2, -472, 226, 2, -140, 226,
	2, -293, 2, -637, 2, -561, 226, 226, -293, 2,
	305, 2, 2, 552, 2, 102, 528, 123, 2, 442,
	-657, 464, 556, 2, 2, 2, 2, 2, 2, 2,
	528, -312, 2, -293, 189, -336, 226, -337, 2, 478,
	-670, 422, -557, 226, 2, 583, -328, 226, 2, -328,
	242, 256, -307, 226, 2, 533, 531, 533, 531, 196,
	2, 254, 2, 254, 2, -509, 2, -510, -504, -511,
	631, 365, -519, 2, -518, -555, 579, -111, 633, -111,
	633, 482, 633, -561, -324, -324, -472, 2, -140, -123,
	2, -472, 2, -140, 2, -293, 2, -137, -561, -136,
	633, 196, 573, -293, 2, -472, 2, -140, -123, 2,
	-472, 2, -140, 2, -236, 189, 2, 124, 528, -200,
	2, 189, 574, 2, 8, 2, 233, -232, -561, 473,
	181, 417, 2, 487, 2, 488, 77, -445, 600, 77,
	196, 2, 196, 2, -428, 2, 594, 409, 196, 2,
	2, -622, 2, 364, 196, 2, 196, 2, 196, 2,
	196, 2, 196, 2, -199, 483, 549, 527, 413, 262,
	2, -140, 591, -123, 262, 261, -472, 591, 2, -642,
	189, 470, -472, 2, 547, 271, 164, 196, -428, 2,
	196, 2, 196, 2, 5, 2, 43, 414, 509, 2,
	260, 408, 509, 2, 507, 2, -324, 528, 583, 478,
	124, 29, 2, 469, 2, 2, 92, 93, 196, 2,
	196, 2, 211, 196, 2, 430, 196, 528, -409, 635,
	-409, 600, 2, -420, -508, -457, -458, -457, 544, -386,
	-388, -200, 487, 2, -250, -418, -252, 189, -448, -449,
	-253, 285, 176, 359, -254, -427, 29, 143, -427, -427,
	63, 634, 634, -650, 559, 11, 12, 79, 43, 623,
	624, 625, 626, 187, 627, 628, 621, 622, 620, 613,
	614, 618, 266, 267, 99, 617, 615, 90, 299, 463,
	177, 178, 179, 180, 439, 240, 35, 241, 14, 15,
	16, -352, 34, 369, 284, 601, 230, 491, 616, 17,
	18, 19, 257, 259, 348, 53, 233, -301, 380, -351,
	525, 70, -472, -472, -472, -472, -472, -472, -472, -472,
	376, 633, -414, -467, 631, -245, 633, 633, 633, 633,
	-548, -245, -472, -486, 634, -405, 633, -245, -486, -481,
	633, 461, 631, 633, -489, -472, 5, 5, 5, 633,
	635, -602, 595, 189, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	403, -530, 633, -529, 633, -529, -529, 584, -527, 633,
	603, 596, 633, -527, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 584, 534, 638,
	-599, -382, 633, -410, -513, -472, 625, -410, -410, 364,
	-402, -472, 110, -431, 263, 325, 197, 281, 455, 247,
	-469, 637, -469, -497, 603, -245, -505, -323, -245, -507,
	633, -503, -497, -112, -548, -95, -108, -117, -140, -156,
	-204, -205, 625, -324, 633, 196, 633, 635, -552, 196,
	-392, -307, -336, -324, -343, -344, -349, -318, -293, 2,
	2, 142, -402, -617, 557, 472, 29, -559, -296, 39,
	-483, -522, -523, -573, 637, -572, -525, -535, -531, -534,
	393, 397, -554, 57, 580, -537, 253, 4, -564, -566,
	250, 251, 499, 54, 419, 184, 130, 129, 356, 59,
	540, 541, 542, 543, 201, 202, 61, 581, 513, 72,
	73, -617, 557, 472, 29, 189, -559, 189, -559, 2,
	2, 159, 2, 2, 2, -293, -271, 638, 67, 448,
	159, -400, 226, -271, 159, -271, 159, -350, 226, -349,
	-271, 159, -271, 638, 159, -271, 638, 159, 635, 638,
	159, -559, 2, -444, -551, -402, 39, -458, 2, 131,
	4, 5, -673, 638, 283, -355, 298, 345, 221, 365,
	598, 357, 135, -560, 5, 4, -482, -494, 131, 291,
	253, -542, -544, 9, -545, 623, 624, -550, -549, 113,
	635, -552, -214, 248, 41, -306, -306, -661, -661, 8,
	8, -661, -661, -306, -306, -268, 440, 485, 379, -267,
	25, 30, 147, 244, 330, 577, 165, -367, 245, 445,
	-364, 383, 159, 503, 566, -629, -632, 468, 536, 166,
	438, 94, 357, 485, 379, 440, 159, -424, -426, 39,
	122, 330, 378, 64, 236, 303, 304, 506, 446, 588,
	159, 485, 379, 440, 379, -15, -282, 25, 147, -284,
	-279, 485, 30, -632, 103, 440, 612, 607, 445, 389,
	520, 406, -632, -629, 279, -631, 590, 344, -270, 503,
	566, -629, -632, 468, 440, -269, -369, -364, 383, 159,
	637, 25, 147, 440, 485, 379, -653, -654, 30, -263,
	-262, 25, 147, 485, 569, -266, 233, -265, 25, -149,
	-129, -148, 445, 485, -149, 2, 440, 379, -626, -314,
	-596, 233, 594, 159, -314, -314, -508, 226, -646, 189,
	2, -639, -136, 275, 5, 10, -561, -136, 638, -399,
	638, -552, 625, 470, 469, 159, 159, 159, 159, 262,
	189, 346, 346, 594, 2, 2, 2, 2, 2, 198,
	-634, -658, 2, 2, -324, 226, -384, 364, -620, -621,
	528, -324, 346, 45, -327, 226, 2, -330, 583, -626,
	346, -329, 226, -324, 39, 633, 346, 2, -444, 2,
	242, -596, 346, -509, -346, -324, -504, -346, 485, -317,
	39, -469, -324, 634, 638, -519, -519, -561, -223, 594,
	196, 633, -236, 594, 594, 262, -516, 638, -515, 233,
	-562, -561, -137, -561, 443, 196, 262, -561, -620, -307,
	2, -324, 2, 528, 264, -136, 196, 233, -223, -561,
	-561, -561, -551, 29, 488, 2, -199, 483, 549, 93,
	488, 2, -324, 528, 124, 242, 83, -646, 189, 2,
	-293, -624, 189, -618, 456, 472, 557, -617, -324, 124,
	-324, 124, -324, 124, -324, -324, 2, 2, 2, 2,
	2, 88, 2, -140, -472, 2, 88, 2, 48, 504,
	-642, 189, 2, 547, 2, 547, 2, -293, -293, -293,
	359, 508, 283, 594, -324, -324, -324, -325, -330, 473,
	529, 558, 470, -472, 2, -662, 2, 196, 189, 2,
	528, 242, 528, 242, 124, 196, 77, 124, 29, 196,
	528, 467, 635, 4, -271, 638, -297, -250, -418, -551,
	-419, -418, -251, -250, -253, 189, 418, 567, 330, 489,
	268, -449, -448, 29, -472, -453, 183, 329, -472, -451,
	-474, 623, 624, -543, -545, -401, 357, -244, -244, -244,
	-389, -499, -472, 406, 242, -550, -650, -524, -522, -522,
	-322, -552, 540, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, 284,
	230, 491, 53, 233, -472, 544, -472, -472, -472, -472,
	322, 346, 353, 554, 174, 564, 143, 357, -676, 522,
	42, -479, -245, -406, 633, -493, 36, 502, 29, -486,
	633, 2, -467, -472, -468, -353, -351, -293, 623, 624,
	625, 626, 627, 628, 613, 614, 615, 14, 15, 16,
	618, 622, 620, 621, 187, 99, 617, 299, 463, 90,
	177, 178, 179, 180, 266, 267, 17, 18, 19, 35,
	616, -403, -402, -402, 634, 582, 29, 143, 625, 2,
	634, 638, 39, 634, -472, -403, -485, -481, -402, -492,
	-491, 591, -439, -440, 599, 308, 127, 224, 306, -441,
	476, -546, 8, -552, 625, -603, 182, 215, 633, 634,
	2, 634, 2, 634, -472, 2, 634, -472, 2, 634,
	-472, 2, 634, -472, 2, 634, 2, 634, 2, -472,
	-472, -472, -472, -472, -472, -472, -402, 8, -546, -546,
	540, 540, -546, -546, -546, -538, 393, 394, 395, 396,
	286, 287, 288, 289, 397, 398, 399, 400, 314, 315,
	316, 317, 310, 311, 312, 313, 318, 319, 320, 321,
	206, 207, 208, 209, 202, 203, 204, 205, -538, -433,
	2, -540, -402, 4, 599, 308, 127, 224, 306, 476,
	5, -433, 2, -434, 2, -472, -402, -435, -473, -474,
	623, 624, 616, -352, -436, 2, -472, -403, -472, 60,
	278, 546, -437, -472, 196, -402, -402, 2, -402, 2,
	-475, 2, -600, 39, -402, -395, 638, 196, 39, 4,
	-395, -395, 633, 634, 638, -432, 219, 302, 297, 256,
	-432, -503, -431, 263, -429, 374, -429, -429, -497, -308,
	631, 639, -552, -497, -496, -495, 39, -317, 371, -497,
	-497, 635, 634, -496, 632, -615, 633, 636, 636, 636,
	636, 636, -324, 633, -402, -552, 635, 510, 2, 634,
	257, 257, 257, 257, 257, 364, 462, 634, 544, -619,
	-333, -339, 479, 529, 594, -110, 366, 634, 638, -394,
	38, 631, 635, -546, 2, 2, -541, 584, 633, 633,
	-440, 633, 196, -619, -339, 529, 479, -625, -393, -393,
	544, -293, 2, -324, -400, -271, 159, -400, -400, -271,
	638, 159, -307, -328, -333, -336, -339, -293, -557, -559,
	-271, -329, -650, 634, 548, -459, -354, 418, 501, 441,
	480, 524, 9, 9, 638, -552, -215, 471, 330, -306,
	-306, -306, -306, 638, -651, 97, 544, 81, 633, 472,
	-286, 292, 544, -463, 226, 81, -574, 97, -310, -575,
	-293, 75, 563, 406, 193, 157, -651, 97, 406, -651,
	97, 2, 244, 97, 485, 508, 633, 29, 63, -508,
	43, 43, 29, -630, -631, 279, 196, 600, 528, 242,
	472, 544, 544, -508, -426, -522, 122, 303, 304, 63,
	-547, -547, 63, -547, -547, -547, 594, -547, 594, -327,
	-508, 472, 544, 544, 544, 428, 519, 428, 519, -279,
	-154, 519, 544, 544, -154, 29, -200, 449, 131, -674,
	615, 428, 279, -631, 544, 196, 638, 43, 43, 29,
	-630, 196, 544, -349, -308, 578, 44, 578, 44, 578,
	544, 44, 472, 544, 638, 44, -262, -620, -620, -222,
	-221, -293, 5, -392, -265, -561, -264, 328, 77, 544,
	544, -15, 485, -627, -298, 109, 336, 296, 337, 101,
	333, 100, 332, 107, 334, 108, 335, 585, 349, 586,
	350, 66, 331, 307, 338, 505, 339, 587, 351, -299,
	-300, 150, 385, 576, 124, -557, -15, -15, 485, 379,
	440, 159, -647, 233, 29, -636, 233, -516, 233, -516,
	-341, -293, 635, -140, -472, -472, -140, -472, -140, 48,
	159, 159, 2, 2, -670, 272, 633, -358, 346, 196,
	-392, -517, 638, 254, -324, 175, 159, -557, -425, -424,
	346, -329, 226, 2, 159, -382, 346, 153, 633, 416,
	2, 159, -309, 226, -294, -293, -444, -273, 532, 159,
	-422, 574, -454, -140, 633, 131, 39, -454, -411, -412,
	-514, -413, -310, 633, -317, -469, -111, -518, 634, 634,
	634, -222, 368, -236, -383, -311, -310, 123, 420, 420,
	-229, 594, -136, -137, 634, 638, -516, 233, 511, -137,
	-561, -223, -223, -516, -516, -324, 189, -561, -136, -223,
	-223, -223, 2, 2, 2, 2, -428, -324, -307, -349,
	-324, -335, 233, 29, 635, -559, -559, -339, -340, -338,
	-293, -333, -428, -307, -428, -307, -428, -307, -428, -428,
	-140, -472, 508, 2, 482, 189, 189, 635, -428, 8,
	-385, 451, 5, 2, 416, 124, 528, 383, 242, -324,
	-349, -324, -349, -307, 124, -307, 125, 124, -324, 4,
	-508, -419, -251, 365, 268, 489, -451, -452, -474, 461,
	462, -452, 461, 462, 8, 9, 8, 9, -255, 493,
	352, -400, 638, -260, 40, 139, 268, -324, -550, 600,
	155, -472, -472, 544, -676, 522, -479, 155, -472, 322,
	353, 554, 174, 564, 143, 357, 196, 633, -473, -473,
	634, -404, -472, -472, 632, 641, 634, 635, 634, -388,
	638, -386, -472, -402, -402, 634, 635, -402, -392, 632,
	632, 638, 634, -490, -491, 148, -472, 544, 544, 544,
	544, 633, 634, 635, -608, 375, 633, 633, -472, 634,
	634, 634, 634, 39, 638, 638, 638, 634, 638, 638,
	638, 634, 634, 634, 638, 634, 600, 600, 634, 634,
	634, 634, 638, 634, 638, 634, 196, 634, 634, -442,
	390, 634, 11, 12, 623, 624, 625, 626, 187, 627,
	628, 621, 622, 620, 613, 614, 615, 90, 299, 463,
	14, 15, 16, -352, 257, 233, -473, -473, -473, -473,
	634, -477, -478, 196, 189, 39, -437, -437, -437, 634,
	196, -402, 634, 634, 633, -601, 301, 346, 634, -466,
	-465, 592, -513, -396, 2, -503, -319, -552, -466, -466,
	-402, -472, 263, 263, -430, 574, 364, -432, -503, -496,
	-548, -471, -470, 191, 40, 139, 340, 341, 342, 229,
	192, -496, -317, -382, -496, -496, -552, -497, -497, -495,
	634, -616, -548, 634, -397, -506, -595, -388, 635, -552,
	-233, -596, -201, 5, 353, -201, -201, -201, -201, -324,
	-559, 544, 544, 233, 233, 26, 391, -522, 631, 632,
	8, -552, 633, -546, -546, -546, -559, 196, 196, 233,
	233, 364, 196, -557, 2, -271, -400, -271, -271, -349,
	-350, -271, -271, -271, -423, 594, -549, -458, 561, 86,
	418, 540, -549, 121, 471, -267, 440, 485, -310, -310,
	-324, -240, -239, -237, -293, 5, -334, -293, 210, 429,
	-557, 346, -463, 226, -272, 346, 226, -318, -522, 633,
	-446, 596, 268, 268, 574, -310, -318, 268, 226, -310,
	226, -318, 2, -318, -628, 418, 358, -472, -238, -237,
	63, -365, 290, 416, 347, -268, 440, 485, 379, -140,
	-140, -140, 633, -650, 574, 142, -324, -349, -324, -334,
	-557, -329, 485, 379, 440, 343, -343, -547, -547, -547,
	-424, 485, 379, 440, -334, -557, -327, -557, -278, 226,
	-293, 428, -278, 226, 428, 428, 472, -307, 428, 600,
	47, -674, 544, 196, -472, -472, -269, -140, -140, -140,
	633, -308, -270, 440, 5, 226, -310, 5, -310, 226,
	5, -293, -310, -334, -557, -654, 25, 147, -310, -223,
	638, 615, 615, -266, 615, -334, -557, -298, 385, -561,
	353, 570, -307, -626, -314, 472, 544, 544, -508, -643,
	-644, 212, 454, 472, 457, -559, -136, -226, 594, -136,
	-220, 237, 625, -623, -561, -293, 583, -293, -356, -359,
	-357, -310, -464, -463, -578, -579, -574, 284, 242, 563,
	256, 175, 97, -241, -242, 596, 594, 159, -347, -324,
	631, -223, -621, -561, 175, -315, -293, -336, -337, 159,
	-382, 346, -557, 39, 159, 633, 2, 2, -328, 364,
	346, -309, 226, -274, 149, -674, -307, -466, -396, -421,
	-456, 451, 364, -383, 579, -317, -421, -398, 638, 196,
	615, 635, -383, -512, 625, -111, -111, -223, 633, 633,
	-561, 634, 638, 635, 633, 615, 615, -231, 368, -230,
	151, 270, 255, 495, 496, 497, 498, 141, 494, 128,
	327, 238, 534, -516, -561, -229, -137, 196, -516, 233,
	196, -71, 594, 528, 233, -223, 637, 472, 457, -293,
	635, -428, -428, -428, 482, 482, -293, 189, -392, -320,
	-552, -307, -324, -321, -349, 189, 189, -307, -307, 567,
	-452, 365, 295, -499, -261, 602, -324, 637, -472, -472,
	155, 155, -472, -473, -473, -472, 155, 196, 633, -472,
	-483, 34, 34, 634, 638, -468, -472, -351, 634, 582,
	-388, -388, 634, 625, -552, 637, 634, -481, 152, -472,
	538, 308, 224, 306, -441, 306, -441, -441, -546, 5,
	-552, 625, -609, -313, 633, -293, 592, -387, 370, 634,
	-524, -522, -472, -472, -472, -472, -472, -546, -527, -527,
	-542, -542, -472, -477, -472, -524, -522, -473, -473, -473,
	-473, -473, -473, -473, -473, -473, -473, -473, -473, -473,
	-473, -473, -473, -473, -473, -473, -473, 143, 346, 357,
	-473, -478, -477, -472, -472, -522, 634, 634, 634, -402,
	-110, 633, 301, -415, 215, -472, -516, 638, -415, -415,
	634, -503, -503, 633, -472, 263, 632, 638, 640, 615,
	615, -382, 635, -495, -496, 632, 634, 638, 634, 638,
	-455, 39, 634, -552, -466, -235, -234, 140, 56, 111,
	138, 353, 361, 195, 220, 415, 155, 190, 149, 257,
	-645, 594, -559, -559, 472, 472, 367, 5, 8, 631,
	632, 635, -546, 634, 634, 634, -559, -559, 472, 472,
	-617, 557, 472, 29, -559, -271, -271, 123, 330, -472,
	-212, 594, 596, 544, 544, 634, 638, 615, 63, 233,
	159, 346, 576, 346, -575, 157, -580, -472, 633, 242,
	633, 633, 2, -257, -258, -259, 147, 485, 25, -652,
	2, 574, 159, -271, 159, -271, 598, 634, 638, -365,
	633, 633, 544, 472, -286, 544, 594, -402, -472, -224,
	131, -551, -632, 637, -632, 637, 472, 544, 544, 472,
	544, 544, 346, -293, 159, -293, -293, 594, 173, 173,
	600, -278, -472, -472, 189, 544, 594, -402, 544, -526,
	51, 27, 346, -328, -271, 159, 544, 544, 557, 485,
	-221, -561, -561, -136, -561, -561, 353, -15, -334, -557,
	-329, 485, 379, 440, -625, -625, 212, -339, -647, -516,
	-228, 368, -227, 151, 453, 141, 270, 238, -516, -226,
	196, 254, 594, -329, 2, 634, 634, 638, 638, -581,
	-272, -324, -309, 242, 242, -316, -294, 39, 361, 361,
	633, -324, -91, 594, -515, -548, -315, 45, -327, 39,
	159, -626, -140, -329, -520, -521, 5, 39, -324, 159,
	364, 346, -275, 277, -674, -556, -596, -388, -421, -410,
	347, 95, 634, -466, -412, -396, -472, 2, 634, -222,
	-561, -223, -236, -311, 2, -562, -561, -561, 638, 633,
	615, 615, 615, 615, 615, 615, 615, -229, -516, -136,
	-229, -137, -140, 368, -324, -136, 625, -334, -335, 625,
	-428, 5, -371, -370, 383, 357, -371, 461, 461, 365,
	183, 273, -260, -308, -472, -472, 155, 34, 34, -472,
	-472, -483, 634, -472, -472, -402, 632, 5, -472, 634,
	634, 8, -472, 634, 635, -610, -293, -472, 634, 63,
	634, 634, 638, 638, 634, 634, 634, 634, 634, 634,
	634, -478, 196, 143, 357, 633, 634, 634, -110, -480,
	218, 63, -503, -480, -480, -430, -392, -503, -470, -308,
	631, -308, 631, -552, -548, -506, 633, 635, -234, 615,
	-561, -561, 2, 2, 2, 5, 5, 415, 346, 353,
	5, -201, 212, -645, -645, 594, -339, -339, 632, 2,
	631, -552, 634, -339, -339, 196, -619, -339, 529, 123,
	189, 223, 223, -310, -310, -239, -549, 528, 461, -278,
	406, -463, 159, 159, -582, 97, -584, 79, 175, 106,
	346, 353, 563, 406, 75, 131, 364, 425, -664, -665,
	-666, 39, 605, 606, 634, -390, -500, -595, 633, -293,
	-390, -392, 346, 516, 131, 364, 346, 131, 364, 589,
	123, 2, 557, 82, -310, -318, -237, -392, -392, -324,
	-334, -557, 167, 634, 638, 615, 2, 625, 625, -334,
	-557, -329, -334, -557, -327, 159, 579, -278, 579, 381,
	173, 544, -140, -472, 167, 634, -308, 5, 5, 159,
	-305, 79, -310, 5, -310, -328, 123, 594, 472, 544,
	544, 364, 364, 367, -643, -644, -226, 638, 633, 615,
	615, 615, -226, -562, -136, 2, -382, -372, 244, -310,
	-579, -576, -577, 406, -464, -583, -585, 175, 406, -360,
	633, -309, -294, 633, -140, 2, -240, 633, -358, 368,
	632, -557, -425, -140, -329, -380, 594, -382, 634, 638,
	153, -447, 574, -308, -324, 159, -276, 276, -674, -556,
	-273, -450, -448, 144, 633, 364, -140, -388, 615, 634,
	634, 123, 634, -230, -231, -561, -136, -561, -561, -561,
	-136, -561, -229, -516, -516, -72, -73, 242, 97, 388,
	-223, -321, 528, 242, 633, 633, -260, -472, -472, -472,
	634, -388, -552, 625, -604, 383, 634, -499, -472, -472,
	-473, 196, 633, -483, 634, -605, 593, -472, -416, -417,
	-472, 459, 112, 216, -605, -605, 634, -548, -548, 2,
	-561, 2, 2, 353, 2, 2, 367, 2, 544, 544,
	631, 2, 196, 196, -559, 196, 196, 233, -140, 233,
	39, 428, -463, -318, -318, -322, -315, 175, 226, 353,
	589, -446, 268, 633, -473, 567, -324, 633, 2, 225,
	225, 31, 63, -667, 135, 246, 634, 638, -501, -304,
	-293, -472, -501, 634, 634, 353, 567, 353, 589, -472,
	567, -522, 633, -271, -271, 634, 634, -472, 544, -551,
	104, -549, 2, -632, -278, -392, -392, -307, -472, 189,
	-472, 544, 5, -271, -322, -271, -271, -305, 557, 363,
	-334, -557, -329, -648, 529, 479, 558, 473, 199, 460,
	-648, 189, -227, -228, -561, -136, -136, -226, 39, -366,
	-367, 2, -581, 268, -315, 268, 235, 158, -390, 633,
	633, -392, -663, 594, 634, -356, -241, -92, -93, 545,
	-515, -382, 330, 123, 39, 5, 633, 633, -293, 364,
	633, -308, -288, 96, -674, -556, -274, -421, 347, -392,
	97, -450, -479, -223, 633, -223, 634, -649, 39, -229,
	638, 29, 633, 29, 633, -324, -349, -402, -402, 634,
	-388, 63, 638, 634, 634, -473, -483, 634, -606, -607,
	-313, 638, 633, 633, 486, 632, 632, 2, -559, -559,
	2, -559, -559, -559, -559, 472, -278, 406, -293, -575,
	-584, -315, 346, -242, 574, 594, -472, -473, -295, 633,
	-472, 633, 633, 39, 131, 246, 136, 231, -462, -668,
	105, 517, 234, -500, -260, 634, -461, 574, 425, -473,
	-305, -390, 633, 633, 633, 615, 196, -140, 633, -526,
	-271, -328, 615, 544, 2, 2, 196, -625, 634, -638,
	423, -140, -241, 633, -242, -361, 84, 98, 132, 225,
	200, 243, 508, 514, 29, -361, 634, -390, -390, 634,
	-362, 364, 123, 330, 634, 39, -93, 9, 39, 123,
	-140, -520, -390, -324, -390, 364, -280, -279, 285, -556,
	-275, 634, -318, -421, -562, 534, -73, -392, -392, 634,
	634, -611, 416, 462, 217, -402, -389, 634, 638, 39,
	-417, 2, 2, 2, -645, -645, -339, 428, -272, 159,
	219, 634, -586, 300, -293, 634, -425, -425, 39, 136,
	231, -368, -364, 633, -261, -501, -242, 219, -324, -633,
	574, 634, -374, -373, -370, -376, -375, -370, -402, -549,
	104, 381, -402, -305, -136, -559, -559, 364, -640, 197,
	-639, 5, 10, -362, -391, -502, -310, -461, 634, 634,
	85, 123, -372, -140, -140, 2, -380, 634, 634, -447,
	634, -324, -277, -563, 428, 430, -674, -276, -466, 144,
	634, -548, 4, 634, 634, 634, -612, -613, 53, 560,
	113, -472, -612, -612, -607, -609, 196, 175, -460, 603,
	-587, -590, -589, 610, 492, 197, 382, 634, 516, 588,
	634, 634, -667, -392, -460, -382, -472, -461, 634, 638,
	579, 634, 638, 579, 634, 196, 634, -271, -645, -271,
	-648, -225, 594, 48, -287, -286, 634, 638, -462, -461,
	-368, 405, 137, 147, -366, -663, -461, 633, -462, 633,
	-285, -284, -674, -542, -288, 144, 347, 567, -223, -614,
	157, -613, 402, 188, 461, 402, 188, -614, -614, -559,
	-315, -242, 58, -589, 610, -590, 610, 567, 137, -466,
	634, -586, -242, -373, 233, -375, 196, 381, 196, 469,
	-639, 31, -242, -502, -368, -462, -242, 462, 462, 2,
	-241, -362, -462, -390, -368, -390, -281, -282, -283, -392,
	-280, 347, 567, 485, 113, 215, 539, 330, 34, 615,
	-588, 330, 448, 67, 485, -588, -587, 633, 633, -559,
	368, -242, -368, -466, 2, -362, -368, 634, -242, 634,
	-558, 379, -277, 485, -411, 461, 372, -613, -472, 24,
	353, 131, -667, -402, -402, -271, -222, 633, -466, -242,
	-287, -242, -461, -466, -462, -674, -285, -411, -466, 634,
	634, -222, -466, -466, -462, -368, -557, -281, -466, -363,
	-364, 544, 634, -368, -242, 633, -242, -466, -402, -466,
	634, -363,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 591, 592, 594, 595,
	596, 598, 599, 601, 603, 605, 606, 607, 609, 610,
	612, 613, 614, 615, 616, 618, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 707, 709, 0, 1564, 1566, 1568, 1570, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	375, 377, 379, 381, 0, 413, 415, 416, 418, 420,
	421, 423, -2, 0, 524, 525, 527, 529, -2, 0,
	1143, 1145, 1147, 0, 695, 697, 0, 1150, 1152, 1154,
	0, 0, 719, 720, 0, 1678, -2, 711, 713, 715,
	717, 796, 798, 800, 802, 804, 806, 808, 810, 812,
	814, 815, 817, 819, 821, 823, 825, 826, 828, 830,
	832, 833, 835, 836, 838, 840, 842, 844, 846, 848,
	850, 852, 854, 856, 858, 860, 862, 864, -2, 867,
	868, 869, 871, -2, -2, 0, -2, -2, -2, 1582,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 71, 474, 476, 478, 480, 482, 485, 487, 489,
	1736, 531, 533, 535, 537, 539, 541, 543, 0, 0,
	-2, 1750, 0, 0, 0, 960, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 127, 128, 129, 130,
	131, 132, 133, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 124, 125, 84, 0, 0, 1709, 1711,
	1713, 1715, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 33, 35, 37,
	39, 593, 597, 600, 602, 604, 608, 611, 617, 619,
	621, 576, 577, 580, 2450, 2468, 2469, 2470, 2473, 2474,
	2475, 2476, 2477, 2478, 2964, 3045, 3046, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852,
	2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872,
	2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882,
	2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892,
	2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902,
	2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912,
	2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922,
	2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932,
	2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942,
	2943, 578, 579, 1337, 0, 660, 658, 2433, 661, 2747,
	663, 665, 518, 519, 520, 521, 522, 523, 0, 688,
	674, 1748, 689, 691, 692, 693, 694, 655, 653, 0,
	693, 688, 2505, 686, 1562, 1563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 453, 1400, 1401,
	1402, 1547, 1548, 2800, 1589, 0, 259, 708, -2, -2,
	2929, -2, 750, 751, -2, -2, 765, 769, 760, 2933,
	0, 2803, 2786, -2, 772, 1565, 1567, 1569, 872, 873,
	874, 2454, 878, 876, 888, 889, 892, 0, 909, -2,
	0, 2501, 2770, -2, -2, 910, 911, -2, -2, -2,
	-2, 890, 891, 0, 0, 0, 0, 0, 44, 46,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 269, -2, -2, -2, -2, 2809,
	0, 0, 2851, 2560, 2401, 2470, 2404, 2399, 376, 378,
	380, 382, 383, 0, 0, 0, 0, 0, 0, 0,
	414, 417, 419, 422, -2, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 1209, 1210,
	1467, 0, 0, 0, -2, 526, 528, 581, 582, 0,
	1737, 1737, 589, 590, -2, 0, 0, 0, 0, 337,
	327, 1144, 1146, 1148, 1149, 0, 0, 0, 0, 0,
	696, 698, 0, 0, 2845, 301, 1151, 1153, 1155, 1156,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 712,
	714, 716, 718, 797, 799, 801, 803, 805, 807, 809,
	811, 813, 816, 818, 820, 822, 824, 827, 829, 831,
	834, 837, 839, 841, 843, 845, 847, 849, 851, 853,
	855, 857, 859, 861, 863, 865, 866, 917, 0, 0,
	0, 0, -2, -2, -2, 0, 0, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 1029, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 0, 1121, 0, 0, 920, 923,
	924, 925, 926, 927, 928, 929, 0, 1002, 1027, 1028,
	1038, 870, 0, 1380, 1738, 1591, 1572, 1586, 1591, 1574,
	1575, 1576, 1577, 1578, 1583, 1585, 1579, 1580, 1581, 50,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 475, 477, 479, 481, 483, 486, 488, 490, -2,
	1707, 1708, 532, 534, 536, 538, 540, 542, 544, 699,
	0, 702, 0, 922, 701, -2, 0, 1742, 1742, 1742,
	0, 0, 1708, 1706, 0, 0, 0, 705, 706, 776,
	777, 2015, 0, 0, 0, 0, 0, 0, 0, 0,
	2275, 2103, 0, 778, -2, 2136, 2138, 2904, 2720, 2929,
	2274, 2140, 2141, 2142, 2143, 2144, 0, 2146, 2147, 2148,
	2149, 2150, 2151, 0, 2153, 0, 2158, 2159, 2160, 0,
	2911, 2378, 2464, -2, 0, 0, 2917, 2460, 0, 2241,
	2176, -2, -2, 2487, 2466, 1947, 1948, 1949, 1950, 1951,
	-2, -2, 2947, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 0, 2892, 2912, 2913, 2918, 2920,
	2914, 2901, 2201, 2574, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1974, 1983, -2,
	-2, -2, -2, -2, -2, -2, 2905, 2906, 2923, 2926,
	2932, 2937, 2938, 2910, 2919, 2946, 2948, 2949, 2950, 2951,
	2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961,
	2962, 2963, 1975, -2, -2, -2, -2, 0, 1725, 2763,
	1728, 1337, 1726, 1710, 1712, 0, 1714, 0, 0, 0,
	1719, 1745, 1743, 0, 1794, 1723, 1724, 1817, 1817, 1841,
	0, 1822, 0, 1841, 1737, 1868, 0, 1828, 2791, 2177,
	2178, 0, 2470, 2465, -2, -2, 2944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 656, 0,
	662, 664, 0, 0, 0, 687, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	2912, 0, 0, 0, 465, 0, 467, 468, 469, 470,
	471, 472, 473, 229, 2912, 549, 574, 0, 229, 2912,
	552, 229, 2912, 555, 0, 558, 1465, 229, 2912, 561,
	2429, 229, 2912, 564, 566, 2437, 229, 2912, 570, 2444,
	2442, 571, 0, 573, 249, 245, 246, 247, 248, 1558,
	1559, 1560, 1561, 0, 1588, 1466, 710, 0, 736, 0,
	748, 749, 2900, -2, 0, 2812, 753, 754, -2, 756,
	1592, 1596, 1597, 1598, 1599, 1600, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 743, 744, 763, 764, 770,
	773, 0, 881, 877, 893, 0, 908, 0, 909, 909,
	2418, 2409, 2410, 0, 0, 909, 909, 0, 0, 912,
	913, 914, 915, 916, 83, 0, 2912, 1868, 85, 0,
	2423, 2495, 2496, 2497, 2498, 2499, 2945, 2965, 2966, 2967,
	2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977,
	2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987,
	2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997,
	2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007,
	3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017,
	3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027,
	3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037,
	3038, 3039, 3040, 3041, 3042, 3043, 3044, 2947, 89, 0,
	2912, 94, 0, 2912, 0, -2, 110, 0, 126, 0,
	153, -2, -2, -2, 134, 0, 2912, 0, 2398, -2,
	0, 241, 328, 329, 330, 0, 637, 0, 646, 340,
	341, 2483, 2484, 2491, 2492, 2493, 2494, 0, 739, 2275,
	0, 0, 1181, -2, 0, 1393, 1395, 1395, 0, -2,
	0, 0, 1130, 2395, 2400, 0, 1132, 1133, 1134, 2419,
	1135, 2405, 0, 384, 385, 386, 387, 388, 0, 389,
	2912, 391, 392, 0, 394, 395, 2912, 397, 398, 0,
	400, 0, 402, 0, 281, 285, 2912, 2912, 426, 429,
	0, 431, 432, 0, 434, 0, 0, 0, 438, -2,
	454, 0, 451, 441, 442, 444, 445, 446, 447, 448,
	0, 494, 492, 2434, 0, -2, 2912, 0, 1178, 0,
	0, 1445, -2, 0, 1386, 0, 1452, 2912, 1448, 0,
	-2, 0, 1735, 2912, 1609, 1213, 1214, 1215, 1216, 1880,
	515, 0, 1642, 0, 1644, 0, 1664, 1874, 1817, 0,
	0, 1879, 0, -2, 634, 2453, -2, 584, 0, 585,
	0, -2, 0, 354, 0, 0, 1159, 1161, 1162, 1164,
	1165, 1168, 1169, 1170, 1171, 0, 1173, 1854, 302, 304,
	0, 0, 0, 0, 1158, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 0, 0, 721, 0, 0, 918,
	919, 0, 0, 937, 938, 939, 0, 0, 354, -2,
	-2, -2, 947, 0, 954, 957, -2, 0, 0, 0,
	0, 964, 0, 969, 970, 971, 0, -2, 0, 978,
	980, 1142, 982, 0, 0, 984, 0, 988, 0, 991,
	0, 993, 0, 995, -2, -2, -2, 1003, 1004, -2,
	1009, -2, 0, 1013, -2, 0, 1016, 0, 1019, -2,
	0, 1029, 1025, 1026, 0, 0, 0, 0, 1046, 1047,
	0, 1056, 0, 1059, 1060, 1061, 0, 0, 1066, 1067,
	0, 1069, 1070, 1071, 1073, 1074, 1075, 0, 2881, 2809,
	2560, 0, 1083, -2, 1089, 1091, 0, -2, 0, 1107,
	0, 1111, 0, 0, 1120, 0, 0, 0, 921, 0,
	930, 931, 932, 229, 1872, 1571, -2, 1573, 0, -2,
	0, 700, 0, 704, 1767, 1693, 1690, 0, 1764, 1765,
	1694, 0, 0, 0, 1701, 0, 1740, 1741, 0, 0,
	0, 1680, 1681, 0, 0, 0, 0, 0, 0, 2280,
	2281, 2282, 2283, 2296, 2284, 2285, 2295, 2293, 2294, 2286,
	2287, 2292, 2306, 2307, 2297, 2298, 2288, 2301, 2299, 2300,
	2302, 2303, 2304, 2305, 0, 0, 2311, 0, 2289, 2290,
	2291, 2319, 0, 0, 2320, 0, 2322, 0, 2312, 2308,
	2309, 2310, 0, 2082, 2084, 2386, 0, 0, 0, 2318,
	2313, 2314, 2020, 2021, 2022, 2023, 2024, 2057, 2061, 2062,
	0, 0, 2137, 2383, 2382, 2139, 0, 0, 2334, 0,
	2152, -2, 0, 2275, 2329, 0, 0, 2161, 2162, 2163,
	0, 0, 2334, 0, 0, 2377, 2173, 2174, 2012, 0,
	0, 2243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 1960, 0, 1962, 0, 1963, 1964, 1971, 1984, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 2358, -2, 0, 0, 0, 0, 1976, 0, 0,
	1727, 0, 0, 1798, 2387, 2391, 2392, 1798, 1798, 0,
	0, 2335, 1865, 1865, 0, 0, 1860, 1860, 1860, 1858,
	1841, 0, 1841, 1851, 0, 1841, 1841, 0, -2, 1822,
	0, 0, 1851, 0, 1835, 622, 624, 626, 628, 629,
	630, 632, 1869, 1870, 0, 0, 0, 0, 2471, 0,
	0, 0, 0, 0, 0, 2456, 0, 0, 2428, 409,
	410, 0, 0, 0, 2863, 2803, 0, 667, 690, 1737,
	0, 2337, 1895, 1899, 0, 1901, 1902, 1903, 1904, 1905,
	0, 0, 1896, -2, 1972, 1974, 1995, 2488, 2489, 2490,
	1955, 1956, 1957, 1958, 1959, 1967, 1954, 1954, 1954, 1965,
	1994, 1986, 1994, 1990, 1940, 1941, 1942, 1977, 1978, 1979,
	1980, 0, 2863, 2803, 0, 0, 677, 0, 0, 1675,
	455, 0, 462, 463, 464, 0, 545, 0, 227, 228,
	0, 229, 2912, 550, 0, 553, 0, 229, 2912, 2393,
	559, 0, 562, 0, 0, 568, 0, 0, 0, 0,
	0, 229, 1677, 0, 0, 0, 0, -2, 758, 766,
	767, 768, 0, 1594, 0, 1601, 787, 788, 789, 1603,
	1604, 0, 1606, 761, 790, 791, 792, 793, 794, 795,
	0, 2407, 2408, 2413, 2414, 0, 0, 759, 780, 762,
	0, 774, 884, 879, 880, 894, 895, 0, 0, 2411,
	2412, 0, 0, 900, 901, 135, 1544, 0, 0, 182,
	0, 1544, 1544, 0, 0, 0, 0, 210, 0, 0,
	1247, 0, 0, 0, 0, 153, 167, 178, 147, 148,
	149, 0, 0, 0, 0, 0, 0, 95, 1359, 0,
	1362, 0, 0, 0, 0, 0, 0, 0, 1375, 1378,
	0, 0, 0, 0, 0, 112, 113, 0, 0, 118,
	119, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	1639, 0, 157, 153, 0, 0, 152, 154, 137, 0,
	0, 153, 168, 180, 0, 216, 218, 1244, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 251, 0, 636,
	638, 0, 0, 0, 0, 644, 0, 647, 0, 737,
	741, 742, 0, 0, 738, 740, 0, 0, 1387, 0,
	0, 0, 1734, 0, 0, 0, 0, 2912, 1542, 0,
	1525, 0, 1854, 2649, -2, -2, 302, 1854, 0, 1131,
	0, 2471, 2403, 0, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 430, 433, 435, 436, 437, 0,
	1444, 0, 443, 484, 1306, 2912, 0, 0, 513, 506,
	0, 509, 0, 0, 1358, 2912, 1356, 2438, 0, 1384,
	0, 1337, 2912, 2436, 0, 0, 0, 1453, 2480, 1462,
	1466, 1627, 0, 517, 0, 1645, 1647, 0, 0, 1875,
	0, 1877, 1817, 1737, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 1172, 311, 0, 1853, 0,
	0, 342, 1854, 302, 2776, 0, 1157, 354, 354, 1854,
	723, 1854, 725, 0, 0, 940, 0, 0, 943, 354,
	354, 354, 952, 953, 955, 956, -2, -2, -2, -2,
	958, 959, 1053, 0, 0, 0, 1052, 1540, 0, 974,
	977, 981, 0, 1124, 2786, 2803, 2863, 1140, 1053, 2560,
	1053, 2560, 1053, 2560, 1053, 1053, 997, 1041, 1049, 1008,
	1015, 0, 1010, 1014, 1017, 1020, 0, 1022, 1030, 0,
	-2, 0, 1033, 0, 1035, 0, 1037, 1053, 1054, 1057,
	0, 1065, 1068, 0, 1076, 1077, 1078, 1079, 2451, 1080,
	1081, 1082, -2, 1086, 1087, 0, 1098, 1103, 1104, 1100,
	0, 0, 0, 0, 0, 0, 1114, 1115, 0, 0,
	0, 1123, 0, 933, 1379, 0, 1584, 1767, 1693, 703,
	1684, 1766, 1685, 1692, 1695, 0, 0, 1697, 0, 1699,
	0, 1762, 1763, 1770, 1771, 0, 1781, 1782, 1774, 0,
	-2, 0, 0, 1777, 1778, 1703, 0, 1720, 1721, 1722,
	1751, 1754, 1481, 0, 3045, 746, 0, 2016, 1890, 2017,
	2018, 2422, 0, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, -2, -2, -2, -2, -2, -2, -2,
	-2, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, -2, -2, -2, 2058, 2059, 2060, -2, 2321,
	2323, 0, 2386, 0, -2, 0, -2, -2, -2, -2,
	2079, 0, 2081, 2086, 2088, 2090, 0, 0, 0, 0,
	2385, 2100, 2369, 2370, 0, 0, 2277, 2278, 2279, 2085,
	0, 2104, 2384, 2381, 0, 0, 2315, 0, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 0, 2333, 1750, 2165, 0, 0, 0, 0, 2172,
	2157, 2331, 0, 2330, 0, 0, 0, 2341, 0, 2376,
	2372, 0, 2420, 2011, 1998, 1999, 2000, 2001, 2002, 2003,
	2013, 0, 2417, 2457, 2463, 2251, 0, 0, 0, 2202,
	2203, 2204, 2205, 2206, 0, 2208, 2209, 0, 2211, 2212,
	0, 2214, 2215, 0, 2217, 2218, 2219, 2220, 2221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 0, 0,
	2223, 0, 2344, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2225, 0, 2227, 2335, 2355, 0, 0, 2105,
	0, 0, 0, 0, 0, 2230, 2335, 2363, 0, 0,
	0, 0, 0, 2335, 0, 2368, 0, 2237, 0, 2239,
	961, 962, 1729, 0, 0, 1885, 0, 0, 0, 2390,
	1885, 1885, 0, 1793, 0, 0, 1861, 1862, 1863, 1864,
	0, 0, 1865, 0, 1855, 1859, 1856, 1857, 1851, 1814,
	0, 0, 2424, 1851, 1820, 1850, 0, 1337, 1840, 1851,
	1851, 0, -2, 1824, 1841, 0, 0, 623, 625, 627,
	631, 633, 0, 0, 1750, -2, 0, -2, 356, 1336,
	0, 0, 0, 0, 0, 0, 657, 659, 0, 0,
	565, 0, 0, 0, 0, 651, 0, 654, 0, 1886,
	1889, 0, 0, 1900, 1906, 1907, 0, -2, 0, 0,
	1996, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 466, 575, 229, 547, 0, 229, 229, 556,
	0, 0, 229, 567, 229, 2445, 229, 2443, 250, 572,
	1676, 262, 0, 745, 0, 1593, 1602, 0, 784, 0,
	786, 0, 2415, 2416, 0, 775, 0, 882, 0, 896,
	897, 898, 899, 0, 0, 0, 0, 1543, 0, 0,
	1488, 0, 0, 186, 2912, 0, 231, 0, 0, 1299,
	2430, 0, 1289, 0, 0, 2582, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 150, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 1360, 1361, 1363, 1370, 1372, 0,
	1366, 1367, 0, 1369, 1371, 1373, 0, 1376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	1396, 0, 0, 0, 1397, 1398, 1399, 1615, 1616, 0,
	1638, 1639, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 2397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 354, 641, 642,
	350, 347, 349, 643, 648, 0, 649, 0, 0, 0,
	0, 1389, 0, 1440, 1438, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 0, 0, 0, 0, -2, 1391, 1392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 345,
	2396, 2406, 0, 1166, 1167, 390, 393, 396, 399, 268,
	0, 0, 428, 439, 0, 0, 1219, 1191, 0, 0,
	493, 354, 0, 0, 508, 0, 2449, 1176, 1354, 1357,
	0, 1337, 2912, 1408, 0, 0, 0, 0, 0, 0,
	1451, 0, 0, 2912, 2425, 2479, 2480, 1629, 1639, 0,
	1885, 0, 1662, 1648, 0, 0, 0, 1662, 1666, 1667,
	1669, 1670, 0, 0, 1876, 1882, 583, 635, 1737, 1737,
	354, 352, 2723, 0, 0, 1651, 1653, 0, 0, 0,
	294, 0, 305, 1854, 303, 0, 311, 0, 0, 1854,
	302, 0, 505, 722, 727, 935, 0, 0, 354, 944,
	945, 946, 999, 1043, 1051, 1102, 963, 965, 966, 967,
	0, 972, 0, 0, 0, 1141, 1136, 1137, 1138, 2446,
	2442, 1139, 983, 1053, 986, 1053, 989, 1053, 992, 994,
	1012, 1018, 1031, 1024, 1032, 0, 0, 0, 1045, 0,
	1063, 0, 1072, 1085, 0, 0, 0, 0, 0, 0,
	0, 1108, 1109, 1110, 1112, 1117, 1116, 0, 1122, 934,
	1873, 1688, 1689, 1691, 0, 1700, 0, 0, 1776, -2,
	-2, 1775, 1779, 1780, -2, -2, -2, -2, 1696, 0,
	1705, 1702, 0, 1761, 1479, 1480, 0, 0, 747, 0,
	0, -2, -2, 0, 0, 0, 2101, 0, -2, 2080,
	2083, 2087, 2089, 2091, 0, 0, 0, 0, 0, 0,
	2324, 0, 2326, 2102, 2379, 2382, 2317, 0, 2273, 0,
	0, 1749, 1750, 1750, 0, 2171, 0, 2332, 0, 2339,
	2340, 0, 2164, 0, 2373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2175, 0, 0, 0, 0, 2207,
	2210, 2213, 2216, 0, 0, 0, 0, 2196, 0, 0,
	0, 2200, 1966, 1952, 0, 1994, 1992, 1993, 1987, 1994,
	1991, 1944, 0, 1943, 0, 2222, 0, 2224, 2226, 0,
	0, 2228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2108, 2109, 2110, 2130,
	2229, 2361, 2362, 0, 0, 0, 0, 0, 0, 2235,
	0, 2367, 2236, 2238, 1737, 0, 1730, 0, 1795, 1784,
	1884, 0, 2388, 1854, 1797, 1799, 2389, 2427, 1784, 1784,
	0, 2336, 0, 0, 1845, 0, 0, 0, 1847, 1818,
	0, 0, 1812, 0, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1819, 1337, 1849, 1821, 1825, 2457, 0, 1851, 0,
	1836, 0, 1838, 1871, 0, 1830, 1833, 0, 0, 2472,
	1885, 0, 403, 411, 412, 404, 405, 406, 407, 0,
	1528, 0, 0, 0, 0, 0, 0, 2338, 0, 1891,
	0, 1897, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 1674, 461, 546, 229, 551, 554, 2394,
	229, 560, 563, 569, 258, 0, 735, -2, 782, 783,
	785, 0, 781, 887, 883, 183, 1544, 0, 0, 0,
	1484, 0, 1202, 0, 1197, 1198, 1486, 2441, 1490, 1496,
	1499, 0, 188, 2912, 200, 0, 2912, 0, 1263, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 2912, 229,
	2912, 229, 204, 206, 209, 0, 215, 211, 0, 1199,
	0, 1251, 0, 0, 1254, 136, 1544, 0, 0, 139,
	143, 155, 0, 0, 0, 165, 0, 0, 0, 1501,
	1505, 1513, 0, 0, 0, 1364, 1365, 1368, 1374, 1377,
	96, 0, 0, 0, 1509, 1511, 1517, 111, 114, 2912,
	2439, 0, 116, 2912, 0, 0, 0, 1483, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 141, 145, 156,
	0, 1519, 138, 0, 244, 0, 0, 234, 229, 2912,
	0, 236, 0, 237, 238, 252, 0, 0, 0, 640,
	0, 0, 0, 645, 0, 1179, 1180, 1439, 0, 1382,
	1383, 0, 1394, 1388, 0, 0, 0, 0, 0, 1521,
	1522, 0, 0, 0, 1542, 1537, 1854, 264, 0, 1854,
	272, 0, 2402, 0, 286, 425, 0, 0, 0, 0,
	1218, 1317, 1220, 1222, 1223, 1224, 231, 0, 2480, 1289,
	2638, 2480, 0, 0, 1186, 0, 0, 0, 499, 495,
	0, 504, 507, 512, 0, 511, 2431, -2, 0, 0,
	0, 0, -2, 0, 0, 1455, 1449, 1450, 0, 0,
	0, 0, 2912, 1631, 1639, 0, 1735, 1750, 516, 1640,
	1662, 0, 0, 0, 1650, 1646, 1643, 1885, 0, 0,
	0, 0, 0, 1878, 1881, 586, 587, 331, 0, 0,
	354, 0, 0, 0, 0, 0, 0, 309, 0, 312,
	0, 0, 0, 317, 318, 319, 320, 321, 322, 0,
	0, 0, 0, 311, 343, 296, 1854, 0, 311, 0,
	0, 724, 0, 0, 0, 942, 0, 0, 1540, 976,
	0, 985, 987, 990, 1034, 1036, 1053, 0, 1064, 1092,
	2426, 1093, 1241, 0, 1241, 0, 0, 1113, 1119, 1698,
	0, 1773, 1704, 1755, 1756, 0, 1481, 0, 2019, 2064,
	0, 0, -2, 0, 0, 2068, 0, 0, 0, -2,
	0, 0, 0, 2325, 2327, 0, 2381, 2316, 2166, 0,
	0, 0, 2170, 2154, 2155, 0, 2276, 2342, 2371, 2375,
	0, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 0, 2421,
	2458, 2462, 2249, 2250, 2254, 2435, 0, 0, 0, 2179,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 1989,
	0, 0, 2343, 2354, 2356, 2106, 2107, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, -2, -2, -2,
	2124, 2125, 2126, -2, -2, -2, 2131, 0, 0, 0,
	2357, 2359, 2360, 2364, 2365, 0, 2232, 2233, 2234, 2366,
	0, 1737, 1731, 1792, 0, 1883, 1796, 0, 1792, 1792,
	1744, 1843, 0, 0, 1867, 0, 1815, 0, 1816, 0,
	0, 1848, 0, 1823, 1826, 1827, 1837, 0, 1829, 0,
	1832, 0, 2166, -2, 355, 357, 359, 0, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 1528, 1528, 0, 0, 668, 652, 0, 0,
	1893, 0, 0, 1969, 1973, 1997, 679, 681, 0, 0,
	0, 2863, 2803, 0, 678, 548, 557, 260, 0, 1852,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 230, 0, 1298, 0, 1261, 0, 0, 1288,
	0, 0, 1304, 190, 191, 192, 0, 0, 0, 0,
	202, 0, 0, 198, 0, 208, 214, 213, 0, 1248,
	0, 0, 0, 0, 1489, 0, 0, 0, 162, 163,
	164, 0, 169, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 1621, 1622,
	0, 1612, 159, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 1478, 254, 0, 0, 0, 0, 0,
	351, 346, 348, 0, 1381, 1442, 1443, 1390, 1502, 1506,
	1514, 0, 0, 0, 0, 0, 693, 1541, 0, 272,
	270, 0, 273, 0, 276, 277, 0, 0, 272, 266,
	0, 0, 0, 1337, 440, 1189, 1305, 0, 0, 1307,
	1225, 1229, 0, 2480, 2480, 0, 2432, 0, 1187, 0,
	0, 1306, 491, 0, 498, 0, 510, 0, 1358, 0,
	0, 1385, 1411, 1337, 0, 1454, 1456, 0, 1464, 0,
	0, 0, 1633, 1639, 0, 1626, 1627, 1769, 1641, 1660,
	-2, 0, 0, 1750, 1668, 1665, 1671, 1672, 0, 0,
	0, 334, 0, 1652, 1654, 0, 1160, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 311, 1854,
	298, 1854, 338, 0, 936, 354, 968, 1539, 973, 2447,
	1044, 1062, 1094, 1240, 0, 0, 1096, 0, 0, 1772,
	1759, 1760, 1757, 1481, 2066, 2070, 0, 0, 0, 2072,
	-2, 0, 2094, -2, -2, 2328, 2380, 2145, 1750, 2167,
	2169, 2156, 2374, 2014, 0, 2256, 2253, 0, 2240, 0,
	2191, 2192, 0, 0, 2195, 2197, 2198, 2199, 1953, 1946,
	1945, 2353, 0, 0, 0, 0, 2231, 1732, 0, 2245,
	0, 0, 1800, 2245, 2245, 1844, 0, 1846, 1813, 1801,
	0, 1810, 0, 2458, 1839, 1831, 0, 0, 360, 0,
	364, 365, 366, 367, 368, 369, 0, 0, 0, 0,
	0, 408, 0, 669, 670, 0, 0, 0, 1887, 1892,
	0, 1898, 1968, 0, 0, 0, 0, 0, 0, 261,
	0, 885, 886, 184, 185, 1203, 1201, 1493, 1497, 1494,
	0, 187, 0, 0, 1262, 0, 1265, 0, 0, 0,
	0, 1272, 1289, 0, 0, 0, 0, 0, 0, 1291,
	0, 1290, 0, 0, 1321, 0, 1469, 1476, 0, -2,
	0, 0, 0, 194, 220, 0, 0, 0, 0, 223,
	1545, 196, 0, 0, 229, 229, 1200, 0, 0, 1485,
	1487, 1500, 0, 0, 0, 0, 172, 0, 0, 1503,
	1507, 1515, 1510, 1512, 1518, 0, 0, 117, 0, 0,
	1623, 0, 158, 0, 0, 0, 1520, 242, 243, 0,
	229, 0, 229, 235, 229, 1478, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 1524, 263, 0, 0, 0,
	0, 0, 265, 344, 272, 427, 0, 1250, 0, 1317,
	1309, 1310, 1311, 0, 1221, 1316, 1318, 0, 0, 1226,
	0, 0, 0, 0, 1206, 1188, 0, 1219, 1191, 0,
	496, 1177, 1355, 1403, 1337, 1406, 0, 0, 1446, 0,
	0, 0, 0, 0, 0, 0, 1635, 1639, 0, 1628,
	1629, 1662, 1768, 0, 0, 0, 1649, 1769, 0, 353,
	354, 0, 354, 313, 0, 314, 315, 316, 323, 324,
	325, 326, 297, 308, 311, 726, 728, 0, 0, 734,
	941, 1239, 0, 0, 0, 0, 1758, 2074, -2, -2,
	2095, 0, 2459, 2461, 1750, 0, 2242, 1752, 0, 0,
	-2, 0, 0, 0, 1733, 1716, 0, 1791, 1783, 1785,
	1787, 2789, 2555, 2911, 1717, 1718, 1866, 0, 0, 1834,
	361, 370, 371, 0, 373, 374, 1527, 671, 0, 0,
	0, 1894, 0, 0, 676, 0, 0, 0, 875, 0,
	0, 1495, 189, 0, 0, 1266, 1267, 1269, 0, 1271,
	1273, 1274, 1191, 0, 1278, 0, 2482, 0, 1283, 1286,
	1287, 0, 0, 1300, 1322, 0, 1331, 0, 1471, 1481,
	1475, 0, 1473, 1333, 0, 193, 222, 195, 224, 219,
	0, 1478, 0, 197, 207, 0, 0, 140, 0, 0,
	2549, 175, 173, 171, 115, 121, 123, 1482, 161, 0,
	142, 0, 244, 253, 1477, 255, 239, 229, 0, 0,
	1504, 1508, 1516, 0, 1531, 1532, 1533, 1534, 0, 0,
	0, 0, 274, 0, 275, 278, 279, 0, 0, 1191,
	1249, 1190, 1308, 0, 1319, 1191, 0, 0, 0, 0,
	0, 0, 1193, 0, 1192, 0, 0, 497, 500, 0,
	503, 0, 0, 1410, 0, 1457, 1455, 0, 1463, 0,
	0, 0, 1611, 0, 0, 1630, 1631, 514, 1655, 0,
	0, 1662, 1673, 333, 0, 336, 310, 300, 0, 299,
	0, 730, 0, 732, 0, 1095, 1097, 0, 0, 2168,
	2260, 0, 0, 2193, 2194, -2, 0, 2134, 2244, 2246,
	0, 0, 0, 0, 0, 1802, 1811, 372, 1528, 1528,
	1888, 683, 684, 680, 682, 0, 1491, 0, 1498, 231,
	1264, 1268, 0, 1275, 0, 0, 0, 1279, 1341, 0,
	0, 1358, 1358, 1292, 0, 0, 1325, 1326, 1246, 0,
	1327, 1328, 1329, 1470, 1761, 1476, 1191, 0, 0, 221,
	226, 0, 0, 0, 0, 0, 0, 160, 0, 233,
	256, 1478, 0, 0, 1535, 1536, 0, 0, 271, 290,
	0, 1404, 1193, 0, 1320, 1227, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1228, 1333, 0, 0, 1297,
	1204, 0, 1207, 0, 1189, 0, 501, 502, 0, 0,
	1411, 0, 0, 1464, 0, 0, 1618, 1610, 1639, 1632,
	1633, 1885, 0, 1663, 0, 0, 729, 0, 0, 1105,
	1106, 0, 0, 0, 0, 2255, 1753, 2135, 0, 0,
	1786, 1788, 1789, 1790, 672, 673, 0, 1492, 201, 0,
	1335, 1277, 1346, 0, 0, 0, 0, 0, 1293, 1323,
	1324, 1321, 1245, 0, 1474, 1472, 1302, 1335, 1337, 199,
	0, 1333, 0, 1255, 0, 0, 1258, 0, 0, 176,
	2549, 174, 0, 229, 650, 1528, 229, 0, 293, 0,
	284, 282, 283, 1185, 0, 1313, 1315, 1331, 1333, 1246,
	0, 1208, 1250, 1206, 1405, 1409, 1407, 1447, 1333, 0,
	1331, 0, 1625, 1639, 1619, 1620, 0, 1635, 0, 0,
	354, 306, 307, 731, 733, 2252, 2272, 2261, -2, 2866,
	2556, 0, 2272, 2272, 2247, 2248, 0, 0, 1191, 0,
	1280, 1342, 1343, 0, 1338, 1339, 1340, 2481, 1281, 1282,
	1284, 1285, 1885, 0, 1332, 1341, 225, 1191, 1252, 0,
	0, 1253, 0, 0, 179, 0, 181, 257, 1526, 1529,
	0, 280, 0, 0, 1182, 1184, 1191, 0, 1246, 1331,
	1191, 0, 0, 0, 1191, 1193, 1331, 0, 1246, 0,
	1614, 1624, 0, 1634, 1611, 0, 1658, 0, 335, 2257,
	0, 0, 2263, 2264, 2265, 2266, 2267, 2258, 2259, 685,
	1270, 1276, 0, 1344, 0, 1345, 0, 0, 0, 1301,
	1330, 1346, 205, 1256, 0, 1259, 0, 177, 0, 0,
	288, 289, 1312, 1314, 1191, 1246, 1885, 1194, 0, 1196,
	1193, 1205, 1246, 0, 1191, 0, 1637, 1613, 1617, 2440,
	1618, 1656, 0, 0, 0, 2269, 2270, 0, 0, 0,
	1347, 0, 1350, 1351, 0, 1348, 1321, 0, 0, 229,
	0, 1885, 1191, 1296, 1195, 1185, 1191, 1333, 1885, 1331,
	1607, 1639, 1625, 0, 1885, 2268, 2271, 2262, 1334, 1349,
	1352, 1353, 1303, 0, 0, 1530, 291, 0, 1294, 1885,
	1183, 1885, 1331, 1460, 1246, 0, 1614, 1885, 1659, 1243,
	0, 0, 1295, 1458, 1246, 1191, 1636, 1608, 1657, 1257,
	1242, 0, 292, 1191, 1885, 0, 1885, 1461, 0, 1459,
	1243, 1260,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 621, 3, 627, 622, 3,
	633, 634, 625, 623, 638, 624, 635, 626, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 641, 3,
	613, 615, 614, 618, 637, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 631, 3, 632, 628, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 639, 620, 640, 616,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 617, 57956, 619, 57957, 629, 57958, 630, 57959, 636,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1569
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1595
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1622
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1623
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1745
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1789
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1800
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1812
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1962
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1966
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1995
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2016
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2024
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2060
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2071
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2083
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2104
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2175
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2186
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2205
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2215
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2225
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2234
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2245
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2251
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2277
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2282
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2373
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2417
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2427
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2430
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2436
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2488
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2683
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2687
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2871
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2879
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3033
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.targetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:     sqlDollar[8].union.asOfClause(),
				AsTenant: sqlDollar[9].union.asTenantClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3191
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3334
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3361
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3370
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3376
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3381
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3386
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = nil
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3494
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3726
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3747
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3748
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3752
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3757
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "CREATE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3793
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3799
		{
			return unimplemented(sqllex, "create access method")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplemented(sqllex, "create cast")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplemented(sqllex, "create publication")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplemented(sqllex, "create rule")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplemented(sqllex, "create server")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3821
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3825
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3828
		{
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3829
		{
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3832
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3836
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3838
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3839
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3840
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3841
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3843
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{
			return unimplemented(sqllex, "drop server")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3848
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3976
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4032
		{

			sqlVAL.union.val = nil
		}
	case 514:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DELETE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4060
		{
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "DROP")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4291
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4352
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4376
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4384
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "DELETE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "INSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "DELETE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "INSERT")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4531
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4574
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4698
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{
			return helpWith(sqllex, "GRANT")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4839
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "RESET")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "RESET")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "USE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4917
		{
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4918
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "USE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4959
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5049
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5057
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5095
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5101
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			return unimplemented(sqllex, "set from current")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5186
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5191
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5209
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5226
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = tree.Low
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = tree.Normal
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = tree.High
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5374
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5380
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5384
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = false
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = true
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = false
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = false
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5503
		{
			return helpWith(sqllex, "FETCH")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "MOVE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = int64(1)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = int64(-1)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = int64(1)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = int64(1)
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = int64(-1)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5611
		{
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5624
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5634
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5651
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.str = "client_encoding"
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5671
		{
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.str = "timezone"
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5707
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5711
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5829
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5834
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5843
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5849
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5863
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5897
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5908
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5956
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5979
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6031
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6036
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6047
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6052
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = true
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = true
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = false
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6088
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6089
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6090
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6134
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6150
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6158
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6202
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6207
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6209
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = true
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = false
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6228
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = true
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = false
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6318
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6326
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6336
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6347
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6361
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6369
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6413
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6418
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6423
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6428
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6444
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6457
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6462
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6473
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6502
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6510
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6531
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6536
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6541
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6545
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6554
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6577
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6655
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6665
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6678
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{IsSequence: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{IsSequence: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6811
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TableAttrs{IsSequence: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{IsSequence: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{IsSequence: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6858
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{IsSequence: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{IsSequence: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6934
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6935
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6946
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6948
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6987
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7032
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7040
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7115
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7151
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7166
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7194
		{

			sqlVAL.union.val = nil
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7200
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.str = ""
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7210
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = nil
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7233
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7237
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7273
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7286
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7300
		{
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7383
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7401
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.str = ""
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7539
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7646
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7691
		{

			sqlVAL.union.val = true
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = false
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7701
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7708
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7805
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7843
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7926
		{
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7927
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7929
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8013
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8098
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8107
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8115
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8126
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8144
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8154
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8156
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8160
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8166
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8171
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8218
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8252
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.str = ""
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8272
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = true
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{

			sqlVAL.union.val = true
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = false
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8310
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8324
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8336
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8348
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8358
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8368
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8372
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = true
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = true
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = nil
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8515
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8541
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8543
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8545
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8547
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8551
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8586
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8603
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8621
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8637
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8653
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8657
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = false
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = true
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = false
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = true
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = false
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8711
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8717
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8723
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8731
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.str = ""
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.str = ""
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8784
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8790
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9015
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9021
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9033
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9039
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9053
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9059
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9118
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = true
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = false
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.str = ""
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9218
		{
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9222
		{
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9251
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9260
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9329
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9386
		{
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9388
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9405
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9409
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9437
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9452
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.str = ""
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9569
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9574
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{

		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9606
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.str = ""
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.str = ""
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.str = ""
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.str = ""
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9687
		{
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9734
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9879
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9911
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9932
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9947
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10091
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10126
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10127
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10128
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10233
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10249
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = true
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = false
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10303
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = nil
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10317
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = true
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = false
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = false
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = true
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10347
		{
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10351
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10392
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10404
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10409
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10435
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10596
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10611
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10633
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10680
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10692
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10711
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10753
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10763
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10798
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10809
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10839
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10872
		{
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10874
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = nil
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = true
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = false
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.str = tree.AstFull
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.str = tree.AstRight
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.str = tree.AstInner
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10991
		{
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10992
		{
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.str = tree.AstHash
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.str = ""
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11061
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11066
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11084
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11096
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11106
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = true
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = false
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = true
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = false
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11155
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11168
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11176
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11177
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11195
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11205
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11225
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11234
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11274
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11286
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11287
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = types.Geography
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11336
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11344
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11378
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = nil
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = types.Int2
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = types.Int
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = types.Float4
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = types.Float
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11421
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11429
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11437
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = types.Bool
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11451
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = types.Float
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11470
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11476
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11498
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = types.String
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = true
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = false
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = types.Date
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11547
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11555
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11569
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11578
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11586
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11603
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = true
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = false
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = false
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = types.Interval
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11627
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11711
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = nil
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11756
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11816
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11965
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11973
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12172
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12194
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12302
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12310
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12411
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12437
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12461
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12495
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12506
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12507
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12522
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12531
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12597
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12722
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12727
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12736
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12754
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12763
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12768
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12773
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12778
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12783
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12788
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12797
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12798
		{
			return unimplemented(sqllex, "treat")
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12819
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12824
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12871
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12894
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.str = ""
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12938
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12960
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12973
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13041
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13070
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13116
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13146
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13170
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13228
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13234
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13238
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13295
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13318
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13322
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13360
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13372
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13376
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13402
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13427
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13437
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13443
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13447
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13460
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13464
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13486
		{
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13487
		{
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13491
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13495
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13501
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13514
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13518
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13536
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13559
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13599
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13603
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13607
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13611
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13617
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13621
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13636
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13640
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13652
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13656
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13665
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13676
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13685
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13693
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13710
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13795
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13803
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13807
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13813
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13836
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13863
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13870
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13874
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13878
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13892
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13896
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13900
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13913
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13922
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13940
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13953
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13960
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.str = ""
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13991
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13995
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
