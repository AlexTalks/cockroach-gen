// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:973
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15638

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1893,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	283, 576,
	-2, 0,
	-1, 75,
	8, 1041,
	29, 1041,
	648, 1041,
	649, 1041,
	-2, 0,
	-1, 76,
	8, 1041,
	29, 1041,
	648, 1041,
	649, 1041,
	-2, 0,
	-1, 78,
	1, 1740,
	139, 1740,
	270, 1740,
	358, 1740,
	421, 1740,
	431, 1740,
	629, 1740,
	661, 1740,
	-2, 0,
	-1, 79,
	1, 1740,
	661, 1740,
	-2, 0,
	-1, 85,
	263, 292,
	565, 292,
	-2, 0,
	-1, 99,
	204, 477,
	249, 1614,
	265, 1614,
	283, 477,
	423, 477,
	435, 1357,
	479, 477,
	496, 1357,
	549, 1357,
	578, 477,
	605, 1357,
	-2, 0,
	-1, 106,
	141, 1893,
	258, 1893,
	589, 1893,
	590, 1893,
	-2, 0,
	-1, 124,
	161, 1864,
	182, 1864,
	195, 1864,
	261, 1864,
	297, 1864,
	371, 1864,
	382, 1864,
	584, 1864,
	-2, 1835,
	-1, 166,
	169, 1175,
	281, 1175,
	426, 1136,
	501, 1136,
	548, 1136,
	568, 1175,
	570, 1136,
	-2, 0,
	-1, 171,
	4, 1895,
	21, 1895,
	22, 1895,
	23, 1895,
	24, 1895,
	25, 1895,
	26, 1895,
	27, 1895,
	28, 1895,
	30, 1895,
	31, 1895,
	37, 1895,
	41, 1895,
	43, 1895,
	44, 1895,
	45, 1895,
	47, 1895,
	48, 1895,
	49, 1895,
	50, 1895,
	51, 1895,
	52, 1895,
	53, 1895,
	54, 1895,
	55, 1895,
	57, 1895,
	58, 1895,
	59, 1895,
	60, 1895,
	62, 1895,
	63, 1895,
	64, 1895,
	65, 1895,
	66, 1895,
	67, 1895,
	68, 1895,
	69, 1895,
	73, 1895,
	74, 1895,
	75, 1895,
	76, 1895,
	78, 1895,
	79, 1895,
	80, 1895,
	84, 1895,
	85, 1895,
	86, 1895,
	87, 1895,
	88, 1895,
	89, 1895,
	90, 1895,
	91, 1895,
	94, 1895,
	95, 1895,
	96, 1895,
	97, 1895,
	98, 1895,
	100, 1895,
	102, 1895,
	103, 1895,
	104, 1895,
	105, 1895,
	106, 1895,
	107, 1895,
	108, 1895,
	110, 1895,
	111, 1895,
	112, 1895,
	114, 1895,
	115, 1895,
	116, 1895,
	124, 1895,
	125, 1895,
	126, 1895,
	127, 1895,
	128, 1895,
	130, 1895,
	131, 1895,
	132, 1895,
	133, 1895,
	135, 1895,
	136, 1895,
	137, 1895,
	138, 1895,
	140, 1895,
	141, 1895,
	142, 1895,
	143, 1895,
	145, 1895,
	146, 1895,
	147, 1895,
	150, 1895,
	151, 1895,
	152, 1895,
	154, 1895,
	155, 1895,
	156, 1895,
	158, 1895,
	159, 1895,
	160, 1895,
	162, 1895,
	163, 1895,
	164, 1895,
	165, 1895,
	166, 1895,
	167, 1895,
	168, 1895,
	169, 1895,
	170, 1895,
	171, 1895,
	172, 1895,
	173, 1895,
	174, 1895,
	175, 1895,
	176, 1895,
	177, 1895,
	178, 1895,
	179, 1895,
	181, 1895,
	187, 1895,
	188, 1895,
	189, 1895,
	190, 1895,
	194, 1895,
	196, 1895,
	197, 1895,
	198, 1895,
	200, 1895,
	201, 1895,
	204, 1895,
	205, 1895,
	206, 1895,
	207, 1895,
	208, 1895,
	209, 1895,
	210, 1895,
	211, 1895,
	212, 1895,
	213, 1895,
	214, 1895,
	215, 1895,
	216, 1895,
	217, 1895,
	219, 1895,
	220, 1895,
	222, 1895,
	223, 1895,
	225, 1895,
	226, 1895,
	227, 1895,
	228, 1895,
	229, 1895,
	230, 1895,
	231, 1895,
	232, 1895,
	233, 1895,
	234, 1895,
	235, 1895,
	237, 1895,
	238, 1895,
	239, 1895,
	241, 1895,
	242, 1895,
	243, 1895,
	244, 1895,
	245, 1895,
	249, 1895,
	250, 1895,
	251, 1895,
	252, 1895,
	255, 1895,
	256, 1895,
	257, 1895,
	258, 1895,
	259, 1895,
	260, 1895,
	262, 1895,
	264, 1895,
	265, 1895,
	266, 1895,
	268, 1895,
	270, 1895,
	271, 1895,
	272, 1895,
	274, 1895,
	278, 1895,
	279, 1895,
	280, 1895,
	281, 1895,
	282, 1895,
	283, 1895,
	284, 1895,
	286, 1895,
	287, 1895,
	288, 1895,
	290, 1895,
	291, 1895,
	292, 1895,
	294, 1895,
	295, 1895,
	298, 1895,
	299, 1895,
	300, 1895,
	301, 1895,
	302, 1895,
	303, 1895,
	304, 1895,
	307, 1895,
	308, 1895,
	309, 1895,
	310, 1895,
	312, 1895,
	313, 1895,
	314, 1895,
	315, 1895,
	316, 1895,
	317, 1895,
	318, 1895,
	319, 1895,
	320, 1895,
	321, 1895,
	322, 1895,
	323, 1895,
	324, 1895,
	325, 1895,
	326, 1895,
	327, 1895,
	328, 1895,
	329, 1895,
	330, 1895,
	331, 1895,
	332, 1895,
	333, 1895,
	334, 1895,
	336, 1895,
	338, 1895,
	339, 1895,
	340, 1895,
	341, 1895,
	342, 1895,
	343, 1895,
	344, 1895,
	345, 1895,
	346, 1895,
	347, 1895,
	348, 1895,
	349, 1895,
	350, 1895,
	351, 1895,
	352, 1895,
	353, 1895,
	354, 1895,
	356, 1895,
	357, 1895,
	359, 1895,
	361, 1895,
	362, 1895,
	363, 1895,
	364, 1895,
	366, 1895,
	367, 1895,
	368, 1895,
	369, 1895,
	370, 1895,
	373, 1895,
	375, 1895,
	377, 1895,
	378, 1895,
	379, 1895,
	380, 1895,
	383, 1895,
	384, 1895,
	385, 1895,
	387, 1895,
	389, 1895,
	390, 1895,
	391, 1895,
	392, 1895,
	393, 1895,
	394, 1895,
	395, 1895,
	396, 1895,
	397, 1895,
	398, 1895,
	399, 1895,
	400, 1895,
	401, 1895,
	402, 1895,
	404, 1895,
	405, 1895,
	406, 1895,
	407, 1895,
	408, 1895,
	409, 1895,
	410, 1895,
	411, 1895,
	412, 1895,
	413, 1895,
	414, 1895,
	415, 1895,
	416, 1895,
	417, 1895,
	418, 1895,
	420, 1895,
	421, 1895,
	422, 1895,
	424, 1895,
	425, 1895,
	426, 1895,
	427, 1895,
	428, 1895,
	429, 1895,
	430, 1895,
	431, 1895,
	432, 1895,
	433, 1895,
	434, 1895,
	435, 1895,
	436, 1895,
	437, 1895,
	439, 1895,
	441, 1895,
	442, 1895,
	443, 1895,
	449, 1895,
	450, 1895,
	451, 1895,
	453, 1895,
	454, 1895,
	455, 1895,
	456, 1895,
	457, 1895,
	458, 1895,
	459, 1895,
	460, 1895,
	461, 1895,
	462, 1895,
	463, 1895,
	465, 1895,
	466, 1895,
	467, 1895,
	468, 1895,
	469, 1895,
	471, 1895,
	472, 1895,
	473, 1895,
	474, 1895,
	475, 1895,
	476, 1895,
	477, 1895,
	479, 1895,
	480, 1895,
	481, 1895,
	482, 1895,
	483, 1895,
	484, 1895,
	485, 1895,
	486, 1895,
	487, 1895,
	488, 1895,
	489, 1895,
	490, 1895,
	491, 1895,
	492, 1895,
	493, 1895,
	494, 1895,
	496, 1895,
	497, 1895,
	498, 1895,
	499, 1895,
	500, 1895,
	501, 1895,
	503, 1895,
	504, 1895,
	505, 1895,
	506, 1895,
	507, 1895,
	508, 1895,
	509, 1895,
	511, 1895,
	512, 1895,
	513, 1895,
	514, 1895,
	515, 1895,
	516, 1895,
	517, 1895,
	518, 1895,
	520, 1895,
	522, 1895,
	523, 1895,
	524, 1895,
	525, 1895,
	526, 1895,
	527, 1895,
	528, 1895,
	529, 1895,
	530, 1895,
	531, 1895,
	532, 1895,
	533, 1895,
	534, 1895,
	535, 1895,
	536, 1895,
	537, 1895,
	538, 1895,
	539, 1895,
	540, 1895,
	541, 1895,
	542, 1895,
	544, 1895,
	545, 1895,
	547, 1895,
	548, 1895,
	550, 1895,
	551, 1895,
	552, 1895,
	553, 1895,
	554, 1895,
	555, 1895,
	557, 1895,
	558, 1895,
	560, 1895,
	561, 1895,
	562, 1895,
	563, 1895,
	564, 1895,
	566, 1895,
	568, 1895,
	569, 1895,
	570, 1895,
	571, 1895,
	572, 1895,
	573, 1895,
	574, 1895,
	575, 1895,
	577, 1895,
	578, 1895,
	579, 1895,
	580, 1895,
	581, 1895,
	582, 1895,
	583, 1895,
	586, 1895,
	587, 1895,
	588, 1895,
	589, 1895,
	590, 1895,
	591, 1895,
	592, 1895,
	593, 1895,
	595, 1895,
	598, 1895,
	599, 1895,
	600, 1895,
	601, 1895,
	602, 1895,
	603, 1895,
	605, 1895,
	606, 1895,
	607, 1895,
	608, 1895,
	609, 1895,
	610, 1895,
	611, 1895,
	612, 1895,
	613, 1895,
	614, 1895,
	615, 1895,
	620, 1895,
	621, 1895,
	622, 1895,
	623, 1895,
	624, 1895,
	625, 1895,
	-2, 0,
	-1, 173,
	1, 1740,
	661, 1740,
	664, 1740,
	-2, 0,
	-1, 174,
	1, 1740,
	565, 1740,
	661, 1740,
	664, 1740,
	-2, 0,
	-1, 210,
	161, 1863,
	182, 1863,
	195, 1863,
	261, 1863,
	297, 1863,
	371, 1863,
	382, 1863,
	584, 1863,
	-2, 1838,
	-1, 271,
	4, 1902,
	5, 1902,
	6, 1902,
	7, 1902,
	8, 1902,
	9, 1902,
	10, 1902,
	21, 1902,
	22, 1902,
	23, 1902,
	24, 1902,
	25, 1902,
	26, 1902,
	27, 1902,
	28, 1902,
	30, 1902,
	31, 1902,
	37, 1902,
	38, 1902,
	41, 1902,
	43, 1902,
	44, 1902,
	45, 1902,
	46, 1902,
	47, 1902,
	48, 1902,
	49, 1902,
	50, 1902,
	51, 1902,
	52, 1902,
	53, 1902,
	54, 1902,
	55, 1902,
	57, 1902,
	58, 1902,
	59, 1902,
	60, 1902,
	62, 1902,
	63, 1902,
	64, 1902,
	65, 1902,
	66, 1902,
	67, 1902,
	68, 1902,
	69, 1902,
	70, 1902,
	71, 1902,
	72, 1902,
	73, 1902,
	74, 1902,
	75, 1902,
	76, 1902,
	78, 1902,
	79, 1902,
	80, 1902,
	82, 1902,
	84, 1902,
	85, 1902,
	86, 1902,
	87, 1902,
	88, 1902,
	89, 1902,
	90, 1902,
	91, 1902,
	94, 1902,
	95, 1902,
	96, 1902,
	97, 1902,
	98, 1902,
	100, 1902,
	102, 1902,
	103, 1902,
	104, 1902,
	105, 1902,
	106, 1902,
	107, 1902,
	108, 1902,
	110, 1902,
	111, 1902,
	112, 1902,
	113, 1902,
	114, 1902,
	115, 1902,
	116, 1902,
	117, 1902,
	118, 1902,
	119, 1902,
	120, 1902,
	121, 1902,
	122, 1902,
	123, 1902,
	124, 1902,
	125, 1902,
	126, 1902,
	127, 1902,
	128, 1902,
	129, 1902,
	130, 1902,
	131, 1902,
	132, 1902,
	133, 1902,
	134, 1902,
	135, 1902,
	136, 1902,
	137, 1902,
	138, 1902,
	140, 1902,
	141, 1902,
	142, 1902,
	143, 1902,
	145, 1902,
	146, 1902,
	147, 1902,
	150, 1902,
	151, 1902,
	152, 1902,
	154, 1902,
	155, 1902,
	156, 1902,
	158, 1902,
	159, 1902,
	160, 1902,
	162, 1902,
	163, 1902,
	164, 1902,
	165, 1902,
	166, 1902,
	167, 1902,
	168, 1902,
	169, 1902,
	170, 1902,
	171, 1902,
	172, 1902,
	173, 1902,
	174, 1902,
	175, 1902,
	176, 1902,
	177, 1902,
	178, 1902,
	179, 1902,
	180, 1902,
	181, 1902,
	187, 1902,
	188, 1902,
	189, 1902,
	190, 1902,
	194, 1902,
	196, 1902,
	197, 1902,
	198, 1902,
	200, 1902,
	201, 1902,
	203, 1902,
	204, 1902,
	205, 1902,
	206, 1902,
	207, 1902,
	208, 1902,
	209, 1902,
	210, 1902,
	211, 1902,
	212, 1902,
	213, 1902,
	214, 1902,
	215, 1902,
	216, 1902,
	217, 1902,
	219, 1902,
	220, 1902,
	222, 1902,
	223, 1902,
	225, 1902,
	226, 1902,
	227, 1902,
	228, 1902,
	229, 1902,
	230, 1902,
	231, 1902,
	232, 1902,
	233, 1902,
	234, 1902,
	235, 1902,
	236, 1902,
	237, 1902,
	238, 1902,
	239, 1902,
	241, 1902,
	242, 1902,
	243, 1902,
	244, 1902,
	245, 1902,
	249, 1902,
	250, 1902,
	251, 1902,
	252, 1902,
	254, 1902,
	255, 1902,
	256, 1902,
	257, 1902,
	258, 1902,
	259, 1902,
	260, 1902,
	262, 1902,
	264, 1902,
	265, 1902,
	266, 1902,
	267, 1902,
	268, 1902,
	269, 1902,
	270, 1902,
	271, 1902,
	272, 1902,
	273, 1902,
	274, 1902,
	278, 1902,
	279, 1902,
	280, 1902,
	281, 1902,
	282, 1902,
	283, 1902,
	284, 1902,
	286, 1902,
	287, 1902,
	288, 1902,
	290, 1902,
	291, 1902,
	292, 1902,
	293, 1902,
	294, 1902,
	295, 1902,
	296, 1902,
	298, 1902,
	299, 1902,
	300, 1902,
	301, 1902,
	302, 1902,
	303, 1902,
	304, 1902,
	305, 1902,
	306, 1902,
	307, 1902,
	308, 1902,
	309, 1902,
	310, 1902,
	312, 1902,
	313, 1902,
	314, 1902,
	315, 1902,
	316, 1902,
	317, 1902,
	318, 1902,
	319, 1902,
	320, 1902,
	321, 1902,
	322, 1902,
	323, 1902,
	324, 1902,
	325, 1902,
	326, 1902,
	327, 1902,
	328, 1902,
	329, 1902,
	330, 1902,
	331, 1902,
	332, 1902,
	333, 1902,
	334, 1902,
	336, 1902,
	337, 1902,
	338, 1902,
	339, 1902,
	340, 1902,
	341, 1902,
	342, 1902,
	343, 1902,
	344, 1902,
	345, 1902,
	346, 1902,
	347, 1902,
	348, 1902,
	349, 1902,
	350, 1902,
	351, 1902,
	352, 1902,
	353, 1902,
	354, 1902,
	355, 1902,
	356, 1902,
	357, 1902,
	358, 1902,
	359, 1902,
	360, 1902,
	361, 1902,
	362, 1902,
	363, 1902,
	364, 1902,
	365, 1902,
	366, 1902,
	367, 1902,
	368, 1902,
	369, 1902,
	370, 1902,
	373, 1902,
	375, 1902,
	378, 1902,
	379, 1902,
	380, 1902,
	383, 1902,
	384, 1902,
	385, 1902,
	386, 1902,
	387, 1902,
	388, 1902,
	389, 1902,
	390, 1902,
	391, 1902,
	392, 1902,
	393, 1902,
	394, 1902,
	395, 1902,
	396, 1902,
	397, 1902,
	398, 1902,
	399, 1902,
	400, 1902,
	401, 1902,
	402, 1902,
	404, 1902,
	405, 1902,
	406, 1902,
	407, 1902,
	408, 1902,
	409, 1902,
	410, 1902,
	411, 1902,
	412, 1902,
	413, 1902,
	414, 1902,
	415, 1902,
	416, 1902,
	417, 1902,
	418, 1902,
	420, 1902,
	421, 1902,
	422, 1902,
	424, 1902,
	425, 1902,
	426, 1902,
	427, 1902,
	428, 1902,
	429, 1902,
	430, 1902,
	431, 1902,
	432, 1902,
	433, 1902,
	434, 1902,
	435, 1902,
	436, 1902,
	437, 1902,
	439, 1902,
	441, 1902,
	442, 1902,
	443, 1902,
	449, 1902,
	450, 1902,
	451, 1902,
	453, 1902,
	454, 1902,
	455, 1902,
	456, 1902,
	457, 1902,
	458, 1902,
	459, 1902,
	460, 1902,
	461, 1902,
	462, 1902,
	463, 1902,
	465, 1902,
	466, 1902,
	467, 1902,
	468, 1902,
	469, 1902,
	470, 1902,
	471, 1902,
	472, 1902,
	473, 1902,
	474, 1902,
	475, 1902,
	476, 1902,
	477, 1902,
	479, 1902,
	480, 1902,
	481, 1902,
	482, 1902,
	483, 1902,
	484, 1902,
	485, 1902,
	486, 1902,
	487, 1902,
	488, 1902,
	489, 1902,
	490, 1902,
	491, 1902,
	492, 1902,
	493, 1902,
	494, 1902,
	496, 1902,
	497, 1902,
	498, 1902,
	499, 1902,
	500, 1902,
	501, 1902,
	502, 1902,
	503, 1902,
	504, 1902,
	505, 1902,
	506, 1902,
	507, 1902,
	508, 1902,
	509, 1902,
	510, 1902,
	511, 1902,
	512, 1902,
	513, 1902,
	514, 1902,
	515, 1902,
	516, 1902,
	517, 1902,
	518, 1902,
	520, 1902,
	522, 1902,
	523, 1902,
	524, 1902,
	525, 1902,
	526, 1902,
	527, 1902,
	528, 1902,
	529, 1902,
	530, 1902,
	531, 1902,
	532, 1902,
	533, 1902,
	534, 1902,
	535, 1902,
	536, 1902,
	537, 1902,
	538, 1902,
	539, 1902,
	540, 1902,
	541, 1902,
	542, 1902,
	544, 1902,
	545, 1902,
	546, 1902,
	547, 1902,
	548, 1902,
	550, 1902,
	551, 1902,
	552, 1902,
	553, 1902,
	554, 1902,
	555, 1902,
	557, 1902,
	558, 1902,
	560, 1902,
	561, 1902,
	562, 1902,
	563, 1902,
	564, 1902,
	566, 1902,
	568, 1902,
	569, 1902,
	570, 1902,
	571, 1902,
	572, 1902,
	573, 1902,
	574, 1902,
	575, 1902,
	576, 1902,
	577, 1902,
	578, 1902,
	579, 1902,
	580, 1902,
	581, 1902,
	582, 1902,
	583, 1902,
	585, 1902,
	586, 1902,
	587, 1902,
	588, 1902,
	589, 1902,
	590, 1902,
	591, 1902,
	592, 1902,
	593, 1902,
	594, 1902,
	595, 1902,
	598, 1902,
	599, 1902,
	600, 1902,
	601, 1902,
	602, 1902,
	603, 1902,
	605, 1902,
	606, 1902,
	607, 1902,
	608, 1902,
	609, 1902,
	610, 1902,
	611, 1902,
	612, 1902,
	613, 1902,
	614, 1902,
	615, 1902,
	620, 1902,
	621, 1902,
	622, 1902,
	623, 1902,
	624, 1902,
	625, 1902,
	626, 1902,
	641, 1902,
	648, 1902,
	649, 1902,
	650, 1902,
	658, 1902,
	662, 1902,
	-2, 0,
	-1, 848,
	4, 1612,
	21, 1612,
	22, 1612,
	23, 1612,
	24, 1612,
	25, 1612,
	26, 1612,
	27, 1612,
	28, 1612,
	30, 1612,
	31, 1612,
	37, 1612,
	41, 1612,
	43, 1612,
	44, 1612,
	45, 1612,
	47, 1612,
	48, 1612,
	49, 1612,
	50, 1612,
	51, 1612,
	52, 1612,
	53, 1612,
	54, 1612,
	55, 1612,
	57, 1612,
	58, 1612,
	59, 1612,
	60, 1612,
	62, 1612,
	63, 1612,
	64, 1612,
	65, 1612,
	66, 1612,
	67, 1612,
	68, 1612,
	69, 1612,
	73, 1612,
	74, 1612,
	75, 1612,
	76, 1612,
	78, 1612,
	79, 1612,
	80, 1612,
	84, 1612,
	85, 1612,
	86, 1612,
	87, 1612,
	88, 1612,
	89, 1612,
	90, 1612,
	91, 1612,
	94, 1612,
	95, 1612,
	96, 1612,
	97, 1612,
	98, 1612,
	100, 1612,
	102, 1612,
	103, 1612,
	104, 1612,
	105, 1612,
	106, 1612,
	107, 1612,
	108, 1612,
	110, 1612,
	111, 1612,
	112, 1612,
	114, 1612,
	115, 1612,
	116, 1612,
	124, 1612,
	125, 1612,
	126, 1612,
	127, 1612,
	128, 1612,
	130, 1612,
	131, 1612,
	132, 1612,
	133, 1612,
	135, 1612,
	136, 1612,
	137, 1612,
	138, 1612,
	140, 1612,
	141, 1612,
	142, 1612,
	143, 1612,
	145, 1612,
	146, 1612,
	147, 1612,
	150, 1612,
	151, 1612,
	152, 1612,
	154, 1612,
	155, 1612,
	156, 1612,
	158, 1612,
	159, 1612,
	160, 1612,
	162, 1612,
	163, 1612,
	164, 1612,
	165, 1612,
	166, 1612,
	167, 1612,
	168, 1612,
	169, 1612,
	170, 1612,
	171, 1612,
	172, 1612,
	173, 1612,
	174, 1612,
	175, 1612,
	176, 1612,
	177, 1612,
	178, 1612,
	179, 1612,
	181, 1612,
	187, 1612,
	188, 1612,
	189, 1612,
	190, 1612,
	194, 1612,
	196, 1612,
	197, 1612,
	198, 1612,
	200, 1612,
	201, 1612,
	204, 1612,
	205, 1612,
	206, 1612,
	207, 1612,
	208, 1612,
	209, 1612,
	210, 1612,
	211, 1612,
	212, 1612,
	213, 1612,
	214, 1612,
	215, 1612,
	216, 1612,
	217, 1612,
	219, 1612,
	220, 1612,
	222, 1612,
	223, 1612,
	225, 1612,
	226, 1612,
	227, 1612,
	228, 1612,
	229, 1612,
	230, 1612,
	231, 1612,
	232, 1612,
	233, 1612,
	234, 1612,
	235, 1612,
	237, 1612,
	238, 1612,
	239, 1612,
	241, 1612,
	242, 1612,
	243, 1612,
	244, 1612,
	245, 1612,
	249, 1612,
	250, 1612,
	251, 1612,
	252, 1612,
	255, 1612,
	256, 1612,
	257, 1612,
	258, 1612,
	259, 1612,
	260, 1612,
	262, 1612,
	264, 1612,
	265, 1612,
	266, 1612,
	268, 1612,
	270, 1612,
	271, 1612,
	272, 1612,
	274, 1612,
	278, 1612,
	279, 1612,
	280, 1612,
	281, 1612,
	282, 1612,
	283, 1612,
	284, 1612,
	286, 1612,
	287, 1612,
	288, 1612,
	290, 1612,
	291, 1612,
	292, 1612,
	294, 1612,
	295, 1612,
	298, 1612,
	299, 1612,
	300, 1612,
	301, 1612,
	302, 1612,
	303, 1612,
	304, 1612,
	307, 1612,
	308, 1612,
	309, 1612,
	310, 1612,
	312, 1612,
	313, 1612,
	314, 1612,
	315, 1612,
	316, 1612,
	317, 1612,
	318, 1612,
	319, 1612,
	320, 1612,
	321, 1612,
	322, 1612,
	323, 1612,
	324, 1612,
	325, 1612,
	326, 1612,
	327, 1612,
	328, 1612,
	329, 1612,
	330, 1612,
	331, 1612,
	332, 1612,
	333, 1612,
	334, 1612,
	336, 1612,
	338, 1612,
	339, 1612,
	340, 1612,
	341, 1612,
	342, 1612,
	343, 1612,
	344, 1612,
	345, 1612,
	346, 1612,
	347, 1612,
	348, 1612,
	349, 1612,
	350, 1612,
	351, 1612,
	352, 1612,
	353, 1612,
	354, 1612,
	356, 1612,
	357, 1612,
	359, 1612,
	361, 1612,
	362, 1612,
	363, 1612,
	364, 1612,
	366, 1612,
	367, 1612,
	368, 1612,
	369, 1612,
	370, 1612,
	373, 1612,
	375, 1612,
	378, 1612,
	379, 1612,
	380, 1612,
	383, 1612,
	384, 1612,
	385, 1612,
	387, 1612,
	389, 1612,
	390, 1612,
	391, 1612,
	392, 1612,
	393, 1612,
	394, 1612,
	395, 1612,
	396, 1612,
	397, 1612,
	398, 1612,
	399, 1612,
	400, 1612,
	401, 1612,
	402, 1612,
	404, 1612,
	405, 1612,
	406, 1612,
	407, 1612,
	408, 1612,
	409, 1612,
	410, 1612,
	411, 1612,
	412, 1612,
	413, 1612,
	414, 1612,
	415, 1612,
	416, 1612,
	417, 1612,
	418, 1612,
	420, 1612,
	421, 1612,
	422, 1612,
	424, 1612,
	425, 1612,
	426, 1612,
	427, 1612,
	428, 1612,
	429, 1612,
	430, 1612,
	431, 1612,
	432, 1612,
	433, 1612,
	434, 1612,
	435, 1612,
	436, 1612,
	437, 1612,
	439, 1612,
	441, 1612,
	442, 1612,
	443, 1612,
	449, 1612,
	450, 1612,
	451, 1612,
	453, 1612,
	454, 1612,
	455, 1612,
	456, 1612,
	457, 1612,
	458, 1612,
	459, 1612,
	460, 1612,
	461, 1612,
	462, 1612,
	463, 1612,
	465, 1612,
	466, 1612,
	467, 1612,
	468, 1612,
	469, 1612,
	471, 1612,
	472, 1612,
	473, 1612,
	474, 1612,
	475, 1612,
	476, 1612,
	477, 1612,
	479, 1612,
	480, 1612,
	481, 1612,
	482, 1612,
	483, 1612,
	484, 1612,
	485, 1612,
	486, 1612,
	487, 1612,
	488, 1612,
	489, 1612,
	490, 1612,
	491, 1612,
	492, 1612,
	493, 1612,
	494, 1612,
	496, 1612,
	497, 1612,
	498, 1612,
	499, 1612,
	500, 1612,
	501, 1612,
	503, 1612,
	504, 1612,
	505, 1612,
	506, 1612,
	507, 1612,
	508, 1612,
	509, 1612,
	511, 1612,
	512, 1612,
	513, 1612,
	514, 1612,
	515, 1612,
	516, 1612,
	517, 1612,
	518, 1612,
	520, 1612,
	522, 1612,
	523, 1612,
	524, 1612,
	525, 1612,
	526, 1612,
	527, 1612,
	528, 1612,
	529, 1612,
	530, 1612,
	531, 1612,
	532, 1612,
	533, 1612,
	534, 1612,
	535, 1612,
	536, 1612,
	537, 1612,
	538, 1612,
	539, 1612,
	540, 1612,
	541, 1612,
	542, 1612,
	544, 1612,
	545, 1612,
	547, 1612,
	548, 1612,
	550, 1612,
	551, 1612,
	552, 1612,
	553, 1612,
	554, 1612,
	555, 1612,
	557, 1612,
	558, 1612,
	560, 1612,
	561, 1612,
	562, 1612,
	563, 1612,
	564, 1612,
	566, 1612,
	568, 1612,
	569, 1612,
	570, 1612,
	571, 1612,
	572, 1612,
	573, 1612,
	574, 1612,
	575, 1612,
	577, 1612,
	578, 1612,
	579, 1612,
	580, 1612,
	581, 1612,
	582, 1612,
	583, 1612,
	586, 1612,
	587, 1612,
	588, 1612,
	589, 1612,
	590, 1612,
	591, 1612,
	592, 1612,
	593, 1612,
	595, 1612,
	598, 1612,
	599, 1612,
	600, 1612,
	601, 1612,
	602, 1612,
	603, 1612,
	605, 1612,
	606, 1612,
	607, 1612,
	608, 1612,
	609, 1612,
	610, 1612,
	611, 1612,
	612, 1612,
	613, 1612,
	614, 1612,
	615, 1612,
	620, 1612,
	621, 1612,
	622, 1612,
	623, 1612,
	624, 1612,
	625, 1612,
	-2, 0,
	-1, 867,
	202, 2705,
	565, 2705,
	640, 2705,
	660, 2705,
	-2, 0,
	-1, 868,
	202, 2691,
	565, 2691,
	640, 2691,
	660, 2691,
	-2, 0,
	-1, 870,
	202, 2988,
	565, 2988,
	640, 2988,
	660, 2988,
	-2, 0,
	-1, 873,
	202, 2830,
	565, 2830,
	640, 2830,
	660, 2830,
	-2, 0,
	-1, 874,
	202, 3035,
	565, 3035,
	640, 3035,
	660, 3035,
	-2, 0,
	-1, 882,
	202, 2858,
	565, 2858,
	640, 2858,
	660, 2858,
	-2, 907,
	-1, 898,
	8, 1040,
	29, 1040,
	648, 1040,
	649, 1040,
	-2, 1045,
	-1, 902,
	1, 2763,
	661, 2763,
	664, 2763,
	-2, 1045,
	-1, 903,
	1, 2817,
	661, 2817,
	664, 2817,
	-2, 1045,
	-1, 906,
	1, 2863,
	661, 2863,
	664, 2863,
	-2, 1038,
	-1, 907,
	1, 2920,
	661, 2920,
	664, 2920,
	-2, 1039,
	-1, 908,
	1, 2768,
	661, 2768,
	664, 2768,
	-2, 1042,
	-1, 909,
	1, 2677,
	661, 2677,
	664, 2677,
	-2, 1043,
	-1, 949,
	660, 2634,
	663, 2634,
	-2, 1273,
	-1, 950,
	660, 2636,
	663, 2636,
	-2, 1274,
	-1, 951,
	660, 2635,
	663, 2635,
	-2, 1275,
	-1, 952,
	663, 2558,
	-2, 1276,
	-1, 978,
	195, 326,
	-2, 0,
	-1, 1000,
	46, 2607,
	-2, 0,
	-1, 1001,
	605, 1590,
	-2, 1358,
	-1, 1018,
	4, 2036,
	21, 2036,
	22, 2036,
	23, 2036,
	24, 2036,
	25, 2036,
	26, 2036,
	27, 2036,
	28, 2036,
	30, 2036,
	31, 2036,
	37, 2036,
	41, 2036,
	43, 2036,
	44, 2036,
	45, 2036,
	47, 2036,
	48, 2036,
	49, 2036,
	50, 2036,
	51, 2036,
	52, 2036,
	53, 2036,
	54, 2036,
	55, 2036,
	57, 2036,
	58, 2036,
	59, 2036,
	60, 2036,
	62, 2036,
	63, 2036,
	64, 2036,
	65, 2036,
	66, 2036,
	67, 2036,
	68, 2036,
	69, 2036,
	73, 2036,
	74, 2036,
	75, 2036,
	76, 2036,
	78, 2036,
	79, 2036,
	80, 2036,
	84, 2036,
	85, 2036,
	86, 2036,
	87, 2036,
	88, 2036,
	89, 2036,
	90, 2036,
	91, 2036,
	94, 2036,
	95, 2036,
	96, 2036,
	97, 2036,
	98, 2036,
	100, 2036,
	102, 2036,
	103, 2036,
	104, 2036,
	105, 2036,
	106, 2036,
	107, 2036,
	108, 2036,
	110, 2036,
	111, 2036,
	112, 2036,
	114, 2036,
	115, 2036,
	116, 2036,
	124, 2036,
	125, 2036,
	126, 2036,
	127, 2036,
	128, 2036,
	130, 2036,
	131, 2036,
	132, 2036,
	133, 2036,
	135, 2036,
	136, 2036,
	137, 2036,
	138, 2036,
	140, 2036,
	141, 2036,
	142, 2036,
	143, 2036,
	145, 2036,
	146, 2036,
	147, 2036,
	150, 2036,
	151, 2036,
	152, 2036,
	154, 2036,
	155, 2036,
	156, 2036,
	158, 2036,
	159, 2036,
	160, 2036,
	162, 2036,
	163, 2036,
	164, 2036,
	165, 2036,
	166, 2036,
	167, 2036,
	168, 2036,
	169, 2036,
	170, 2036,
	171, 2036,
	172, 2036,
	173, 2036,
	174, 2036,
	175, 2036,
	176, 2036,
	177, 2036,
	178, 2036,
	179, 2036,
	181, 2036,
	187, 2036,
	188, 2036,
	189, 2036,
	190, 2036,
	194, 2036,
	196, 2036,
	197, 2036,
	198, 2036,
	200, 2036,
	201, 2036,
	204, 2036,
	205, 2036,
	206, 2036,
	207, 2036,
	208, 2036,
	209, 2036,
	210, 2036,
	211, 2036,
	212, 2036,
	213, 2036,
	214, 2036,
	215, 2036,
	216, 2036,
	217, 2036,
	219, 2036,
	220, 2036,
	222, 2036,
	223, 2036,
	225, 2036,
	226, 2036,
	227, 2036,
	228, 2036,
	229, 2036,
	230, 2036,
	231, 2036,
	232, 2036,
	233, 2036,
	234, 2036,
	235, 2036,
	237, 2036,
	238, 2036,
	239, 2036,
	241, 2036,
	242, 2036,
	243, 2036,
	244, 2036,
	245, 2036,
	249, 2036,
	250, 2036,
	251, 2036,
	252, 2036,
	255, 2036,
	256, 2036,
	257, 2036,
	258, 2036,
	259, 2036,
	260, 2036,
	262, 2036,
	264, 2036,
	265, 2036,
	266, 2036,
	268, 2036,
	270, 2036,
	271, 2036,
	272, 2036,
	274, 2036,
	278, 2036,
	279, 2036,
	280, 2036,
	281, 2036,
	282, 2036,
	283, 2036,
	284, 2036,
	286, 2036,
	287, 2036,
	288, 2036,
	290, 2036,
	291, 2036,
	292, 2036,
	294, 2036,
	295, 2036,
	298, 2036,
	299, 2036,
	300, 2036,
	301, 2036,
	302, 2036,
	303, 2036,
	304, 2036,
	307, 2036,
	308, 2036,
	309, 2036,
	310, 2036,
	312, 2036,
	313, 2036,
	314, 2036,
	315, 2036,
	316, 2036,
	317, 2036,
	318, 2036,
	319, 2036,
	320, 2036,
	321, 2036,
	322, 2036,
	323, 2036,
	324, 2036,
	325, 2036,
	326, 2036,
	327, 2036,
	328, 2036,
	329, 2036,
	330, 2036,
	331, 2036,
	332, 2036,
	333, 2036,
	334, 2036,
	336, 2036,
	338, 2036,
	339, 2036,
	340, 2036,
	341, 2036,
	342, 2036,
	343, 2036,
	344, 2036,
	345, 2036,
	346, 2036,
	347, 2036,
	348, 2036,
	349, 2036,
	350, 2036,
	351, 2036,
	352, 2036,
	353, 2036,
	354, 2036,
	356, 2036,
	357, 2036,
	359, 2036,
	361, 2036,
	362, 2036,
	363, 2036,
	364, 2036,
	366, 2036,
	367, 2036,
	368, 2036,
	369, 2036,
	370, 2036,
	373, 2036,
	375, 2036,
	378, 2036,
	379, 2036,
	380, 2036,
	383, 2036,
	384, 2036,
	385, 2036,
	387, 2036,
	389, 2036,
	390, 2036,
	391, 2036,
	392, 2036,
	393, 2036,
	394, 2036,
	395, 2036,
	396, 2036,
	397, 2036,
	398, 2036,
	399, 2036,
	400, 2036,
	401, 2036,
	402, 2036,
	404, 2036,
	405, 2036,
	406, 2036,
	407, 2036,
	408, 2036,
	409, 2036,
	410, 2036,
	411, 2036,
	412, 2036,
	413, 2036,
	414, 2036,
	415, 2036,
	416, 2036,
	417, 2036,
	418, 2036,
	420, 2036,
	421, 2036,
	422, 2036,
	424, 2036,
	425, 2036,
	426, 2036,
	427, 2036,
	428, 2036,
	429, 2036,
	430, 2036,
	431, 2036,
	432, 2036,
	433, 2036,
	434, 2036,
	435, 2036,
	436, 2036,
	437, 2036,
	439, 2036,
	441, 2036,
	442, 2036,
	443, 2036,
	449, 2036,
	450, 2036,
	451, 2036,
	453, 2036,
	454, 2036,
	455, 2036,
	456, 2036,
	457, 2036,
	458, 2036,
	459, 2036,
	460, 2036,
	461, 2036,
	462, 2036,
	463, 2036,
	465, 2036,
	466, 2036,
	467, 2036,
	468, 2036,
	469, 2036,
	471, 2036,
	472, 2036,
	473, 2036,
	474, 2036,
	475, 2036,
	476, 2036,
	477, 2036,
	479, 2036,
	480, 2036,
	481, 2036,
	482, 2036,
	483, 2036,
	484, 2036,
	485, 2036,
	486, 2036,
	487, 2036,
	488, 2036,
	489, 2036,
	490, 2036,
	491, 2036,
	492, 2036,
	493, 2036,
	494, 2036,
	496, 2036,
	497, 2036,
	498, 2036,
	499, 2036,
	500, 2036,
	501, 2036,
	503, 2036,
	504, 2036,
	505, 2036,
	506, 2036,
	507, 2036,
	508, 2036,
	509, 2036,
	511, 2036,
	512, 2036,
	513, 2036,
	514, 2036,
	515, 2036,
	516, 2036,
	517, 2036,
	518, 2036,
	520, 2036,
	522, 2036,
	523, 2036,
	524, 2036,
	525, 2036,
	526, 2036,
	527, 2036,
	528, 2036,
	529, 2036,
	530, 2036,
	531, 2036,
	532, 2036,
	533, 2036,
	534, 2036,
	535, 2036,
	536, 2036,
	537, 2036,
	538, 2036,
	539, 2036,
	540, 2036,
	541, 2036,
	542, 2036,
	544, 2036,
	545, 2036,
	547, 2036,
	548, 2036,
	550, 2036,
	551, 2036,
	552, 2036,
	553, 2036,
	554, 2036,
	555, 2036,
	557, 2036,
	558, 2036,
	560, 2036,
	561, 2036,
	562, 2036,
	563, 2036,
	564, 2036,
	566, 2036,
	568, 2036,
	569, 2036,
	570, 2036,
	571, 2036,
	572, 2036,
	573, 2036,
	574, 2036,
	575, 2036,
	577, 2036,
	578, 2036,
	579, 2036,
	580, 2036,
	581, 2036,
	582, 2036,
	583, 2036,
	586, 2036,
	587, 2036,
	588, 2036,
	589, 2036,
	590, 2036,
	591, 2036,
	592, 2036,
	593, 2036,
	595, 2036,
	598, 2036,
	599, 2036,
	600, 2036,
	601, 2036,
	602, 2036,
	603, 2036,
	605, 2036,
	606, 2036,
	607, 2036,
	608, 2036,
	609, 2036,
	610, 2036,
	611, 2036,
	612, 2036,
	613, 2036,
	614, 2036,
	615, 2036,
	620, 2036,
	621, 2036,
	622, 2036,
	623, 2036,
	624, 2036,
	625, 2036,
	-2, 0,
	-1, 1029,
	283, 576,
	-2, 0,
	-1, 1107,
	202, 1084,
	-2, 0,
	-1, 1108,
	426, 1137,
	501, 1137,
	548, 1137,
	570, 1137,
	-2, 0,
	-1, 1109,
	426, 1136,
	501, 1136,
	548, 1136,
	570, 1136,
	-2, 1058,
	-1, 1113,
	1, 1189,
	657, 1189,
	659, 1189,
	661, 1189,
	664, 1189,
	-2, 0,
	-1, 1115,
	1, 1111,
	657, 1111,
	659, 1111,
	661, 1111,
	664, 1111,
	-2, 0,
	-1, 1116,
	1, 1115,
	657, 1115,
	659, 1115,
	661, 1115,
	664, 1115,
	-2, 0,
	-1, 1117,
	1, 1262,
	195, 1262,
	657, 1262,
	659, 1262,
	661, 1262,
	664, 1262,
	-2, 0,
	-1, 1125,
	1, 1142,
	657, 1142,
	659, 1142,
	661, 1142,
	664, 1142,
	-2, 0,
	-1, 1132,
	1, 1189,
	657, 1189,
	659, 1189,
	661, 1189,
	664, 1189,
	-2, 0,
	-1, 1133,
	1, 1191,
	657, 1191,
	659, 1191,
	661, 1191,
	664, 1191,
	-2, 0,
	-1, 1134,
	1, 1194,
	657, 1194,
	659, 1194,
	661, 1194,
	664, 1194,
	-2, 0,
	-1, 1142,
	1, 1225,
	657, 1225,
	659, 1225,
	661, 1225,
	664, 1225,
	-2, 0,
	-1, 1143,
	1, 1227,
	657, 1227,
	659, 1227,
	661, 1227,
	664, 1227,
	-2, 0,
	-1, 1148,
	1, 1255,
	657, 1255,
	659, 1255,
	661, 1255,
	664, 1255,
	-2, 0,
	-1, 1200,
	182, 1906,
	195, 1906,
	297, 1906,
	371, 1906,
	-2, 1842,
	-1, 1216,
	182, 1905,
	195, 1905,
	297, 1905,
	371, 1905,
	-2, 1839,
	-1, 1245,
	660, 2633,
	-2, 915,
	-1, 1274,
	5, 2625,
	658, 2623,
	-2, 2614,
	-1, 1282,
	5, 2646,
	658, 2643,
	-2, 2634,
	-1, 1283,
	5, 2647,
	658, 2644,
	-2, 2635,
	-1, 1291,
	660, 2631,
	-2, 2613,
	-1, 1292,
	658, 3148,
	-2, 2632,
	-1, 1315,
	5, 2648,
	38, 2648,
	134, 2648,
	640, 2648,
	656, 2648,
	659, 2648,
	660, 2648,
	663, 2648,
	-2, 3147,
	-1, 1316,
	5, 2111,
	-2, 3117,
	-1, 1317,
	5, 2112,
	-2, 3118,
	-1, 1318,
	5, 2113,
	-2, 3133,
	-1, 1319,
	5, 2114,
	-2, 3095,
	-1, 1320,
	5, 2115,
	-2, 3130,
	-1, 1321,
	5, 2123,
	-2, 3108,
	-1, 1322,
	5, 2110,
	-2, 3104,
	-1, 1323,
	5, 2110,
	-2, 3103,
	-1, 1324,
	5, 2110,
	-2, 3123,
	-1, 1325,
	5, 2121,
	-2, 3097,
	-1, 1326,
	5, 2126,
	-2, 3096,
	-1, 1327,
	5, 2128,
	-2, 3143,
	-1, 1330,
	5, 2150,
	-2, 3136,
	-1, 1331,
	5, 2142,
	-2, 3137,
	-1, 1332,
	5, 2150,
	-2, 3138,
	-1, 1333,
	5, 2146,
	-2, 3139,
	-1, 1334,
	5, 2096,
	-2, 3109,
	-1, 1335,
	5, 2097,
	-2, 3110,
	-1, 1336,
	5, 2098,
	-2, 3098,
	-1, 1364,
	5, 2133,
	-2, 3144,
	-1, 1365,
	5, 2134,
	-2, 3134,
	-1, 1366,
	5, 2135,
	606, 2135,
	-2, 3099,
	-1, 1367,
	5, 2136,
	606, 2136,
	-2, 3100,
	-1, 1405,
	658, 2643,
	-2, 2634,
	-1, 1406,
	658, 2644,
	-2, 2635,
	-1, 1512,
	202, 3035,
	565, 3035,
	640, 3035,
	660, 3035,
	-2, 0,
	-1, 1517,
	1, 891,
	661, 891,
	664, 891,
	-2, 1748,
	-1, 1564,
	1, 1743,
	661, 1743,
	664, 1743,
	-2, 1748,
	-1, 1666,
	391, 2608,
	453, 2608,
	503, 2608,
	650, 2608,
	-2, 2596,
	-1, 1672,
	202, 167,
	290, 167,
	356, 167,
	615, 167,
	-2, 3030,
	-1, 1673,
	202, 168,
	290, 168,
	356, 168,
	615, 168,
	-2, 2753,
	-1, 1674,
	202, 169,
	290, 169,
	356, 169,
	615, 169,
	-2, 2943,
	-1, 1680,
	662, 2608,
	-2, 2610,
	-1, 1683,
	25, 2967,
	240, 2967,
	-2, 0,
	-1, 1705,
	1, 1587,
	458, 1541,
	503, 1541,
	632, 1541,
	637, 1541,
	657, 1587,
	659, 1587,
	661, 1587,
	664, 1587,
	-2, 1891,
	-1, 1711,
	218, 1687,
	240, 1687,
	469, 1687,
	-2, 0,
	-1, 1779,
	46, 2606,
	-2, 1320,
	-1, 1786,
	1, 1587,
	657, 1587,
	659, 1587,
	661, 1587,
	664, 1587,
	-2, 1891,
	-1, 1789,
	435, 1357,
	605, 1357,
	-2, 476,
	-1, 1795,
	4, 1612,
	21, 1612,
	22, 1612,
	23, 1612,
	24, 1612,
	25, 1612,
	26, 1612,
	27, 1612,
	28, 1612,
	30, 1612,
	31, 1612,
	37, 1612,
	41, 1612,
	43, 1612,
	44, 1612,
	45, 1612,
	47, 1612,
	48, 1612,
	49, 1612,
	50, 1612,
	51, 1612,
	52, 1612,
	53, 1612,
	54, 1612,
	55, 1612,
	57, 1612,
	58, 1612,
	59, 1612,
	60, 1612,
	62, 1612,
	63, 1612,
	64, 1612,
	65, 1612,
	66, 1612,
	67, 1612,
	68, 1612,
	69, 1612,
	73, 1612,
	74, 1612,
	75, 1612,
	76, 1612,
	78, 1612,
	79, 1612,
	80, 1612,
	84, 1612,
	85, 1612,
	86, 1612,
	87, 1612,
	88, 1612,
	89, 1612,
	90, 1612,
	91, 1612,
	94, 1612,
	95, 1612,
	96, 1612,
	97, 1612,
	98, 1612,
	100, 1612,
	102, 1612,
	103, 1612,
	104, 1612,
	105, 1612,
	106, 1612,
	107, 1612,
	108, 1612,
	110, 1612,
	111, 1612,
	112, 1612,
	114, 1612,
	115, 1612,
	116, 1612,
	124, 1612,
	125, 1612,
	126, 1612,
	127, 1612,
	128, 1612,
	130, 1612,
	131, 1612,
	132, 1612,
	133, 1612,
	135, 1612,
	136, 1612,
	137, 1612,
	138, 1612,
	140, 1612,
	141, 1612,
	142, 1612,
	143, 1612,
	145, 1612,
	146, 1612,
	147, 1612,
	150, 1612,
	151, 1612,
	152, 1612,
	154, 1612,
	155, 1612,
	156, 1612,
	158, 1612,
	159, 1612,
	160, 1612,
	162, 1612,
	163, 1612,
	164, 1612,
	165, 1612,
	166, 1612,
	167, 1612,
	168, 1612,
	169, 1612,
	170, 1612,
	171, 1612,
	172, 1612,
	173, 1612,
	174, 1612,
	175, 1612,
	176, 1612,
	177, 1612,
	178, 1612,
	179, 1612,
	187, 1612,
	188, 1612,
	189, 1612,
	190, 1612,
	194, 1612,
	196, 1612,
	197, 1612,
	198, 1612,
	200, 1612,
	201, 1612,
	204, 1612,
	205, 1612,
	206, 1612,
	207, 1612,
	208, 1612,
	209, 1612,
	210, 1612,
	211, 1612,
	212, 1612,
	213, 1612,
	214, 1612,
	215, 1612,
	216, 1612,
	217, 1612,
	219, 1612,
	220, 1612,
	222, 1612,
	223, 1612,
	225, 1612,
	226, 1612,
	227, 1612,
	228, 1612,
	229, 1612,
	230, 1612,
	231, 1612,
	232, 1612,
	233, 1612,
	234, 1612,
	235, 1612,
	237, 1612,
	238, 1612,
	239, 1612,
	241, 1612,
	242, 1612,
	243, 1612,
	244, 1612,
	245, 1612,
	250, 1612,
	251, 1612,
	252, 1612,
	255, 1612,
	256, 1612,
	257, 1612,
	258, 1612,
	259, 1612,
	260, 1612,
	262, 1612,
	264, 1612,
	265, 1612,
	266, 1612,
	268, 1612,
	270, 1612,
	271, 1612,
	272, 1612,
	274, 1612,
	278, 1612,
	279, 1612,
	280, 1612,
	281, 1612,
	282, 1612,
	283, 1612,
	284, 1612,
	286, 1612,
	287, 1612,
	288, 1612,
	290, 1612,
	291, 1612,
	292, 1612,
	294, 1612,
	295, 1612,
	298, 1612,
	299, 1612,
	300, 1612,
	301, 1612,
	302, 1612,
	303, 1612,
	304, 1612,
	307, 1612,
	308, 1612,
	309, 1612,
	310, 1612,
	312, 1612,
	313, 1612,
	314, 1612,
	315, 1612,
	316, 1612,
	317, 1612,
	318, 1612,
	319, 1612,
	320, 1612,
	321, 1612,
	322, 1612,
	323, 1612,
	324, 1612,
	325, 1612,
	326, 1612,
	327, 1612,
	328, 1612,
	329, 1612,
	330, 1612,
	331, 1612,
	332, 1612,
	333, 1612,
	334, 1612,
	336, 1612,
	338, 1612,
	339, 1612,
	340, 1612,
	341, 1612,
	342, 1612,
	343, 1612,
	344, 1612,
	345, 1612,
	346, 1612,
	347, 1612,
	348, 1612,
	349, 1612,
	350, 1612,
	351, 1612,
	352, 1612,
	353, 1612,
	354, 1612,
	356, 1612,
	357, 1612,
	361, 1612,
	362, 1612,
	363, 1612,
	364, 1612,
	366, 1612,
	367, 1612,
	368, 1612,
	369, 1612,
	370, 1612,
	373, 1612,
	375, 1612,
	376, 1612,
	378, 1612,
	379, 1612,
	380, 1612,
	383, 1612,
	384, 1612,
	385, 1612,
	387, 1612,
	389, 1612,
	390, 1612,
	391, 1612,
	392, 1612,
	393, 1612,
	394, 1612,
	395, 1612,
	396, 1612,
	397, 1612,
	398, 1612,
	399, 1612,
	400, 1612,
	401, 1612,
	402, 1612,
	404, 1612,
	405, 1612,
	406, 1612,
	407, 1612,
	408, 1612,
	409, 1612,
	410, 1612,
	411, 1612,
	412, 1612,
	413, 1612,
	414, 1612,
	415, 1612,
	416, 1612,
	417, 1612,
	418, 1612,
	420, 1612,
	421, 1612,
	422, 1612,
	424, 1612,
	425, 1612,
	426, 1612,
	427, 1612,
	428, 1612,
	429, 1612,
	430, 1612,
	431, 1612,
	432, 1612,
	433, 1612,
	434, 1612,
	435, 1612,
	436, 1612,
	437, 1612,
	439, 1612,
	441, 1612,
	442, 1612,
	443, 1612,
	449, 1612,
	450, 1612,
	451, 1612,
	453, 1612,
	454, 1612,
	455, 1612,
	456, 1612,
	457, 1612,
	458, 1612,
	459, 1612,
	460, 1612,
	461, 1612,
	462, 1612,
	463, 1612,
	465, 1612,
	466, 1612,
	467, 1612,
	468, 1612,
	469, 1612,
	471, 1612,
	472, 1612,
	473, 1612,
	474, 1612,
	475, 1612,
	476, 1612,
	477, 1612,
	479, 1612,
	480, 1612,
	481, 1612,
	482, 1612,
	483, 1612,
	484, 1612,
	485, 1612,
	486, 1612,
	487, 1612,
	488, 1612,
	489, 1612,
	490, 1612,
	491, 1612,
	492, 1612,
	493, 1612,
	494, 1612,
	496, 1612,
	497, 1612,
	498, 1612,
	499, 1612,
	500, 1612,
	501, 1612,
	503, 1612,
	504, 1612,
	505, 1612,
	506, 1612,
	507, 1612,
	508, 1612,
	509, 1612,
	511, 1612,
	512, 1612,
	513, 1612,
	514, 1612,
	515, 1612,
	516, 1612,
	517, 1612,
	518, 1612,
	520, 1612,
	522, 1612,
	523, 1612,
	524, 1612,
	525, 1612,
	526, 1612,
	527, 1612,
	528, 1612,
	529, 1612,
	530, 1612,
	531, 1612,
	532, 1612,
	533, 1612,
	534, 1612,
	535, 1612,
	536, 1612,
	537, 1612,
	538, 1612,
	539, 1612,
	540, 1612,
	541, 1612,
	542, 1612,
	544, 1612,
	545, 1612,
	547, 1612,
	548, 1612,
	550, 1612,
	551, 1612,
	552, 1612,
	553, 1612,
	554, 1612,
	555, 1612,
	557, 1612,
	558, 1612,
	560, 1612,
	561, 1612,
	562, 1612,
	563, 1612,
	564, 1612,
	566, 1612,
	568, 1612,
	569, 1612,
	570, 1612,
	571, 1612,
	572, 1612,
	573, 1612,
	574, 1612,
	575, 1612,
	577, 1612,
	578, 1612,
	579, 1612,
	580, 1612,
	581, 1612,
	582, 1612,
	583, 1612,
	586, 1612,
	587, 1612,
	588, 1612,
	589, 1612,
	590, 1612,
	591, 1612,
	592, 1612,
	593, 1612,
	595, 1612,
	598, 1612,
	599, 1612,
	600, 1612,
	601, 1612,
	602, 1612,
	603, 1612,
	605, 1612,
	606, 1612,
	607, 1612,
	608, 1612,
	609, 1612,
	610, 1612,
	611, 1612,
	612, 1612,
	613, 1612,
	614, 1612,
	615, 1612,
	620, 1612,
	621, 1612,
	622, 1612,
	623, 1612,
	624, 1612,
	625, 1612,
	-2, 0,
	-1, 1818,
	1, 717,
	657, 717,
	659, 717,
	661, 717,
	664, 717,
	-2, 1862,
	-1, 1821,
	4, 3142,
	11, 3142,
	12, 3142,
	14, 3142,
	15, 3142,
	16, 3142,
	17, 3142,
	18, 3142,
	19, 3142,
	21, 3142,
	22, 3142,
	23, 3142,
	24, 3142,
	25, 3142,
	26, 3142,
	27, 3142,
	28, 3142,
	30, 3142,
	31, 3142,
	34, 3142,
	35, 3142,
	37, 3142,
	39, 3142,
	41, 3142,
	43, 3142,
	44, 3142,
	45, 3142,
	47, 3142,
	48, 3142,
	49, 3142,
	50, 3142,
	51, 3142,
	52, 3142,
	53, 3142,
	54, 3142,
	55, 3142,
	57, 3142,
	58, 3142,
	59, 3142,
	60, 3142,
	62, 3142,
	63, 3142,
	64, 3142,
	65, 3142,
	66, 3142,
	67, 3142,
	68, 3142,
	69, 3142,
	72, 3142,
	73, 3142,
	74, 3142,
	75, 3142,
	76, 3142,
	78, 3142,
	79, 3142,
	80, 3142,
	81, 3142,
	84, 3142,
	85, 3142,
	86, 3142,
	87, 3142,
	88, 3142,
	89, 3142,
	90, 3142,
	91, 3142,
	92, 3142,
	94, 3142,
	95, 3142,
	96, 3142,
	97, 3142,
	98, 3142,
	100, 3142,
	101, 3142,
	102, 3142,
	103, 3142,
	104, 3142,
	105, 3142,
	106, 3142,
	107, 3142,
	108, 3142,
	110, 3142,
	111, 3142,
	112, 3142,
	113, 3142,
	114, 3142,
	115, 3142,
	116, 3142,
	124, 3142,
	125, 3142,
	126, 3142,
	127, 3142,
	128, 3142,
	130, 3142,
	131, 3142,
	132, 3142,
	133, 3142,
	135, 3142,
	136, 3142,
	137, 3142,
	138, 3142,
	140, 3142,
	141, 3142,
	142, 3142,
	143, 3142,
	145, 3142,
	146, 3142,
	147, 3142,
	150, 3142,
	151, 3142,
	152, 3142,
	154, 3142,
	155, 3142,
	156, 3142,
	158, 3142,
	159, 3142,
	160, 3142,
	162, 3142,
	163, 3142,
	164, 3142,
	165, 3142,
	166, 3142,
	167, 3142,
	168, 3142,
	169, 3142,
	170, 3142,
	171, 3142,
	172, 3142,
	173, 3142,
	174, 3142,
	175, 3142,
	176, 3142,
	177, 3142,
	178, 3142,
	179, 3142,
	183, 3142,
	184, 3142,
	185, 3142,
	186, 3142,
	187, 3142,
	188, 3142,
	189, 3142,
	190, 3142,
	193, 3142,
	194, 3142,
	196, 3142,
	197, 3142,
	198, 3142,
	200, 3142,
	201, 3142,
	203, 3142,
	204, 3142,
	205, 3142,
	206, 3142,
	207, 3142,
	208, 3142,
	209, 3142,
	210, 3142,
	211, 3142,
	212, 3142,
	213, 3142,
	214, 3142,
	215, 3142,
	216, 3142,
	217, 3142,
	219, 3142,
	220, 3142,
	222, 3142,
	223, 3142,
	225, 3142,
	226, 3142,
	227, 3142,
	228, 3142,
	229, 3142,
	230, 3142,
	231, 3142,
	232, 3142,
	233, 3142,
	234, 3142,
	235, 3142,
	236, 3142,
	237, 3142,
	238, 3142,
	239, 3142,
	240, 3142,
	241, 3142,
	242, 3142,
	243, 3142,
	244, 3142,
	245, 3142,
	247, 3142,
	248, 3142,
	250, 3142,
	251, 3142,
	252, 3142,
	254, 3142,
	255, 3142,
	256, 3142,
	257, 3142,
	258, 3142,
	259, 3142,
	260, 3142,
	262, 3142,
	264, 3142,
	265, 3142,
	266, 3142,
	267, 3142,
	268, 3142,
	269, 3142,
	270, 3142,
	271, 3142,
	272, 3142,
	273, 3142,
	274, 3142,
	276, 3142,
	277, 3142,
	278, 3142,
	279, 3142,
	280, 3142,
	281, 3142,
	282, 3142,
	283, 3142,
	284, 3142,
	286, 3142,
	287, 3142,
	288, 3142,
	290, 3142,
	291, 3142,
	292, 3142,
	293, 3142,
	294, 3142,
	295, 3142,
	296, 3142,
	298, 3142,
	299, 3142,
	300, 3142,
	301, 3142,
	302, 3142,
	303, 3142,
	304, 3142,
	307, 3142,
	308, 3142,
	309, 3142,
	310, 3142,
	311, 3142,
	312, 3142,
	313, 3142,
	314, 3142,
	315, 3142,
	316, 3142,
	317, 3142,
	318, 3142,
	319, 3142,
	320, 3142,
	321, 3142,
	322, 3142,
	323, 3142,
	324, 3142,
	325, 3142,
	326, 3142,
	327, 3142,
	328, 3142,
	329, 3142,
	330, 3142,
	331, 3142,
	332, 3142,
	333, 3142,
	334, 3142,
	336, 3142,
	337, 3142,
	338, 3142,
	339, 3142,
	340, 3142,
	341, 3142,
	342, 3142,
	343, 3142,
	344, 3142,
	345, 3142,
	346, 3142,
	347, 3142,
	348, 3142,
	349, 3142,
	350, 3142,
	351, 3142,
	352, 3142,
	353, 3142,
	354, 3142,
	356, 3142,
	357, 3142,
	360, 3142,
	361, 3142,
	362, 3142,
	363, 3142,
	364, 3142,
	366, 3142,
	367, 3142,
	368, 3142,
	369, 3142,
	370, 3142,
	373, 3142,
	375, 3142,
	378, 3142,
	379, 3142,
	380, 3142,
	381, 3142,
	383, 3142,
	384, 3142,
	385, 3142,
	387, 3142,
	389, 3142,
	390, 3142,
	391, 3142,
	392, 3142,
	393, 3142,
	394, 3142,
	395, 3142,
	396, 3142,
	397, 3142,
	398, 3142,
	399, 3142,
	400, 3142,
	401, 3142,
	402, 3142,
	404, 3142,
	405, 3142,
	406, 3142,
	407, 3142,
	408, 3142,
	409, 3142,
	410, 3142,
	411, 3142,
	412, 3142,
	413, 3142,
	414, 3142,
	415, 3142,
	416, 3142,
	417, 3142,
	418, 3142,
	420, 3142,
	421, 3142,
	422, 3142,
	424, 3142,
	425, 3142,
	426, 3142,
	427, 3142,
	428, 3142,
	429, 3142,
	430, 3142,
	431, 3142,
	432, 3142,
	433, 3142,
	434, 3142,
	435, 3142,
	436, 3142,
	437, 3142,
	439, 3142,
	441, 3142,
	442, 3142,
	443, 3142,
	449, 3142,
	450, 3142,
	451, 3142,
	452, 3142,
	453, 3142,
	454, 3142,
	455, 3142,
	456, 3142,
	457, 3142,
	458, 3142,
	459, 3142,
	460, 3142,
	461, 3142,
	462, 3142,
	463, 3142,
	465, 3142,
	466, 3142,
	467, 3142,
	468, 3142,
	469, 3142,
	470, 3142,
	471, 3142,
	472, 3142,
	473, 3142,
	474, 3142,
	475, 3142,
	476, 3142,
	477, 3142,
	478, 3142,
	479, 3142,
	480, 3142,
	481, 3142,
	482, 3142,
	483, 3142,
	484, 3142,
	485, 3142,
	486, 3142,
	487, 3142,
	488, 3142,
	489, 3142,
	490, 3142,
	491, 3142,
	492, 3142,
	493, 3142,
	494, 3142,
	496, 3142,
	497, 3142,
	498, 3142,
	499, 3142,
	500, 3142,
	501, 3142,
	503, 3142,
	504, 3142,
	505, 3142,
	506, 3142,
	507, 3142,
	508, 3142,
	509, 3142,
	510, 3142,
	511, 3142,
	512, 3142,
	513, 3142,
	514, 3142,
	515, 3142,
	516, 3142,
	517, 3142,
	518, 3142,
	520, 3142,
	522, 3142,
	523, 3142,
	524, 3142,
	525, 3142,
	526, 3142,
	527, 3142,
	528, 3142,
	529, 3142,
	530, 3142,
	531, 3142,
	532, 3142,
	533, 3142,
	534, 3142,
	535, 3142,
	536, 3142,
	537, 3142,
	538, 3142,
	539, 3142,
	540, 3142,
	541, 3142,
	542, 3142,
	544, 3142,
	545, 3142,
	546, 3142,
	547, 3142,
	548, 3142,
	550, 3142,
	551, 3142,
	552, 3142,
	553, 3142,
	554, 3142,
	555, 3142,
	557, 3142,
	558, 3142,
	560, 3142,
	561, 3142,
	562, 3142,
	563, 3142,
	564, 3142,
	566, 3142,
	568, 3142,
	569, 3142,
	570, 3142,
	571, 3142,
	572, 3142,
	573, 3142,
	574, 3142,
	575, 3142,
	577, 3142,
	578, 3142,
	579, 3142,
	580, 3142,
	581, 3142,
	582, 3142,
	583, 3142,
	586, 3142,
	587, 3142,
	588, 3142,
	589, 3142,
	590, 3142,
	591, 3142,
	592, 3142,
	593, 3142,
	595, 3142,
	598, 3142,
	599, 3142,
	600, 3142,
	601, 3142,
	602, 3142,
	603, 3142,
	605, 3142,
	606, 3142,
	607, 3142,
	608, 3142,
	609, 3142,
	610, 3142,
	611, 3142,
	612, 3142,
	613, 3142,
	614, 3142,
	615, 3142,
	620, 3142,
	621, 3142,
	622, 3142,
	623, 3142,
	624, 3142,
	625, 3142,
	626, 3142,
	628, 3142,
	638, 3142,
	639, 3142,
	640, 3142,
	641, 3142,
	642, 3142,
	643, 3142,
	645, 3142,
	646, 3142,
	647, 3142,
	648, 3142,
	649, 3142,
	650, 3142,
	651, 3142,
	652, 3142,
	653, 3142,
	656, 3142,
	659, 3142,
	660, 3142,
	662, 3142,
	663, 3142,
	-2, 0,
	-1, 1826,
	202, 2988,
	565, 2988,
	640, 2988,
	660, 2988,
	-2, 0,
	-1, 1874,
	202, 1085,
	-2, 2978,
	-1, 1875,
	202, 1086,
	-2, 2761,
	-1, 1876,
	202, 1087,
	-2, 2929,
	-1, 1881,
	426, 1137,
	501, 1137,
	548, 1137,
	570, 1137,
	-2, 0,
	-1, 1892,
	1, 1687,
	240, 1687,
	657, 1687,
	659, 1687,
	661, 1687,
	664, 1687,
	-2, 0,
	-1, 1909,
	1, 1132,
	657, 1132,
	659, 1132,
	661, 1132,
	664, 1132,
	-2, 0,
	-1, 1910,
	1, 1176,
	657, 1176,
	659, 1176,
	661, 1176,
	664, 1176,
	-2, 0,
	-1, 1911,
	1, 1184,
	657, 1184,
	659, 1184,
	661, 1184,
	664, 1184,
	-2, 0,
	-1, 1914,
	1, 1141,
	657, 1141,
	659, 1141,
	661, 1141,
	664, 1141,
	-2, 0,
	-1, 1916,
	1, 1147,
	657, 1147,
	659, 1147,
	661, 1147,
	664, 1147,
	-2, 0,
	-1, 1919,
	1, 1143,
	657, 1143,
	659, 1143,
	661, 1143,
	664, 1143,
	-2, 0,
	-1, 1924,
	1, 1157,
	657, 1157,
	659, 1157,
	661, 1157,
	664, 1157,
	-2, 0,
	-1, 1959,
	1, 2967,
	657, 2967,
	659, 2967,
	660, 2967,
	661, 2967,
	664, 2967,
	-2, 0,
	-1, 1963,
	1, 1236,
	657, 1236,
	659, 1236,
	661, 1236,
	664, 1236,
	-2, 0,
	-1, 1983,
	182, 1905,
	195, 1905,
	297, 1905,
	371, 1905,
	-2, 1843,
	-1, 2085,
	161, 1864,
	182, 1864,
	195, 1864,
	261, 1864,
	297, 1864,
	371, 1864,
	382, 1864,
	584, 1864,
	-2, 2315,
	-1, 2146,
	659, 2490,
	-2, 0,
	-1, 2182,
	161, 1864,
	182, 1864,
	195, 1864,
	261, 1864,
	297, 1864,
	371, 1864,
	382, 1864,
	584, 1864,
	-2, 1997,
	-1, 2221,
	660, 2634,
	663, 2634,
	-2, 1263,
	-1, 2222,
	660, 2636,
	663, 2636,
	-2, 1264,
	-1, 2223,
	660, 2635,
	663, 2635,
	-2, 1265,
	-1, 2224,
	663, 2558,
	-2, 1266,
	-1, 2248,
	658, 2138,
	-2, 2126,
	-1, 2280,
	202, 2985,
	660, 2985,
	663, 2985,
	-2, 0,
	-1, 2331,
	1, 893,
	661, 893,
	664, 893,
	-2, 1748,
	-1, 2534,
	240, 320,
	-2, 2642,
	-1, 2535,
	240, 321,
	-2, 384,
	-1, 2651,
	1, 1134,
	657, 1134,
	659, 1134,
	661, 1134,
	664, 1134,
	-2, 0,
	-1, 2652,
	1, 1178,
	657, 1178,
	659, 1178,
	661, 1178,
	664, 1178,
	-2, 0,
	-1, 2653,
	1, 1186,
	657, 1186,
	659, 1186,
	661, 1186,
	664, 1186,
	-2, 0,
	-1, 2654,
	1, 1238,
	657, 1238,
	659, 1238,
	661, 1238,
	664, 1238,
	-2, 0,
	-1, 2695,
	1, 1159,
	657, 1159,
	659, 1159,
	661, 1159,
	664, 1159,
	-2, 0,
	-1, 2718,
	1, 1221,
	657, 1221,
	659, 1221,
	661, 1221,
	664, 1221,
	-2, 0,
	-1, 2766,
	476, 1932,
	477, 1932,
	-2, 2171,
	-1, 2799,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2191,
	-1, 2800,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2192,
	-1, 2801,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2193,
	-1, 2802,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2194,
	-1, 2803,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2195,
	-1, 2804,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2196,
	-1, 2805,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2197,
	-1, 2806,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2198,
	-1, 2818,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2210,
	-1, 2819,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2211,
	-1, 2820,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2212,
	-1, 2824,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2219,
	-1, 2830,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2223,
	-1, 2832,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2231,
	-1, 2833,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2232,
	-1, 2834,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2233,
	-1, 2835,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2234,
	-1, 3009,
	5, 2646,
	202, 2501,
	658, 2643,
	-2, 2634,
	-1, 3010,
	202, 2502,
	-2, 3072,
	-1, 3011,
	202, 2503,
	-2, 2856,
	-1, 3012,
	202, 2504,
	-2, 2724,
	-1, 3013,
	202, 2505,
	-2, 2789,
	-1, 3014,
	202, 2506,
	-2, 2841,
	-1, 3015,
	202, 2507,
	-2, 2981,
	-1, 3016,
	202, 2508,
	-2, 2298,
	-1, 3109,
	1, 1998,
	2, 1998,
	113, 1998,
	161, 1998,
	182, 1998,
	195, 1998,
	203, 1998,
	221, 1998,
	224, 1998,
	254, 1998,
	261, 1998,
	273, 1998,
	293, 1998,
	297, 1998,
	337, 1998,
	371, 1998,
	376, 1998,
	382, 1998,
	464, 1998,
	470, 1998,
	584, 1998,
	596, 1998,
	617, 1998,
	618, 1998,
	619, 1998,
	629, 1998,
	657, 1998,
	659, 1998,
	661, 1998,
	663, 1998,
	664, 1998,
	-2, 1997,
	-1, 3122,
	658, 2615,
	-2, 2629,
	-1, 3124,
	1, 401,
	617, 401,
	664, 401,
	-2, 1891,
	-1, 3162,
	658, 2137,
	-2, 2127,
	-1, 3193,
	38, 2646,
	134, 2646,
	640, 2646,
	656, 2646,
	659, 2646,
	660, 2646,
	663, 2646,
	-2, 2643,
	-1, 3194,
	38, 2647,
	134, 2647,
	640, 2647,
	656, 2647,
	659, 2647,
	660, 2647,
	663, 2647,
	-2, 2644,
	-1, 3424,
	1, 1587,
	458, 1541,
	503, 1541,
	632, 1541,
	637, 1541,
	657, 1587,
	659, 1587,
	661, 1587,
	664, 1587,
	-2, 1891,
	-1, 3608,
	377, 1935,
	-2, 3131,
	-1, 3609,
	377, 1936,
	-2, 2964,
	-1, 3613,
	476, 2569,
	477, 2569,
	-2, 2296,
	-1, 3614,
	476, 2573,
	477, 2573,
	-2, 2297,
	-1, 3615,
	476, 2570,
	477, 2570,
	-2, 2296,
	-1, 3616,
	476, 2574,
	477, 2574,
	-2, 2297,
	-1, 3630,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2221,
	-1, 3631,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2225,
	-1, 3637,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2227,
	-1, 3881,
	1, 888,
	657, 888,
	659, 888,
	661, 888,
	664, 888,
	-2, 1748,
	-1, 4108,
	46, 2606,
	-2, 1321,
	-1, 4113,
	1, 1587,
	657, 1587,
	659, 1587,
	661, 1587,
	664, 1587,
	-2, 1891,
	-1, 4225,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2229,
	-1, 4232,
	267, 0,
	269, 0,
	360, 0,
	-2, 2248,
	-1, 4300,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2277,
	-1, 4301,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2278,
	-1, 4302,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2279,
	-1, 4306,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2283,
	-1, 4307,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2284,
	-1, 4308,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2285,
	-1, 4356,
	658, 2616,
	-2, 2630,
	-1, 4601,
	660, 3249,
	-2, 1817,
	-1, 4660,
	267, 0,
	269, 0,
	360, 0,
	-2, 2249,
	-1, 4663,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2252,
	-1, 4664,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2254,
	-1, 4792,
	660, 2631,
	-2, 1622,
	-1, 4968,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2253,
	-1, 4969,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2255,
	-1, 4980,
	267, 0,
	-2, 2288,
	-1, 5184,
	267, 0,
	-2, 2289,
	-1, 5417,
	54, 0,
	236, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 3094,
}

const sqlPrivate = 57344

const sqlLast = 157911

var sqlAct = [...]int16{
	313, 5614, 5348, 5606, 5635, 1493, 4095, 5347, 3768, 5488,
	5547, 3382, 5238, 3499, 3327, 5230, 5045, 5465, 5472, 5416,
	1225, 199, 5403, 5281, 5430, 5561, 2531, 5299, 4, 1027,
	6, 1028, 10, 1721, 5386, 4094, 5338, 5359, 5432, 5431,
	5497, 5152, 5362, 5129, 5378, 4573, 5102, 2391, 4788, 5116,
	1549, 4643, 1398, 1686, 4265, 3252, 1409, 5188, 5415, 4925,
	5428, 3838, 2574, 4920, 4914, 4883, 5050, 2776, 4846, 3468,
	4217, 3908, 4989, 4955, 2188, 2362, 4593, 4585, 2623, 5135,
	3186, 5266, 1483, 4022, 4493, 2625, 951, 804, 3622, 4789,
	4131, 2313, 4769, 2847, 3041, 3253, 4125, 4930, 3519, 3343,
	1992, 4556, 4079, 3911, 1844, 4541, 2786, 3914, 4158, 2235,
	4084, 1388, 879, 4539, 2600, 951, 4985, 4064, 1570, 4160,
	3456, 3483, 2777, 3895, 3488, 3485, 1217, 199, 2400, 2289,
	4083, 3900, 4076, 4057, 4056, 4359, 2621, 4086, 3897, 3383,
	3896, 3136, 3814, 3821, 3791, 3783, 3751, 1663, 816, 4642,
	3550, 3192, 3772, 1842, 4699, 3500, 1031, 3514, 3431, 2157,
	3356, 1273, 2480, 4326, 2429, 3935, 2518, 5473, 3774, 3750,
	3972, 3102, 2587, 2520, 2412, 4077, 2783, 5189, 307, 2217,
	2132, 3101, 2860, 2063, 2093, 3606, 3104, 1781, 2571, 946,
	1716, 1488, 2925, 1717, 2519, 2478, 1022, 1389, 875, 2927,
	3393, 2456, 2474, 2452, 2460, 3513, 3469, 1278, 2383, 1564,
	1532, 2379, 1476, 1490, 2311, 1283, 1462, 3142, 3082, 3184,
	3038, 2916, 3185, 2844, 2361, 2158, 2358, 2748, 1551, 2765,
	2746, 852, 1819, 1688, 3493, 1547, 1784, 1777, 1485, 306,
	3137, 2504, 791, 2570, 2174, 2177, 814, 3277, 5383, 5615,
	3278, 1102, 4087, 2351, 1519, 5300, 1889, 2919, 1439, 3238,
	1427, 123, 1442, 2167, 957, 1473, 1392, 3051, 1246, 2127,
	3091, 2971, 3005, 1371, 1406, 1993, 953, 2897, 2077, 952,
	210, 1274, 1994, 860, 2747, 1924, 211, 2749, 2528, 1909,
	1228, 1810, 1001, 957, 127, 835, 1671, 5489, 871, 2509,
	5548, 113, 1817, 1259, 895, 953, 809, 50, 952, 49,
	1746, 47, 38, 36, 34, 1369, 941, 1999, 3660, 805,
	1394, 818, 1563, 1974, 1727, 960, 1123, 4340, 3654, 2291,
	4341, 1002, 2291, 5650, 2291, 2291, 5638, 3081, 2291, 175,
	4037, 2291, 2291, 5624, 3770, 5622, 5426, 3839, 84, 3081,
	52, 51, 5621, 5425, 960, 5581, 3081, 1544, 5579, 5049,
	5519, 5474, 5049, 5017, 2540, 5475, 5456, 85, 5454, 5451,
	3081, 5448, 3081, 5452, 5009, 5449, 5413, 5412, 888, 891,
	2540, 2540, 5411, 5401, 5399, 90, 3524, 5049, 5049, 1720,
	4140, 2323, 5008, 1854, 1835, 5390, 73, 5389, 5357, 5049,
	5321, 5049, 5049, 54, 3153, 173, 5314, 5313, 5304, 5280,
	3081, 3081, 2540, 2540, 1915, 5277, 5259, 5186, 5166, 5049,
	4873, 3153, 4618, 5014, 53, 5131, 5068, 99, 5067, 4415,
	2540, 5056, 2540, 5055, 5048, 2540, 5013, 5049, 5049, 5012,
	5007, 4996, 1386, 4970, 1528, 2540, 4940, 3153, 4907, 4733,
	3524, 1221, 1372, 1372, 4908, 56, 74, 4841, 4037, 4816,
	1210, 3081, 4662, 3081, 4609, 57, 3153, 4603, 4153, 4553,
	63, 4153, 2320, 4554, 1222, 5601, 1528, 4446, 2622, 2575,
	1201, 4447, 3831, 55, 4414, 122, 1200, 1728, 4415, 1778,
	2320, 106, 119, 2323, 4351, 1741, 1221, 4349, 4352, 4333,
	75, 4350, 4249, 3081, 4245, 4152, 2540, 3861, 3081, 4153,
	4330, 3862, 3178, 4141, 3767, 3762, 3858, 3852, 3081, 3081,
	3761, 3712, 3710, 3461, 3081, 3713, 3711, 3702, 3700, 3671,
	1216, 3703, 3081, 3081, 3148, 3669, 58, 4037, 2320, 3523,
	1735, 3670, 3510, 3524, 3509, 3217, 2610, 175, 2610, 3081,
	2922, 3053, 2540, 1434, 106, 1404, 84, 107, 52, 51,
	3152, 3134, 3126, 3080, 3153, 3081, 2540, 3081, 2609, 1424,
	2323, 1375, 2610, 1376, 3621, 85, 3081, 5322, 2323, 78,
	2320, 5190, 1373, 5181, 5169, 3524, 1729, 1729, 4330, 3052,
	271, 4918, 4873, 90, 2320, 4817, 4618, 4555, 4548, 3334,
	3237, 2405, 2337, 2687, 73, 2539, 3228, 1729, 2303, 2317,
	2323, 54, 3461, 173, 4018, 2290, 3353, 3143, 2153, 1425,
	1714, 4464, 4220, 4189, 2175, 2467, 4142, 1891, 3118, 3117,
	3116, 3115, 53, 3114, 1377, 99, 1374, 2009, 2010, 76,
	1209, 271, 1208, 1207, 273, 1206, 4143, 4932, 1205, 1204,
	2923, 1203, 1199, 1198, 1197, 1196, 3721, 3722, 1195, 1194,
	1193, 1192, 1191, 56, 74, 5441, 1190, 1425, 3576, 2012,
	1189, 1188, 1187, 57, 1186, 1185, 1184, 1183, 63, 1182,
	1729, 3721, 3722, 79, 3739, 3740, 3741, 1181, 1180, 1179,
	1166, 55, 3496, 122, 1281, 273, 272, 1100, 1099, 106,
	119, 1098, 1097, 1096, 1095, 1094, 1093, 2011, 75, 2009,
	2010, 1092, 1091, 1090, 265, 1089, 1088, 111, 1087, 1086,
	1085, 2292, 1084, 266, 2292, 1740, 2292, 2292, 1083, 1082,
	2292, 1081, 3081, 2292, 2292, 59, 2009, 2010, 2924, 1080,
	2921, 2012, 1079, 1078, 58, 1077, 1076, 272, 1075, 1074,
	1073, 1072, 62, 212, 1071, 1070, 4717, 65, 1069, 1068,
	2040, 1067, 3736, 1066, 1065, 107, 1064, 77, 2012, 1053,
	1734, 1052, 1051, 1046, 1045, 64, 208, 3659, 114, 2011,
	1038, 118, 1037, 5467, 1036, 1021, 1020, 60, 1019, 1858,
	977, 174, 976, 975, 974, 973, 964, 2065, 963, 61,
	962, 961, 923, 922, 212, 4674, 2011, 2320, 886, 885,
	884, 1280, 4385, 271, 2320, 866, 3721, 3722, 301, 2017,
	300, 68, 3245, 299, 2320, 298, 297, 166, 296, 295,
	294, 293, 292, 291, 3721, 3722, 290, 289, 3727, 288,
	287, 286, 285, 284, 172, 283, 282, 76, 281, 280,
	279, 278, 277, 1495, 1283, 276, 275, 274, 4345, 4193,
	4154, 1839, 3817, 3727, 3682, 1501, 1224, 273, 3765, 3665,
	3656, 3553, 3441, 1720, 4934, 3157, 271, 3245, 3123, 2178,
	3108, 1283, 1283, 1283, 2320, 2135, 271, 271, 2954, 3461,
	166, 2017, 2134, 3478, 1426, 171, 2135, 2320, 2952, 2938,
	2320, 2936, 2738, 2134, 2364, 2322, 5440, 271, 1436, 3052,
	2006, 214, 2926, 3766, 2201, 3736, 2104, 1975, 2017, 272,
	5193, 1723, 2138, 2323, 5172, 111, 3204, 1573, 2303, 2320,
	273, 1283, 2317, 2133, 1691, 2290, 2741, 265, 1283, 1283,
	273, 273, 1495, 59, 1540, 1408, 266, 1705, 5437, 5414,
	209, 5398, 5285, 1523, 5178, 213, 1536, 1537, 1538, 5170,
	62, 273, 5040, 4984, 4938, 65, 4917, 1283, 1401, 1283,
	4566, 1283, 2039, 2041, 4140, 77, 212, 1425, 2320, 1691,
	271, 3737, 272, 64, 208, 4742, 114, 4697, 271, 118,
	4696, 2095, 272, 272, 4690, 60, 1523, 4689, 3727, 174,
	265, 4688, 4681, 1495, 4680, 4452, 4678, 61, 1786, 266,
	265, 265, 3052, 272, 1425, 1681, 3727, 4673, 2062, 266,
	266, 271, 4670, 1676, 4669, 1691, 4552, 4547, 1917, 68,
	1718, 265, 1691, 271, 273, 166, 2032, 2062, 4389, 212,
	266, 1283, 273, 1283, 2920, 4388, 199, 199, 1691, 212,
	212, 2102, 172, 271, 4387, 4355, 4321, 1283, 4320, 1283,
	3243, 4319, 2062, 1467, 1470, 4241, 4236, 3812, 3758, 3749,
	212, 2095, 1515, 2097, 1385, 273, 3720, 3717, 3166, 2590,
	3716, 3714, 3709, 3708, 1517, 1400, 272, 273, 1791, 1794,
	3707, 1480, 3704, 3701, 272, 3681, 271, 3664, 3657, 3721,
	3722, 3655, 3511, 171, 265, 3721, 3722, 273, 1691, 3109,
	2909, 2006, 265, 266, 2547, 2545, 3737, 2062, 2005, 214,
	5644, 266, 5569, 1566, 5568, 1660, 1665, 272, 1283, 5487,
	1813, 1283, 1703, 957, 3737, 5485, 1554, 1555, 1410, 272,
	4267, 5349, 1668, 212, 4567, 265, 3721, 3722, 3738, 5264,
	273, 212, 3721, 3722, 266, 5250, 4933, 265, 209, 272,
	5246, 5245, 5244, 213, 3480, 5224, 266, 4462, 5223, 1509,
	5221, 2096, 1715, 2094, 5192, 5191, 3242, 265, 5164, 2850,
	5150, 1023, 5147, 5146, 212, 5127, 266, 3, 5126, 5064,
	5035, 4982, 1779, 4965, 960, 4964, 212, 2062, 4903, 1696,
	4899, 1543, 272, 2033, 4896, 4874, 4716, 1699, 4695, 84,
	4619, 1026, 1025, 3763, 4450, 2062, 3495, 1859, 4449, 4430,
	265, 1797, 1822, 1824, 4429, 4427, 3242, 4336, 85, 266,
	4324, 3242, 4231, 2082, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 4155, 4117, 4107, 3998, 90, 3946, 3913, 1523,
	3846, 3844, 3686, 2856, 3685, 4567, 1546, 3680, 1820, 212,
	1556, 1557, 3646, 3455, 3453, 3270, 2141, 1283, 2140, 2139,
	2136, 2064, 2128, 1283, 2013, 2014, 2015, 2016, 2018, 2019,
	2126, 3727, 271, 3738, 1811, 3164, 1222, 3727, 99, 3163,
	3120, 3113, 3079, 3723, 3724, 3725, 3726, 3728, 3729, 2934,
	2081, 3738, 2295, 5010, 2200, 1257, 2156, 2150, 3733, 3734,
	3735, 2149, 2148, 2147, 2146, 3732, 3730, 3731, 3723, 3724,
	3725, 3726, 3728, 3729, 2145, 2144, 2143, 1984, 3727, 2142,
	2123, 1029, 2122, 2121, 3727, 2120, 273, 2119, 2118, 2084,
	2117, 2116, 2115, 2114, 55, 2113, 122, 2112, 2015, 2016,
	2018, 2019, 106, 119, 271, 1864, 3155, 2111, 271, 271,
	2110, 2109, 2108, 2097, 2083, 1980, 1834, 2080, 2075, 1508,
	2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 1283,
	1283, 1283, 1853, 1816, 1431, 1283, 1420, 5195, 272, 1933,
	5194, 4906, 1406, 3479, 1406, 4738, 4666, 4384, 4348, 3737,
	4339, 3668, 3111, 4740, 4383, 3737, 265, 2096, 273, 1573,
	3842, 2078, 273, 273, 4819, 266, 199, 4146, 107, 2196,
	4549, 1283, 3721, 3722, 2223, 1495, 1550, 2009, 2010, 2155,
	1550, 2357, 2253, 2223, 3949, 1495, 1882, 2007, 1495, 1691,
	1550, 1533, 3328, 1535, 2204, 212, 3737, 1548, 5560, 5254,
	1918, 3730, 3731, 3723, 3724, 3725, 3726, 3728, 3729, 2012,
	272, 1550, 5247, 1985, 272, 272, 1550, 4937, 3732, 3730,
	3731, 3723, 3724, 3725, 3726, 3728, 3729, 4857, 265, 2164,
	2062, 4856, 265, 265, 1976, 4855, 2062, 266, 4854, 1550,
	4853, 266, 266, 1981, 4818, 4719, 3296, 2011, 4626, 5429,
	4625, 4624, 1989, 1495, 5433, 1988, 1201, 2210, 4623, 1283,
	4622, 2405, 1200, 2137, 4621, 2216, 4620, 212, 1534, 1983,
	2211, 212, 212, 2442, 3809, 4416, 2178, 2062, 1222, 4343,
	4342, 4157, 4156, 1283, 4039, 5515, 5513, 2002, 2003, 2161,
	2162, 1573, 4038, 4027, 5136, 2953, 1528, 2135, 4218, 4484,
	4570, 1978, 3706, 5173, 2134, 2951, 2937, 1372, 2935, 3988,
	1528, 3705, 2185, 2332, 3628, 3281, 3738, 1531, 3391, 2394,
	4445, 4560, 3738, 2343, 1177, 4097, 3915, 4096, 111, 1402,
	2521, 2106, 2355, 2236, 2642, 1881, 2403, 4410, 5171, 4411,
	4023, 1523, 2302, 2129, 2130, 5217, 1890, 2307, 5216, 2575,
	2309, 5130, 957, 2329, 2206, 5462, 2314, 1528, 2118, 2118,
	2316, 957, 2276, 3738, 2226, 2319, 4915, 2224, 5039, 2328,
	3520, 5217, 2208, 2226, 2205, 1934, 2224, 1178, 4065, 4861,
	1891, 2522, 4546, 4490, 2176, 4481, 4455, 208, 2231, 114,
	2186, 4184, 118, 3879, 2708, 2619, 2555, 4986, 2282, 3770,
	4020, 2285, 4269, 3674, 2917, 1222, 2461, 5627, 3341, 1816,
	2183, 3279, 1815, 960, 3162, 1529, 5059, 5031, 45, 4019,
	5607, 4114, 960, 1404, 271, 1404, 2349, 2348, 5438, 2464,
	1550, 2357, 1030, 2305, 2151, 2131, 2154, 2583, 166, 1790,
	2922, 1710, 1504, 5453, 2465, 1466, 2209, 2441, 2591, 5450,
	1529, 3350, 2440, 2195, 2103, 2194, 4833, 2193, 2191, 2190,
	2189, 4829, 2180, 1691, 1691, 4136, 2325, 4421, 5239, 3347,
	4921, 3345, 2331, 5356, 1573, 3918, 4440, 2451, 273, 3492,
	1384, 1847, 2232, 3732, 3730, 3731, 3723, 3724, 3725, 3726,
	3728, 3729, 3723, 3724, 3725, 3726, 3728, 3729, 4048, 3330,
	1691, 4002, 3552, 1868, 5439, 5552, 171, 3433, 2476, 5517,
	5494, 5516, 5062, 4803, 5058, 2505, 5037, 4212, 2448, 1227,
	2327, 4800, 214, 2718, 2008, 5095, 5091, 2715, 4503, 1691,
	272, 4805, 3731, 3723, 3724, 3725, 3726, 3728, 3729, 1760,
	2923, 3725, 3726, 3728, 3729, 3218, 1525, 2437, 265, 2446,
	1015, 1753, 3883, 5637, 1535, 2457, 2352, 266, 3885, 1162,
	1175, 209, 1173, 1171, 5255, 2451, 213, 2532, 2537, 2344,
	3241, 1931, 921, 4025, 1691, 1932, 1691, 918, 1691, 2701,
	2699, 1525, 3241, 5084, 2451, 2350, 3239, 1024, 2716, 1712,
	5167, 5070, 1518, 2756, 4866, 4865, 1691, 1691, 3239, 2369,
	1226, 2370, 1535, 3489, 4502, 3255, 4501, 4500, 4492, 4470,
	1691, 2377, 2378, 4750, 4469, 2399, 2404, 2967, 2717, 4467,
	2411, 4024, 1691, 4466, 4454, 1691, 1691, 1691, 2924, 1534,
	2921, 4413, 4412, 3948, 1530, 4054, 4053, 2966, 3990, 3830,
	3679, 2614, 2506, 957, 3678, 5107, 3677, 3676, 2401, 2223,
	3843, 3632, 3389, 2524, 2525, 2371, 2372, 2754, 2526, 2788,
	3388, 2462, 2375, 2376, 5060, 5032, 1813, 1016, 2602, 1530,
	2602, 1283, 2449, 2603, 2434, 5608, 4550, 1534, 3368, 3366,
	3352, 2579, 2538, 1930, 2354, 3340, 2643, 2397, 1815, 3332,
	4424, 3321, 3320, 3915, 858, 2487, 1866, 1526, 3308, 858,
	3307, 3306, 3986, 2584, 960, 3286, 3285, 1527, 3246, 2522,
	1283, 2152, 3135, 2575, 2831, 2233, 2433, 2447, 1220, 2430,
	1982, 2597, 2402, 2455, 3156, 2353, 2640, 3258, 1013, 1529,
	1012, 1803, 1526, 1802, 1764, 5553, 2450, 2617, 1453, 1168,
	5495, 2647, 1527, 4963, 2511, 4799, 1283, 2511, 1283, 2605,
	2627, 2510, 2514, 2398, 2510, 1283, 4021, 1801, 1283, 1800,
	2253, 2253, 1573, 4801, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	2558, 1283, 2926, 1283, 1283, 1283, 1283, 1820, 2607, 1820,
	2552, 2594, 4820, 4186, 3729, 2196, 1552, 1553, 1219, 2019,
	2359, 2360, 3302, 2755, 2450, 2634, 1755, 957, 2672, 1283,
	1552, 1553, 2586, 1283, 1283, 1222, 1401, 1222, 1401, 2226,
	5555, 1283, 2224, 2450, 2758, 1283, 2599, 1283, 1283, 2745,
	3300, 1552, 1553, 3283, 2633, 1573, 1552, 1553, 1913, 2740,
	1525, 1283, 1283, 1283, 1283, 803, 2917, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1509, 2611, 4761, 2612, 1552,
	1553, 1883, 3584, 2573, 2736, 1913, 3987, 2638, 960, 1973,
	3172, 1713, 798, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 2756, 1283, 2753, 1528, 2405, 1283, 1772, 3225,
	2727, 2784, 2785, 2846, 3643, 5108, 2730, 2444, 3571, 1406,
	2846, 5094, 2651, 1861, 1977, 1756, 1573, 2898, 2899, 5106,
	3309, 2662, 3319, 2652, 2920, 1406, 1948, 5104, 3527, 1221,
	1528, 2898, 2914, 3269, 857, 5556, 3641, 3257, 1530, 857,
	4760, 1283, 1573, 1400, 1950, 1400, 1944, 5516, 4749, 2706,
	1910, 3141, 2695, 1891, 3125, 3311, 2754, 2656, 2962, 2782,
	1929, 3349, 5115, 3619, 2770, 3604, 2769, 2659, 2693, 4531,
	1912, 2403, 2781, 5232, 1495, 1879, 5585, 3008, 3008, 3022,
	5103, 2898, 1891, 2507, 3042, 3044, 2854, 2512, 1018, 1017,
	4802, 3050, 2653, 2852, 3587, 199, 3348, 1912, 2650, 5554,
	5435, 1526, 3145, 1507, 3150, 2862, 2742, 3313, 2757, 2744,
	5105, 1527, 2743, 2750, 3346, 3096, 3344, 4797, 3310, 1911,
	1201, 2913, 1987, 1201, 1201, 1495, 2773, 3221, 2729, 2774,
	2775, 4532, 2513, 4962, 3357, 3121, 3194, 3882, 1862, 3268,
	2604, 2413, 4451, 4198, 2384, 2752, 4197, 3372, 1232, 2385,
	3223, 4437, 3573, 3312, 3240, 5616, 5558, 859, 4106, 5207,
	2359, 2360, 859, 1785, 1495, 1495, 2926, 2417, 2964, 3212,
	5206, 2508, 4258, 2965, 4864, 4468, 2968, 3088, 2969, 2970,
	1372, 4530, 1222, 3232, 4465, 5528, 3888, 1867, 1062, 2660,
	3638, 4394, 1222, 2185, 3224, 2858, 1222, 2431, 4393, 2468,
	2515, 3966, 2436, 3256, 2475, 1573, 5234, 4392, 3110, 3174,
	2384, 3618, 4378, 4377, 2911, 2385, 3222, 919, 5564, 919,
	1170, 3639, 2755, 4376, 1783, 3644, 3087, 2414, 4190, 919,
	4060, 1218, 4052, 3984, 919, 2700, 2698, 3367, 1926, 3351,
	3207, 3586, 3957, 3282, 957, 3305, 957, 1763, 3284, 2737,
	3428, 1452, 5587, 3004, 2253, 1523, 3017, 3318, 2461, 3168,
	3095, 3046, 3100, 3967, 3033, 3106, 3107, 3048, 2405, 3077,
	3078, 2386, 3171, 3089, 3583, 3199, 5539, 2438, 4435, 3158,
	4784, 3203, 3093, 3094, 5538, 3144, 1222, 3149, 2137, 2390,
	1404, 2183, 5436, 3133, 1945, 3214, 2465, 3191, 3138, 957,
	2726, 2544, 2543, 2753, 3958, 960, 1404, 960, 1573, 1528,
	5502, 3183, 3429, 3965, 3611, 3612, 4648, 2828, 4777, 4647,
	1691, 4191, 4510, 4879, 2432, 3170, 2469, 3231, 2384, 3147,
	4061, 4133, 4508, 2385, 5466, 3247, 3580, 2386, 3177, 1789,
	3215, 4795, 2426, 3139, 915, 2418, 2926, 4058, 2291, 3165,
	4134, 2404, 3209, 2459, 3956, 2390, 1971, 3169, 799, 4798,
	960, 3198, 3427, 1500, 1495, 3201, 3980, 3202, 3206, 3424,
	2387, 2392, 2129, 2130, 5557, 4778, 1169, 5318, 3213, 3216,
	3326, 5240, 3386, 2458, 3176, 1283, 1283, 2517, 1283, 3244,
	2355, 2355, 3180, 3179, 3585, 3982, 3140, 3099, 3342, 3208,
	3210, 5405, 4025, 5406, 2427, 3289, 3721, 3722, 5434, 3739,
	3740, 3741, 3303, 3902, 5333, 1785, 5023, 2419, 2420, 1495,
	3981, 4512, 2453, 2489, 3467, 3979, 3288, 3464, 2728, 4658,
	3978, 3219, 3640, 3975, 3273, 3329, 2387, 2392, 4133, 2408,
	3518, 3517, 3642, 3459, 2415, 1946, 3884, 1942, 3287, 2516,
	800, 1691, 856, 4727, 2425, 2386, 4511, 2402, 4255, 1892,
	4728, 2388, 3304, 1691, 2499, 1691, 913, 3930, 1711, 1429,
	199, 1691, 4893, 2390, 3316, 2445, 1726, 3250, 1733, 3322,
	1739, 3358, 1691, 1691, 3476, 3260, 3263, 3736, 2454, 2658,
	2842, 5562, 2416, 3294, 3295, 3297, 3298, 3299, 3301, 2826,
	3503, 2409, 5233, 2829, 3634, 801, 2124, 802, 1495, 3436,
	1495, 2845, 3515, 2462, 3438, 2395, 3233, 3234, 5501, 4796,
	3235, 3236, 2840, 4726, 3390, 3315, 3840, 2388, 3929, 3425,
	3426, 3314, 1283, 2495, 3324, 3530, 3531, 1402, 3331, 1402,
	2443, 4043, 2694, 3338, 1285, 5526, 4256, 3538, 3539, 3540,
	1833, 2407, 1838, 1947, 2387, 2392, 4540, 2465, 957, 2825,
	1863, 2422, 2655, 2428, 5480, 2472, 1852, 3521, 1857, 1949,
	3439, 3363, 3890, 1943, 2443, 5481, 3942, 2393, 2853, 1878,
	1880, 2395, 3124, 5316, 4644, 3379, 2395, 3537, 3727, 3380,
	3381, 2445, 3548, 3376, 3377, 2492, 3471, 3936, 4059, 4773,
	2166, 3434, 1283, 2649, 3525, 1063, 4774, 1506, 1283, 1283,
	5563, 3532, 3512, 3533, 4975, 5367, 4835, 4779, 3522, 960,
	5583, 3983, 3891, 1283, 3528, 2439, 1986, 2470, 2421, 4436,
	2442, 5317, 824, 3505, 1916, 4957, 2074, 1054, 3940, 3903,
	2908, 1328, 965, 2393, 4509, 2388, 3507, 3684, 3460, 2497,
	3092, 3867, 5565, 5588, 3938, 3241, 2512, 3105, 1221, 3589,
	4776, 3591, 3743, 3475, 1055, 4271, 1283, 1283, 5571, 972,
	4905, 3261, 1283, 1414, 4633, 2435, 2836, 2471, 3498, 4780,
	4869, 2170, 4649, 3508, 1820, 1283, 1283, 4737, 3941, 1416,
	2170, 1283, 1283, 3506, 2382, 4514, 4379, 1283, 1435, 2395,
	2837, 2513, 3487, 1401, 914, 1433, 3737, 2838, 3325, 4214,
	4894, 2843, 3547, 2444, 2423, 2498, 3602, 1411, 2389, 1401,
	2926, 3554, 5282, 3555, 3937, 5373, 1897, 3562, 4510, 3564,
	5298, 3566, 2173, 4310, 5149, 3434, 4868, 1039, 4508, 5500,
	2292, 2173, 1283, 1283, 1283, 2166, 5467, 4867, 1283, 3556,
	2502, 3090, 3560, 4591, 3545, 4121, 2380, 4033, 1283, 4031,
	2168, 2393, 916, 3635, 1044, 1417, 912, 3856, 3370, 3132,
	3561, 2171, 3563, 2827, 3565, 1283, 3567, 3568, 2569, 3599,
	2171, 2163, 3667, 3592, 2389, 4956, 3594, 2062, 1432, 1423,
	790, 3610, 5098, 4565, 1418, 1997, 2705, 4693, 1996, 3577,
	4645, 1996, 2772, 2406, 2441, 2345, 2381, 5593, 5275, 2440,
	3822, 1991, 3601, 5057, 3600, 1276, 5003, 4519, 3364, 4032,
	1400, 3371, 3024, 2490, 2169, 5158, 4775, 4512, 2770, 3620,
	2769, 3605, 2342, 3909, 2500, 2170, 1400, 3662, 3663, 1415,
	5214, 5479, 3666, 4592, 4496, 5283, 4471, 3627, 4422, 4420,
	4046, 2496, 4122, 4361, 4112, 4047, 3905, 1212, 3477, 1153,
	3365, 3470, 4511, 3785, 3457, 5267, 3658, 1283, 1283, 1283,
	1283, 4785, 4786, 3738, 2598, 2592, 1283, 1283, 1283, 5268,
	2585, 1283, 2493, 2577, 1214, 2554, 2173, 2551, 5143, 2491,
	3361, 4406, 3633, 1283, 1406, 1573, 4254, 2501, 1757, 2762,
	3290, 1444, 2389, 5339, 2192, 2168, 1056, 1057, 4325, 4215,
	4362, 966, 967, 1995, 5269, 2340, 1995, 865, 2839, 3245,
	1283, 1996, 1283, 5301, 2707, 2171, 3777, 3778, 2841, 2338,
	3375, 1406, 3083, 4594, 1213, 4926, 4650, 4958, 4363, 3454,
	1454, 4360, 5122, 4311, 5120, 5034, 3921, 3917, 2172, 1573,
	4371, 1865, 1222, 1153, 4312, 1153, 4369, 2172, 3916, 3625,
	3603, 1406, 2341, 2639, 1573, 4338, 3782, 3781, 2631, 2169,
	2620, 2494, 3086, 1920, 1919, 3760, 1495, 3673, 1214, 4372,
	1214, 2549, 1154, 1914, 3131, 5271, 1795, 1997, 3130, 2074,
	1997, 3262, 4370, 4034, 2253, 3373, 3129, 4366, 1573, 3128,
	3127, 3802, 1796, 1809, 1807, 1776, 1040, 1041, 1495, 4545,
	5270, 1061, 3789, 3815, 3779, 1219, 3085, 4863, 4694, 1495,
	3836, 3084, 4367, 4518, 3859, 3194, 2253, 5227, 3811, 5272,
	4561, 4651, 2368, 3733, 3734, 3735, 1995, 5046, 5592, 4884,
	3732, 3730, 3731, 3723, 3724, 3725, 3726, 3728, 3729, 3266,
	4509, 2763, 4428, 2596, 5124, 4068, 2481, 1283, 2405, 5523,
	5021, 5284, 5019, 904, 4417, 5018, 969, 968, 3551, 1283,
	3432, 4187, 4181, 1778, 3855, 3793, 1154, 1412, 1154, 3854,
	2394, 3853, 3834, 3784, 3833, 5345, 3832, 1495, 3816, 3526,
	3291, 3292, 3904, 2253, 3437, 5228, 3755, 3756, 3757, 3787,
	1898, 905, 2172, 3857, 5142, 3864, 3866, 4407, 3435, 2624,
	1283, 2521, 3824, 3825, 3826, 3827, 2394, 3788, 3771, 1058,
	1059, 1871, 3800, 4035, 3808, 3374, 1495, 4003, 3803, 3804,
	3801, 3954, 3880, 5123, 3892, 3893, 3873, 1523, 3820, 1413,
	970, 971, 1159, 1158, 3886, 3841, 4475, 1495, 3786, 1495,
	3860, 5047, 3969, 5042, 3971, 5041, 3919, 4755, 4754, 3923,
	5353, 4364, 957, 5336, 4700, 5029, 4380, 4327, 3869, 4365,
	3823, 3871, 3872, 1283, 1283, 1404, 3875, 2464, 3876, 3794,
	3877, 1573, 5346, 5006, 3989, 2464, 3191, 2933, 1968, 3829,
	2722, 1155, 5229, 1495, 1970, 3806, 5375, 3807, 4013, 5527,
	3906, 3835, 4480, 3847, 3848, 3920, 3849, 1967, 3925, 1495,
	4045, 3927, 1404, 1965, 4030, 3951, 5030, 1938, 5525, 1042,
	1043, 3850, 5455, 960, 4368, 1936, 1908, 5257, 864, 5248,
	1495, 5016, 3792, 3799, 1906, 4041, 1159, 1158, 1159, 1158,
	4418, 4005, 1404, 4007, 3912, 3865, 4011, 3863, 2367, 3933,
	4017, 4981, 1904, 4746, 4692, 4544, 3953, 3870, 1902, 4399,
	3874, 1900, 3752, 1894, 1808, 1806, 1888, 4230, 3881, 4182,
	3798, 2479, 1060, 4179, 3991, 1495, 1691, 3968, 1691, 3851,
	3999, 1886, 1573, 4036, 3715, 1155, 3889, 1155, 4044, 951,
	1691, 1691, 1805, 3645, 3194, 3970, 3458, 3339, 3333, 3955,
	3280, 3167, 2735, 2731, 2641, 2630, 2615, 5273, 2284, 2203,
	2199, 1972, 1846, 5274, 1402, 1495, 2697, 2932, 2664, 5110,
	4113, 2530, 3976, 4012, 1571, 3939, 1156, 4753, 3753, 4209,
	1402, 4208, 3947, 1406, 4200, 1991, 3575, 3574, 3535, 4029,
	4129, 3960, 2751, 1925, 4127, 2667, 2550, 2283, 2281, 2107,
	3964, 4082, 1860, 1691, 4004, 1211, 1368, 1157, 5427, 4105,
	4040, 4836, 4483, 4102, 4482, 1691, 4517, 1691, 4111, 4840,
	199, 199, 3961, 4815, 3985, 5498, 3962, 917, 3963, 3994,
	4063, 5335, 4066, 2724, 4001, 4924, 4000, 3795, 3796, 3797,
	2723, 3515, 4845, 4170, 1969, 4026, 4014, 4831, 4828, 4380,
	3515, 4766, 4765, 4590, 4580, 4120, 4499, 1966, 4168, 4473,
	4443, 4441, 4419, 1964, 4149, 2209, 1161, 1937, 4161, 4116,
	1156, 4110, 1156, 4919, 1573, 1935, 1907, 1573, 2688, 4138,
	3316, 4050, 4098, 4042, 1905, 3490, 1160, 4185, 3482, 3474,
	4188, 3466, 3451, 4126, 3449, 3430, 3205, 3200, 2548, 4123,
	2546, 1157, 1903, 1157, 4201, 3191, 2523, 920, 1901, 4051,
	2466, 1899, 1283, 1893, 4177, 2424, 1887, 957, 4055, 1283,
	1283, 2410, 2396, 1283, 1283, 1283, 4049, 1283, 4070, 953,
	4251, 1885, 952, 5493, 3288, 4130, 1283, 2253, 4062, 2324,
	4103, 2321, 1804, 2318, 4109, 1283, 2315, 2310, 4108, 4175,
	1283, 2308, 2304, 2297, 2293, 4180, 1573, 4172, 4015, 2696,
	1161, 2663, 1161, 2475, 2529, 1283, 5410, 2000, 2215, 4207,
	4178, 1381, 3369, 1573, 4137, 5517, 4163, 2346, 960, 5226,
	1160, 3595, 1160, 2253, 2253, 1283, 1283, 3623, 1283, 1283,
	1283, 4135, 4162, 4128, 3596, 4206, 4147, 4148, 1382, 2734,
	4144, 1172, 1174, 2334, 2335, 3593, 1283, 3423, 5392, 5292,
	1283, 4939, 2253, 2253, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 4216, 1283, 4852, 4752, 1401, 1268,
	124, 3516, 3887, 1283, 1283, 2253, 4233, 1222, 2363, 2732,
	1283, 4171, 4283, 948, 4284, 1762, 5160, 3267, 5153, 3146,
	1749, 1283, 1438, 4602, 1404, 1475, 3241, 2405, 3241, 1962,
	1963, 2654, 1406, 1406, 199, 1401, 1283, 2691, 4243, 4244,
	2595, 4213, 3239, 4323, 3264, 4016, 2001, 4204, 2236, 1474,
	2686, 3624, 4159, 5391, 2661, 4806, 4210, 2733, 4847, 4211,
	3387, 1213, 2009, 2010, 1884, 1401, 1545, 893, 1573, 4194,
	5180, 4195, 5044, 4196, 4701, 3271, 4679, 1383, 4357, 2009,
	2010, 1495, 1495, 3934, 3272, 3293, 2004, 4238, 1502, 1437,
	4240, 5511, 1542, 2333, 2784, 4274, 3335, 302, 5463, 4513,
	4495, 3448, 1495, 1495, 4322, 4250, 124, 2223, 4344, 1495,
	3272, 2012, 4266, 3194, 2253, 1400, 2253, 4577, 2578, 4273,
	4257, 4259, 4260, 2784, 4289, 4494, 1513, 3347, 1048, 3345,
	4261, 1475, 2011, 3354, 5531, 4281, 1283, 3337, 4286, 4282,
	1475, 4373, 896, 896, 910, 3274, 1941, 4314, 4288, 2011,
	787, 3336, 1400, 4280, 3276, 5344, 4318, 5323, 5290, 4329,
	4174, 5286, 5225, 5144, 1283, 5141, 5022, 4952, 3275, 4588,
	4579, 4315, 4564, 4354, 4115, 3497, 3463, 3450, 3049, 2330,
	2234, 5559, 1400, 5043, 3323, 4169, 4164, 4165, 4166, 4167,
	1709, 4331, 4332, 1708, 4402, 1702, 4403, 1283, 1283, 1202,
	4334, 4335, 1215, 4046, 4046, 3837, 2481, 5591, 4047, 4047,
	4046, 1720, 1223, 3721, 3722, 4047, 2202, 2009, 2010, 2374,
	3227, 2373, 3226, 5288, 4671, 2928, 2477, 4173, 4346, 5530,
	4858, 5309, 1720, 1719, 1870, 1720, 4382, 1720, 3578, 4347,
	1869, 1283, 1283, 2963, 2374, 4476, 2373, 5470, 1940, 1283,
	4404, 1939, 4587, 5145, 4405, 5085, 4849, 4423, 4844, 4843,
	4729, 4725, 4724, 4667, 4641, 4381, 4262, 4009, 4006, 3581,
	1691, 1691, 2101, 1390, 3191, 2100, 3598, 2739, 1691, 5576,
	5540, 5396, 5327, 5326, 5325, 957, 4395, 5256, 4401, 1691,
	1691, 4456, 5200, 5196, 4374, 4375, 4386, 2226, 5118, 1691,
	2224, 5074, 4515, 4442, 1495, 4444, 5011, 5005, 5004, 4528,
	5002, 4460, 5001, 1404, 1404, 4390, 4391, 4999, 4901, 4878,
	4523, 4804, 4400, 4739, 4723, 4722, 4614, 4608, 4551, 4461,
	4463, 4439, 4431, 2253, 4119, 4118, 3926, 3868, 4497, 3582,
	3572, 3544, 3543, 4491, 3542, 3541, 960, 3481, 2365, 3452,
	4448, 3265, 3196, 3160, 3159, 2857, 2725, 1283, 2692, 4453,
	2685, 4478, 4479, 2684, 2683, 2682, 2681, 2593, 2564, 4576,
	2563, 2562, 2561, 2560, 2559, 4506, 2300, 4507, 1691, 2299,
	2298, 2296, 4516, 2214, 1283, 2213, 2247, 4498, 1961, 3288,
	1960, 4595, 1406, 1283, 1895, 1771, 4533, 4534, 4604, 1770,
	1769, 1691, 1768, 1767, 1766, 1765, 1691, 1691, 1691, 4557,
	4485, 1761, 1759, 1758, 1695, 1694, 1562, 1561, 1560, 1559,
	1558, 1505, 1461, 1460, 1459, 1458, 4572, 4520, 4571, 4504,
	1691, 4596, 1691, 1457, 4527, 4543, 1456, 1401, 1691, 3358,
	1573, 1455, 1449, 1448, 1447, 1446, 3503, 1445, 1363, 2336,
	4538, 1176, 1167, 4542, 5231, 4783, 4782, 4781, 2721, 3515,
	2572, 4559, 3442, 105, 4611, 3445, 4526, 3447, 4563, 1754,
	4537, 1573, 3362, 4599, 1283, 1283, 98, 4529, 2473, 4438,
	1283, 1283, 2253, 2250, 3912, 1283, 1283, 5464, 1283, 5572,
	5600, 4615, 2556, 1283, 2482, 5377, 5376, 5261, 3181, 2294,
	4075, 4074, 5469, 2486, 1283, 5114, 4598, 982, 4578, 4951,
	1129, 5374, 1744, 997, 5355, 3928, 4575, 3392, 2666, 3494,
	1283, 1896, 3494, 5138, 4627, 2668, 3810, 3112, 5315, 4630,
	4581, 2541, 4675, 3683, 4629, 5187, 4974, 4582, 2931, 4584,
	2105, 3764, 4635, 4600, 4606, 100, 4605, 1267, 1313, 4536,
	4892, 4891, 4597, 4767, 1400, 4425, 2766, 4085, 4652, 4612,
	4888, 4613, 4887, 2238, 2240, 4628, 1231, 1576, 3055, 3057,
	4653, 5404, 4637, 2347, 5582, 2356, 3161, 3007, 1290, 1287,
	2242, 1406, 4665, 2244, 1289, 4631, 1288, 2243, 2125, 1406,
	1286, 4661, 4638, 1573, 1573, 199, 1573, 2237, 4586, 4104,
	3501, 4145, 1814, 1406, 4698, 3569, 1812, 4646, 1131, 1402,
	2851, 2915, 3672, 2098, 1691, 1691, 1247, 1269, 2912, 1430,
	4706, 1258, 3790, 3769, 4132, 4353, 2761, 1007, 3718, 2918,
	1419, 3030, 3023, 2236, 3019, 3878, 1573, 3491, 1979, 4988,
	2076, 3502, 1539, 1251, 2849, 2089, 1402, 3650, 2771, 4139,
	1495, 3813, 3154, 5385, 4270, 3815, 3579, 2241, 2568, 1380,
	1379, 1428, 1378, 5361, 5358, 2463, 4895, 1283, 4080, 4081,
	2339, 3220, 2861, 1404, 4099, 4714, 1402, 1263, 1406, 3557,
	1406, 3558, 1679, 4691, 2712, 4202, 4731, 4732, 3775, 4562,
	1773, 5051, 4709, 4711, 1275, 2061, 3419, 3418, 5220, 1524,
	1522, 1521, 1520, 5549, 3025, 1495, 4640, 3360, 1291, 3355,
	4814, 2503, 4434, 4433, 4794, 1573, 4432, 1495, 4756, 4757,
	1495, 270, 4823, 3617, 1998, 4826, 1401, 1401, 4793, 1990,
	4790, 4705, 4790, 4810, 4811, 4708, 4703, 4704, 267, 269,
	1283, 268, 4759, 1573, 4718, 4715, 3932, 4807, 4358, 4702,
	3819, 1872, 5461, 4458, 4067, 27, 897, 4707, 898, 899,
	309, 309, 309, 3230, 793, 794, 4730, 810, 793, 810,
	822, 2366, 1541, 863, 4409, 26, 25, 883, 4170, 24,
	4764, 23, 890, 890, 890, 890, 128, 48, 4747, 29,
	4859, 28, 5, 4168, 309, 1691, 1691, 4808, 22, 3194,
	1283, 1283, 170, 4161, 168, 4848, 4758, 4850, 145, 165,
	164, 137, 163, 162, 161, 160, 1035, 159, 167, 2787,
	158, 157, 152, 309, 156, 155, 154, 153, 1495, 151,
	149, 150, 144, 4909, 4813, 4851, 4809, 148, 147, 4762,
	146, 1573, 4842, 1400, 1400, 143, 1691, 4822, 142, 141,
	4825, 140, 139, 138, 124, 136, 169, 135, 134, 4927,
	4885, 215, 1404, 4751, 133, 4734, 4735, 4736, 4827, 132,
	1404, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 131, 130,
	4876, 4743, 4744, 4745, 1404, 129, 4748, 876, 877, 4913,
	4824, 4916, 4172, 67, 4830, 1573, 66, 4832, 4910, 4928,
	4877, 4834, 125, 126, 4860, 21, 4872, 1283, 1283, 1283,
	4875, 4163, 2929, 46, 16, 71, 72, 20, 15, 41,
	103, 4871, 4870, 117, 116, 1573, 115, 4162, 42, 112,
	1283, 4880, 4897, 1283, 1283, 40, 4890, 4898, 2536, 4904,
	4922, 4902, 4886, 1283, 19, 18, 2253, 4959, 4960, 4931,
	17, 1283, 1283, 110, 109, 108, 39, 37, 13, 1404,
	3191, 1404, 11, 43, 2247, 2247, 2187, 124, 1573, 124,
	1691, 124, 4929, 14, 793, 793, 4944, 4950, 4942, 7,
	4948, 4936, 309, 207, 204, 203, 4171, 206, 4941, 202,
	205, 102, 4966, 201, 104, 200, 101, 1495, 35, 12,
	195, 5134, 4569, 4912, 93, 198, 197, 196, 194, 3122,
	193, 192, 189, 4961, 94, 91, 191, 97, 4953, 96,
	190, 1573, 92, 95, 1223, 124, 124, 33, 8, 1283,
	70, 9, 4954, 4183, 120, 4997, 121, 4998, 44, 89,
	88, 124, 1283, 124, 87, 4971, 86, 32, 1402, 69,
	31, 1283, 4977, 264, 262, 4983, 2253, 124, 263, 124,
	261, 2250, 2250, 260, 185, 240, 1283, 5028, 239, 1283,
	4994, 4995, 238, 237, 236, 235, 234, 233, 232, 227,
	231, 229, 228, 230, 226, 256, 1401, 255, 1283, 254,
	253, 1283, 252, 251, 250, 249, 243, 2236, 1573, 242,
	248, 247, 246, 245, 1691, 1283, 244, 1691, 1691, 5054,
	241, 259, 82, 5077, 225, 224, 1495, 5078, 223, 221,
	5025, 5100, 5026, 217, 220, 124, 5024, 5027, 222, 219,
	218, 216, 258, 5033, 257, 4174, 2394, 188, 83, 183,
	184, 81, 182, 181, 5073, 180, 179, 1406, 178, 177,
	176, 80, 187, 186, 30, 2, 1, 0, 0, 0,
	4169, 4164, 4165, 4166, 4167, 5109, 0, 0, 0, 0,
	5090, 0, 3229, 0, 0, 1573, 0, 0, 1691, 0,
	5071, 5117, 0, 5128, 0, 0, 0, 5065, 5066, 5121,
	5133, 5154, 0, 3943, 3944, 5125, 3945, 0, 0, 4790,
	5075, 0, 4173, 1400, 5087, 0, 0, 5063, 0, 4082,
	5015, 5096, 5097, 5079, 0, 1283, 1283, 5159, 0, 5140,
	0, 0, 0, 0, 0, 1202, 5086, 0, 5088, 5111,
	5089, 5155, 1283, 2253, 5137, 2241, 2241, 5119, 5112, 0,
	0, 0, 0, 0, 0, 5113, 5099, 0, 2079, 5076,
	2247, 5163, 0, 5165, 3995, 3996, 5132, 3997, 1495, 1495,
	1495, 0, 0, 1495, 1495, 1495, 2085, 1495, 1495, 2602,
	2091, 5157, 5139, 0, 5151, 1401, 5156, 0, 0, 0,
	0, 5162, 0, 1401, 5161, 0, 1283, 4931, 1283, 5101,
	1283, 5215, 0, 0, 0, 0, 0, 1401, 5080, 0,
	1406, 0, 5168, 0, 0, 5175, 0, 0, 0, 5176,
	5177, 0, 0, 1283, 0, 1406, 0, 0, 0, 0,
	3607, 0, 0, 0, 0, 5213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1402, 1402, 0,
	0, 0, 5185, 0, 0, 0, 0, 2250, 0, 0,
	0, 5179, 4790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5243, 0, 2253, 0, 4790, 2247, 5212,
	0, 5211, 1401, 0, 1401, 0, 0, 1406, 1406, 5265,
	0, 0, 5242, 0, 2236, 0, 0, 0, 0, 5235,
	5236, 2179, 1400, 2182, 305, 124, 0, 5289, 1406, 0,
	1400, 1406, 5263, 3025, 3025, 1691, 0, 0, 0, 0,
	0, 0, 0, 0, 1400, 1691, 0, 0, 0, 0,
	5251, 0, 0, 0, 5253, 5278, 5279, 0, 1404, 4790,
	4790, 1283, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 1283, 5208, 0, 0, 5262, 5295, 5260, 5258, 5297,
	4790, 0, 0, 4790, 0, 5311, 5276, 5312, 5302, 0,
	0, 0, 0, 5137, 5287, 2250, 0, 0, 0, 0,
	5252, 5197, 5198, 5199, 5294, 0, 5201, 5202, 5203, 0,
	5204, 5205, 0, 5303, 0, 0, 0, 0, 0, 1400,
	0, 1400, 5308, 5310, 0, 5352, 0, 1283, 1283, 5320,
	5307, 1283, 5306, 0, 1421, 1691, 1495, 0, 1495, 5328,
	5329, 5330, 0, 5324, 5305, 810, 0, 0, 0, 0,
	0, 2241, 0, 0, 0, 5319, 0, 0, 0, 810,
	0, 311, 0, 5334, 0, 309, 0, 5384, 0, 0,
	5388, 0, 1451, 5342, 5343, 0, 5360, 5363, 0, 0,
	0, 0, 0, 309, 5351, 309, 309, 5350, 1479, 309,
	1489, 0, 0, 5409, 0, 0, 5407, 1283, 1283, 1283,
	5387, 1503, 5369, 5365, 0, 0, 0, 0, 0, 883,
	0, 1404, 883, 0, 0, 3025, 3025, 3025, 3025, 0,
	0, 5364, 0, 1241, 0, 5368, 1404, 0, 0, 0,
	0, 5393, 0, 0, 0, 890, 0, 1283, 5397, 5370,
	5400, 0, 0, 5408, 5442, 0, 0, 0, 0, 0,
	5447, 0, 0, 0, 0, 0, 5421, 5422, 5424, 0,
	5423, 1691, 0, 5443, 309, 0, 309, 309, 1479, 2241,
	309, 309, 0, 0, 0, 309, 2394, 0, 5478, 1489,
	0, 0, 5477, 0, 5476, 0, 0, 0, 1404, 1404,
	0, 5445, 5484, 309, 5444, 1722, 0, 5486, 1283, 5490,
	5460, 0, 5468, 0, 0, 0, 1495, 1495, 0, 1404,
	0, 1742, 1404, 5458, 5471, 5510, 0, 5499, 5483, 0,
	1751, 5117, 0, 5482, 0, 5331, 5332, 1402, 0, 0,
	5492, 5518, 0, 0, 5521, 0, 0, 1775, 5491, 1489,
	0, 0, 5505, 5506, 309, 309, 0, 1479, 1283, 5371,
	5512, 5372, 5514, 5509, 5496, 0, 0, 0, 0, 0,
	0, 5533, 5520, 0, 5535, 5537, 1406, 5522, 1406, 883,
	5529, 309, 309, 5536, 5545, 5524, 1245, 0, 0, 5457,
	5543, 5360, 5459, 1840, 5363, 0, 0, 5542, 0, 0,
	5534, 0, 0, 0, 1848, 0, 0, 0, 5541, 1035,
	5551, 0, 0, 0, 5550, 0, 0, 0, 1495, 0,
	0, 5387, 0, 0, 5544, 0, 5546, 0, 4790, 0,
	4790, 0, 5573, 5566, 5574, 5567, 5575, 0, 0, 0,
	0, 5578, 5580, 0, 0, 0, 0, 0, 0, 0,
	1283, 1283, 0, 0, 0, 5577, 0, 0, 5586, 1283,
	1283, 0, 0, 1223, 5584, 1223, 0, 0, 0, 5589,
	0, 5605, 5604, 5598, 5594, 5610, 0, 0, 0, 5612,
	5603, 1401, 5611, 199, 5618, 5620, 5609, 5613, 5617, 5619,
	309, 5602, 6, 0, 10, 0, 0, 0, 5625, 0,
	3503, 5623, 3776, 0, 5626, 0, 5630, 0, 1495, 5628,
	0, 5631, 1684, 5632, 5636, 0, 309, 5629, 5634, 5633,
	5639, 0, 5640, 0, 0, 5643, 1402, 5641, 5642, 5507,
	5508, 3503, 0, 0, 1402, 1283, 0, 0, 5645, 0,
	5649, 5646, 5651, 5636, 5648, 5652, 0, 0, 1402, 0,
	0, 0, 0, 5595, 5596, 0, 3805, 1747, 0, 124,
	0, 0, 0, 0, 0, 3721, 3722, 0, 3739, 3740,
	3741, 3818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2489, 0, 0, 0, 0, 4657, 0,
	5597, 0, 0, 0, 0, 0, 0, 0, 1400, 0,
	0, 0, 0, 0, 0, 3845, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 2499, 1402, 1843, 0, 4784, 5647,
	0, 5570, 0, 0, 1401, 0, 0, 0, 0, 1202,
	0, 0, 1202, 1202, 0, 0, 3736, 0, 0, 1401,
	0, 0, 0, 0, 0, 0, 0, 1404, 0, 1404,
	0, 0, 0, 0, 0, 0, 4777, 0, 0, 0,
	4770, 0, 0, 0, 4583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 4768, 0,
	0, 0, 0, 2495, 0, 0, 0, 0, 4772, 0,
	2848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1401, 1401, 0, 0, 0, 0, 3647, 3648, 793,
	1223, 0, 0, 4778, 0, 0, 0, 0, 0, 0,
	2085, 0, 1401, 0, 2085, 1401, 0, 0, 0, 0,
	309, 4632, 309, 0, 0, 0, 309, 3727, 2247, 0,
	0, 1400, 0, 0, 0, 2492, 0, 0, 0, 1722,
	1479, 1489, 309, 0, 309, 2212, 1400, 0, 0, 0,
	4771, 0, 309, 0, 810, 0, 0, 0, 0, 2247,
	2247, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2301, 0, 0, 0, 0, 1390, 2497,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 3743, 309, 0, 2182, 0, 0, 0, 1400, 1400,
	0, 0, 3025, 3025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2250, 0, 2247, 0, 1400,
	0, 0, 1400, 0, 0, 883, 0, 0, 0, 2488,
	0, 1443, 0, 0, 0, 3737, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 2498, 2250, 2250, 0, 0,
	0, 0, 0, 0, 0, 1484, 0, 0, 0, 3818,
	0, 0, 0, 890, 0, 890, 0, 0, 0, 3745,
	3746, 3747, 3748, 0, 0, 890, 890, 0, 2485, 0,
	2502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
	3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
	3025, 3025, 84, 3025, 2250, 0, 2062, 4773, 0, 0,
	0, 0, 0, 0, 4774, 0, 0, 0, 0, 0,
	0, 85, 0, 1666, 0, 4779, 1680, 1484, 0, 0,
	2483, 1443, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 2490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4776, 0,
	0, 2496, 0, 0, 0, 0, 0, 2287, 0, 2241,
	2484, 99, 0, 0, 0, 0, 0, 4780, 0, 0,
	0, 4203, 3738, 0, 1571, 0, 0, 0, 0, 0,
	1484, 1484, 2493, 0, 0, 0, 0, 4838, 2247, 2491,
	2241, 2241, 1245, 1245, 1245, 0, 0, 2501, 0, 309,
	0, 0, 0, 309, 1029, 0, 0, 0, 0, 0,
	1401, 0, 1401, 0, 0, 0, 0, 55, 0, 122,
	0, 0, 0, 0, 0, 106, 119, 0, 0, 0,
	0, 0, 1402, 0, 0, 0, 0, 0, 1657, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4247, 0, 0, 0, 0, 2241, 0,
	0, 309, 0, 4900, 0, 0, 0, 0, 0, 0,
	4263, 2494, 309, 0, 0, 0, 0, 0, 4911, 309,
	0, 0, 0, 0, 0, 2250, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 309, 0, 309, 0, 0,
	0, 793, 4935, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 4775, 883, 0, 0, 0, 1035,
	0, 0, 0, 124, 0, 0, 124, 1400, 124, 1400,
	0, 0, 3733, 3734, 3735, 0, 0, 0, 0, 3732,
	3730, 3731, 3723, 3724, 3725, 3726, 3728, 3729, 0, 0,
	0, 1479, 309, 0, 0, 0, 0, 0, 0, 4785,
	4786, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	124, 2247, 2665, 124, 0, 1402, 0, 309, 309, 124,
	309, 0, 309, 0, 309, 0, 309, 0, 0, 0,
	1402, 0, 0, 0, 0, 4356, 0, 0, 0, 3721,
	3722, 0, 3739, 3740, 3741, 0, 0, 0, 0, 0,
	0, 2702, 0, 0, 2703, 0, 2704, 2247, 2247, 0,
	0, 0, 4235, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 309, 309, 309, 309, 0, 0, 0, 0,
	0, 111, 5020, 0, 0, 0, 2247, 2247, 0, 2241,
	0, 0, 1402, 1402, 0, 0, 124, 0, 1747, 0,
	0, 863, 0, 0, 0, 883, 0, 0, 2250, 0,
	0, 0, 0, 1402, 0, 0, 1402, 0, 0, 2247,
	3736, 0, 0, 0, 0, 0, 0, 2576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 114, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 2250, 2250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2613, 271, 0, 0,
	0, 0, 0, 2250, 2250, 1030, 0, 0, 0, 0,
	0, 166, 0, 0, 2626, 2628, 0, 0, 0, 0,
	2863, 0, 0, 0, 0, 0, 0, 0, 2632, 0,
	0, 0, 0, 0, 0, 0, 2250, 0, 0, 0,
	1680, 3727, 0, 2644, 2645, 2646, 0, 2247, 2247, 0,
	2247, 273, 0, 0, 0, 0, 0, 3721, 3722, 2848,
	3739, 3740, 3741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	2085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 793, 0, 2092, 214, 4226, 4227, 1680, 0,
	0, 0, 2241, 272, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 3743, 793, 0, 0, 3410,
	0, 265, 0, 309, 0, 793, 0, 0, 0, 0,
	266, 0, 0, 0, 209, 0, 0, 309, 3736, 213,
	0, 0, 0, 0, 2250, 2250, 0, 2250, 2241, 2241,
	0, 0, 0, 3400, 3398, 0, 0, 309, 1489, 3737,
	212, 3402, 3404, 3394, 309, 0, 309, 1722, 0, 309,
	1657, 0, 0, 0, 0, 0, 0, 2241, 2241, 0,
	0, 0, 0, 0, 0, 0, 4290, 4291, 4292, 4293,
	4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303,
	4304, 4305, 4306, 4307, 4308, 4309, 3420, 4313, 0, 0,
	2241, 0, 0, 0, 0, 0, 309, 1489, 0, 309,
	810, 0, 810, 0, 0, 0, 0, 0, 0, 309,
	0, 5249, 309, 0, 0, 0, 3195, 0, 0, 3727,
	2062, 0, 309, 309, 0, 0, 0, 309, 0, 309,
	0, 0, 0, 0, 1479, 0, 309, 309, 0, 1489,
	1489, 3211, 0, 0, 0, 0, 309, 2247, 0, 0,
	0, 1402, 0, 1402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1390, 0, 0, 3744, 0, 0, 0,
	5291, 0, 0, 5293, 1245, 2873, 2874, 2875, 2892, 2893,
	2894, 0, 1657, 0, 0, 0, 0, 0, 0, 0,
	890, 890, 0, 3743, 890, 890, 2895, 0, 2241, 2241,
	1390, 2241, 0, 3254, 0, 0, 3738, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 2065, 0, 0, 0, 3737, 0, 3396,
	0, 0, 0, 309, 2250, 0, 0, 0, 0, 0,
	3412, 0, 0, 2885, 883, 0, 0, 0, 2557, 883,
	0, 0, 2881, 4713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3411, 3401, 3399, 3403, 3405, 3395,
	3397, 3413, 3415, 0, 0, 309, 0, 0, 2582, 0,
	0, 0, 3407, 3409, 3417, 0, 2247, 0, 0, 0,
	0, 0, 0, 4741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5394, 0, 0, 2062, 5395,
	3378, 0, 0, 0, 0, 0, 3384, 1722, 0, 3421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2886, 2887, 2888, 2889, 0, 0,
	0, 0, 0, 0, 2880, 0, 0, 0, 309, 3440,
	0, 3025, 0, 0, 0, 1657, 3733, 3734, 3735, 0,
	0, 0, 0, 3732, 3730, 3731, 3723, 3724, 3725, 3726,
	3728, 3729, 0, 0, 124, 124, 0, 124, 1722, 0,
	0, 309, 0, 2250, 3384, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 3738, 0, 0, 0, 0, 0,
	0, 0, 0, 3486, 0, 0, 0, 0, 2241, 0,
	0, 0, 0, 3254, 0, 793, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 3254, 0, 2890, 2891, 0,
	0, 0, 0, 0, 0, 124, 124, 3025, 124, 0,
	0, 0, 0, 0, 0, 3414, 0, 309, 0, 0,
	2713, 2714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2883, 0, 0, 0, 0, 309, 1479, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3559,
	309, 0, 0, 1479, 0, 1479, 0, 1479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3359, 3422,
	0, 0, 0, 0, 0, 0, 0, 0, 3406, 3408,
	0, 0, 3416, 0, 0, 309, 309, 309, 309, 1479,
	0, 0, 1479, 0, 0, 309, 0, 0, 0, 0,
	309, 0, 1571, 0, 3733, 3734, 3735, 2241, 0, 0,
	0, 3732, 3730, 3731, 3723, 3724, 3725, 3726, 3728, 3729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 4972, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 1390, 0, 0, 1223, 0, 0, 0, 0,
	0, 0, 0, 2247, 0, 0, 0, 0, 0, 124,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 4972, 0, 0, 0, 2884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	3025, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3529,
	0, 0, 0, 0, 0, 0, 0, 0, 2787, 0,
	3536, 0, 0, 0, 0, 0, 2009, 2010, 0, 0,
	0, 0, 0, 0, 0, 0, 3025, 2064, 0, 0,
	2250, 0, 0, 2009, 2010, 0, 0, 0, 0, 0,
	2040, 0, 0, 1484, 0, 0, 0, 1722, 2012, 0,
	0, 3025, 0, 0, 0, 1443, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 2012, 1657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 0,
	2247, 0, 0, 0, 0, 2787, 2011, 0, 84, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 2855, 0,
	0, 0, 1484, 2011, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 2087, 1443, 0, 0, 1443, 2870,
	2871, 2872, 2896, 2882, 2876, 90, 2878, 2879, 2877, 2864,
	2865, 2866, 2867, 2868, 2869, 0, 0, 1657, 0, 0,
	0, 0, 1484, 1484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 99, 0, 1701,
	0, 0, 0, 0, 0, 0, 1701, 2250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2247, 0, 309, 124, 0, 0, 0, 0, 2017, 0,
	0, 0, 0, 0, 2241, 0, 0, 0, 0, 0,
	1029, 1390, 1390, 0, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 0, 309,
	0, 106, 119, 0, 793, 0, 0, 0, 0, 793,
	0, 0, 793, 0, 0, 793, 793, 0, 0, 1666,
	0, 793, 2039, 2041, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	2041, 309, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 1722, 0, 2250, 0, 0,
	0, 1680, 85, 0, 0, 0, 0, 107, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0,
	90, 0, 0, 0, 810, 0, 2032, 0, 0, 0,
	0, 0, 2046, 2040, 0, 0, 1657, 0, 0, 0,
	0, 2012, 0, 2032, 0, 0, 0, 0, 0, 309,
	0, 0, 2059, 309, 309, 0, 0, 0, 0, 0,
	0, 2241, 99, 0, 0, 4980, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 2247, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 3254, 3254, 309,
	2031, 3898, 3901, 0, 0, 0, 0, 0, 3254, 2028,
	2212, 0, 0, 0, 0, 1029, 0, 2062, 0, 3254,
	2212, 0, 3254, 2212, 0, 0, 2212, 0, 55, 3898,
	122, 0, 0, 0, 2062, 0, 106, 119, 0, 0,
	0, 309, 309, 3901, 0, 309, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 3151, 0, 0, 0,
	0, 5036, 0, 0, 3901, 0, 309, 0, 3974, 0,
	3974, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	1479, 2241, 0, 0, 2250, 0, 0, 0, 0, 0,
	0, 2034, 2035, 2036, 2037, 0, 0, 0, 0, 0,
	0, 2017, 107, 2033, 3254, 1680, 3254, 0, 4010, 3254,
	3901, 0, 0, 3254, 0, 0, 1484, 0, 0, 2247,
	2033, 0, 0, 0, 0, 4028, 3901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 114, 0,
	0, 118, 0, 0, 2050, 0, 0, 3901, 2060, 0,
	883, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	0, 84, 0, 0, 0, 124, 5379, 0, 0, 0,
	0, 2064, 1680, 271, 1680, 2056, 0, 2057, 0, 0,
	85, 1030, 1479, 0, 2026, 2027, 0, 166, 2064, 309,
	0, 1390, 0, 2489, 0, 0, 0, 0, 90, 0,
	0, 0, 0, 0, 2048, 0, 0, 309, 0, 0,
	4073, 0, 0, 4078, 3254, 0, 2250, 309, 0, 2032,
	0, 0, 0, 0, 0, 1489, 0, 273, 0, 0,
	0, 0, 124, 0, 2499, 0, 0, 0, 0, 0,
	99, 309, 0, 0, 0, 0, 3486, 0, 0, 1479,
	0, 309, 0, 0, 3254, 171, 793, 0, 2241, 0,
	0, 0, 111, 3254, 5184, 0, 0, 0, 2058, 0,
	0, 214, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 272,
	0, 0, 0, 1029, 0, 0, 0, 0, 0, 2047,
	2013, 2014, 2015, 2016, 2018, 2019, 55, 265, 122, 0,
	2062, 0, 0, 2495, 106, 119, 266, 0, 0, 0,
	209, 0, 4192, 0, 0, 213, 0, 0, 0, 0,
	5219, 208, 0, 114, 0, 0, 118, 0, 3721, 3722,
	0, 3739, 3740, 3741, 0, 4199, 212, 2009, 2010, 1722,
	0, 0, 0, 1479, 309, 5241, 309, 0, 0, 0,
	0, 4234, 1479, 0, 0, 1479, 0, 0, 271, 0,
	2038, 2040, 0, 0, 1245, 2492, 1030, 0, 0, 2012,
	107, 0, 166, 0, 124, 0, 0, 0, 0, 0,
	1390, 0, 0, 0, 309, 0, 2033, 0, 1390, 0,
	2241, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 1701, 0, 2011, 0, 3736,
	5380, 0, 273, 0, 0, 0, 0, 0, 2051, 2497,
	0, 0, 0, 0, 0, 0, 2009, 2010, 0, 2042,
	2043, 2044, 2053, 2054, 2055, 0, 0, 0, 4071, 4072,
	171, 0, 0, 4268, 0, 0, 0, 0, 0, 2046,
	2040, 0, 0, 0, 2064, 0, 214, 0, 2012, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 2498, 0, 2065, 1701, 1701,
	0, 266, 0, 0, 0, 209, 2011, 0, 0, 0,
	213, 4151, 0, 0, 0, 0, 0, 2031, 0, 0,
	3727, 0, 0, 4176, 0, 0, 2028, 0, 0, 2017,
	2502, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 2049, 0, 0, 0, 124, 0,
	309, 309, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 0, 0, 793, 793, 4684, 0, 0,
	0, 4683, 0, 2039, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3743, 0, 0, 0, 0, 208,
	0, 114, 0, 2490, 118, 0, 0, 0, 2034, 2035,
	2036, 2037, 0, 0, 2500, 0, 0, 0, 2017, 0,
	0, 0, 0, 0, 124, 309, 0, 0, 0, 0,
	0, 2496, 2165, 0, 0, 0, 271, 0, 3737, 124,
	3365, 0, 0, 0, 1030, 0, 1657, 2032, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	1680, 2050, 2493, 124, 0, 2060, 0, 0, 0, 2491,
	0, 0, 2039, 2041, 0, 0, 0, 2501, 0, 0,
	1701, 1701, 1701, 1701, 0, 0, 0, 0, 0, 0,
	273, 0, 2056, 0, 2057, 0, 0, 0, 0, 0,
	1657, 2026, 2027, 0, 0, 0, 0, 0, 0, 5381,
	0, 0, 0, 0, 0, 1657, 0, 883, 171, 2062,
	0, 2048, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 214, 0, 2032, 0, 1680, 0,
	0, 0, 272, 0, 4472, 0, 0, 4474, 0, 1657,
	4477, 2494, 0, 0, 0, 5382, 0, 0, 3974, 0,
	265, 0, 2582, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 209, 309, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 2058, 0, 3721, 3722, 0,
	3739, 3740, 3741, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 3738, 3384, 0, 1245, 0,
	0, 2045, 0, 124, 2033, 0, 0, 2062, 0, 0,
	1245, 3901, 0, 309, 0, 0, 0, 810, 810, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 3486, 0,
	0, 3486, 2212, 0, 0, 0, 0, 309, 3736, 0,
	0, 0, 0, 0, 4574, 0, 3384, 2038, 0, 309,
	0, 0, 2064, 309, 0, 309, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 0, 0, 0, 3254,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 3254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 2051, 0, 1484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 3901,
	0, 0, 3211, 0, 0, 3733, 3734, 3735, 0, 3727,
	0, 2064, 3732, 3730, 3731, 3723, 3724, 3725, 3726, 3728,
	3729, 0, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 0, 0, 2848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 4676, 4521, 4522, 0,
	0, 0, 1680, 3743, 0, 0, 0, 4524, 0, 0,
	0, 2049, 0, 0, 0, 0, 0, 0, 2009, 2010,
	0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0,
	2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 2045,
	0, 0, 2040, 0, 0, 0, 0, 3737, 0, 0,
	2012, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 1722, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 309, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 124, 0, 0, 1489, 1489, 1489, 0, 4610,
	0, 0, 0, 0, 2626, 4616, 4617, 0, 0, 0,
	0, 1489, 1489, 1489, 0, 309, 1489, 0, 2062, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 1657, 0,
	0, 3254, 3254, 0, 3898, 0, 0, 3974, 3254, 0,
	0, 0, 0, 0, 0, 0, 4792, 0, 4792, 1722,
	0, 124, 0, 0, 124, 0, 0, 0, 0, 0,
	3254, 0, 2212, 0, 0, 0, 3898, 0, 1722, 1722,
	309, 3901, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2036, 2037, 3901, 0, 309, 3901, 0, 309,
	2017, 0, 3974, 0, 0, 3974, 0, 0, 0, 3974,
	0, 2045, 0, 0, 3738, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3254, 0,
	3254, 309, 0, 0, 1657, 0, 0, 0, 2045, 0,
	0, 0, 0, 3384, 0, 0, 4862, 1701, 1701, 0,
	0, 0, 0, 0, 2039, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2045, 0, 0, 0, 0,
	0, 2045, 0, 0, 0, 0, 0, 2045, 0, 0,
	0, 0, 0, 3254, 3254, 0, 0, 0, 0, 3486,
	3486, 0, 0, 0, 0, 0, 3898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 309,
	124, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	309, 0, 4720, 4721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 1701, 1701,
	1701, 1701, 1701, 1701, 1701, 1701, 1701, 1701, 1701, 1701,
	1701, 1701, 1701, 1701, 1701, 1701, 1701, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 2045, 0, 3733, 3734, 3735, 2045, 0, 0,
	0, 3732, 3730, 3731, 3723, 3724, 3725, 3726, 3728, 3729,
	0, 2045, 0, 0, 0, 0, 2045, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 2045, 0, 0, 0, 0, 0, 2045, 0,
	90, 0, 0, 1230, 1230, 1230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 3254, 2212, 0, 2212, 0, 0,
	4574, 0, 0, 2626, 0, 0, 0, 0, 0, 309,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 5052,
	0, 5052, 0, 1670, 0, 2582, 0, 0, 0, 0,
	1697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 883, 0, 0, 0,
	0, 0, 0, 2064, 0, 1029, 0, 3974, 1722, 1724,
	0, 1730, 1722, 1736, 1479, 0, 0, 0, 0, 0,
	122, 0, 0, 0, 0, 0, 106, 119, 0, 4943,
	0, 4945, 4946, 4947, 0, 4949, 0, 0, 0, 0,
	0, 0, 124, 3901, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2045, 2045,
	2045, 2045, 2045, 2045, 2045, 0, 0, 0, 0, 0,
	0, 0, 4574, 0, 0, 4792, 0, 2045, 1722, 0,
	0, 0, 3254, 1831, 0, 1836, 309, 0, 0, 0,
	2045, 0, 107, 0, 0, 0, 0, 0, 0, 1850,
	5148, 1855, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5000, 0,
	0, 0, 0, 0, 0, 0, 3029, 0, 0, 0,
	0, 309, 309, 0, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 4268, 0, 0, 0, 0,
	1921, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	3974, 5210, 0, 0, 0, 0, 0, 0, 4574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 4792, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 4792, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 2046, 2040, 0, 0, 0, 0,
	0, 1484, 5092, 2012, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 2059, 0, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 0, 0, 0, 0, 0, 810,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 4792, 4792, 0, 0, 2086,
	0, 208, 2031, 114, 0, 2099, 118, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 4792, 0, 309, 4792,
	0, 0, 0, 0, 0, 2582, 0, 0, 0, 2212,
	0, 0, 0, 0, 1657, 1657, 0, 1657, 271, 0,
	1722, 0, 1722, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 1489, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5340, 0, 273, 2034, 2035, 2036, 2037, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 5052, 0, 1245, 309,
	0, 2159, 2159, 2159, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3254, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 2050, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 1657, 2039, 2041, 0,
	0, 0, 265, 0, 0, 2009, 2010, 309, 0, 0,
	0, 266, 0, 0, 0, 209, 0, 2056, 0, 2057,
	213, 0, 0, 0, 1657, 0, 2026, 2027, 0, 2040,
	0, 4268, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 212, 0, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 2032, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 2626, 0, 1230, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 4574, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 2034, 2035, 2036,
	2037, 0, 0, 0, 3254, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 4792, 0, 4792, 0, 0, 1722,
	0, 0, 2038, 0, 0, 0, 1657, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 2039, 2041, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 3254, 0, 0, 0, 0, 0, 0,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	3384, 2045, 0, 0, 0, 2045, 1701, 0, 0, 0,
	0, 0, 0, 0, 3254, 0, 2064, 0, 0, 2045,
	0, 0, 1657, 0, 0, 2032, 0, 0, 3384, 0,
	2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
	2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
	2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
	2045, 2045, 2045, 2045, 2045, 2045, 0, 0, 0, 0,
	1245, 2045, 0, 2045, 2045, 2045, 2045, 0, 1680, 0,
	0, 0, 0, 0, 0, 3029, 3029, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 2049, 0, 0, 1657,
	2045, 0, 0, 0, 0, 0, 2062, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 3696,
	0, 0, 0, 3697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 2045, 0, 0, 2045, 0, 0, 2045, 0, 0,
	2045, 0, 2033, 0, 0, 0, 2045, 2045, 2045, 2045,
	2045, 2045, 2045, 0, 0, 0, 1484, 0, 0, 0,
	0, 0, 0, 2689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2719, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 2045, 0, 0, 3742, 0, 3029, 3029, 3029,
	3029, 0, 0, 2045, 0, 2045, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 2760, 0,
	2764, 0, 0, 0, 0, 1701, 0, 2778, 0, 0,
	1230, 0, 0, 0, 0, 0, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 0, 2830, 0, 2832, 2833, 2834, 2835, 0,
	0, 1701, 0, 0, 0, 0, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0,
	0, 2859, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 2086, 0, 0, 0, 2910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2940, 2943, 2946, 2949, 0, 0, 2955,
	2956, 2957, 2958, 2959, 2960, 2961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3021, 0, 3032,
	3034, 3039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3056, 0, 0, 0, 0, 0, 0,
	2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 2040, 0, 0, 0, 3054, 0,
	0, 0, 2012, 3058, 0, 929, 0, 0, 0, 0,
	0, 0, 945, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3059, 0, 0, 934, 0,
	0, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	0, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 3060, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	0, 0, 936, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 2040, 0, 0, 3061, 0, 0, 0, 858,
	2012, 0, 3062, 0, 2045, 2045, 0, 2045, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 931, 0, 2065,
	0, 0, 0, 0, 0, 3063, 0, 0, 2011, 0,
	0, 0, 2034, 2035, 2036, 2037, 0, 0, 0, 2031,
	0, 0, 2017, 0, 0, 0, 0, 0, 2028, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 2050, 0, 3064, 0, 2060,
	0, 0, 0, 0, 0, 0, 2039, 2041, 0, 0,
	0, 0, 308, 308, 308, 3065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3066, 2056, 0, 2057, 0,
	0, 2045, 0, 0, 0, 2026, 2027, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 958, 0, 0, 0,
	2017, 3067, 0, 0, 0, 2048, 0, 3443, 3444, 0,
	3446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 926, 958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2009, 2010, 0, 0,
	0, 2045, 2045, 2050, 3029, 3029, 0, 2060, 2045, 0,
	0, 0, 0, 0, 2039, 2041, 0, 930, 3742, 3742,
	2040, 0, 2045, 2045, 0, 0, 0, 0, 2012, 2058,
	1407, 0, 2045, 0, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 2045, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 2065, 2045, 857,
	0, 2062, 3068, 2048, 0, 0, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 940, 0, 2031, 2032, 0,
	0, 0, 0, 0, 928, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 3029, 3029, 3029, 3029, 3029, 3029,
	3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029,
	3029, 3029, 3029, 3029, 3570, 3029, 3742, 3742, 3742, 3742,
	0, 2038, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 3069, 3070, 0, 925, 0, 0,
	0, 0, 0, 938, 1403, 4229, 0, 2033, 2047, 0,
	0, 2045, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 3071, 0, 0, 0, 932, 2034, 2035,
	2036, 2037, 0, 3076, 0, 0, 0, 0, 2017, 2051,
	0, 0, 859, 0, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 927, 3072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1230, 0, 0, 0, 3073,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 2038,
	0, 942, 943, 0, 939, 0, 0, 0, 0, 0,
	0, 0, 2039, 2041, 0, 0, 0, 0, 0, 0,
	0, 3074, 0, 0, 0, 2033, 0, 0, 3630, 3631,
	0, 0, 0, 0, 3637, 0, 0, 0, 0, 0,
	0, 2026, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3651, 3652, 0, 0, 2051, 0, 2910,
	0, 0, 0, 3075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2032, 0, 0, 0,
	0, 0, 2045, 0, 2009, 2010, 0, 2023, 2024, 2030,
	2052, 2029, 2025, 2064, 2022, 2020, 2021, 2013, 2014, 2015,
	2016, 2018, 2019, 0, 3661, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 2012, 0, 0, 0,
	3675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3687, 0, 0,
	0, 0, 0, 2045, 2045, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 2049, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 0, 0, 2906, 0, 0, 0,
	2907, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4224, 0, 0, 0, 0, 3039, 3039,
	3039, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2159, 2034, 2035, 2036, 2037,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2041, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 2045, 2045, 0, 0, 2045, 3742, 3742, 2045,
	0, 0, 2031, 2045, 2032, 0, 0, 0, 0, 0,
	2045, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 0, 2029, 2025, 0,
	2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 1230,
	0, 0, 0, 0, 0, 0, 2045, 2045, 2045, 2045,
	2045, 1230, 0, 0, 0, 0, 2045, 0, 2045, 0,
	0, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742,
	3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742,
	3742, 0, 0, 1407, 3742, 2062, 0, 2045, 2045, 0,
	1407, 0, 3931, 2034, 2035, 2036, 2037, 308, 0, 2045,
	0, 0, 0, 2017, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 308, 0, 308, 308, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3992, 3993, 2039, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 2045,
	0, 1407, 0, 0, 0, 0, 2026, 2027, 1407, 0,
	0, 0, 0, 0, 0, 0, 308, 2045, 308, 308,
	0, 0, 308, 308, 1407, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 958, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2064,
	0, 0, 0, 0, 0, 0, 0, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 2045, 2045, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	2046, 2040, 0, 0, 0, 0, 308, 308, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 308, 308, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 0, 2029, 2025, 2028, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 2045, 2045, 0, 0, 2017,
	2045, 2045, 0, 0, 2045, 2045, 0, 0, 308, 2045,
	0, 0, 0, 2045, 2778, 0, 0, 0, 2045, 0,
	0, 4221, 4222, 0, 0, 4225, 2064, 0, 0, 4228,
	0, 0, 0, 3029, 2009, 2010, 0, 0, 4232, 0,
	0, 0, 2050, 0, 0, 0, 2060, 4239, 0, 0,
	0, 0, 3780, 2039, 2041, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 2012, 4252, 0, 0,
	0, 0, 0, 2056, 0, 2057, 0, 0, 0, 0,
	0, 0, 2026, 2027, 0, 0, 0, 4275, 4276, 0,
	4277, 4278, 4279, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 2048, 0, 2011, 0, 0, 0, 4285, 0,
	0, 0, 4287, 0, 0, 2031, 0, 2032, 1407, 3029,
	1407, 0, 2029, 2025, 2028, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4316, 4317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2254, 0,
	0, 0, 0, 4328, 0, 1407, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4337, 0,
	2045, 0, 0, 4223, 0, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 0, 2034, 2035, 2036, 2037,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 2045, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 0, 1403, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 2181, 308, 0, 2038, 0,
	0, 0, 0, 0, 958, 0, 0, 1407, 0, 0,
	2039, 2041, 0, 958, 0, 0, 0, 0, 4408, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	2027, 0, 0, 0, 0, 0, 4426, 308, 2045, 2045,
	2045, 0, 0, 0, 308, 0, 2051, 0, 0, 2045,
	2045, 3742, 3029, 0, 0, 0, 0, 0, 2045, 0,
	0, 2045, 0, 0, 2032, 0, 0, 0, 0, 0,
	4457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3742, 3029, 0,
	0, 0, 0, 4486, 4487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 2045, 3029, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 2045, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 2045, 0, 0, 0, 0, 1407,
	1407, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	1407, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4682,
	0, 0, 0, 0, 0, 2038, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2159,
	0, 2033, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3742, 2159, 0, 0, 0,
	0, 0, 0, 0, 0, 4607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 308, 1407, 0, 1407, 958, 0, 0, 0, 2045,
	3742, 0, 0, 2045, 0, 0, 0, 0, 0, 2064,
	0, 0, 1407, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 3742, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 1407, 0,
	0, 1407, 1407, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 4654, 4655, 0, 0,
	0, 0, 4659, 4660, 308, 0, 0, 4663, 4664, 0,
	0, 308, 0, 0, 0, 4668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4672, 308, 0, 308,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 4677, 0, 0, 2029, 2025, 0, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 2046, 2040, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 2254, 2254, 1407, 958,
	308, 0, 308, 0, 308, 0, 308, 0, 308, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 2045, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 0, 0,
	0, 0, 0, 308, 308, 308, 308, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 3000, 3001, 3002, 3003, 2996, 2997, 2998,
	2999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 4839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 2050, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 2039, 2041, 0, 950, 1407, 0,
	0, 2045, 0, 2976, 2977, 2978, 2979, 0, 0, 0,
	0, 0, 4881, 4882, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 950, 2988, 2989, 2990,
	2991, 2984, 2985, 2986, 2987, 2992, 2993, 2994, 2995, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 308,
	0, 2972, 2973, 2974, 2975, 2980, 2981, 2982, 2983, 4967,
	4968, 4969, 0, 0, 0, 0, 0, 0, 2047, 308,
	0, 0, 0, 0, 0, 0, 958, 0, 958, 2062,
	0, 308, 2778, 0, 0, 4978, 4979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 4987, 4990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 958, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 308, 0, 0, 308, 0, 0, 0, 0, 0,
	2254, 0, 0, 0, 308, 308, 0, 0, 0, 308,
	0, 308, 0, 0, 0, 2033, 0, 0, 308, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5053, 0, 0, 2051, 0, 0,
	0, 0, 0, 5061, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 5069, 0,
	0, 1230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	5081, 0, 0, 5083, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5093, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	4237, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 1407, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 2010,
	958, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 2040, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 308, 0, 0, 0, 5218, 0,
	0, 0, 5222, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 2010, 2031,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	2046, 2040, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	2059, 308, 0, 1396, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	2034, 2035, 2036, 2037, 0, 304, 304, 789, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 308, 308, 308,
	308, 0, 0, 0, 2778, 0, 0, 308, 0, 0,
	0, 0, 308, 4990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 308, 2039, 2041, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 2056, 0, 2057, 0, 0, 2017,
	1230, 0, 0, 2026, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 2050, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5420,
	5420, 5420, 0, 2056, 0, 2057, 0, 0, 0, 0,
	0, 0, 2026, 2027, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 2047, 5446,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 1692, 0, 0, 0, 0,
	1407, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	5420, 0, 0, 0, 0, 0, 0, 1407, 0, 2038,
	1692, 0, 0, 0, 0, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 2033, 0, 1407, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5532, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 1692, 0, 0, 0, 2051, 0, 0,
	2254, 0, 0, 0, 1407, 0, 0, 0, 0, 1692,
	0, 0, 0, 0, 1403, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2254, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 1403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 5420, 5590, 0, 0, 2051, 0, 0, 0,
	0, 2181, 0, 2009, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 2254,
	0, 0, 0, 0, 958, 0, 0, 2040, 0, 0,
	0, 0, 2064, 2049, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	3699, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 2031, 308, 308, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3698,
	0, 0, 3636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 308, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 2181, 2034, 2035, 2036, 2037, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 1407, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 1407, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 2039,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 2009, 2010, 0, 2026, 2027,
	0, 2053, 2054, 2055, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 310, 310, 310, 0, 2040,
	1574, 1407, 0, 1407, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 2032, 0, 2222, 0, 0, 2059, 0,
	0, 308, 0, 0, 2222, 0, 0, 0, 0, 310,
	1692, 0, 0, 0, 0, 0, 2065, 0, 0, 958,
	0, 0, 0, 0, 0, 2011, 2009, 2010, 0, 308,
	0, 0, 0, 0, 0, 0, 2031, 0, 310, 0,
	1407, 0, 0, 1407, 0, 2028, 0, 0, 0, 0,
	2040, 0, 0, 308, 0, 0, 0, 0, 2012, 0,
	0, 0, 0, 1403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 1465, 0,
	1465, 1465, 0, 0, 0, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 0, 2254, 0, 0, 0, 2031, 0, 0,
	0, 0, 1574, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 2038, 0, 0, 2017, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2254,
	2254, 0, 0, 0, 0, 0, 308, 0, 308, 1568,
	2033, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3629, 0, 0, 2254, 2254,
	2050, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 2039, 2041, 0, 0, 0, 308, 0, 2034, 2035,
	2036, 2037, 0, 0, 0, 0, 0, 0, 2017, 0,
	0, 2254, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 2027, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 1407,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 2039, 2041, 0, 0, 1829, 1830, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 1692, 0, 0, 0, 0,
	0, 2026, 2027, 0, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2254, 1692, 2254, 0, 2029, 2025, 2032, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 0, 1403, 1403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 2038, 1692, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 1692, 0,
	0, 0, 2033, 0, 0, 0, 0, 958, 0, 0,
	0, 1692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1692, 0, 0, 1692, 1692, 1692, 0,
	0, 0, 0, 0, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	2222, 0, 0, 0, 0, 0, 1407, 1407, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	2064, 0, 0, 2033, 0, 1407, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 0, 1574, 1407, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 1407, 1407, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 2197, 0, 0, 0, 0, 1407, 0, 1407, 0,
	0, 0, 0, 0, 1407, 0, 1407, 2207, 0, 1678,
	0, 0, 0, 0, 0, 0, 0, 2029, 2025, 308,
	2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 308,
	0, 0, 0, 0, 0, 0, 1574, 1407, 0, 0,
	0, 308, 0, 0, 0, 308, 0, 308, 2254, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 0,
	1465, 0, 0, 0, 0, 0, 0, 1678, 0, 0,
	0, 0, 1403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 0, 1574, 0, 828,
	310, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	310, 310, 0, 1574, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 829, 0, 0, 1407, 0, 0, 0, 1407,
	1407, 0, 1407, 830, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 843, 0, 0, 0, 0, 0,
	1407, 1407, 0, 0, 0, 831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	828, 0, 1407, 0, 0, 0, 0, 0, 849, 310,
	1577, 310, 310, 0, 0, 310, 310, 1577, 0, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 832, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 829, 1407, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 830, 0, 833, 825, 0, 0,
	0, 1403, 1577, 0, 0, 0, 0, 0, 0, 1403,
	0, 0, 0, 0, 0, 0, 831, 0, 0, 0,
	834, 1407, 0, 2181, 0, 826, 0, 0, 0, 310,
	310, 0, 0, 0, 1284, 0, 1574, 0, 0, 849,
	0, 0, 858, 0, 0, 0, 0, 0, 1577, 1407,
	0, 0, 0, 0, 0, 1577, 310, 310, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 308, 0, 0,
	848, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 833, 825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2181, 0,
	2181, 1407, 1407, 0, 0, 0, 2566, 0, 0, 0,
	0, 834, 0, 0, 0, 0, 826, 0, 0, 0,
	0, 0, 308, 0, 2589, 0, 0, 0, 0, 0,
	0, 1577, 0, 858, 845, 0, 0, 0, 308, 1574,
	2601, 308, 2601, 0, 0, 0, 0, 1407, 2608, 0,
	0, 1692, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 1407, 1407, 1407,
	1407, 1407, 1407, 1407, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 2636, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 855, 0, 836, 0, 0, 0, 0, 0, 2657,
	0, 0, 0, 0, 0, 845, 0, 0, 0, 0,
	0, 1407, 0, 2673, 0, 2675, 0, 2677, 0, 2679,
	0, 2680, 0, 0, 856, 0, 837, 0, 0, 0,
	0, 308, 2254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 1407, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 2709, 2710, 2711, 0,
	0, 0, 857, 0, 1692, 0, 1692, 0, 0, 0,
	838, 0, 1692, 0, 836, 853, 854, 0, 851, 0,
	0, 0, 0, 1692, 1692, 0, 0, 846, 0, 0,
	839, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 856, 0, 837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2254, 0, 0, 0, 0, 0, 840, 0,
	847, 0, 0, 0, 0, 0, 0, 0, 0, 841,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	0, 838, 0, 0, 0, 842, 853, 854, 0, 851,
	850, 0, 0, 0, 1407, 0, 0, 0, 846, 0,
	1407, 839, 0, 1407, 1407, 859, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 844, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 310, 310, 310,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 308, 0, 1407, 0, 0, 310, 0, 0, 840,
	0, 847, 1577, 0, 0, 0, 0, 0, 0, 0,
	841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 1407, 0, 842, 0, 0, 0,
	310, 850, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3119, 0, 0, 0, 0, 308, 0, 2254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 2181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 308, 0, 0, 3197, 1465, 0,
	0, 0, 1465, 0, 1465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 1407, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	2181, 1407, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 310, 2181, 1577, 1577, 310, 0,
	0, 0, 0, 0, 0, 0, 980, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 983, 0, 0,
	0, 0, 984, 1577, 0, 0, 0, 310, 0, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 310, 2181, 2181, 0,
	1678, 0, 1577, 0, 0, 0, 0, 310, 0, 0,
	0, 1407, 0, 0, 310, 985, 0, 999, 2181, 0,
	308, 2181, 0, 0, 0, 0, 0, 0, 0, 1574,
	310, 0, 310, 0, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 986, 0, 0, 0, 1577, 987, 1577,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	1577, 1008, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 1577, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 1006, 1577, 0, 0, 1577, 1577,
	1577, 0, 0, 0, 0, 0, 3462, 0, 0, 310,
	0, 308, 0, 0, 0, 0, 0, 2589, 0, 981,
	979, 0, 310, 310, 0, 310, 0, 310, 0, 310,
	0, 310, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1010, 1575, 0, 0, 0, 858, 0, 0, 1693, 308,
	0, 0, 3534, 0, 0, 0, 310, 310, 310, 310,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3546, 0, 3549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 1407, 0, 1407, 0, 0, 1009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1004, 0, 1693,
	3588, 1678, 3590, 1678, 0, 0, 1693, 0, 0, 0,
	3597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1465, 1692, 0, 1692,
	0, 0, 0, 1574, 3626, 0, 0, 0, 0, 0,
	950, 1692, 1692, 0, 0, 1003, 0, 0, 1577, 0,
	0, 0, 0, 0, 0, 0, 990, 0, 0, 0,
	0, 0, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2181, 0, 2181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 1692, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 1577, 0, 0, 978, 0,
	0, 1000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 992, 0, 0, 0, 0, 0, 310,
	0, 310, 0, 0, 310, 1574, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 998, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 993, 0, 0, 0, 994, 1013, 0, 1012, 0,
	0, 310, 995, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 310, 996, 1577,
	0, 0, 0, 1005, 0, 0, 0, 310, 310, 1014,
	0, 1011, 310, 0, 310, 0, 0, 1574, 859, 0,
	0, 310, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3828, 0, 0, 0,
	0, 0, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	310, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2222, 0,
	0, 0, 0, 0, 1465, 0, 0, 0, 1678, 1678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3894, 1575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 3950, 3952, 0, 0,
	2589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 0, 1577, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 1577, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 310, 0, 0, 0, 0, 0,
	0, 1692, 1692, 0, 0, 310, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 1692, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1693, 1693, 0,
	310, 310, 310, 310, 0, 0, 0, 0, 1575, 0,
	310, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1693, 0, 0, 0, 0, 0,
	0, 0, 4100, 0, 0, 0, 310, 0, 0, 1692,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 1692, 1692, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1692, 0, 1692, 0, 0, 0, 0, 1693, 1692,
	1693, 1574, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1693, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1693, 0, 0, 1693,
	1693, 1693, 0, 0, 0, 0, 0, 0, 0, 4205,
	0, 1678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4219,
	0, 0, 0, 0, 2046, 2040, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 2009, 2010, 0, 2042,
	2043, 2044, 2053, 2054, 2055, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 2046,
	2040, 2011, 0, 0, 1574, 1574, 0, 1574, 2012, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 2059,
	0, 2028, 0, 0, 0, 1692, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2036, 2037, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 1574, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 2034, 2035,
	2036, 2037, 0, 0, 1574, 0, 2050, 310, 2017, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	0, 0, 0, 0, 0, 0, 2026, 2027, 1577, 0,
	1575, 2050, 0, 0, 0, 2060, 1692, 1692, 0, 0,
	0, 0, 2039, 2041, 310, 0, 2048, 0, 310, 310,
	0, 0, 0, 0, 0, 0, 1575, 0, 0, 0,
	0, 2032, 2056, 0, 2057, 0, 0, 0, 0, 0,
	0, 2026, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 310, 0, 0, 1692, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 0,
	2058, 0, 1692, 1692, 1692, 1692, 1692, 1692, 1692, 0,
	0, 0, 0, 0, 0, 0, 310, 310, 0, 0,
	310, 2047, 0, 0, 0, 0, 1574, 310, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 2589, 1574,
	0, 1692, 0, 0, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4558, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 4568, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 1574, 0, 0, 0, 0, 0, 2589, 0,
	2589, 0, 0, 2033, 310, 4589, 0, 0, 0, 1577,
	0, 1577, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 310, 1577, 1577, 0, 2064, 1577, 0, 0,
	0, 0, 310, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 1693, 0, 0, 0, 0, 1574,
	4634, 2064, 0, 0, 0, 1692, 0, 0, 1692, 1692,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1577, 0,
	1577, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3695, 0, 0, 1574, 0, 0, 1692,
	0, 2049, 0, 0, 0, 0, 0, 1577, 0, 310,
	1577, 310, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0,
	2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3694, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 1693, 0, 1693,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1693, 1693, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2046, 2040, 0, 0, 1577, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 2036, 2037, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 2589, 2039, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 4923, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1577, 1577, 0, 0, 0, 0, 2047,
	0, 1577, 1692, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 1577, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 5038, 0, 0, 0, 0, 0,
	2038, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 310, 0,
	310, 0, 0, 1575, 0, 310, 2033, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 1575, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 0, 1577, 0, 0, 0, 2051, 1577,
	1577, 1577, 0, 0, 2046, 2040, 0, 0, 0, 0,
	0, 0, 1575, 2012, 0, 0, 0, 0, 0, 0,
	2589, 0, 0, 1577, 2059, 1577, 0, 0, 0, 0,
	310, 1577, 0, 1577, 2064, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2601, 2031, 0, 1577, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 5174, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3693, 0, 2034, 2035, 2036, 2037, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 1577, 0, 1577,
	0, 0, 0, 0, 0, 1575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 1577, 1577, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	310, 0, 0, 0, 0, 0, 2026, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	1693, 0, 1693, 0, 0, 310, 1575, 0, 0, 0,
	0, 0, 0, 5296, 1693, 1693, 0, 0, 1577, 0,
	0, 310, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	0, 1693, 0, 0, 0, 0, 0, 0, 1577, 1577,
	0, 0, 1577, 0, 5354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 310, 0, 0, 1575, 1577,
	0, 1575, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 5402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 1577, 1577, 1577, 1577, 1577,
	1577, 0, 0, 0, 0, 0, 0, 0, 2009, 2010,
	2051, 2042, 2043, 2044, 2053, 2054, 2055, 0, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 2040, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 0, 0, 0, 0, 2064, 0, 1577, 0,
	1575, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 1577, 0, 1577, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 1577, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 2907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 1577, 0, 0,
	1577, 1577, 0, 2050, 0, 0, 0, 2060, 0, 0,
	310, 0, 0, 0, 2039, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 1577, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 0, 0, 0, 310, 310, 0, 0,
	0, 0, 0, 0, 2046, 2040, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 2062,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 1693, 1693, 0, 0, 0, 0,
	0, 2028, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1693, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2036, 2037, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 2051, 0, 0,
	0, 0, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 1577, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 1577, 0,
	1693, 1693, 1693, 2064, 0, 0, 2050, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 0, 0, 1693, 0, 1693, 0, 0, 0,
	0, 0, 1693, 0, 1575, 0, 0, 2056, 0, 2057,
	0, 0, 0, 0, 0, 0, 2026, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 2048, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 2032, 0, 2049, 0, 0, 0, 0, 1577, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 2009, 2010, 5341, 2042, 2043, 2044,
	2053, 2054, 2055, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 310, 0, 0, 0, 0, 2046, 2040, 0,
	0, 0, 0, 0, 0, 0, 2012, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 1575, 1575, 0,
	1575, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 1693, 1693,
	0, 0, 2009, 2010, 1577, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	1575, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 2065, 2042, 2043, 2044, 2053, 2054, 2055,
	2051, 0, 2011, 0, 0, 0, 2034, 2035, 2036, 2037,
	0, 0, 0, 2031, 2046, 2040, 2017, 0, 0, 0,
	0, 0, 2028, 2012, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 2059, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 1575, 0, 2050,
	0, 2011, 0, 2060, 0, 0, 0, 0, 0, 0,
	2039, 2041, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 2057, 0, 0, 0, 0, 0, 0, 2026,
	2027, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 1693,
	1693, 0, 0, 0, 2017, 0, 2049, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 2032, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 5337,
	0, 0, 0, 0, 0, 1575, 0, 2050, 0, 0,
	1693, 2060, 0, 2034, 2035, 2036, 2037, 0, 2039, 2041,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 1693, 1693, 1693, 1693, 1693,
	1693, 1693, 0, 0, 0, 0, 0, 2026, 2027, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 0, 2062, 2050, 2048, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	0, 0, 0, 0, 0, 0, 2026, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 2048, 0, 0, 0,
	0, 0, 1575, 0, 1693, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2051, 0, 1575, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 2064,
	0, 0, 2062, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 1693, 0,
	0, 1693, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2023, 2024, 2030, 2052, 2029, 2025, 2064, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 5237, 0, 0, 0, 0, 0, 0, 1575,
	2051, 0, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 5183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 1578, 326, 327, 1579, 1580,
	1581, 0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 1587, 738, 341,
	342, 343, 344, 345, 346, 347, 1588, 1589, 0, 348,
	739, 740, 741, 1590, 349, 350, 742, 1591, 1658, 1592,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 1593,
	360, 361, 362, 359, 363, 1594, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 1595, 372, 373, 374, 1347,
	375, 376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602,
	378, 379, 380, 381, 382, 1693, 383, 385, 743, 744,
	1603, 388, 390, 384, 386, 1604, 389, 387, 391, 392,
	1605, 393, 394, 395, 1606, 1607, 396, 397, 398, 1608,
	399, 400, 401, 1609, 402, 403, 404, 1610, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 1611, 315, 1612, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 1613, 424, 425, 426, 1614, 427, 428, 1615, 1348,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 1616, 441, 751, 1617, 752, 442,
	1618, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 1350, 450, 451, 452, 1619, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 1620,
	1349, 756, 461, 544, 462, 757, 758, 1621, 759, 1622,
	463, 464, 466, 1351, 760, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 1623, 477, 479, 478, 1624, 481, 761, 480, 1354,
	482, 483, 1355, 1625, 484, 485, 486, 487, 488, 489,
	492, 1626, 1627, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1628, 317, 1358, 538, 539, 540,
	541, 1629, 762, 542, 763, 545, 546, 1630, 0, 547,
	0, 548, 1631, 1632, 550, 551, 552, 1633, 1634, 553,
	554, 764, 1359, 555, 1360, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 1635,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 1636, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 1637, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	1638, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 1639, 644, 645, 643, 646, 647, 648, 1640, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 1641, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 1642,
	681, 682, 0, 676, 667, 1643, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 1644, 691, 776, 777, 778,
	779, 1645, 703, 1646, 692, 694, 695, 696, 697, 780,
	698, 781, 1647, 699, 700, 701, 702, 693, 704, 705,
	1648, 1649, 706, 707, 709, 711, 712, 708, 710, 713,
	1650, 714, 1651, 0, 715, 716, 717, 782, 783, 784,
	1652, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1653, 1654, 1655, 1656, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 3097, 0, 0, 0, 0, 0, 0, 0,
	0, 3098, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1572, 0, 0,
	0, 4246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4248, 318, 319, 321, 320, 322, 323,
	324, 325, 1578, 326, 327, 1579, 1580, 1581, 0, 1582,
	733, 1583, 1584, 1585, 328, 1586, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 1587, 738, 341, 342, 343, 344,
	345, 346, 347, 1588, 1589, 0, 348, 739, 740, 741,
	1590, 349, 350, 742, 1591, 1658, 1592, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 1593, 360, 361, 362,
	359, 363, 1594, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 1595, 372, 373, 374, 1347, 375, 376, 377,
	1596, 1597, 1599, 1598, 1600, 1601, 1602, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 1603, 388, 390,
	384, 386, 1604, 389, 387, 391, 392, 1605, 393, 394,
	395, 1606, 1607, 396, 397, 398, 1608, 399, 400, 401,
	1609, 402, 403, 404, 1610, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	746, 747, 419, 1611, 315, 1612, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 1613, 424,
	425, 426, 1614, 427, 428, 1615, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 1616, 441, 751, 1617, 752, 442, 1618, 443, 444,
	445, 446, 447, 448, 449, 753, 754, 755, 543, 1350,
	450, 451, 452, 1619, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 1620, 1349, 756, 461,
	544, 462, 757, 758, 1621, 759, 1622, 463, 464, 466,
	1351, 760, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 1623, 477,
	479, 478, 1624, 481, 761, 480, 1354, 482, 483, 1355,
	1625, 484, 485, 486, 487, 488, 489, 492, 1626, 1627,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1628, 317, 1358, 538, 539, 540, 541, 1629, 762,
	542, 763, 545, 546, 1630, 0, 547, 0, 548, 1631,
	1632, 550, 551, 552, 1633, 1634, 553, 554, 764, 1359,
	555, 1360, 765, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 1635, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 768, 576, 769,
	577, 578, 1636, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 1637, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 1638, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 1639, 644,
	645, 643, 646, 647, 648, 1640, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 1641, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 775, 677, 678, 679, 680, 1642, 681, 682, 0,
	676, 667, 1643, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 1644, 691, 776, 777, 778, 779, 1645, 703,
	1646, 692, 694, 695, 696, 697, 780, 698, 781, 1647,
	699, 700, 701, 702, 693, 704, 705, 1648, 1649, 706,
	707, 709, 711, 712, 708, 710, 713, 1650, 714, 1651,
	0, 715, 716, 717, 782, 783, 784, 1652, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 1653,
	1654, 1655, 1656, 728, 729, 786, 730, 731, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4712,
	318, 319, 321, 320, 322, 323, 324, 325, 1578, 326,
	327, 1579, 1580, 1581, 0, 1582, 733, 1583, 1584, 1585,
	328, 1586, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 735, 0, 339, 736, 340, 737,
	1587, 738, 341, 342, 343, 344, 345, 346, 347, 1588,
	1589, 0, 348, 739, 740, 741, 1590, 349, 350, 742,
	1591, 1658, 1592, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 1593, 360, 361, 362, 359, 363, 1594, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 1595, 372,
	373, 374, 1347, 375, 376, 377, 1596, 1597, 1599, 1598,
	1600, 1601, 1602, 378, 379, 380, 381, 382, 0, 383,
	385, 743, 744, 1603, 388, 390, 384, 386, 1604, 389,
	387, 391, 392, 1605, 393, 394, 395, 1606, 1607, 396,
	397, 398, 1608, 399, 400, 401, 1609, 402, 403, 404,
	1610, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 746, 747, 419, 1611,
	315, 1612, 0, 0, 0, 0, 420, 421, 422, 748,
	0, 0, 0, 423, 1613, 424, 425, 426, 1614, 427,
	428, 1615, 1348, 429, 430, 431, 749, 750, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 1616, 441, 751,
	1617, 752, 442, 1618, 443, 444, 445, 446, 447, 448,
	449, 753, 754, 755, 543, 1350, 450, 451, 452, 1619,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 1620, 1349, 756, 461, 544, 462, 757, 758,
	1621, 759, 1622, 463, 464, 466, 1351, 760, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 1623, 477, 479, 478, 1624, 481,
	761, 480, 1354, 482, 483, 1355, 1625, 484, 485, 486,
	487, 488, 489, 492, 1626, 1627, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1628, 317, 1358,
	538, 539, 540, 541, 1629, 762, 542, 763, 545, 546,
	1630, 0, 547, 0, 548, 1631, 1632, 550, 551, 552,
	1633, 1634, 553, 554, 764, 1359, 555, 1360, 765, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 1635, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 768, 576, 769, 577, 578, 1636, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 770, 590, 591, 593, 592, 594, 1637, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 1638, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 771, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 1639, 644, 645, 643, 646, 647,
	648, 1640, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 773, 0, 660,
	1641, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 774, 670, 671, 672, 673, 775, 677, 678,
	679, 680, 1642, 681, 682, 0, 676, 667, 1643, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 1644, 691,
	776, 777, 778, 779, 1645, 703, 1646, 692, 694, 695,
	696, 697, 780, 698, 781, 1647, 699, 700, 701, 702,
	693, 704, 705, 1648, 1649, 706, 707, 709, 711, 712,
	708, 710, 713, 1650, 714, 1651, 0, 715, 716, 717,
	782, 783, 784, 1652, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 1653, 1654, 1655, 1656, 728,
	729, 786, 730, 731, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4710, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4973, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4821, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4636, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4264, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4069, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2930, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 1569, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2542, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 1578, 326, 327, 1579,
	1580, 1581, 0, 1582, 733, 1583, 1584, 1585, 328, 1586,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 1587, 738,
	341, 342, 343, 344, 345, 346, 347, 1588, 1589, 0,
	348, 739, 740, 741, 1590, 349, 350, 742, 1591, 1658,
	1592, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	1593, 360, 361, 362, 359, 363, 1594, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 1595, 372, 373, 374,
	1347, 375, 376, 377, 1596, 1597, 1599, 1598, 1600, 1601,
	1602, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 1603, 388, 390, 384, 386, 1604, 389, 387, 391,
	392, 1605, 393, 394, 395, 1606, 1607, 396, 397, 398,
	1608, 399, 400, 401, 1609, 402, 403, 404, 1610, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 746, 747, 419, 1611, 315, 1612,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 1613, 424, 425, 426, 1614, 427, 428, 1615,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 1616, 441, 751, 1617, 752,
	442, 1618, 443, 444, 445, 446, 447, 448, 449, 753,
	754, 755, 543, 1350, 450, 451, 452, 1619, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	1620, 1349, 756, 461, 544, 462, 757, 758, 1621, 759,
	1622, 463, 464, 466, 1351, 760, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 1623, 477, 479, 478, 1624, 481, 761, 480,
	1354, 482, 483, 1355, 1625, 484, 485, 486, 487, 488,
	489, 492, 1626, 1627, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1628, 317, 1358, 538, 539,
	540, 541, 1629, 762, 542, 763, 545, 546, 1630, 0,
	547, 0, 548, 1631, 1632, 550, 551, 552, 1633, 1634,
	553, 554, 764, 1359, 555, 1360, 765, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	1635, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 768, 576, 769, 577, 578, 1636, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 1637, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 1638, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 1639, 644, 645, 643, 646, 647, 648, 1640,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 1641, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 775, 677, 678, 679, 680,
	1642, 681, 682, 0, 676, 667, 1643, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 1644, 691, 776, 777,
	778, 779, 1645, 703, 1646, 692, 694, 695, 696, 697,
	780, 698, 781, 1647, 699, 700, 701, 702, 693, 704,
	705, 1648, 1649, 706, 707, 709, 711, 712, 708, 710,
	713, 1650, 714, 1651, 0, 715, 716, 717, 782, 783,
	784, 1652, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 1653, 1654, 1655, 1656, 728, 729, 786,
	730, 731, 732, 2905, 0, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	2902, 326, 327, 0, 0, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 2903,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 2901, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 2904, 0, 0, 0, 0, 0, 0, 0, 1266,
	2900, 0, 1224, 1264, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 271, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 273,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 1821, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 265,
	728, 729, 786, 730, 731, 732, 1240, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 2090, 2088,
	0, 0, 1264, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 271, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 273, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 1821, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 265, 728, 729, 786, 730,
	731, 732, 1240, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 2090, 3649, 0, 0, 1264, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 271, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 273, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 1821, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 265, 728, 729, 786, 730, 731, 732, 1240, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	2090, 2088, 0, 0, 1264, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 3035,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	3040, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 3036, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 3037, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 2950,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 0, 0, 0,
	0, 0, 0, 0, 0, 1266, 2948, 0, 2947, 1264,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 0, 0, 0, 0,
	0, 0, 0, 0, 1266, 2945, 0, 2944, 1264, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 319, 321, 320,
	322, 323, 324, 325, 0, 326, 327, 0, 0, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 1237, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 1242,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1239, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 1249, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 1250, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 1236, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 704, 705, 0,
	1243, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 1233, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 1266, 2942, 0, 2941, 1264, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 0, 0, 0, 0, 0, 0,
	0, 0, 1266, 2939, 0, 1923, 1264, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 1922,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1240,
	0, 0, 0, 0, 1229, 0, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 318, 319, 321, 320, 322, 323, 324,
	325, 1266, 326, 327, 0, 1264, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 1244, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1240, 0,
	0, 0, 0, 0, 0, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 318, 319, 321, 320, 322, 323, 324, 325,
	1266, 326, 327, 0, 1264, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 5366, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 1244, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 0, 0, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 318, 319, 321, 320, 322, 323, 324, 325, 1266,
	326, 327, 0, 1264, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 2780,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 2779,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1240, 0, 0, 0,
	0, 0, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	318, 319, 321, 320, 322, 323, 324, 325, 1266, 326,
	327, 0, 1264, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 1237, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 5072, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 1242, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1239, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 1244, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 1249, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 1236, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 1243, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1240, 0, 0, 0, 0,
	0, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	1235, 0, 0, 0, 0, 0, 0, 1233, 1234, 318,
	319, 321, 320, 322, 323, 324, 325, 1266, 326, 327,
	0, 1264, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 1244, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 0,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 4601, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 2160, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 1266, 0, 0, 0, 1264,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 2160, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 1266, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 4242, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 0, 0, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 318, 319, 321, 320, 322, 323, 324, 325, 1266,
	326, 327, 0, 1264, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 3040, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1240, 0, 0, 0,
	0, 0, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	318, 319, 321, 320, 322, 323, 324, 325, 1266, 326,
	327, 0, 1264, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 1237, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 1242, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1239, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 1249, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 1236, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 1243, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 1233, 1234, 0,
	0, 0, 0, 0, 0, 0, 0, 1266, 2088, 0,
	3045, 1264, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 3043,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 3031, 0,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 318, 319, 321,
	320, 322, 323, 324, 325, 1266, 326, 327, 0, 1264,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1240, 0, 0, 0, 0, 3020, 0, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 318, 319, 321, 320,
	322, 323, 324, 325, 1266, 326, 327, 0, 1264, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 1237, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 1242,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1239, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 1249, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 1250, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 1236, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 704, 705, 0,
	1243, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1240, 0, 0, 0, 0, 3018, 0, 3009, 3016,
	1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0,
	0, 0, 0, 1233, 1234, 318, 319, 321, 320, 322,
	323, 324, 325, 1266, 326, 327, 0, 1264, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 3012, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 3013, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 3014, 502, 3011, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 3015, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 3010, 732,
	1240, 0, 0, 0, 0, 3006, 0, 3009, 3016, 1255,
	1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 3012, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 3013, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 3014, 502, 3011, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 3015, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 3010, 732, 1240,
	0, 0, 0, 0, 0, 0, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 318, 319, 321, 320, 322, 323, 324,
	325, 1266, 326, 327, 0, 1264, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 0, 0, 0, 0, 0, 0, 2096, 0,
	1266, 0, 0, 0, 1264, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	2759, 326, 327, 0, 0, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 2720, 0, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 318, 319, 321, 320, 322, 323, 324, 325, 1266,
	326, 327, 0, 1264, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1240, 0, 0, 0,
	0, 2690, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	318, 319, 321, 320, 322, 323, 324, 325, 1266, 326,
	327, 0, 1264, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 1237, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 1242, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1239, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 1249, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 1236, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 1243, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1240, 0, 0, 0, 0,
	1928, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	1235, 0, 0, 0, 0, 0, 0, 1233, 1234, 318,
	319, 321, 320, 322, 323, 324, 325, 1266, 326, 327,
	0, 1264, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 1856,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 1851, 0,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 318, 319, 321,
	320, 322, 323, 324, 325, 1266, 326, 327, 0, 1264,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1240, 0, 0, 0, 0, 1837, 0, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 318, 319, 321, 320,
	322, 323, 324, 325, 1266, 326, 327, 0, 1264, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 1237, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 1242,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1239, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 1249, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 1250, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 1236, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 704, 705, 0,
	1243, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1240, 0, 0, 0, 0, 1832, 0, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0,
	0, 0, 0, 1233, 1234, 318, 319, 321, 320, 322,
	323, 324, 325, 1266, 326, 327, 0, 1264, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 1738, 0, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1737, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1240,
	0, 0, 0, 0, 1732, 0, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 318, 319, 321, 320, 322, 323, 324,
	325, 1266, 326, 327, 0, 1264, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1731, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1240, 0,
	0, 0, 0, 1725, 0, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 318, 319, 321, 320, 322, 323, 324, 325,
	1266, 326, 327, 0, 1264, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 1698, 0, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 318, 319, 321, 320, 322, 323, 324, 325, 1266,
	326, 327, 0, 1264, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1240, 0, 0, 0,
	0, 1669, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	318, 319, 321, 320, 322, 323, 324, 325, 1266, 326,
	327, 0, 1264, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 1237, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 1242, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	1673, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1239, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 1249, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	1674, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 1236, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 1672, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 1243, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1240, 0, 0, 0, 0,
	1499, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	1235, 0, 0, 0, 0, 0, 0, 1233, 1234, 318,
	319, 321, 320, 322, 323, 324, 325, 1266, 326, 327,
	0, 1264, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 0,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 0, 0,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 318, 319, 321,
	320, 322, 323, 324, 325, 1266, 326, 327, 0, 1264,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 5419, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 5418, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1240, 0, 0, 0, 0, 0, 0, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 318, 319, 321, 320,
	322, 323, 324, 325, 1266, 326, 327, 0, 1264, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 5417,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 1237, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 5419, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 1242,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1239, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 1249, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 1250, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 1236, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 5418, 705, 0,
	1243, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1240, 0, 0, 0, 0, 0, 0, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0,
	0, 0, 0, 1233, 1234, 318, 319, 321, 320, 322,
	323, 324, 325, 1266, 326, 327, 0, 1264, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 4992,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 4993, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 4991, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 0, 0, 1282, 1254, 1255,
	1256, 3615, 3616, 1265, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1240,
	0, 0, 0, 0, 0, 0, 1282, 1254, 1255, 1256,
	3613, 3614, 1265, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 318, 319, 321, 320, 322, 323, 324,
	325, 1266, 326, 327, 0, 1264, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1240, 0,
	0, 0, 0, 0, 0, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 318, 319, 321, 320, 322, 323, 324, 325,
	1266, 326, 327, 0, 1264, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 0, 0, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 1235, 0, 0, 0, 0, 0, 0, 2767,
	2768, 318, 319, 321, 320, 322, 323, 324, 325, 1266,
	326, 327, 0, 1264, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 0, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 0, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265,
	0, 3028, 0, 0, 0, 0, 0, 0, 3026, 3027,
	318, 319, 321, 320, 322, 323, 324, 325, 1266, 326,
	327, 0, 1264, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 0, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 0, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 0, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 3608, 3609, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 0, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 0, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 0, 0, 0, 0, 0,
	0, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	0, 0, 0, 0, 0, 0, 0, 2359, 2360, 318,
	319, 321, 320, 322, 323, 324, 325, 1266, 326, 327,
	0, 1264, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 0, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 5419, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 0, 1309, 0, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 0, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	5418, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 3047,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 0, 1305, 0,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 0, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 0, 0, 1700, 0, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 1266, 0, 0, 0, 1264,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 0, 1305, 0, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1224,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 1266, 0, 0, 1306, 1264, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 1305, 0,
	348, 739, 740, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 1391, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 0, 317, 1358, 538, 539,
	540, 541, 0, 1310, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 1397, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 1399, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 271, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 273, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 1821, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 265, 728, 729, 786,
	730, 731, 732, 1405, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 319, 321, 320, 322, 323, 324, 325, 0, 326,
	327, 0, 0, 1395, 0, 2184, 1306, 0, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 735, 0, 339, 736, 340, 737,
	0, 738, 341, 342, 343, 344, 345, 346, 347, 0,
	1305, 0, 348, 739, 740, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 0, 383,
	385, 743, 744, 0, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	397, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 0,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 748,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 749, 750, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 752, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 757, 758,
	0, 759, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 1391, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 0, 317, 1358,
	538, 539, 540, 541, 0, 1310, 542, 763, 545, 546,
	0, 0, 547, 0, 548, 0, 1397, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 770, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 771, 1399, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 271, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 773, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 774, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 0, 676, 667, 273, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	776, 777, 778, 779, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 0, 699, 700, 701, 702,
	693, 704, 705, 0, 0, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	1821, 783, 784, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 265, 728,
	729, 786, 730, 731, 732, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3773,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1395, 0, 2184, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 0, 0, 0, 1306, 0, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 1305, 0,
	348, 739, 740, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 1391, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 0, 317, 1358, 538, 539,
	540, 541, 0, 1310, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 1397, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 1399, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1387, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 1395, 0, 1393, 0, 0, 1306, 0,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 0, 738, 341, 342, 343, 344, 345, 346,
	347, 0, 1305, 0, 348, 739, 740, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 0, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 397, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 0, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 752, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	757, 758, 0, 759, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1391, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 0,
	317, 1358, 538, 539, 540, 541, 0, 1310, 542, 763,
	545, 546, 0, 0, 547, 0, 548, 0, 1397, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 1399, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 0, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 776, 777, 778, 779, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 0, 699, 700,
	701, 702, 693, 704, 705, 0, 0, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 783, 784, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 1395, 0, 1393,
	1306, 0, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 1305, 0, 348, 739, 740, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 1391, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 317, 1358, 538, 539, 540, 541, 0, 1310,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	1397, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	1399, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 319, 321, 320,
	322, 323, 324, 325, 0, 326, 327, 0, 0, 1395,
	0, 1393, 1306, 0, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 0, 738, 341, 342,
	343, 344, 345, 346, 347, 0, 1305, 0, 348, 739,
	740, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 0,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 397, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 0, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 752, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 757, 758, 0, 759, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 0, 317, 1358, 538, 539, 540, 541,
	0, 1310, 542, 763, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 0, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 776, 777, 778, 779,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 0, 699, 700, 701, 702, 693, 704, 705, 0,
	0, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 783, 784, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 0, 0, 4791, 1306, 0, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 1305, 0,
	348, 739, 740, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 0, 317, 1358, 538, 539,
	540, 541, 0, 1310, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 1399, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 312, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 2873, 2874, 2875, 2892, 2893, 2894, 0,
	318, 319, 321, 320, 322, 323, 324, 325, 0, 326,
	327, 0, 0, 0, 2895, 0, 733, 0, 0, 0,
	328, 0, 329, 330, 331, 2080, 332, 333, 334, 335,
	336, 337, 338, 734, 735, 0, 339, 736, 340, 737,
	0, 738, 341, 342, 343, 344, 345, 346, 347, 0,
	0, 2065, 348, 739, 740, 741, 0, 349, 350, 742,
	0, 0, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 2885, 0, 360, 361, 362, 359, 363, 0, 364,
	2881, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 0, 0, 0,
	0, 0, 0, 378, 379, 380, 381, 382, 0, 383,
	385, 743, 744, 0, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	397, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 746, 747, 419, 0,
	0, 0, 2886, 2887, 2888, 2889, 420, 421, 422, 748,
	0, 0, 2880, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 0, 429, 430, 431, 749, 750, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 751,
	0, 752, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 753, 754, 755, 543, 0, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 0, 458,
	459, 460, 0, 0, 756, 461, 544, 462, 757, 758,
	0, 759, 0, 463, 464, 466, 0, 760, 0, 465,
	467, 468, 0, 469, 0, 2890, 2891, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	761, 480, 0, 482, 483, 0, 0, 484, 485, 486,
	487, 488, 489, 492, 0, 0, 490, 491, 493, 494,
	2883, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 0, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 0, 536, 524, 0, 0, 0,
	538, 539, 540, 541, 0, 762, 542, 763, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 0, 555, 0, 765, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 768, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 770, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 0,
	618, 619, 620, 621, 622, 771, 623, 2884, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 0, 649, 772, 650, 630, 631, 651, 652, 0,
	653, 654, 655, 656, 657, 658, 659, 773, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 774, 670, 671, 672, 673, 775, 677, 678,
	679, 680, 0, 681, 682, 2064, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	776, 777, 778, 779, 0, 703, 0, 692, 694, 695,
	696, 697, 780, 698, 781, 0, 699, 700, 701, 702,
	693, 704, 705, 0, 0, 706, 707, 709, 711, 712,
	708, 710, 713, 0, 714, 0, 0, 715, 716, 717,
	782, 783, 784, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1224, 0, 1690, 2870, 2871, 2872,
	2896, 2882, 2876, 0, 2878, 2879, 2877, 2864, 2865, 2866,
	2867, 2868, 2869, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 1658, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 1351,
	760, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	0, 0, 1358, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 271, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 273, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 1821, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 265, 728, 729, 786, 730, 731, 732, 0, 1818,
	266, 1690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	212, 0, 0, 0, 733, 0, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 0, 0,
	348, 739, 740, 741, 0, 349, 350, 742, 0, 1658,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 0, 0, 0, 0, 0, 0,
	0, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 746, 747, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 751, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 753,
	754, 755, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 0, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 1351, 760, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 761, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 0, 0, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 0, 0, 1358, 538, 539,
	540, 541, 0, 762, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 765, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 768, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 271, 644, 645, 643, 646, 647, 648, 0,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 775, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 273, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	780, 698, 781, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 0, 714, 0, 0, 715, 716, 717, 1821, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 265, 728, 729, 786,
	730, 731, 732, 1690, 1689, 266, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 319, 321, 320, 322, 323, 324, 325, 0, 326,
	327, 0, 0, 0, 0, 212, 733, 0, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 735, 0, 339, 736, 340, 737,
	0, 738, 341, 342, 343, 344, 345, 346, 347, 0,
	0, 0, 348, 739, 740, 741, 0, 349, 350, 742,
	0, 1658, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 0, 0, 0, 0,
	0, 0, 0, 378, 379, 380, 381, 382, 0, 383,
	385, 743, 744, 0, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	397, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 746, 747, 419, 0,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 748,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 749, 750, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 751,
	0, 752, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 753, 754, 755, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 0, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 757, 758,
	0, 759, 0, 463, 464, 466, 1351, 760, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	761, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 0, 0, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 0, 0, 1358,
	538, 539, 540, 541, 0, 762, 542, 763, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 765, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 768, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 770, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 771, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 0, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 773, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 774, 670, 671, 672, 673, 775, 677, 678,
	679, 680, 0, 681, 682, 0, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	776, 777, 778, 779, 0, 703, 0, 692, 694, 695,
	696, 697, 780, 698, 781, 0, 699, 700, 701, 702,
	693, 704, 705, 0, 0, 706, 707, 709, 711, 712,
	708, 710, 713, 0, 714, 0, 0, 715, 716, 717,
	782, 783, 784, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1690, 1689, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 0, 0, 1845, 733, 0,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 0, 738, 341, 342, 343, 344, 345, 346,
	347, 0, 0, 0, 348, 739, 740, 741, 0, 349,
	350, 742, 0, 1658, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 0, 0,
	0, 0, 0, 0, 0, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 0, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 397, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 0, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 751, 0, 752, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	0, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	757, 758, 0, 759, 0, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 761, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 0, 0, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 0,
	0, 1358, 538, 539, 540, 541, 0, 762, 542, 763,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 0, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 0, 681, 682, 0, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 776, 777, 778, 779, 0, 703, 0, 692,
	694, 695, 696, 697, 780, 698, 781, 0, 699, 700,
	701, 702, 693, 704, 705, 0, 0, 706, 707, 709,
	711, 712, 708, 710, 713, 0, 714, 0, 0, 715,
	716, 717, 782, 783, 784, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1690, 1689, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 0, 0, 4150,
	733, 0, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 0, 0, 348, 739, 740, 741,
	0, 349, 350, 742, 0, 1658, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	0, 0, 0, 0, 0, 0, 0, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	746, 747, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 751, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 753, 754, 755, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 0, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	1351, 760, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 761, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 0, 0,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 0, 1358, 538, 539, 540, 541, 0, 762,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 765, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 768, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 2629,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 0, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 775, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 780, 698, 781, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 0, 714, 0,
	0, 715, 716, 717, 782, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1690,
	2534, 0, 0, 0, 0, 2535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 319, 321, 320,
	322, 323, 324, 325, 0, 326, 327, 0, 0, 0,
	0, 1845, 733, 0, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 0, 738, 341, 342,
	343, 344, 345, 346, 347, 0, 0, 0, 348, 739,
	740, 741, 0, 349, 350, 742, 0, 1658, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 0, 0, 0, 0, 0, 0, 0, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 0,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 397, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 0, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 751, 0, 752, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 0, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 757, 758, 0, 759, 0, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 2533, 479, 478, 0, 481, 761, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	0, 0, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 0, 0, 1358, 538, 539, 540, 541,
	0, 762, 542, 763, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 0, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 0, 681,
	682, 0, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 776, 777, 778, 779,
	0, 703, 0, 692, 694, 695, 696, 697, 780, 698,
	781, 0, 699, 700, 701, 702, 693, 704, 705, 0,
	0, 706, 707, 709, 711, 712, 708, 710, 713, 0,
	714, 0, 0, 715, 716, 717, 782, 783, 784, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1690, 1689, 0, 0, 0, 0, 1687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 0, 0, 1845, 733, 0, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 0, 0,
	348, 739, 740, 741, 0, 349, 350, 742, 0, 1658,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 0, 0, 0, 0, 0, 0,
	0, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 746, 747, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 751, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 753,
	754, 755, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 0, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 1351, 760, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 761, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 0, 0, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 0, 0, 1358, 538, 539,
	540, 541, 0, 762, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 765, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 768, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 0,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 775, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	780, 698, 781, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 0, 714, 0, 0, 715, 716, 717, 782, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1224, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 1827, 0, 0, 733, 0,
	0, 0, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 0, 738, 341, 342, 343, 344, 345, 346,
	347, 0, 0, 0, 348, 739, 740, 741, 0, 349,
	350, 742, 0, 0, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 0,
	0, 0, 0, 0, 0, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 0, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 397, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 0, 0, 0, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 0, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 751, 0, 752, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 0, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	0, 458, 459, 460, 0, 0, 756, 461, 544, 462,
	757, 758, 0, 759, 0, 463, 464, 466, 0, 760,
	0, 465, 467, 468, 0, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 761, 480, 0, 482, 483, 0, 0, 484,
	485, 486, 487, 488, 489, 492, 0, 0, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 0, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 0, 536, 524, 0,
	0, 0, 538, 539, 540, 541, 0, 762, 542, 763,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 0, 555, 0,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 0, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 271, 644, 645, 643,
	646, 647, 648, 0, 649, 772, 650, 630, 631, 651,
	652, 0, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 0, 681, 682, 0, 676, 667,
	273, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 776, 777, 778, 779, 0, 703, 0, 692,
	694, 695, 696, 697, 780, 698, 781, 0, 699, 700,
	701, 702, 693, 704, 705, 0, 0, 706, 707, 709,
	711, 712, 708, 710, 713, 0, 714, 0, 0, 715,
	716, 717, 1821, 783, 784, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 312, 0, 0,
	265, 728, 729, 786, 730, 731, 732, 0, 0, 266,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 0, 0, 0,
	733, 0, 0, 0, 328, 0, 329, 330, 331, 212,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 0, 0, 348, 739, 740, 741,
	0, 349, 350, 742, 0, 0, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 0, 0, 0, 0, 0, 0, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	746, 747, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 0, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 751, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 753, 754, 755, 543, 0,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 0, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	0, 760, 0, 465, 467, 468, 0, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 761, 480, 0, 482, 483, 0,
	0, 484, 485, 486, 487, 488, 489, 492, 0, 0,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	0, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 0, 536,
	524, 0, 317, 0, 538, 539, 540, 541, 0, 762,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 0,
	555, 0, 765, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 768, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 0, 618, 619, 620, 621, 622, 771,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 0, 649, 772, 650, 630,
	631, 651, 652, 0, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 775, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 780, 698, 781, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 0, 714, 0,
	0, 715, 716, 717, 782, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 312,
	3385, 0, 0, 728, 729, 786, 730, 731, 732, 0,
	0, 0, 0, 0, 0, 0, 318, 319, 321, 320,
	322, 323, 324, 325, 0, 326, 327, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 328, 0, 329, 330,
	331, 2198, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 0, 738, 341, 342,
	343, 344, 345, 346, 347, 0, 0, 0, 348, 739,
	740, 741, 0, 349, 350, 742, 0, 0, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 0, 0, 0, 0, 0, 0, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 0,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 397, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 0, 0, 0, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 0, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 751, 0, 752, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 0, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 0, 458, 459, 460, 0, 0,
	756, 461, 544, 462, 757, 758, 0, 759, 0, 463,
	464, 466, 0, 760, 0, 465, 467, 468, 0, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 761, 480, 0, 482,
	483, 0, 0, 484, 485, 486, 487, 488, 489, 492,
	0, 0, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 0, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	0, 536, 524, 0, 0, 0, 538, 539, 540, 541,
	0, 762, 542, 763, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 0, 555, 0, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 0, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 0, 649, 772,
	650, 630, 631, 651, 652, 0, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 0, 681,
	682, 0, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 776, 777, 778, 779,
	0, 703, 0, 692, 694, 695, 696, 697, 780, 698,
	781, 0, 699, 700, 701, 702, 693, 704, 705, 0,
	0, 706, 707, 709, 711, 712, 708, 710, 713, 0,
	714, 0, 0, 715, 716, 717, 782, 783, 784, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 312, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 0, 0, 0, 733, 0, 0, 0, 328, 0,
	329, 330, 331, 5599, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 0, 0,
	348, 739, 740, 741, 0, 349, 350, 742, 0, 0,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 0, 0, 0, 0, 0,
	0, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 746, 747, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	0, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 751, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 753,
	754, 755, 543, 0, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 0, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 0, 760, 0, 465, 467, 468,
	0, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 761, 480,
	0, 482, 483, 0, 0, 484, 485, 486, 487, 488,
	489, 492, 0, 0, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 0, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 0, 536, 524, 0, 317, 0, 538, 539,
	540, 541, 0, 762, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 0, 555, 0, 765, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 768, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 0, 618, 619,
	620, 621, 622, 771, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 0,
	649, 772, 650, 630, 631, 651, 652, 0, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 775, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	780, 698, 781, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 0, 714, 0, 0, 715, 716, 717, 782, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 312, 0, 728, 729, 786,
	730, 731, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 0, 0, 0, 733, 0,
	0, 0, 328, 1815, 329, 330, 331, 0, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 0, 738, 341, 342, 343, 344, 345, 346,
	347, 0, 0, 0, 348, 739, 740, 741, 0, 349,
	350, 742, 0, 0, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 0,
	0, 0, 0, 0, 0, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 0, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 397, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 0, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 0, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 751, 0, 752, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 0, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 0, 756, 461, 544, 462,
	757, 758, 0, 759, 0, 463, 464, 466, 0, 760,
	0, 465, 467, 468, 0, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 761, 480, 0, 482, 483, 0, 0, 484,
	485, 486, 487, 488, 489, 492, 0, 0, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 0, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 0, 536, 524, 0,
	317, 0, 538, 539, 540, 541, 0, 762, 542, 763,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 0, 555, 0,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 0, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 0, 649, 772, 650, 630, 631, 651,
	652, 0, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 0, 681, 682, 0, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 776, 777, 778, 779, 0, 703, 0, 692,
	694, 695, 696, 697, 780, 698, 781, 0, 699, 700,
	701, 702, 693, 704, 705, 0, 0, 706, 707, 709,
	711, 712, 708, 710, 713, 0, 714, 0, 0, 715,
	716, 717, 782, 783, 784, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 3193,
	0, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 319, 321, 320,
	322, 323, 324, 325, 0, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 4101, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 0,
	2258, 0, 339, 2248, 340, 2264, 0, 2271, 341, 342,
	343, 344, 345, 346, 347, 0, 0, 0, 348, 2274,
	2275, 0, 0, 349, 350, 0, 0, 1658, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 0, 0, 0, 0, 0, 0, 0, 378,
	379, 380, 381, 382, 1329, 383, 385, 2262, 2261, 0,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 0,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 0, 0, 419, 0, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 2260, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 2269, 2270, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 0, 0, 0, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 0, 0, 0,
	543, 1350, 450, 451, 452, 3187, 453, 454, 455, 456,
	457, 0, 0, 0, 0, 458, 459, 460, 0, 1349,
	3189, 461, 544, 462, 2255, 2256, 0, 2251, 0, 463,
	464, 466, 1351, 0, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 0, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	0, 0, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 0, 0, 1358, 538, 539, 540, 541,
	0, 0, 542, 2263, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	3188, 1359, 555, 1360, 0, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 2245, 570, 571, 572, 2246, 573, 574, 575, 0,
	576, 0, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 2259, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 0, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 0, 649, 0,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 2257, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 2273, 670,
	671, 672, 673, 0, 677, 678, 679, 680, 0, 681,
	682, 0, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 2265, 2266, 2267, 2268,
	0, 703, 0, 692, 694, 695, 696, 697, 0, 698,
	0, 0, 699, 700, 701, 702, 693, 704, 705, 0,
	0, 706, 707, 709, 711, 712, 708, 710, 713, 0,
	714, 0, 0, 715, 716, 717, 0, 2249, 2272, 3190,
	719, 718, 720, 721, 724, 722, 723, 0, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 0, 730, 731,
	732, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 3182, 733, 0, 2239, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 3193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 3504, 0, 0, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 0, 2258, 0, 339, 2248, 340,
	2264, 0, 2271, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 2274, 2275, 0, 0, 349, 350,
	0, 0, 1658, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 1329,
	383, 385, 2262, 2261, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 0, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 0, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	2260, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 2269, 2270, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	0, 0, 0, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 0, 0, 0, 543, 1350, 450, 451, 452,
	3187, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 1349, 3189, 461, 544, 462, 2255,
	2256, 0, 2251, 0, 463, 464, 466, 1351, 0, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 0, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 0, 0,
	1358, 538, 539, 540, 541, 0, 0, 542, 2263, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 3188, 1359, 555, 1360, 0,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 2245, 570, 571, 572,
	2246, 573, 574, 575, 0, 576, 0, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 2259, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 0, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 0, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 2257, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 2273, 670, 671, 672, 673, 0, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 2265, 2266, 2267, 2268, 0, 703, 0, 692, 694,
	695, 696, 697, 0, 698, 0, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 0, 2249, 2272, 3190, 719, 718, 720, 721, 724,
	722, 723, 0, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 0, 730, 731, 732, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 2239, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	4267, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 2616, 1306, 0, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 1305, 0, 348,
	739, 740, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 0, 317, 1358, 538, 539, 540,
	541, 0, 1310, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 2252, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 0, 2258, 0, 339, 2248, 340, 2264, 0,
	2271, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 2274, 2275, 0, 0, 349, 350, 0, 0,
	1658, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 1329, 383, 385,
	2262, 2261, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 0, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 2260, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 2269, 2270, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 0, 0,
	0, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	0, 0, 0, 543, 1350, 450, 451, 452, 3187, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 1349, 3189, 461, 544, 462, 2255, 2256, 0,
	2251, 0, 463, 464, 466, 1351, 0, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 0,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 0, 0, 1358, 538,
	539, 540, 541, 0, 0, 542, 2263, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 3188, 1359, 555, 1360, 0, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 2245, 570, 571, 572, 2246, 573,
	574, 575, 0, 576, 0, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	2259, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 0, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 0, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 2257, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 2273, 670, 671, 672, 673, 0, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 2265,
	2266, 2267, 2268, 0, 703, 0, 692, 694, 695, 696,
	697, 0, 698, 0, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 0,
	2249, 2272, 3190, 719, 718, 720, 721, 724, 722, 723,
	0, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	0, 730, 731, 732, 1050, 0, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	2239, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 956,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 1047, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 1049, 0, 676,
	667, 954, 683, 684, 685, 686, 687, 955, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 2221, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 4398, 326, 327, 0, 0, 0, 0,
	0, 733, 959, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 2228, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	2229, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 2230, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 4397, 628, 637, 638, 639, 640, 642, 641, 0,
	2225, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 2227, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 4396, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	2221, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 2279, 326, 327, 0, 0,
	0, 0, 0, 733, 959, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 2228, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 2229, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	2230, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 2278, 628, 637, 638, 639, 640, 642,
	641, 0, 2280, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 2227, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 2277, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 2221, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 2220, 326, 327,
	0, 0, 0, 0, 0, 733, 959, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 2228, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 2229, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 2230, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 2219, 628, 637, 638, 639,
	640, 642, 641, 0, 2225, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 2227, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 2218, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 947, 0, 949, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 959, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 956,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 954, 683, 684, 685, 686, 687, 955, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 949, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 959, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 956, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 954, 683, 684, 685, 686, 687, 955,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	3193, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	0, 2258, 0, 339, 2248, 340, 2264, 0, 2271, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	2274, 2275, 0, 0, 349, 350, 0, 0, 1658, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 1329, 383, 385, 2262, 2261,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	0, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 0, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 2260, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 2269, 2270, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 0, 0, 0, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 0, 0,
	0, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	1349, 0, 461, 544, 462, 2255, 2256, 0, 2251, 0,
	463, 464, 466, 1351, 0, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 0, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 0, 0, 1358, 538, 539, 540,
	541, 0, 0, 542, 2263, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 0, 1359, 555, 1360, 0, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 2245, 570, 571, 572, 2246, 573, 574, 575,
	0, 576, 0, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 2259, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 0, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	0, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 2257, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 2273,
	670, 671, 672, 673, 0, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 2265, 2266, 2267,
	2268, 0, 703, 0, 692, 694, 695, 696, 697, 0,
	698, 0, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 0, 2249, 2272,
	0, 719, 718, 720, 721, 724, 722, 723, 0, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 0, 730,
	731, 732, 3173, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 2239, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 2221, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	959, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 2228,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 2229, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 2230, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 2669, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 2670,
	628, 637, 638, 639, 640, 642, 641, 0, 2225, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 2227, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 2671, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 2252, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 0, 2258,
	0, 339, 2248, 340, 2264, 0, 2271, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 2274, 2275,
	0, 0, 349, 350, 0, 0, 1658, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 1329, 383, 385, 2262, 2261, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 0, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 2260, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 2269, 2270, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 0, 0, 0, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 0, 0, 0, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 1349, 0,
	461, 544, 462, 2255, 2256, 0, 2251, 0, 463, 464,
	466, 1351, 0, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 0, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 0, 0, 1358, 538, 539, 540, 541, 0,
	0, 542, 2263, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 0,
	1359, 555, 1360, 0, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	2245, 570, 571, 572, 2246, 573, 574, 575, 0, 576,
	0, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 2259, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	0, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 0, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 2257, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 2273, 670, 671,
	672, 673, 0, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 2265, 2266, 2267, 2268, 0,
	703, 0, 692, 694, 695, 696, 697, 0, 698, 0,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 0, 2249, 2272, 0, 719,
	718, 720, 721, 724, 722, 723, 0, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 0, 730, 731, 732,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 2239, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 959, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 1689, 0, 0, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4639, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	1658, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 1351, 760, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 0, 0, 1358, 538,
	539, 540, 541, 4525, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 2553, 0, 1690, 1689, 0, 0,
	0, 0, 1687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 1658, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1748, 754, 755, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 1351,
	760, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	0, 0, 1358, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 2288, 0,
	1690, 1689, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 1658, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 1351, 760, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 0, 0, 1358, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1877, 0, 1690, 1689, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 1658, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 1875, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 1351, 760, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 0, 0,
	1358, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	1876, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 1874,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1745, 0, 1690, 1689,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 1658, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1748, 754, 755, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 1351, 760, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 0, 0, 1358, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1685, 0, 1690, 1689, 0, 0, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	1658, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 1351, 760, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 0, 0, 1358, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 1683, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1690, 1689, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 1658, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 1351, 760, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 0, 0,
	1358, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1690, 1689, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 1658, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 1351,
	760, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	0, 0, 1358, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1690, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 1658, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 1351, 760, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 0, 0, 1358, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 3255, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 4093, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 3259, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 4092, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 3258, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 4089, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 4091, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 4088, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 3257, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 4090, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 3255, 349, 350, 742, 0,
	0, 3249, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 3251, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	3259, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 3258, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	3248, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 3257, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 3256, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1958, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 1957, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 1955,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 1956, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 1959, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 1954, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 1952, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 1953, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1662, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1664, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 1397, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1659, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1661, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 1397, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1565, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1567, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 1397, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	821, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 819, 324, 325, 808, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 811, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 817, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 813, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 820, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 807, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 808, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 811, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	812, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 813, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 806, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 808, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 811, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 812, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 813,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 808, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 811, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 4535, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 813, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 1397, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 3959, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 3473, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 3472, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 808, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 811, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 812, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 813, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 3175, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 2637, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 2581, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 2580, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	2565, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	2567, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 2527, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 1397, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1793, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1792, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1682, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1675, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1677, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1482, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1481, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1472, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1471, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1469, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1468, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1464, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1463, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1441, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1440, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 788, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 303, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 811, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 812, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 813,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 2678, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 2676, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 2674, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 2588, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 2312, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 2306, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1034, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 1033, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 1032,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 911, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 900, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 909, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 902, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 908, 428, 904, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 905, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 903, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 906, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 907, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 901, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	894, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	900, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 909,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 902, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 908, 428,
	904, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 905, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 903, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 906,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 907, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 901, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 4092, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 4889,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1510, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	1513, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	1511, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	882, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 881, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 880, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 1514, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 878, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1510, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 1513, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 1511, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 882, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 881,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 880, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 1514, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 878,
	777, 778, 779, 0, 703, 0, 692, 1512, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 889, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 887, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 797, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 796, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 795, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 3385, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 5209,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 3899, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 4763, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	4459, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 3103, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 3385, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	3465, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 2445, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 881, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 880,
	628, 637, 638, 639, 640, 3317, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 878, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 2648, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	2635, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1849, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1841, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 872, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 868,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 873, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 882, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 881, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 880, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	1826, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 878, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1799, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1798, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1782, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1780, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1774, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1752, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1750, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1743, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1704, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1667, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1516, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 881, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 880,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 878, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1487, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1486, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1478, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1477, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 1422, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 892, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 872, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 868,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	867, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 873, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 882, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 881, 619, 620, 621, 622, 869, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 880, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	870, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 878, 777, 778, 779, 0, 703, 0, 692, 874,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 861, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 862, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	823, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 815, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 792, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 4124, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 881, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 880,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 878, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 4008, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 3977, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	3973, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 3924, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 3922, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 3910, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 3907, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	3484, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 862, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 2606, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 0, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1450, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 1370, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 0, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 0, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 0, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 0, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1788, 0, 1494, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 0, 0, 0, 339,
	0, 340, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 0, 0, 0, 0,
	349, 350, 0, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 1496, 378, 379, 380, 381,
	382, 0, 383, 385, 0, 0, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 0, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 0, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 0,
	0, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 0, 0, 0, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1787, 0, 0, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 0, 461, 544,
	462, 0, 0, 0, 0, 0, 463, 464, 466, 0,
	0, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 0, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 0, 542,
	0, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 0, 0, 555,
	0, 0, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 0, 570,
	571, 572, 0, 573, 574, 575, 0, 576, 0, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 0, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 0, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1497, 649, 0, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	0, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 0, 670, 671, 672, 673,
	0, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 0, 0, 0, 0, 0, 703, 0,
	692, 694, 695, 696, 697, 0, 698, 0, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 0, 0, 0, 0, 719, 718, 720,
	721, 724, 722, 723, 0, 725, 726, 727, 1707, 0,
	1494, 0, 728, 729, 0, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	0, 0, 0, 339, 0, 340, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	0, 0, 0, 0, 349, 350, 0, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 1496,
	378, 379, 380, 381, 382, 0, 383, 385, 0, 0,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	0, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 0, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 0, 0, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 0, 0, 0, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1706, 0,
	0, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 0, 461, 544, 462, 0, 0, 0, 0, 0,
	463, 464, 466, 0, 0, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 0, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 0, 542, 0, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 0, 0, 555, 0, 0, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 0, 570, 571, 572, 0, 573, 574, 575,
	0, 576, 0, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 0, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 0, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1497, 649,
	0, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 0, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 0,
	670, 671, 672, 673, 0, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 0, 0, 0,
	0, 0, 703, 0, 692, 694, 695, 696, 697, 0,
	698, 0, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 0, 0, 0,
	0, 719, 718, 720, 721, 724, 722, 723, 0, 725,
	726, 727, 1492, 0, 1494, 0, 728, 729, 0, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 0, 0, 0, 339, 0, 340,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 0, 0, 0, 0, 349, 350,
	0, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 1496, 378, 379, 380, 381, 382, 0,
	383, 385, 0, 0, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 0, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	0, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 0, 0, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	0, 0, 0, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1491, 0, 0, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 0, 461, 544, 462, 0,
	0, 0, 0, 0, 463, 464, 466, 0, 0, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 0, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 0, 542, 0, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 0, 0, 555, 0, 0,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 0, 570, 571, 572,
	0, 573, 574, 575, 0, 576, 0, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 0, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 0, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1497, 649, 0, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 0, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 0, 670, 671, 672, 673, 0, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 0, 0, 0, 0, 0, 703, 0, 692, 694,
	695, 696, 697, 0, 698, 0, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 0, 0, 0, 0, 719, 718, 720, 721, 724,
	722, 723, 0, 725, 726, 727, 2326, 0, 1494, 0,
	728, 729, 0, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 0, 0,
	0, 339, 0, 340, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 0, 0,
	0, 0, 349, 350, 0, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 1496, 378, 379,
	380, 381, 382, 0, 383, 385, 0, 0, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 0, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 0, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 0, 0, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 0, 0, 0, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 0, 0, 0, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 0,
	461, 544, 462, 0, 0, 0, 0, 0, 463, 464,
	466, 0, 0, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 0, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	0, 542, 0, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 0,
	0, 555, 0, 0, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	0, 570, 571, 572, 0, 573, 574, 575, 0, 576,
	0, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 0, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	0, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1497, 649, 0, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 0, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 0, 670, 671,
	672, 673, 0, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 0, 0, 0, 0, 0,
	703, 0, 692, 694, 695, 696, 697, 0, 698, 0,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 0, 0, 0, 0, 719,
	718, 720, 721, 724, 722, 723, 0, 725, 726, 727,
	2286, 0, 1494, 0, 728, 729, 0, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 0, 0, 0, 339, 0, 340, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 0, 0, 0, 0, 349, 350, 0, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 1496, 378, 379, 380, 381, 382, 0, 383, 385,
	0, 0, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 0, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 0, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 0, 0, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 0, 0,
	0, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	0, 0, 0, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 0, 461, 544, 462, 0, 0, 0,
	0, 0, 463, 464, 466, 0, 0, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 0,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 0, 542, 0, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 0, 0, 555, 0, 0, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 0, 570, 571, 572, 0, 573,
	574, 575, 0, 576, 0, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	0, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 0, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1497, 649, 0, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 0, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 0, 670, 671, 672, 673, 0, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 0,
	0, 0, 0, 0, 703, 0, 692, 694, 695, 696,
	697, 0, 698, 0, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 0,
	0, 0, 0, 719, 718, 720, 721, 724, 722, 723,
	1494, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	0, 730, 731, 732, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	0, 0, 0, 339, 0, 340, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	0, 0, 0, 0, 349, 350, 0, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 1496,
	378, 379, 380, 381, 382, 0, 383, 385, 0, 0,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	0, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 0, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 0, 0, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 0, 0, 0, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 0, 0,
	0, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 0, 461, 544, 462, 0, 0, 0, 0, 0,
	463, 464, 466, 0, 0, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 0, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 0, 542, 0, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 0, 0, 555, 0, 0, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 0, 570, 571, 572, 0, 573, 574, 575,
	0, 576, 0, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 0, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 0, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1497, 649,
	0, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 0, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 0,
	670, 671, 672, 673, 0, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 0, 0, 0,
	0, 0, 703, 0, 692, 694, 695, 696, 697, 0,
	698, 0, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 0, 0, 0,
	0, 719, 718, 720, 721, 724, 722, 723, 0, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 0, 730,
	731, 732, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 2040, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 0, 0, 0, 0, 0,
	2046, 2040, 2011, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	2059, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 2046, 2040, 0, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 0,
	2065, 0, 0, 0, 2017, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 0, 0, 2050, 0, 2017,
	0, 2060, 0, 0, 0, 0, 0, 0, 2039, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	2057, 0, 0, 0, 0, 0, 0, 2026, 2027, 0,
	0, 0, 2050, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 2048, 0, 0,
	0, 2034, 2035, 2036, 2037, 0, 0, 0, 0, 0,
	0, 2017, 2032, 2056, 0, 2057, 0, 0, 0, 0,
	0, 0, 2026, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 0, 0, 2032, 2060, 0,
	0, 2058, 0, 0, 0, 2039, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 0, 2062, 2026, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 2033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 2051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 2051, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0, 0,
	5182, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 4976, 0, 0, 0, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2046, 2040, 0, 0, 0, 0,
	0, 0, 0, 2012, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 2065, 0, 0, 0, 0, 4787, 0, 0,
	0, 2011, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053,
	2054, 2055, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 2046, 2040, 0, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 2046, 2040, 2011, 0, 0, 0, 0, 0, 0,
	2012, 0, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 2059, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2036, 2037, 0, 0, 2065,
	0, 0, 0, 2017, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 0, 0, 0, 2034, 2035, 2036, 2037, 0,
	0, 0, 0, 0, 0, 2017, 0, 2056, 0, 2057,
	0, 0, 0, 0, 0, 0, 2026, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 0, 0, 2050, 0,
	2017, 2032, 2060, 0, 0, 0, 0, 0, 0, 2039,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 2057, 0, 0, 0, 0, 0, 0, 2026, 2027,
	0, 0, 0, 2050, 0, 0, 0, 2060, 0, 0,
	2058, 0, 0, 0, 2039, 2041, 0, 0, 2048, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 2032, 2056, 0, 2057, 0, 0, 0,
	0, 0, 2062, 2026, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	2051, 0, 0, 0, 0, 2009, 2010, 0, 2042, 2043,
	2044, 2053, 2054, 2055, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2046, 2040,
	0, 0, 0, 0, 0, 0, 2064, 2012, 0, 0,
	2033, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 2051, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 2049, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 4687,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 0, 0, 0, 2017, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0,
	0, 4686, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 0, 0, 2049, 2060, 0, 0, 0, 0, 0,
	0, 2039, 2041, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 2056, 0, 2057, 0, 0, 4685, 0, 0, 0,
	2026, 2027, 0, 0, 0, 0, 0, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 2040, 0, 0, 2032, 0, 0, 0, 0,
	2012, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053,
	2054, 2055, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 2046, 2040, 2011, 0,
	0, 0, 0, 0, 2058, 2012, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 2059, 0, 2028, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 2062, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	2034, 2035, 2036, 2037, 2046, 2040, 0, 0, 0, 0,
	2017, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 2033, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 2034, 2035, 2036, 2037, 0,
	0, 2011, 0, 2050, 2051, 2017, 0, 2060, 0, 0,
	0, 0, 2031, 0, 2039, 2041, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 2057, 0, 0, 0,
	2064, 0, 0, 2026, 2027, 0, 0, 0, 2050, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 2039,
	2041, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 2056,
	0, 2057, 0, 0, 0, 0, 0, 0, 2026, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2036, 2037, 0, 2048, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	2049, 0, 0, 2032, 0, 0, 0, 2058, 0, 0,
	0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 2047, 0,
	0, 0, 0, 4272, 0, 0, 2050, 0, 0, 2062,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	0, 0, 0, 2047, 0, 0, 2026, 2027, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 2046, 2040, 0, 0, 0, 2051, 0, 0,
	2058, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 2062, 2064, 0, 0, 0, 0, 0, 2011,
	0, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 2034, 2035, 2036, 2037, 0, 3691, 0, 0, 0,
	2051, 2017, 0, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 2064, 0, 0, 0,
	0, 3690, 0, 0, 2050, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 3689,
	0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 2046, 2040, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0,
	2038, 0, 0, 0, 2505, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 2040, 0, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 0, 0, 0, 0, 0, 2051, 0,
	2011, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 0,
	0, 2031, 0, 0, 2017, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2050, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 2039, 2041,
	0, 2506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	2057, 0, 0, 0, 0, 0, 0, 2026, 2027, 0,
	0, 0, 2034, 2035, 2036, 2037, 0, 0, 0, 0,
	0, 0, 2017, 0, 2049, 0, 0, 2048, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 2032, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 0, 0, 0, 0, 3688, 0, 0,
	0, 0, 0, 0, 0, 2050, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 2039, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 2056, 0, 2057, 0,
	0, 0, 0, 0, 0, 2026, 2027, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 2046, 2040, 0, 0, 0, 2058,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 2033,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 2031, 0, 0, 0, 2405, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 2038, 2046, 2040, 0, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 2403, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 2507, 2034, 2035, 2036, 2037, 0, 0, 2051,
	2031, 0, 0, 2017, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 2064, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 0, 2050, 0, 3653, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	2508, 0, 0, 0, 0, 0, 2026, 2027, 0, 0,
	0, 2034, 2035, 2036, 2037, 0, 0, 0, 0, 0,
	0, 2017, 5504, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 2023, 2024, 2030,
	2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015,
	2016, 2018, 2019, 0, 2050, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2404, 2038, 2046, 2040, 0, 0, 0, 2058, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 2033, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 2031, 0, 5503, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 2402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 2035, 2036, 2037, 0, 0, 2051, 0,
	0, 0, 2017, 0, 3753, 0, 0, 0, 0, 0,
	0, 3752, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 2064, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 2050, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 2039, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 0, 2057, 0,
	0, 0, 0, 0, 0, 2026, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 2040, 0, 0, 2058,
	0, 3623, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 2046, 2040, 0, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 3624, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2009,
	2010, 2065, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0,
	2011, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 2051,
	0, 2031, 2046, 2040, 2017, 0, 0, 0, 0, 0,
	2028, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 2050, 0, 2011,
	0, 2060, 0, 0, 0, 0, 0, 0, 2039, 2041,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	2057, 0, 0, 0, 0, 0, 0, 2026, 2027, 0,
	0, 0, 2034, 2035, 2036, 2037, 0, 0, 0, 0,
	0, 0, 2017, 0, 5082, 0, 0, 2048, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 2023, 2024, 2030,
	2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015,
	2016, 2018, 2019, 0, 0, 2050, 0, 0, 0, 2060,
	0, 2034, 2035, 2036, 2037, 0, 2039, 2041, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 2056, 0, 2057, 0,
	0, 0, 0, 0, 0, 2026, 2027, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 2050, 2048, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 2048, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2047,
	1221, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	2062, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 2010, 0, 2042, 2043, 2044,
	2053, 2054, 2055, 0, 0, 0, 0, 0, 0, 2051,
	2038, 0, 0, 0, 0, 0, 0, 2046, 2040, 0,
	0, 0, 0, 0, 0, 0, 2012, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 2059, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 2064, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 0, 2051, 0,
	0, 0, 0, 2009, 2010, 2031, 2042, 2043, 2044, 2053,
	2054, 2055, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2046, 2040, 0, 0,
	0, 0, 0, 0, 2064, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 2023, 2024, 2030,
	2052, 2029, 2025, 2011, 2022, 2020, 2021, 2013, 2014, 2015,
	2016, 2018, 2019, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 2034, 2035, 2036, 2037,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	2039, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 2035, 2036, 2037, 0,
	2056, 0, 2057, 0, 0, 2017, 0, 0, 0, 2026,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 2050, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 2039,
	2041, 0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053,
	2054, 2055, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 2057, 0, 0, 0, 0, 2046, 2040, 2026, 2027,
	0, 0, 0, 2058, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 2048, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 2065, 2062, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 2035, 2036, 2037, 0,
	0, 0, 0, 2051, 0, 2017, 0, 4488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 0,
	2033, 0, 2060, 0, 0, 0, 0, 0, 4837, 2039,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 2057, 2051, 0, 0, 0, 0, 0, 2026, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2048, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 2049,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 2023, 2024, 2030, 2052, 2029, 2025, 4489, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 2046, 2040, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 2065, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 2031, 2046, 2040, 0, 0, 0, 0,
	0, 0, 2028, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 0, 2050, 0, 0,
	0, 2060, 0, 2034, 2035, 2036, 2037, 0, 2039, 2041,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 3759, 0, 0, 0, 0, 0, 2056, 0,
	2057, 0, 0, 0, 0, 0, 0, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 2048, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 2032, 0, 0, 2009, 2010, 0, 2042, 2043,
	2044, 2053, 2054, 2055, 0, 0, 0, 2056, 0, 2057,
	0, 0, 0, 0, 0, 0, 2026, 2027, 2046, 2040,
	0, 0, 0, 3754, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 2059, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 2047, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	2050, 0, 0, 0, 2060, 0, 0, 2064, 0, 0,
	0, 2039, 2041, 0, 0, 0, 0, 0, 0, 0,
	4253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 2056, 0, 2057, 0, 0, 0, 0, 0, 0,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2047, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 2010, 0, 2042, 2043, 2044,
	2053, 2054, 2055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 2046, 2040, 0,
	0, 0, 0, 0, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2009, 2010, 2065, 2042, 2043, 2044, 2053,
	2054, 2055, 0, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2051, 2031, 2046, 2040, 0, 0,
	0, 3692, 0, 0, 2028, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 2035, 2036, 2037,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 2050,
	0, 0, 0, 2060, 0, 2034, 2035, 2036, 2037, 0,
	2039, 2041, 0, 0, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 2057, 0, 0, 0, 0, 0, 0, 2026,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 2048,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 2039,
	2041, 0, 0, 0, 2032, 0, 0, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0, 2056,
	0, 2057, 0, 0, 0, 0, 0, 0, 2026, 2027,
	2046, 2040, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 2048, 0,
	2059, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 2047, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 2031, 0,
	0, 0, 0, 0, 0, 0, 3719, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2051, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 0, 2050, 0, 0, 0, 2060, 0, 0, 2064,
	0, 0, 0, 2039, 2041, 0, 0, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0, 0,
	0, 0, 2051, 2056, 0, 2057, 0, 0, 0, 0,
	2046, 2040, 2026, 2027, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 2048, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 2023, 2024, 2030, 2052, 2029, 2025, 2028, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 0, 0, 2009, 2010, 2017,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 2050, 0, 2033, 0, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 2056, 0, 2057, 2051, 0, 2031, 0,
	0, 0, 2026, 2027, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 2618, 0, 2047, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 2050, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 2057, 0, 0, 2038, 0,
	0, 0, 2026, 2027, 0, 0, 0, 1101, 0, 1153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1124, 0, 1107, 1106, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1126, 0,
	0, 0, 0, 0, 1108, 0, 2058, 0, 0, 1111,
	0, 0, 2064, 0, 1165, 0, 1136, 0, 0, 0,
	0, 0, 0, 0, 1121, 1122, 0, 0, 0, 0,
	0, 0, 0, 0, 1141, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1154, 1113, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 0, 0, 0, 0,
	0, 0, 2049, 1151, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 2033, 0, 0, 0, 1152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 1105, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1118, 1119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 1127, 1125, 0, 0,
	0, 0, 0, 0, 1120, 0, 0, 0, 0, 1137,
	0, 0, 1159, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1162, 1150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 1145, 1146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 1143, 0, 0,
	0, 0, 0, 0, 0, 1163, 1138, 0, 0, 1130,
	1128, 0, 0, 0, 1133, 0, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 1103, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1149, 0, 0, 1147, 0, 1135,
	0, 0, 0, 0, 0, 1132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1161, 0, 0, 0,
	0, 0, 0, 0, 1139, 0, 1140, 0, 0, 0,
	0, 0, 0, 0, 0, 1116, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1144,
}

var sqlPact = [...]int32{
	526, -1000, -1000, -1000, -1000, -1000, -1000, 196, -1000, -1000,
	195, 194, 191, 190, 189, 188, 187, 185, 184, 182,
	181, -1000, -1000, 180, 179, 178, 176, -1000, 175, 172,
	-1000, 171, -1000, -1000, 170, -1000, 169, 168, 167, -1000,
	-1000, 165, -1000, 164, -1000, -1000, -1000, -1000, 162, 159,
	157, 108510, 107896, 109122, 2574, 136716, 118316, 2113, 96242, 136102,
	95628, 135488, 2402, 14921, 134874, 3075, 154, -1000, 134260, 149,
	148, 147, -1000, 117702, 133646, 115248, 114634, 2377, 1825, 1820,
	-1000, 142, 141, -1000, 10488, 81432, 140, 139, 137, 135,
	2800, 134, -1000, 133, 132, -1000, 131, 129, -1000, 15844,
	1659, -1000, 127, 125, 124, -1000, 1179, 114020, 123, 121,
	119, 2895, 113, 112, 78982, 111, 110, 108, 2795, 3169,
	-1000, -1000, 2275, -1000, -1000, 105, 103, 102, 100, 98,
	97, 94, 93, 90, 89, 88, 87, 85, -1000, 84,
	82, 81, 78, 70, -1000, 68, 67, 61, -1000, 59,
	-1000, 58, 57, 55, 54, 52, 51, 50, 45, 44,
	43, 42, 41, 40, 37, 36, 157285, -1000, -1000, 29,
	-1000, 1987, 1811, 1810, 1808, 1005, 28, 27, 26, 18,
	16, 15, 14, 13, 11, 10, 9, 5, -1000, 1,
	0, -1, -2, -3, -6, -7, -8, -9, -1000, 146,
	-10, -12, -13, -16, -18, -19, -21, -1000, 3015, 3923,
	-1000, 1807, 864, 1269, 35092, 3321, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 145896, 137328, -25, -90, -27,
	-1000, 3679, 1072, 64111, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 480,
	2750, 728, -1000, -1000, -1000, 133032, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2573, 4, 96854, -1000, 2207, -1000,
	-1000, -1000, -1000, -1000, 726, -1000, 2572, 2486, 351, 2479,
	96854, -1000, -1000, -1000, 3775, 3674, 107282, 2744, 4195, 4193,
	4192, 4191, 4190, 145284, 1862, 2817, 4189, 4184, 4181, 4173,
	4172, 4171, 4170, -1000, 106668, 1090, 106054, 105440, 3797, 132420,
	104826, 131806, 148350, 54058, 863, 3774, -1000, -1000, -1000, -1000,
	-1000, -1000, 137328, -1000, 1087, -1000, -1000, 4169, 2261, 711,
	117088, -1000, -1000, 131192, 1840, -1000, -1000, -1000, 942, 1239,
	37608, 37608, 37608, 284, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3785, -1000, -1000, -1000, -1000, 137328, 3021, 3021, 1418,
	1458, 1458, 3021, 3021, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4168, 4167, 4166, 4165, 4164, 1526, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 95014, 27355, 94400, 93786, 130578,
	53429, 104212, 103598, 89488, 4163, 4162, 109122, 52800, 61603, 3916,
	129964, 147736, 3914, 3911, 1086, 2206, 1576, -1000, -1000, -1000,
	-1000, -1000, -1000, -43, 85126, 3979, 137328, -1000, 261, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52171, 485, 51542, 538,
	50913, 493, 129350, -1000, -1000, -1000, -1000, -1000, 88864, 3672,
	-1000, 128736, 1597, 2741, 4161, 4160, 1215, 4159, 3661, 1858,
	4153, 4152, 4151, 4150, 4148, 4147, 4143, 1609, 128122, 2970,
	127508, 1888, 147122, 2044, 1084, 102984, 109122, 2897, 126894, 1455,
	1429, -1000, -1000, -1000, -1000, 3450, 3162, 3161, 1282, -1000,
	-1000, -1000, -1000, -1000, 67847, 7831, 7563, -1000, -1000, 15012,
	126280, 70957, 109122, 109122, -1000, -1000, -1000, -1000, -1000, -1000,
	50284, 392, 49655, 859, 125666, -1000, -1000, 68469, 3270, 1136,
	-1000, -1000, -1000, -1000, -1000, 125052, 49026, 391, 48397, 787,
	137328, -1000, 3317, 2171, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3109, 1751, 3982, 3041, 88240, 2233, 1506,
	3735, 3439, 3424, 1594, 2197, 3421, 4142, 2884, 3419, 3416,
	3410, 3392, 3384, 1709, 2871, 412, 2862, 34463, 3308, 1913,
	47768, 1652, 1623, 3383, 3375, 3996, 3853, 2180, 2204, 2184,
	2202, 93172, 4138, 4136, 3685, 3371, 3365, 3131, 3352, 2073,
	-1000, 3269, 1590, 257, -1000, -1000, -1000, -1000, -1000, -1000,
	257, 1549, -1000, -1000, -1000, -1000, -1000, 98078, -1000, -1000,
	1526, -1000, -1000, -1000, 1405, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1807, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3111, -1000, 2280, -1000, -1000, -1000, 2776, 3648, 3648,
	3648, 3772, 459, 452, -1000, 146, 878, 1193, -1000, -1000,
	156826, -1000, -1000, 54687, 54687, 54687, 54687, 54687, 54687, 54687,
	54687, 2408, -1000, 710, -1000, -1000, 755, -1000, 709, 642,
	575, -1000, -1000, -1000, -1000, -1000, -1000, 706, -1000, -1000,
	-1000, -1000, -1000, -1000, 3953, -1000, 30552, -1000, -1000, -1000,
	515, 705, 54687, -1000, -1000, 4020, 4017, 1046, -1000, 256,
	961, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3314, 704, 703, -1000, 702, 699, 689,
	687, 685, -1000, 684, -1000, 683, 682, 680, 679, 677,
	675, 674, 672, -1000, 2250, -1000, -1000, -1000, -1000, -1000,
	-1000, 622, 614, 614, 614, -1000, 1079, -1000, -1000, -1000,
	275, 612, 264, 611, 610, 608, -1000, 671, 668, 667,
	666, 656, 655, 654, 653, 649, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1078, -1000, -1000, -1000, -1000, 1406, -45,
	137328, -1000, 480, -45, -1000, -1000, 648, -1000, 38884, 38884,
	38884, -1000, -1000, 2565, 54687, -1000, 2792, -1000, -38, -38,
	898, 65977, -1000, 62849, 898, 381, 769, 72193, -1000, 3268,
	-1000, -1000, 646, 254, -1000, -1000, -1000, -1000, 27977, 3267,
	137328, 137328, 137328, 109122, 109122, 109122, 137328, 4133, 4131, 3531,
	54687, -1000, -1000, 80818, 150186, 109734, 1400, -44, -1000, -1000,
	3891, 84504, 80206, 3313, 150186, 3312, 3266, 149578, 87616, 272,
	3500, -1000, -1000, 644, 4129, -1000, -1000, -1000, -1000, -1000,
	3499, 4128, 4127, 4124, 137328, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 265, 3498, -1000, -1000, 113406, 265, 3497, -1000,
	265, 3493, -1000, 112794, -1000, -1000, 2439, 3492, -1000, -1000,
	269, 3489, -1000, -1000, -1000, 266, 3487, -1000, -1000, 245,
	-93, 3485, -1000, -1000, -1000, -1000, -1000, -1000, 156826, -1000,
	-1000, -1000, 148964, -1000, 3682, -1000, 137328, -1000, 54687, -1000,
	-1000, 3890, 1561, 3709, 3830, -1000, -1000, -61, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2794, 2765, 1196, 2596, -1000,
	3548, 1672, 37608, 3642, -1000, -1000, -1000, -1000, -1000, 244,
	27977, 3151, -1000, -1000, 137328, -1000, 137328, 3021, 3021, -1000,
	-1000, -1000, 3988, 3986, 3021, 3021, 137328, 137328, -1000, -1000,
	-1000, -1000, -1000, -1000, -61, -1000, 2463, 3468, 1415, -1000,
	2594, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2208, 3467, -1000, 2262, 3461, 2111, -1000, -1000, 2332, -1000,
	153500, 1478, -1000, -1000, -1000, -1000, 2060, 3456, -37, -1000,
	-1000, 2334, -1000, 3974, 3191, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 5627, 153179, -1000, 1789,
	-1000, -1000, 2358, 2156, -1000, 1340, 3452, -1000, 3031, 3031,
	102370, 3479, 70335, 68469, 85126, -58, -1000, -1000, -1000, -1000,
	-1000, -111, -1000, 26725, 156826, -1000, -1000, -1000, -1000, 1977,
	156826, 951, -1000, -1000, 3446, -1000, 156826, 950, -1000, -1000,
	3444, -1000, 2869, -1000, 3311, -1000, -1000, -1000, 2689, 86992,
	2687, 1027, -1000, 109122, 2189, 4122, -1000, 4121, -1000, -1000,
	4120, -1000, 4119, 4118, 4116, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 101758, 2562, -1000, -1000, 1584, 980, 90110, -1000,
	2685, 3822, -1000, 101144, 1082, -1000, 1012, 2682, -1000, 1426,
	112182, 1040, 2677, -1000, 4115, 3788, 2964, 1012, 2676, -1000,
	-1000, -1000, -1000, -1000, 1006, -1000, 73417, -1000, 73417, -1000,
	1797, -1000, 144672, -38, 109122, 3953, -1000, -91, -1000, -1000,
	-1000, 1072, -1000, 67222, -1000, 67222, 116474, 90110, 980, 3264,
	77124, 156586, -1000, 1026, -1000, -1000, 156826, -1000, -1000, -1000,
	2858, -1000, -185, 3029, -1000, 90110, 69713, 3263, 2856, -1000,
	156826, -1000, -1000, -1000, -1000, 156826, -1000, -1000, -1000, 90110,
	1584, -1000, 124438, 100530, -1000, -1000, 1588, 2849, -1000, -1000,
	-1000, 68469, 3262, 1344, 90110, 90110, 90110, -1000, 123824, -1000,
	-1000, 2256, 1682, 3686, 2215, 109122, -1000, 2100, -1000, -1000,
	-1000, 3719, 3476, 137328, -1000, -1000, 3310, -1000, 83892, 111570,
	-1000, 110958, -1000, 110346, -1000, 109122, -1000, 109122, -1000, 4114,
	4113, 4112, -1000, -1000, 4111, -1000, 4108, 3710, -1000, 601,
	47139, 156826, 3697, -1000, 4106, 2179, 3308, 156826, -1000, 3474,
	1828, 1827, 137328, -1000, -1000, 137328, -1000, 137328, -1000, -1000,
	-1000, 2585, 1681, -1000, -1000, 2789, -1000, -1000, -1000, 1025,
	-1000, -1000, 109122, 109122, 109122, 109122, 109122, 1288, -1000, 46510,
	-1000, -1000, 3348, 4104, 1911, -1000, 2039, -1000, 3261, 3680,
	-1000, 3260, 1585, 1927, 242, 4023, 242, -1000, -1000, 273,
	-1000, -1000, 144060, -1000, 2776, -1000, 137328, -1000, 2779, 3300,
	3307, 1874, 2584, 2899, -1000, 45881, 2870, 58461, 2593, 146,
	-1000, -1000, 146, 146, 36350, -1000, -1000, 37608, 878, 84504,
	84504, 27977, 1348, 54687, 54687, 54687, 54687, 54687, 54687, 54687,
	54687, 54687, 54687, 54687, 54687, 54687, 54687, 54687, 54687, 54687,
	54687, 54687, 54687, 54687, 54687, 54687, 54687, 54687, 54687, 54687,
	54687, 54687, 54687, 54687, 54687, 54687, 54687, 54687, 54687, 2423,
	54687, 1399, 54687, 54687, 54687, 54687, 2502, -1000, -1000, 2128,
	521, 2217, 642, -1000, -1000, -1000, 3956, 3956, 3956, 626,
	626, 626, 157006, 157006, 595, 4103, 755, -1000, 54687, -1000,
	95, 66589, 54687, 28601, -1000, 452, 10667, 2761, -1000, 451,
	29260, -1000, -1000, -1000, 30552, 575, 45222, 54687, 1038, 156826,
	-1000, -1000, 1560, 3967, 26095, 3289, 3126, 641, 899, 897,
	33804, 33145, 32486, 31827, 896, 886, 54687, 54687, 54687, 54687,
	54687, 54687, 54687, 54687, -1000, -1000, 3985, -1000, 3967, -1000,
	-1000, -1000, -1000, 3967, 1326, 1306, 3967, -1000, 3967, 3967,
	12565, 12565, 44593, 43964, 43335, 59090, 42706, 54687, 31198, 42077,
	41448, -1000, 60977, 137328, -45, 3889, 54687, 349, -1000, 10569,
	-1000, 349, 349, 634, -96, 156826, 2867, 2867, 64733, 2638,
	2424, 2424, 2424, -1000, 898, 20386, 898, 121988, 2434, 898,
	898, 220, 251, 450, 62227, 2792, 121988, 745, 633, -28,
	-30, -31, -1000, -1000, -32, -33, -1000, -1000, 109122, 632,
	28601, 27977, 218, 2212, -97, 2893, 2892, 2889, 2881, -1000,
	2877, 2553, -1000, -1000, -1000, 1976, -98, 1397, 109122, 137328,
	2006, -1000, -1000, -1000, -1000, 85126, -46, 85126, 137328, 3671,
	109122, -85, -1000, 150186, 7378, -99, -1000, 1318, 215, 3967,
	-1000, -1000, -1000, -1000, -1000, 4102, 4101, -1000, 1058, 631,
	627, 420, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	622, 614, 614, 614, -1000, 275, 612, 264, 611, 610,
	608, -1000, -1000, -1000, -1000, -1000, 3259, 109122, 137328, 1935,
	83280, 99916, -93, 109734, 150186, -53, -1000, -1000, -1000, -1000,
	109122, -1000, -1000, 109122, -1000, 74645, -1000, 137328, -1000, -1000,
	-1000, 4100, -1000, 109122, 109122, 265, 3443, -1000, 109122, -1000,
	109122, 263, 3442, -1000, -1000, 137328, -1000, 109122, 109122, -1000,
	137328, 137328, 137328, 150186, 150186, 260, -1000, 109122, 878, -114,
	1226, -61, -1000, -1000, -1000, -1000, 1526, -1000, 1856, -1000,
	-1000, -1000, -1000, -1000, -1000, 1614, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1046, -1000, -1000, -1000, -1000, 3963,
	3961, -57, -1000, -1000, 27977, -1000, 2001, -1000, -1000, -1000,
	-1000, 137328, 137328, -1000, -1000, 137328, 137328, -1000, -1000, -63,
	1749, 573, 1393, -1000, 92558, 2732, 3695, 4099, 2958, 3668,
	1796, -1000, 1665, 607, -1000, 3796, 98078, 3852, 3875, 1371,
	-1000, 3258, -1000, -1000, -1000, 940, 1854, 1921, 1391, 1390,
	98078, 2262, -1000, 84504, -1000, 2935, 3771, 1458, 1432, 1458,
	1458, 1481, 1453, -1000, 98078, 1918, 1386, 1385, 1383, -1000,
	-1000, 1739, 1774, -1000, -1000, 123212, 1878, -1000, 1377, 1376,
	138552, 3905, 3111, 2406, 802, 2154, -1000, 1459, 1374, 3256,
	-1000, -1000, -64, 3803, 3858, 1371, -1000, -1000, 3255, 1370,
	-1000, 1045, -1000, -1000, -1000, 3770, 109122, 27977, 1676, 1674,
	1656, 1912, 1365, -47, -1000, 3838, 1791, -1000, 3931, 90110,
	-1000, 2710, 2517, 1364, 1910, 1363, 3539, -1000, -1000, 2552,
	2616, -1000, -1000, -1000, -1000, 1813, 3019, -1000, 2798, 1422,
	1422, 137328, -1000, 1740, -1000, 1584, 1584, 118928, 137328, -1000,
	-1000, -1000, 3732, 3731, -1000, -1000, 1345, 1337, -1000, 1065,
	6571, 3590, -1000, 150186, 1065, 1065, 2019, 3441, 2990, 1728,
	-1000, 3028, 917, 3014, -1000, -1000, -1000, 917, -58, 85126,
	137328, 212, -1000, 95, 54687, 54687, 95, 54687, 95, -1000,
	3802, 3440, 3888, -1000, 3438, 4097, 606, -1000, 2816, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 605, 2666, 3254, 137328,
	226, -1000, 109122, -1000, 3887, 122600, -1000, 3437, 150186, 2262,
	2663, -1000, -1000, 99304, -1000, 3435, 2140, 480, 2660, -1000,
	735, 4095, 3434, -1000, 143448, -1000, 3682, 1300, 3431, 1133,
	558, 3886, -1000, 558, 75268, -1000, 137328, -1000, -38, 6022,
	91334, -115, -117, 443, -1000, 137328, 137328, 3625, 2168, 2167,
	-1000, 1001, 68469, -1000, 68469, -120, -1000, -185, 3009, 1657,
	68469, -1000, 980, -140, 917, -1000, 917, -1000, 109122, 3303,
	-1000, 90110, 68469, -1000, 980, 980, 980, -1000, -1000, -1000,
	-1000, 4093, 4092, 4090, 4089, -1000, -1000, 1011, 109122, 137328,
	109122, -1000, 2988, 1723, -1000, 211, -1000, 150186, -1000, 150186,
	137328, 109122, -1000, 1011, 137328, 1011, 137328, 1011, 137328, 1011,
	1011, -1000, -1000, -1000, -1000, -1000, 95, -1000, -1000, 156826,
	-1000, 54687, -1000, -1000, 1640, 4088, 1812, -1000, 3302, -1000,
	3301, -1000, 8, -1000, -1000, 3980, 2032, -1000, 4014, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4087, 156826,
	-1000, 2005, -1000, -1000, -1000, -1000, 109122, 109122, 109122, 109122,
	137328, 3588, -1000, 137328, 3563, 3577, 109122, -1000, 4022, -1000,
	-1000, 98078, -1000, 2779, 3300, -1000, -1000, -1000, -1000, -1000,
	-1000, 1565, 2499, -1000, 2842, -1000, 1717, -1000, -1000, -1000,
	156826, 59719, -1000, -1000, 156826, 1998, -1000, 57832, 57203, -1000,
	-1000, 1859, 109122, 2914, -1000, 2914, -89, -1000, 154241, 2841,
	109122, -57, 37608, -1000, -1000, -1000, -1000, -1000, 939, 698,
	698, 1416, 1416, 1416, 1416, 3818, 7325, 7342, 8026, 14144,
	14144, 8737, 8737, 8737, 8737, 8737, 14144, 725, 626, 626,
	725, 725, 725, 725, 725, 626, 626, 626, 14144, 14144,
	14144, 626, 157006, 8115, 14215, 54687, 54687, 1336, 2121, 521,
	13882, 54687, 11410, 11410, 11410, 11410, -1000, 2016, -1000, -1000,
	-1000, -1000, 3251, 604, 59090, 59090, -1000, -1000, -1000, -1000,
	29906, 54687, -1000, -1000, -1000, -1000, 40789, -1000, -1000, 153081,
	-339, 442, -1000, 210, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 439, -87, 114,
	-1000, 54687, 54687, 54687, 438, -1000, 209, 54687, 137328, -1000,
	18250, 744, -122, -1000, -130, 1500, -1000, 54687, -1000, -1000,
	1332, -1000, 1331, 1329, 1325, -1000, 599, 436, -1000, 204,
	-1000, 2420, 596, 594, 54687, -1000, -1000, -1000, -1000, -1000,
	152748, -1000, -1000, 152430, -1000, -1000, 152322, -1000, -1000, 152277,
	-1000, -1000, -1000, -1000, -1000, 156342, 17768, 17075, 17030, 9500,
	13376, 13297, -131, 434, -132, 433, 936, 927, 431, 424,
	423, -137, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -138, 422, -1000, 3242, -87, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 421, -1000, 418,
	-1000, 156283, -87, 417, 6566, -1000, 59090, 59090, 59090, 59090,
	410, -1000, 153919, -1000, 155864, 40160, 40160, 40160, 409, 155620,
	54687, -87, -139, -1000, -144, -1000, -1000, -1000, -1000, 555,
	-145, 1032, 38884, 63487, 27977, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1032, 1032, 54687,
	-1000, 54687, 2854, -1000, -1000, -1000, -1000, 2853, 2647, 2867,
	64733, -1000, -1000, -1000, -1000, 121988, -1000, 3953, 3195, -1000,
	121988, -1000, -1000, 137328, 480, -1000, 121988, 121988, 27977, 898,
	-1000, 898, 121988, 865, -1000, -1000, -1000, -1000, -1000, 408,
	77746, 114, 202, 27977, 1012, -1000, -1000, 2965, 2965, 2965,
	2965, 2965, 109122, -1000, -1000, 150186, 1324, -54, -83, 3006,
	3004, 3002, -58, 85126, -58, -111, 137328, -48, 3929, -272,
	-1000, 2282, -1000, 84504, -1000, 754, 1243, 27977, -1000, -1000,
	-1000, 592, -1000, 3967, 3967, -1000, 3967, 150186, 3237, 315,
	3001, 2999, 2994, -1000, 2551, 96854, 314, -93, 150186, -1000,
	272, -152, -1000, -1000, 82656, 78358, -1000, 2426, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4085, -1000, -1000, 265, -1000,
	109122, 265, 265, -1000, 109122, 109122, 2439, -1000, 269, -1000,
	266, -1000, -1000, -93, -1000, 1024, 37608, -1000, 1526, -1000,
	-1000, 1714, -1000, 2175, -1000, 1247, -1000, -1000, 37608, -1000,
	3628, -1000, 1860, -1000, -1000, -1000, -1000, 2279, 137328, 137328,
	109122, -1000, 120152, 137328, -1000, 2357, 150186, -1000, 2658, 142836,
	2635, 142224, 84504, -1000, -1000, 590, 955, 2840, 2829, 1129,
	137328, 137328, 2828, 141612, 141000, -1000, 4084, 137328, 2257, 54687,
	120152, 3769, 2455, 2345, 95, 95, -1000, 95, -1000, -1000,
	589, 1287, 109122, 109122, 137328, 150186, 109122, 2011, -1000, -1000,
	-1000, -1000, -1000, 98690, -1000, -1000, 1458, -1000, -1000, -1000,
	1458, -1000, 1458, 2262, 1970, 137328, 150186, 109122, 150186, 140388,
	2152, 139776, 2149, 2144, -1000, -1000, -1000, 2085, 2139, 2339,
	1906, 137328, -1000, -1000, -1000, -1000, -1000, 1511, -1000, 802,
	1323, 3232, 54687, 54687, 2321, 95, 95, -1000, 95, 587,
	27977, -1000, 1298, -1000, 3282, 137328, 4013, 139164, 4012, 137328,
	137328, 137328, 150186, 3643, 137328, -49, -1000, 1387, -1000, 3931,
	-1000, 903, -1000, -1000, -1000, -1000, 137328, 137328, 150186, 2543,
	2614, 2541, 3017, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-140, -51, -126, -1000, 902, 894, -111, 2261, 137328, 150186,
	-1000, 138552, 6571, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2303, 3005, 1156, 137328, 1340, -1000, -1000, 1905, 1321, 1320,
	98078, 2289, 1903, 2018, 150186, 68469, 1009, 68469, 2971, -1000,
	-1000, 25465, -1000, 156826, 156826, -1000, 156826, -1000, 82044, 90110,
	90110, 137328, -1000, 75890, 137328, 91946, 956, 3428, 74031, -111,
	980, 1584, 3338, 1823, -126, 586, 137328, -1000, -1000, 2262,
	3417, 480, 2656, -1000, 150186, 1066, 3885, 3415, 585, 4083,
	4082, -1000, 109122, 2539, 2654, -1000, -1000, 137940, 3449, 802,
	137328, 1032, 64733, 2134, -1000, 71581, 1114, 137328, 2027, 311,
	-1000, -1000, -1000, -14, 137328, -1000, 767, -1000, -1000, 6022,
	6022, 980, 69091, -154, -1000, 200, 584, 892, 891, -1000,
	3422, -1000, -185, -1000, 90110, 1001, 68469, 3231, -185, 2992,
	3227, -1000, -1000, 1022, 980, 1514, 2991, 980, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -39,
	-1000, 1901, 2009, 137328, -93, -93, -69, -1000, -1000, 199,
	-54, -1000, 1011, -1000, 1011, -1000, 1011, -1000, -1000, -1000,
	156826, -1000, -1000, -1000, 1806, 1803, 137328, -1000, 3299, -1000,
	137328, -1000, -1000, 27977, 137328, 109122, 27977, 109122, 3296, 3294,
	-1000, -1000, -1000, 137328, -1000, -1000, 137328, -1000, -1000, -1000,
	-1000, -1000, -1000, 1178, -1000, 1998, 2492, -1000, 575, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2762, -1000,
	-55, 36350, 921, -1000, -1000, 109122, -40, -57, 54687, 54687,
	11953, 11193, 54687, 59090, 59090, -1000, 54687, 10885, -1000, -1000,
	-1000, -1000, -1000, 3225, 574, 54687, 84504, 8017, 6368, -1000,
	407, 12607, 725, -1000, 54687, -1000, 6801, -1000, 406, 39531,
	-1000, 154398, 69, -155, -1000, 21031, -87, -157, -1000, -1000,
	751, -1000, 3483, -1000, 54687, 155561, 2736, 2388, 2014, 1834,
	3967, 4011, 24835, -1000, 76512, 1035, 2443, 152004, -1000, -1000,
	-1000, -1000, 84504, 84504, 54687, 54687, -1000, 54687, 54687, 54687,
	-1000, -1000, -1000, 3967, 926, -1000, -1000, -1000, 926, -1000,
	-1000, 1458, -1000, 1458, -1000, 54687, -1000, -1000, 3220, 54687,
	-1000, 84504, 84504, 59090, 59090, 59090, 59090, 59090, 59090, 59090,
	59090, 59090, 59090, 59090, 59090, 59090, 59090, 59090, 59090, 59090,
	59090, 59090, 59090, 2745, 59090, 3952, 3952, 3952, 645, -1000,
	3293, 3220, 54687, 54687, 84504, 402, 399, 397, -1000, 54687,
	-87, -1000, -1000, 9133, 572, -1000, 2755, -1000, 3106, -1000,
	54687, -1000, -153, -1000, 2792, -1000, -1000, 3106, 3106, -160,
	156826, 64733, 64733, -1000, 569, 54687, 2852, -1000, -1000, 743,
	-336, -1000, 890, -1000, -1000, -1000, -1000, -1000, -1000, 889,
	-1000, 480, -1000, -1000, -1000, 198, 121988, 121988, 741, -1000,
	-162, -1000, -1000, -165, -1000, 3884, 396, 27977, -1000, 1032,
	2956, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2872, -272,
	150186, 150186, 1896, 1886, 1885, -58, -111, 2477, -1000, 3108,
	4010, -1000, 3978, 748, 740, 152, 3967, 395, 386, 379,
	-93, 150186, 150186, 1880, 1871, 1864, 79594, 3217, 150186, -1000,
	-1000, -1000, 75890, 84504, -1000, 84504, -1000, -1000, -1000, -1000,
	265, -1000, -1000, -1000, 263, -1000, -1000, -1000, -1000, 2925,
	-1000, -61, -1000, -1000, -1000, 54687, -1000, 968, -1000, -1000,
	3693, 568, 1317, 1316, -1000, -175, -1000, 885, -1000, -1000,
	-1000, -1000, -1000, 3160, -1000, 3408, -1000, 2651, -1000, 1119,
	2650, 1778, -1000, 54687, 567, 2963, 566, 561, 4080, 2286,
	4079, 1130, 3407, 2439, 3406, 2439, -1000, -1000, -1000, 947,
	-1000, 156826, -182, -1000, 2455, -1000, 560, 556, -1000, -63,
	1737, 518, 1309, 1017, -1000, -1000, 54687, 54687, 121376, -1000,
	505, 3681, -41, -1000, -1000, -1000, 1857, 1308, 1304, -1000,
	-1000, -1000, -1000, -1000, 2262, 1848, 1299, 1294, -1000, -1000,
	-1000, -1000, -1000, 2648, -1000, 137328, -1000, 3405, 137328, 3074,
	802, 137328, 3681, 3122, 1016, -1000, 3345, 3343, 924, 137328,
	54687, 54687, 155142, 154902, -1000, 1014, -1000, -1000, 54687, -1000,
	-64, -1000, 1293, 3823, 2646, 109122, -1000, 2439, 3402, 1292,
	-1000, 1291, -1000, -1000, -1000, 3834, 3832, 1275, 1791, 90110,
	68469, 2742, -1000, 3800, 2476, 3955, 3931, 68469, -1000, -1000,
	-1000, 3351, 2927, 2612, -1000, -1000, -1000, 118928, 90110, 90110,
	-1000, -1000, -1000, 3955, -1000, -1000, -1000, -1000, 86368, -1000,
	-1000, 1065, 137328, 150186, 109122, 1838, -1000, -1000, 96854, 97466,
	137328, 2990, -93, 917, -1000, 2336, 917, 1009, 3213, -1000,
	2906, -1000, -1000, 1013, 368, -65, -1000, 1286, 4076, 367,
	-190, -66, 84504, -1000, -1000, -1000, -1000, 2635, 109122, 137328,
	1322, 2941, 137328, 137328, 3883, -1000, 2580, 597, 109122, 931,
	-1000, 3953, -1000, -1000, -1000, 137328, 38884, 118928, -1000, 3821,
	109122, 3881, 3400, 1012, 109122, 95, 109122, 3997, -1000, -1000,
	3880, 109122, 3399, 2537, 2645, 2805, 802, 90722, 1012, 2436,
	-75, -1000, 2027, 38237, 3676, -192, -1000, -1000, -1000, 1032,
	75268, 64733, 54687, 4075, -195, -1000, -1000, -1000, -1000, -1000,
	90110, 980, 137328, 137328, 4074, 90110, 90110, 90110, -67, 552,
	-1000, 876, 874, 870, -1000, -1000, -1000, -1000, -1000, -1000,
	868, 861, 860, 858, -1000, 1001, -1000, -1000, -185, 68469,
	1001, 68469, 95, -1000, 2454, -1000, 109122, 68469, -1000, 24205,
	137328, 2988, -1000, 85738, -1000, -1000, -1000, -1000, -1000, 1011,
	4009, -111, -1000, -1000, -1000, 2348, 2591, 2348, 2003, 2000,
	-1000, -1000, -1000, 2465, -1000, -1000, -1000, -1000, 2907, 3657,
	27977, 3801, 11410, 54687, 54687, 9744, 5664, 2555, 11410, 54687,
	54687, 84504, 19491, -197, 54687, 54687, -1000, 54687, 739, 156826,
	-1000, 4008, 54687, 365, 363, -1000, -1000, -1000, 3966, -1000,
	-1000, -1000, 156826, 54687, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 358, -1000, 145, -1000, -1000, -1000, 146508, -1000, 54687,
	347, 3762, -1000, 345, 343, 11736, 7608, 151617, 151572, 151500,
	342, -1000, -1000, 338, 335, 156826, 3293, 156826, -1000, -1000,
	1141, 1141, 1411, 1411, 1411, 1411, 3952, 1135, 1094, 805,
	823, 823, 823, 1088, 645, 645, 823, 823, 823, 645,
	3212, 2809, 550, 8466, -1000, -1000, 156826, 156826, 331, -1000,
	-1000, -1000, -87, 328, 9133, -1000, 3100, 3760, 156826, -1000,
	64733, 3100, 3100, -1000, -1000, 2647, 137328, 156826, 64733, -1000,
	3195, -1000, 22309, 21673, -1000, 27977, -1000, -1000, -1000, -1000,
	3953, -1000, 77746, -1000, 548, -1000, 96, -1000, 2956, -1000,
	855, -1000, -1000, 90110, 90110, 4073, 4072, -1000, 4007, 4006,
	2255, 4005, 2965, -1000, -272, -170, 137328, 137328, 137328, -1000,
	2468, -1000, 738, 4071, 747, 27977, 326, -1000, -1000, -1000,
	-93, -93, 137328, 137328, 137328, 3211, 109122, 137328, 1658, 150186,
	-93, -1000, -1000, -1000, -1000, -1000, -1000, 3621, 156826, 3292,
	3089, 3088, 137328, 137328, -1000, 120152, 37608, 1651, 120764, 137328,
	3398, -1000, 3397, -1000, 1129, 5699, 150918, 65355, -1000, 65355,
	137328, -1000, -1000, -1000, -1000, 2143, 1637, 4069, 1202, -1000,
	3721, 137328, -1000, 137328, -1000, -1000, -1000, 120152, -1000, 137328,
	137328, 109122, 137328, -1000, 150186, 3361, -200, 156826, -68, -1000,
	854, -1000, 1412, -1000, 23575, 137328, 150186, 109122, 137328, 150186,
	109122, 3394, 1110, 137328, -1000, 3393, 137328, 1105, -1000, -1000,
	137328, 2382, -1000, -1000, 3342, -1000, 156826, 154823, 95, 54687,
	3357, -202, 27977, -1000, 4004, 4003, 3388, 3727, -1000, 137328,
	4001, 137328, 109122, 3620, -1000, -1000, -1000, -1000, 850, 848,
	845, 841, 837, 3949, 118928, -1000, 1010, 137328, -1000, 2921,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1847, 1280, 1279, 2531, 2520, 2461, -69, 2289, 1009, -71,
	547, -1000, 1009, -1000, 90110, 68469, 4067, 2017, 75890, 54687,
	54687, -1000, 2948, -1000, 115860, 91946, 2451, -1000, -1000, 546,
	137328, 137328, 542, -1000, 95, -1000, 4066, 120152, 540, -1000,
	2450, -1000, 734, -1000, -1000, 246, -205, 150186, 2262, 95,
	109122, -1000, 480, 997, 480, 307, -72, -1000, 3425, 1124,
	27977, 109122, 3381, 2808, 802, 90722, -1000, 1300, 2899, -1000,
	-74, -1000, 498, 95, 2436, -1000, -75, 156826, -1000, 827,
	305, -1000, 3595, -1000, -1000, -213, -1000, -1000, 4397, 4397,
	90110, 68469, 90110, 90110, 90110, 68469, 90110, -1000, 1001, 3878,
	-1000, -185, -1000, 2696, 980, 980, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 27977, 1744, -1000, 537, 535, -1000,
	-1000, -1000, -1000, 3657, 11410, 11410, 54687, 54687, 54687, 11410,
	19491, -216, -1000, 11410, 11410, -87, -1000, -1000, 154398, -1000,
	-1000, -1000, 156826, -1000, 22945, 2378, -1000, 150846, -1000, 36350,
	-1000, -1000, 54687, 54687, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 59090, 3209, 533, 84504, -1000, -1000, 304, 1029,
	54687, 56574, 2792, 1029, 1029, -1000, -218, -1000, -1000, -1000,
	3953, -1000, 3953, 96, -1000, -1000, 4065, 27977, -1000, 90110,
	-1000, -1000, -1000, -1000, -1000, 4060, 4058, 2611, 4056, 4055,
	-1000, -1000, -1000, 3341, -125, -173, -191, -1000, 647, -1000,
	4054, -1000, -1000, 237, 234, 221, 150186, 3189, 161, 2985,
	2982, -93, -1000, 95, -1000, -1000, -1000, -1000, -1000, -1000,
	2980, 3877, -1000, 2135, -1000, 137328, 137328, -1000, 137328, -1000,
	27977, 137328, 3144, 1302, -1000, 955, 2827, 532, 59090, 1177,
	109122, 960, 3084, 3082, -1000, 3902, 3758, 3058, -225, -1000,
	137328, 54687, 137328, -226, -228, 2608, -1000, -1000, 1175, 1301,
	54687, 1173, -1000, -1000, -1000, 84504, 531, 2439, 2439, -1000,
	-231, -233, -1000, -1000, -1000, 54687, 1276, 137328, 36979, -1000,
	4049, 3681, -1000, -1000, -1000, -1000, -1000, -1000, 137328, 137328,
	-1000, -1000, -1000, 137328, 3681, 137328, -1000, 54687, -1000, 154339,
	54687, 1268, -1000, -1000, -1000, 4000, 2439, 27977, 2439, -1000,
	2439, 3727, 1197, 90110, 54687, 1595, 68469, 68469, -1000, -1000,
	-1000, 2577, -1000, -1000, 137328, 150186, 109122, 1690, 1690, 3284,
	-1000, -1000, -1000, 2742, 2742, -1000, -78, 1009, -1000, 1718,
	-1000, 156826, 156826, 2350, 4046, -1000, -1000, -1000, -1000, 2826,
	-1000, -1000, -1000, 137328, 2824, 3051, 65355, 530, 527, 137328,
	982, -1000, -234, 91946, 956, 978, -1000, 73417, -1000, -1000,
	-1000, -1000, 480, 3876, -1000, 2922, 3874, -1000, 3998, 525,
	524, 137328, 2518, 522, 27977, 3670, 802, 90722, -1000, 3449,
	2027, -1000, 2626, 137328, 3667, -1000, 2899, 521, 980, 520,
	980, -1000, -241, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1285, 1001, -79, -1000, 930, 895, -1000, -1000,
	-1000, -1000, 109122, 109122, 54687, 54687, -1000, 11410, 11410, 11410,
	-1000, 295, -1000, -1000, 2436, 3756, -1000, -80, 150801, 19550,
	670, 59090, 84504, -242, -1000, -1000, 137328, 156826, -82, -1000,
	156826, 517, 516, 415, -1000, -1000, -1000, 733, 730, -1000,
	-1000, -1000, -1000, 4041, -1000, -1000, -1000, 150186, 150186, 150186,
	4040, -1000, 150186, 150186, 150186, -93, 150186, 150186, 1843, 1832,
	-1000, 119540, 137328, -1000, -1000, 1778, 2401, -1000, -1000, 137328,
	2642, -1000, -1000, -1000, 1002, 54687, 8466, 59090, 512, 54687,
	-1000, 510, 507, 3873, 3555, -1000, 2934, 3115, 2125, 65355,
	-1000, 3657, -1000, 19393, -1000, 1122, 2103, -1000, -1000, -1000,
	-1000, 156826, 59090, 3727, 65355, -1000, -1000, 504, 503, 156826,
	502, 822, 3187, -1000, -1000, -1000, -1000, -111, -111, -1000,
	-1000, 156826, 95, 156826, 497, 3823, -1000, -1000, -1000, -1000,
	2439, 109122, -1000, 156826, -1000, -1000, -1000, -1000, 809, -1000,
	-1000, -1000, 1249, -1000, -1000, -1000, -1000, -1000, 4035, 3185,
	96854, -1000, -243, 2126, 84504, -1000, 956, -1000, -1000, 2451,
	491, -1000, 976, 2939, 2939, -244, 65355, 65355, -250, 2506,
	2879, -1000, 293, 3872, 978, -1000, 3964, -1000, 1032, -1000,
	3869, 95, 3593, -1000, 95, -1000, 3997, 65355, -1000, 109122,
	65355, 2514, 2216, 2786, 90722, -1000, 2805, -1000, -1000, -251,
	137328, 2027, -1000, -1000, 90110, -1000, -1000, 3977, -1000, 2696,
	-1000, 137328, -1000, 137328, -1000, -1000, -252, -253, -1000, 2314,
	54687, 36350, -1000, -1000, 670, -259, -1000, -86, -1000, 3868,
	56574, 4032, 4031, 4030, -1000, -1000, -1000, -272, -272, -272,
	-1000, -93, -93, -93, -93, -93, 137328, 137328, -1000, 2133,
	-1000, 2635, -1000, -1000, 3377, -1000, 3098, 486, 19060, 8466,
	2751, 137328, 18747, 2262, 2262, -1000, 3866, 3105, -1000, -1000,
	2321, 483, -1000, -1000, -1000, -1000, 921, 137328, 976, 3095,
	109122, 8466, 1127, -261, 2348, 2348, 54687, 35721, 2381, -1000,
	54687, -1000, -1000, 3727, 68469, 150186, -1000, 150186, 2509, -1000,
	3153, 7827, -1000, 2506, 137328, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1122, -262, -264,
	-1000, -1000, 3716, -1000, 3592, 2948, 95, -1000, -1000, -1000,
	95, -1000, 4029, 997, 292, -275, 1124, -276, 109122, 2120,
	-1000, 802, -1000, 2808, 1032, 3527, -1000, -277, -1000, -1000,
	-1000, -282, -283, -1000, -1000, 290, 55945, 55945, 55945, -87,
	-89, -1000, 137328, 482, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 151, 144, -1000, -1000, 3337, 871, -1000, 869, 2057,
	289, 1142, 247, 6, -1000, -1000, -1000, 3058, -1000, 137328,
	-1000, -1000, -1000, 871, 480, -1000, 54687, 1122, -288, -1000,
	1098, -290, -1000, 1092, -291, -1000, 3180, -1000, -293, 2439,
	-1000, -272, 260, 1690, 986, 3799, 2441, 7827, -1000, 3992,
	90722, -1000, -1000, -1000, 2775, -298, -1000, -1000, 2125, 1122,
	2321, 2583, -1000, 2350, 982, -1000, -1000, -1000, -1000, 1122,
	477, 2125, 471, 1626, 802, -1000, -1000, 1458, 3670, 3494,
	1401, 980, -1000, -1000, -1000, 3373, -1000, 60348, 2484, 1994,
	153598, 3373, 3373, -1000, -1000, 150186, 150186, 137328, 976, 3782,
	-1000, 901, 900, 1618, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1032, -299, -1000, 2751, 156826, 976, -1000, 2348,
	2979, -1000, 2348, 3176, -1000, 2311, -1000, -1000, -1000, -1000,
	3157, -1000, 1861, 3948, -1000, -1000, 3840, 54687, -1000, -1000,
	-1000, -1000, -1000, -1000, 976, 137328, 2321, 2125, 976, 1967,
	1959, 4028, 956, 2506, 2125, 65355, 2321, 65355, 2298, -1000,
	137328, -1000, 2216, 1396, -1000, 1756, -1000, -1000, 1974, 3897,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -93, -93, -1000,
	-1000, 808, -1000, 3544, -1000, 1172, 2309, 2309, -1000, -1000,
	869, -1000, -1000, 466, -1000, 464, -1000, 150186, 2448, -1000,
	-1000, -1000, 156826, -1000, -1000, 976, 2321, 1032, -1000, 4027,
	-1000, 2506, -1000, 2321, -301, 976, -304, 2389, -1000, -1000,
	-111, 2120, -1000, 1733, 75268, 1936, -1000, -1000, 2429, 55316,
	54687, -1000, 3933, -1000, -1000, 2833, -1000, 3058, 54687, 54687,
	260, 72805, 318, 1032, 976, 1312, -1000, 2775, 976, 1122,
	1032, 2125, 1822, 802, 1626, 75268, -273, -1000, -1000, -1000,
	156826, -1000, -1000, -1000, -1000, -307, -314, -1000, -126, 118928,
	-321, -1000, -1000, -1000, 1312, 1032, -1000, 1044, -1000, -1000,
	1032, 2125, 1312, 2321, -1000, -1000, 2085, 150186, 2298, -273,
	-1000, 2321, 1238, -323, -1000, -1000, 1312, -1000, 1312, 2321,
	-1000, 976, -1000, 1822, -1000, -1000, -1000, 462, -1000, -1000,
	-1000, 976, 1032, -1000, 54687, 1032, 1312, -326, 1312, -1000,
	2321, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 4906, 4905, 28, 4904, 4903, 4902, 4901, 4900, 4899,
	4898, 4896, 4895, 4893, 4892, 4891, 164, 4890, 4889, 4888,
	4887, 4884, 4882, 4881, 4880, 4879, 4878, 4874, 4873, 4869,
	4868, 4865, 4864, 4862, 4861, 4860, 4856, 4853, 4852, 4851,
	4850, 4849, 4846, 4845, 4844, 4843, 4842, 4840, 4839, 4837,
	4835, 4834, 4833, 4832, 4831, 4830, 4829, 4828, 4827, 4826,
	4825, 4824, 4823, 4822, 4818, 4815, 4814, 4813, 4810, 4808,
	4804, 4803, 4800, 4799, 4797, 4796, 4794, 4790, 4789, 4788,
	4786, 4784, 4783, 4782, 73, 4781, 4780, 4778, 4777, 4773,
	4772, 4770, 4769, 4767, 4766, 4765, 4764, 4762, 4761, 4760,
	4758, 4757, 4756, 4755, 4754, 4752, 4751, 79, 4750, 314,
	4749, 4748, 4746, 4745, 4744, 4743, 4741, 4740, 4739, 4737,
	4735, 4734, 4733, 4729, 313, 4723, 29, 196, 4716, 4713,
	31, 4712, 4708, 312, 4707, 4706, 4705, 4704, 4703, 324,
	4700, 4695, 4694, 4685, 4679, 301, 4678, 4676, 4674, 4673,
	4670, 4669, 104, 153, 4668, 4667, 1668, 4666, 4665, 4664,
	4663, 4655, 4653, 4652, 294, 299, 4646, 4643, 4638, 298,
	198, 4637, 311, 4635, 4629, 4628, 4619, 4614, 4611, 4608,
	4607, 4606, 4605, 4603, 4602, 4601, 4599, 4598, 4595, 4590,
	4588, 4587, 4582, 4581, 4580, 4579, 4577, 4576, 4575, 4574,
	4572, 4571, 4570, 4568, 4567, 4565, 4564, 4563, 4562, 4561,
	4560, 4559, 4558, 4554, 4552, 289, 251, 143, 4548, 4542,
	4541, 4539, 4537, 309, 307, 4536, 4531, 4529, 4526, 4525,
	3817, 4524, 4522, 4521, 4513, 4509, 4508, 4506, 4505, 4504,
	139, 11, 62, 4503, 4502, 117, 105, 113, 98, 119,
	108, 4501, 4500, 135, 4498, 156, 138, 4496, 140, 123,
	35, 6, 261, 286, 3749, 280, 4491, 4489, 4488, 287,
	227, 4479, 282, 4474, 4473, 4471, 4466, 4463, 4462, 88,
	70, 241, 4461, 160, 4459, 4457, 162, 195, 208, 211,
	204, 203, 129, 71, 124, 96, 76, 59, 22, 170,
	255, 27, 249, 1, 10, 300, 4453, 297, 9, 167,
	18, 41, 4452, 4451, 4450, 4449, 4458, 125, 4448, 306,
	283, 200, 4447, 4446, 4445, 1305, 4444, 4441, 68, 304,
	212, 99, 121, 55, 157, 4440, 177, 194, 45, 4439,
	186, 103, 4438, 4435, 118, 106, 10770, 13433, 4434, 4432,
	147, 82, 172, 5144, 239, 178, 240, 131, 150, 191,
	187, 4431, 238, 4429, 190, 193, 207, 281, 4427, 114,
	4424, 3847, 91, 214, 183, 7270, 4422, 4421, 4420, 102,
	4419, 120, 4418, 4416, 81, 23, 4, 2, 165, 49,
	47, 7, 4415, 51, 149, 65, 37, 4414, 42, 4413,
	4412, 4411, 4410, 64, 4409, 56, 205, 4408, 4406, 318,
	4404, 126, 67, 48, 4403, 33, 260, 4402, 267, 152,
	4401, 4399, 217, 216, 4398, 94, 277, 4397, 4395, 4394,
	4393, 4392, 323, 159, 13, 155, 4391, 4390, 163, 4389,
	72, 284, 230, 4388, 90, 4387, 4385, 206, 69, 174,
	317, 256, 270, 145, 263, 218, 272, 4384, 4382, 4381,
	220, 4380, 4379, 257, 192, 4378, 4377, 265, 326, 107,
	63, 3, 201, 100, 275, 97, 229, 185, 4376, 234,
	4375, 4374, 322, 209, 254, 60, 12, 15, 110, 130,
	4373, 8, 278, 182, 244, 144, 4372, 8322, 2982, 2308,
	268, 4371, 169, 146, 93, 154, 184, 303, 109, 4369,
	4368, 5343, 4367, 4366, 4363, 4362, 221, 4361, 4360, 253,
	171, 181, 245, 4358, 122, 89, 66, 34, 168, 111,
	320, 142, 266, 197, 291, 4356, 4352, 4351, 225, 4350,
	78, 136, 237, 4349, 232, 302, 77, 4348, 151, 4347,
	176, 2975, 84, 180, 4340, 269, 4338, 4337, 4336, 4334,
	4333, 4330, 4329, 2801, 271, 4328, 4327, 4326, 50, 228,
	4325, 226, 199, 235, 74, 75, 224, 112, 2557, 161,
	2704, 233, 53, 5, 4324, 213, 4323, 4688, 85, 4321,
	0, 15134, 10656, 14123, 4319, 4318, 12771, 4317, 5281, 4316,
	4314, 4313, 252, 95, 4312, 4310, 4307, 137, 4305, 101,
	4303, 4301, 92, 4300, 36, 24, 25, 38, 39, 811,
	694, 4298, 4297, 52, 173, 20, 4295, 315, 273, 4291,
	4290, 4288, 4286, 116, 4285, 57, 4283, 54, 4282, 4278,
	58, 19, 40, 4277, 4276, 243, 188, 3763, 189, 179,
	4275, 141, 4273, 4271, 4268, 87, 166, 4267, 4265, 296,
	247, 250, 128, 4264, 292, 4263, 231, 4262, 83, 26,
	4261, 4260, 285, 134, 133, 61, 288, 158, 46, 4259,
	4257, 4255, 4253, 222, 4252, 4251, 4250, 4249, 4248, 132,
	175, 4247, 80, 4246, 4245, 4244, 44, 248, 219, 4242,
	17, 4240, 4239, 4237, 262, 258, 310, 210, 259, 4229,
	4228, 202, 4226, 4222, 4219, 295, 4213, 4210, 3816, 357,
	4208, 43, 4207, 4206, 4205, 16, 4204, 4202, 236, 3537,
	4201, 4199, 14, 4198, 223,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 14,
	14, 10, 10, 10, 10, 11, 11, 11, 11, 11,
	63, 63, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 20, 20,
	20, 20, 20, 20, 42, 44, 43, 37, 37, 38,
	38, 39, 40, 40, 45, 47, 46, 48, 49, 49,
	50, 50, 50, 13, 13, 13, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 23, 23, 51, 51, 24,
	24, 53, 53, 25, 25, 54, 54, 659, 659, 659,
	660, 660, 661, 661, 661, 28, 56, 58, 58, 472,
	472, 21, 22, 22, 22, 22, 662, 662, 662, 662,
	41, 29, 57, 34, 34, 34, 34, 34, 243, 243,
	243, 243, 27, 27, 52, 52, 289, 289, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 658, 658,
	291, 291, 290, 276, 276, 277, 277, 278, 278, 663,
	663, 292, 292, 292, 293, 293, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 552, 552, 552, 583,
	583, 583, 583, 585, 585, 710, 710, 711, 711, 711,
	711, 711, 155, 155, 446, 446, 446, 72, 72, 72,
	72, 72, 648, 648, 245, 245, 245, 247, 247, 246,
	246, 246, 246, 246, 246, 246, 246, 96, 96, 97,
	97, 284, 284, 283, 283, 283, 283, 283, 283, 283,
	669, 669, 668, 706, 706, 667, 667, 670, 670, 670,
	244, 244, 244, 93, 93, 114, 114, 151, 151, 151,
	151, 151, 151, 151, 151, 152, 152, 153, 153, 679,
	679, 679, 248, 248, 248, 250, 250, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 255, 19, 19, 134, 134, 134, 134, 134, 134,
	134, 129, 129, 587, 587, 588, 588, 239, 239, 240,
	240, 240, 240, 241, 241, 242, 242, 242, 87, 87,
	252, 252, 254, 254, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 75, 75, 75,
	75, 75, 76, 76, 76, 76, 76, 76, 77, 77,
	77, 77, 77, 77, 78, 78, 85, 85, 85, 85,
	85, 85, 85, 85, 217, 217, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	92, 92, 92, 92, 92, 103, 680, 680, 681, 681,
	699, 685, 685, 686, 686, 689, 689, 689, 690, 690,
	690, 690, 690, 698, 698, 698, 698, 698, 692, 691,
	693, 693, 694, 694, 696, 696, 696, 696, 696, 697,
	697, 697, 697, 697, 697, 697, 697, 697, 697, 697,
	697, 697, 697, 697, 697, 697, 684, 700, 701, 701,
	702, 702, 703, 703, 703, 122, 122, 705, 705, 704,
	704, 687, 687, 688, 688, 67, 695, 695, 713, 713,
	68, 69, 70, 71, 682, 682, 712, 712, 712, 712,
	712, 712, 712, 712, 712, 712, 712, 712, 712, 712,
	712, 712, 712, 714, 714, 715, 715, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 104, 104, 407, 407, 370, 370,
	105, 105, 105, 106, 106, 107, 107, 89, 89, 89,
	645, 645, 646, 652, 717, 717, 543, 543, 542, 542,
	109, 109, 445, 445, 110, 110, 110, 110, 110, 110,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 120, 120, 120, 120, 120, 121,
	121, 121, 118, 118, 118, 115, 115, 115, 113, 113,
	113, 119, 119, 119, 651, 356, 356, 117, 117, 117,
	116, 116, 116, 423, 423, 123, 123, 123, 123, 371,
	124, 124, 124, 124, 124, 124, 124, 124, 127, 127,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 545, 545, 5, 5, 282, 282, 281,
	281, 281, 281, 6, 6, 6, 287, 287, 286, 285,
	125, 125, 125, 509, 509, 130, 130, 130, 461, 461,
	131, 131, 131, 131, 131, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 655, 655, 416, 416, 319, 319, 319,
	319, 143, 143, 143, 143, 144, 144, 144, 144, 145,
	145, 225, 225, 161, 161, 161, 161, 160, 160, 160,
	160, 160, 160, 160, 160, 79, 79, 79, 80, 80,
	81, 81, 82, 82, 83, 83, 84, 84, 84, 84,
	84, 164, 164, 33, 33, 33, 33, 165, 165, 707,
	707, 167, 163, 163, 163, 163, 163, 163, 163, 162,
	162, 166, 166, 166, 166, 168, 170, 170, 170, 170,
	170, 169, 169, 169, 169, 169, 171, 171, 577, 577,
	431, 431, 575, 575, 599, 599, 576, 576, 377, 377,
	377, 377, 377, 378, 378, 378, 586, 586, 586, 586,
	586, 586, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 226, 226,
	226, 227, 227, 232, 232, 233, 233, 233, 234, 234,
	234, 231, 231, 231, 228, 228, 229, 229, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 237, 237,
	235, 235, 236, 236, 719, 719, 718, 718, 238, 238,
	238, 238, 238, 198, 198, 198, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 432,
	432, 201, 201, 201, 185, 185, 173, 173, 173, 173,
	173, 173, 173, 173, 251, 251, 251, 251, 178, 178,
	178, 178, 178, 178, 178, 178, 179, 179, 179, 174,
	174, 187, 187, 187, 187, 187, 180, 180, 181, 181,
	181, 182, 182, 182, 182, 209, 209, 184, 184, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 175, 175,
	175, 175, 189, 189, 189, 189, 468, 468, 468, 215,
	215, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 212, 212, 212,
	212, 212, 212, 671, 671, 672, 672, 672, 205, 205,
	205, 205, 205, 205, 523, 523, 199, 199, 199, 199,
	204, 204, 204, 204, 207, 207, 207, 207, 451, 451,
	196, 196, 196, 197, 197, 197, 202, 202, 214, 203,
	408, 408, 200, 200, 206, 206, 206, 206, 208, 208,
	208, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 177, 177, 177, 177, 210, 210, 195, 195, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	720, 720, 191, 191, 191, 190, 190, 190, 190, 193,
	193, 194, 194, 194, 194, 194, 194, 194, 192, 183,
	213, 653, 653, 649, 649, 649, 649, 649, 649, 649,
	649, 649, 649, 647, 647, 647, 647, 647, 647, 647,
	647, 647, 650, 650, 650, 650, 650, 654, 654, 135,
	135, 135, 135, 135, 135, 135, 146, 146, 146, 146,
	146, 146, 146, 149, 149, 136, 136, 136, 136, 136,
	136, 136, 139, 139, 137, 137, 137, 137, 138, 138,
	98, 98, 98, 98, 98, 18, 18, 18, 99, 99,
	310, 310, 260, 260, 260, 395, 395, 261, 261, 385,
	385, 385, 385, 256, 256, 257, 257, 258, 259, 259,
	100, 100, 721, 721, 721, 664, 664, 664, 665, 665,
	665, 665, 665, 665, 379, 379, 380, 380, 489, 489,
	489, 489, 489, 383, 383, 383, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 393, 394, 394, 386, 386,
	392, 391, 391, 390, 390, 389, 389, 387, 388, 388,
	388, 397, 397, 396, 399, 399, 398, 488, 608, 608,
	610, 610, 610, 610, 610, 610, 610, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 469, 469, 722, 722, 723, 724,
	606, 606, 606, 607, 602, 602, 603, 603, 603, 603,
	603, 381, 381, 382, 382, 382, 382, 604, 605, 414,
	414, 527, 609, 609, 611, 611, 613, 725, 725, 725,
	725, 725, 725, 726, 726, 726, 487, 487, 486, 486,
	485, 485, 405, 405, 614, 614, 614, 614, 615, 615,
	615, 615, 615, 618, 617, 616, 616, 616, 616, 616,
	102, 102, 102, 448, 448, 447, 447, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 222, 222, 322, 322, 322,
	95, 95, 95, 15, 15, 15, 15, 15, 15, 15,
	337, 337, 16, 16, 16, 16, 666, 666, 666, 101,
	101, 101, 101, 101, 101, 403, 403, 403, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 657, 657, 656, 656, 323, 323,
	728, 728, 108, 108, 108, 108, 108, 108, 108, 108,
	546, 546, 547, 547, 94, 94, 94, 94, 94, 470,
	470, 467, 467, 466, 466, 413, 413, 525, 525, 525,
	526, 327, 327, 328, 328, 279, 279, 279, 471, 471,
	471, 36, 35, 26, 26, 30, 30, 31, 31, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 32, 32,
	60, 60, 60, 60, 61, 61, 61, 61, 64, 64,
	65, 65, 59, 59, 59, 59, 62, 62, 55, 55,
	66, 66, 66, 66, 66, 673, 675, 675, 674, 674,
	678, 678, 678, 678, 678, 678, 676, 676, 358, 358,
	677, 677, 708, 708, 709, 709, 142, 142, 147, 147,
	147, 147, 147, 148, 148, 148, 148, 150, 150, 150,
	150, 159, 159, 218, 218, 218, 218, 218, 218, 218,
	73, 73, 86, 86, 157, 730, 730, 730, 158, 158,
	158, 219, 219, 219, 219, 220, 220, 221, 221, 729,
	729, 320, 320, 482, 482, 483, 483, 731, 731, 484,
	484, 484, 484, 484, 313, 312, 314, 314, 315, 315,
	91, 91, 91, 301, 301, 300, 303, 303, 302, 304,
	304, 305, 305, 298, 298, 589, 589, 307, 307, 307,
	308, 308, 294, 294, 295, 295, 296, 296, 297, 297,
	311, 311, 584, 584, 732, 732, 133, 133, 133, 224,
	224, 369, 369, 369, 479, 479, 479, 406, 406, 334,
	334, 481, 481, 481, 481, 481, 444, 444, 444, 223,
	223, 421, 421, 434, 434, 435, 435, 539, 539, 436,
	140, 140, 141, 141, 156, 156, 264, 264, 262, 262,
	262, 262, 262, 262, 262, 262, 269, 269, 270, 270,
	271, 271, 272, 273, 273, 273, 273, 424, 424, 274,
	274, 274, 263, 263, 263, 265, 265, 265, 265, 265,
	265, 265, 268, 268, 268, 268, 275, 275, 275, 267,
	267, 625, 625, 625, 627, 627, 629, 629, 628, 628,
	624, 624, 626, 626, 727, 727, 450, 450, 450, 402,
	404, 400, 400, 401, 401, 411, 411, 409, 410, 410,
	412, 412, 524, 524, 524, 280, 280, 280, 441, 441,
	441, 441, 442, 442, 475, 475, 473, 473, 473, 473,
	474, 474, 476, 476, 476, 477, 477, 478, 478, 438,
	438, 439, 439, 440, 440, 440, 440, 505, 505, 266,
	266, 266, 418, 418, 418, 419, 419, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 496, 496,
	494, 494, 494, 494, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 529, 530, 530, 420, 420, 531, 480,
	480, 643, 643, 643, 644, 644, 522, 522, 532, 532,
	532, 532, 532, 532, 520, 520, 521, 521, 540, 541,
	541, 454, 454, 454, 454, 452, 452, 455, 455, 455,
	455, 455, 453, 453, 533, 533, 533, 533, 443, 443,
	534, 534, 534, 534, 535, 536, 536, 537, 537, 490,
	491, 491, 548, 548, 548, 548, 550, 417, 417, 417,
	417, 417, 601, 600, 600, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 565, 565, 565, 565,
	565, 565, 565, 551, 551, 551, 551, 551, 555, 555,
	555, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 556, 556, 561, 561, 562, 562, 562, 557,
	558, 563, 563, 563, 563, 733, 733, 567, 567, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 553, 553,
	553, 560, 560, 560, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 462, 462, 464,
	464, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 499, 499, 499, 499, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 619, 619, 619, 619, 619, 619, 619, 619, 501,
	501, 622, 622, 623, 623, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 630, 630, 631, 631,
	633, 633, 634, 634, 635, 636, 636, 636, 637, 638,
	638, 632, 632, 639, 639, 639, 639, 640, 640, 641,
	641, 641, 641, 641, 642, 642, 642, 642, 642, 511,
	511, 512, 512, 518, 518, 518, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 376, 376, 375, 324, 324, 324, 324, 324, 324,
	429, 429, 427, 427, 427, 430, 430, 428, 428, 426,
	426, 425, 425, 508, 508, 506, 506, 510, 510, 456,
	456, 566, 566, 566, 566, 566, 566, 566, 566, 457,
	457, 457, 465, 458, 458, 459, 459, 459, 459, 459,
	502, 503, 460, 460, 460, 504, 504, 513, 517, 517,
	516, 515, 515, 514, 514, 492, 492, 493, 493, 437,
	437, 734, 734, 433, 433, 538, 538, 538, 538, 595,
	595, 373, 373, 422, 422, 372, 372, 364, 364, 365,
	365, 365, 365, 415, 415, 519, 519, 568, 568, 569,
	569, 570, 570, 571, 571, 572, 573, 574, 507, 507,
	345, 344, 331, 332, 343, 342, 341, 330, 333, 338,
	339, 340, 335, 336, 352, 351, 350, 299, 306, 357,
	359, 359, 362, 362, 363, 361, 360, 360, 347, 348,
	349, 544, 329, 366, 366, 367, 367, 367, 368, 368,
	368, 368, 325, 325, 326, 326, 353, 353, 354, 355,
	355, 346, 346, 346, 316, 316, 316, 317, 317, 318,
	318, 582, 582, 579, 579, 579, 580, 580, 580, 683,
	581, 581, 581, 581, 578, 578, 578, 578, 578, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 591, 591, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 593, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 598, 598,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 3,
	4, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 9, 7, 9, 5, 6, 8,
	7, 7, 9, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 6, 2,
	1, 4, 8, 7, 10, 9, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 4, 4, 6, 5, 6,
	5, 6, 4, 8, 3, 8, 4, 2, 3, 10,
	3, 6, 4, 3, 1, 3, 4, 4, 2, 1,
	1, 3, 1, 3, 2, 4, 3, 2, 3, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 6, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 1, 3, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 3, 3, 3, 12, 3, 5,
	4, 1, 3, 3, 3, 3, 2, 4, 4, 4,
	1, 1, 2, 1, 4, 1, 0, 3, 3, 0,
	4, 6, 0, 6, 4, 4, 4, 5, 7, 6,
	8, 7, 9, 8, 2, 1, 3, 1, 3, 3,
	3, 0, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	1, 1, 3, 3, 6, 4, 9, 7, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 5,
	2, 0, 1, 2, 3, 1, 1, 2, 2, 2,
	2, 1, 2, 3, 3, 4, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 4, 3, 6, 6, 6, 6,
	6, 8, 4, 4, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	6, 3, 8, 5, 3, 12, 2, 0, 1, 0,
	1, 1, 0, 1, 3, 1, 3, 3, 3, 3,
	2, 2, 1, 1, 1, 1, 2, 1, 1, 1,
	1, 0, 1, 2, 2, 2, 1, 1, 1, 4,
	5, 1, 1, 1, 1, 3, 3, 2, 2, 1,
	2, 2, 2, 2, 1, 1, 1, 2, 1, 1,
	3, 0, 1, 4, 0, 4, 6, 1, 3, 2,
	1, 3, 2, 1, 3, 5, 1, 2, 1, 0,
	6, 6, 6, 8, 1, 0, 4, 3, 3, 4,
	3, 4, 4, 4, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 1, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 10, 5,
	1, 3, 3, 1, 1, 0, 2, 0, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 4, 6, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 1, 1, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 4, 3, 1, 2, 3,
	2, 2, 2, 4, 6, 3, 1, 2, 2, 7,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 7, 4, 7, 8, 8,
	9, 11, 11, 11, 6, 2, 6, 9, 4, 7,
	7, 10, 7, 10, 10, 10, 13, 10, 13, 5,
	8, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 4, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 2, 1, 2, 2,
	2, 9, 2, 1, 0, 1, 1, 0, 1, 2,
	0, 2, 2, 0, 2, 2, 2, 2, 1, 2,
	3, 3, 4, 4, 4, 4, 3, 3, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	3, 6, 8, 3, 3, 3, 4, 8, 6, 4,
	5, 5, 5, 3, 0, 1, 1, 1, 4, 4,
	3, 4, 4, 3, 4, 4, 1, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 5, 7,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 6, 3, 2, 5,
	4, 2, 0, 1, 1, 1, 1, 2, 3, 2,
	2, 3, 2, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 7, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 12, 15,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 1, 1, 1, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 3, 6, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	11, 12, 10, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 6, 1,
	3, 1, 2, 0, 1, 2, 3, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 3, 0,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 2, 3, 1, 4, 2, 3, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 8, 11, 5, 4, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 2, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 1, 2, 3, 0, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 2, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	15, 17, 3, 1, 0, 4, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 7, 10, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 661, -3, -219, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -218, -226, -227, -228, -229, -238, -220, -221,
	-4, -72, -74, -88, -109, -111, -124, -134, -133, -135,
	-143, -151, -146, -129, -79, -156, -160, -172, -222, -223,
	-224, 33, 32, 106, 85, 165, 137, 147, 218, 417,
	469, 481, 434, 152, 457, 439, -166, -167, 503, -73,
	-86, -158, -157, 78, 138, 182, 321, 449, 53, 157,
	-7, -15, -33, -19, 30, 49, -75, -76, -77, -78,
	67, -95, -90, -104, -96, -89, -92, -93, -712, 109,
	-626, -112, -116, -150, -114, -716, 173, 239, -136, -137,
	-138, 399, -144, -145, 460, -147, -148, -149, 463, 174,
	-81, -80, 167, -262, -264, -163, -162, -164, -225, -173,
	-174, -175, -176, -177, -179, -180, -182, -209, -183, -184,
	-185, -186, -187, -188, -192, -212, -189, -190, -191, -194,
	-193, -195, -200, -196, -197, -198, -199, -201, -202, -204,
	-205, -206, -207, -208, -210, -211, 509, -203, -213, -181,
	-214, 577, 526, 87, 473, 21, -8, -9, -10, -11,
	-12, -13, -14, -18, -17, -66, -5, -6, -20, -97,
	-91, -94, -98, -99, -100, -108, -101, -102, -103, -625,
	-113, -115, -118, -120, -121, -117, -119, -122, 458, 632,
	-265, -263, 658, 637, 593, -178, -23, -28, -24, -25,
	-27, -29, -26, -30, -31, -32, -51, -56, -53, -54,
	-52, -55, -57, -58, -59, -60, -61, -62, -63, -64,
	-65, -35, -41, -42, -36, -37, -38, -39, -40, -43,
	-44, -45, -46, -47, -48, -49, -50, -21, -22, -34,
	-67, -68, -70, -69, -71, 619, 628, -268, -266, -267,
	-275, 495, 601, 549, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, -371, 2, -347, -353, -354, -355, -346, -316,
	-593, -598, 4, -590, -596, 181, 249, 359, 21, 22,
	24, 23, 25, 26, 27, 28, 30, 31, 41, 43,
	44, 45, 47, 48, 49, 50, 51, 52, 53, 57,
	59, 63, 64, 65, 66, 67, 68, 69, 73, 78,
	79, 84, 85, 86, 87, 88, 89, 90, 91, 97,
	94, 95, 96, 98, 100, 102, 103, 104, 105, 106,
	107, 108, 110, 111, 112, 114, 115, 116, 124, 125,
	126, 127, 128, 130, 137, 131, 138, 141, 135, 140,
	136, 142, 143, 145, 146, 147, 150, 151, 152, 154,
	155, 156, 158, 159, 160, 162, 163, 165, 166, 167,
	170, 168, 171, 169, 172, 173, 174, 175, 176, 179,
	187, 188, 189, 194, 196, 197, 198, 200, 201, 204,
	205, 206, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 219, 223, 225, 226, 227, 228, 229, 230, 231,
	237, 238, 239, 241, 242, 243, 244, 245, 250, 251,
	252, 256, 258, 264, 265, 270, 266, 271, 272, 274,
	278, 279, 280, 281, 282, 283, 284, 286, 288, 287,
	292, 290, 294, 295, 298, 299, 300, 301, 302, 303,
	307, 308, 304, 309, 310, 312, 313, 316, 314, 317,
	318, 315, 319, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 332, 333, 320, 321, 336, 334, 338,
	339, 340, 341, 342, 357, 352, 353, 354, 346, 347,
	343, 348, 344, 345, 349, 350, 356, 351, 361, 362,
	363, 364, 367, 235, 257, 369, 370, 373, 375, 392,
	378, 379, 380, 383, 384, 387, 390, 391, 393, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 404, 405,
	407, 408, 409, 411, 412, 413, 415, 417, 418, 420,
	421, 422, 424, 425, 426, 427, 428, 429, 430, 431,
	433, 434, 436, 435, 437, 439, 441, 442, 443, 449,
	450, 457, 451, 453, 454, 455, 456, 458, 459, 460,
	461, 462, 463, 467, 465, 466, 468, 469, 471, 472,
	473, 474, 475, 477, 479, 480, 484, 485, 488, 486,
	506, 507, 529, 481, 482, 483, 487, 489, 490, 491,
	492, 494, 493, 498, 496, 497, 499, 500, 501, 503,
	505, 508, 509, 511, 512, 513, 514, 515, 516, 517,
	520, 522, 523, 524, 525, 526, 527, 548, 528, 530,
	534, 535, 536, 537, 531, 532, 547, 539, 540, 541,
	542, 544, 545, 550, 551, 552, 553, 554, 555, 557,
	558, 560, 568, 581, 569, 570, 571, 572, 574, 577,
	578, 579, 580, 566, 582, 583, 586, 587, 591, 588,
	592, 589, 590, 593, 595, 598, 599, 600, 606, 605,
	607, 608, 610, 611, 609, 613, 614, 615, 620, 621,
	623, 624, 625, 37, 54, 55, 58, 60, 62, 74,
	75, 76, 80, 132, 133, 164, 177, 178, 190, 207,
	208, 220, 222, 232, 233, 234, 255, 259, 260, 262,
	268, 291, 366, 368, 385, 389, 406, 410, 414, 416,
	432, 476, 504, 518, 533, 538, 561, 562, 563, 564,
	573, 575, 601, 602, 603, 612, 622, -371, 2, -347,
	376, -340, 2, -316, -316, 417, 29, 2, 29, 405,
	497, 552, 554, 2, -655, -416, 545, 2, 29, -319,
	-316, 109, 218, 495, -340, 2, -655, 218, -416, 26,
	545, 2, -316, 2, 390, 176, 204, 23, 28, 71,
	82, 104, 150, 175, 199, -715, 392, 425, 479, 499,
	547, 558, 574, 2, 605, 313, 496, 549, 249, 127,
	579, 487, -666, 484, 485, 390, 423, 471, 221, 594,
	-320, 2, 481, -316, 313, 2, 661, 100, 79, 476,
	500, -169, 2, 303, 569, -170, -171, -168, 561, -577,
	487, 471, 336, -316, 661, 661, 661, 29, -329, 2,
	-316, -329, 2, -230, 2, -329, -718, -237, -236, -235,
	22, 450, 189, 284, 202, 240, 341, 420, 200, 51,
	-230, 2, 549, 249, 487, 127, 545, -729, 2, 569,
	-729, 2, 661, 661, 2, 549, 396, 605, 496, 127,
	429, 249, 579, 49, 150, 28, 204, 73, 555, 636,
	487, -666, 633, 634, 313, 134, -648, 2, -647, 4,
	-596, -590, -365, -364, 549, 555, 127, -355, -346, 650,
	-354, 661, 661, 661, 661, 2, 271, 272, 427, 426,
	500, 501, 29, 661, 661, 661, 661, 661, 484, 176,
	2, 175, -680, 23, 28, 71, 99, 104, 134, 199,
	392, 425, 499, 547, 551, 558, 574, -665, 528, 73,
	487, -664, -666, 381, 313, 579, 150, -466, 127, 303,
	216, 587, 554, 552, 585, 141, 258, 590, 589, 661,
	661, 661, -127, 2, 658, 33, 32, -126, -130, 152,
	503, -255, 549, 263, 2, -316, 661, 661, 661, 2,
	271, 272, 484, 485, 29, 661, 661, 202, -647, 545,
	2, 661, 661, 661, 2, 29, 271, 272, 484, 485,
	263, 2, 73, 490, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 2, -216, 500, 528, 228, 50, 49, 79, 29,
	424, 84, 397, 128, 134, 159, 580, 219, 249, 250,
	279, 99, 100, -468, 47, 272, 73, 271, 485, -671,
	484, -523, 550, 489, 497, 544, 91, 284, 481, 569,
	571, 109, 595, 472, 625, 429, 430, 542, 443, 539,
	304, 168, 203, 4, 127, 336, 471, 502, 288, 287,
	581, 561, 303, 480, 400, 89, 661, -727, 2, 549,
	569, 2, -729, 2, -729, 2, -730, 569, 622, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	-263, -265, -264, 661, 661, 661, 661, 661, 661, 661,
	-216, 500, 2, 79, 29, 29, -409, -411, 584, 261,
	161, 382, -262, -264, 2, -625, 581, 500, -575, 2,
	-497, -599, -499, 648, 649, 641, 546, 72, -375, 358,
	626, -511, 134, 585, 376, -598, -500, -513, 164, 392,
	476, -430, 8, 9, 5, 6, 7, -325, -501, -507,
	576, 180, 365, -368, 662, 10, 658, -622, -264, -512,
	38, 222, 70, -579, -367, -326, -551, 262, -366, -346,
	-619, -620, 4, -590, -591, -580, -554, -562, -558, -559,
	-565, -316, -593, 82, 118, 119, 117, 122, 121, 306,
	305, 123, 120, 502, 594, 71, 37, 232, 233, 268,
	366, 234, 80, -621, 151, -592, 259, 260, 518, 55,
	432, 190, 133, 132, 368, 60, 58, 602, -563, 129,
	561, 562, 563, 564, 207, 208, 62, 177, 178, 389,
	414, 538, 573, 575, 220, 291, 46, 113, 203, 254,
	236, 267, 269, 273, 293, 296, 337, 355, 360, 386,
	388, 470, 510, -733, 603, 533, 74, 75, 195, -627,
	435, -628, -340, -627, 661, 661, 663, 661, -400, -402,
	-404, 2, 29, 148, 658, 2, -528, 2, -529, -533,
	-264, 285, -532, 658, -530, 656, -347, 377, -623, 477,
	-619, -620, -325, -346, -367, 4, -590, -592, 660, -405,
	658, 127, 487, 549, 83, 249, 99, 175, 204, -461,
	658, -316, 29, 376, 565, 663, -655, -416, -401, 422,
	-509, 658, 376, 379, 202, 379, -655, 64, 98, -705,
	232, 2, -704, -353, 317, 2, 2, 2, 2, 2,
	232, -316, 549, 126, 283, 2, 2, 2, 2, 2,
	2, 2, -423, 232, 2, -347, 605, -423, 232, 2,
	-423, 232, 2, -467, 2, 93, -330, 232, 2, -316,
	-356, 232, 2, -351, -353, -362, 232, 2, -359, -316,
	-585, 232, 2, -583, 4, -590, 123, 502, -497, 2,
	-156, 2, 64, -316, 605, 2, 506, 2, 658, -169,
	2, 76, 569, 46, 500, -170, 2, -483, 2, -484,
	-312, -313, -314, -540, -315, 270, 421, 431, 629, 139,
	358, 625, -707, 202, 640, 565, -575, -575, -575, -431,
	660, -232, 57, -329, -719, -718, -719, -573, 29, -568,
	8, -569, 648, 649, -573, -573, -719, -719, 2, 2,
	2, 2, 2, -482, -483, 2, -533, 232, -347, 2,
	-344, -578, 4, -590, -596, -591, -597, -593, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 61, 70, 71,
	77, 81, 83, 93, 99, 109, 117, 118, 120, 119,
	121, 122, 123, 134, 139, 144, 148, 149, 153, 157,
	161, 180, 182, 195, 199, 202, 218, 221, 224, 240,
	253, 261, 263, 285, 289, 297, 305, 306, 358, 365,
	371, 376, 377, 381, 382, 403, 419, 438, 464, 495,
	502, 521, 543, 549, 559, 565, 567, 576, 584, 585,
	594, 596, 604, 616, 617, 618, 619, -598, 82, 2,
	-533, 232, 2, -350, 232, -533, -353, 2, -330, 2,
	-497, -659, 557, 171, 451, 2, -372, 232, -347, -349,
	-353, -351, 2, 484, -587, 2, -582, 10, -581, 5,
	4, -590, -596, -591, 2, 2, -704, -497, 2, -500,
	2, -511, 29, -359, 2, -583, 232, 2, 29, 29,
	605, 422, 263, 565, 663, -422, -364, -365, -574, 4,
	8, -415, -316, 660, -497, 2, -156, -139, 2, 195,
	-497, 232, 2, -156, 232, 2, -497, 232, 2, -156,
	232, 2, -316, 2, -667, 2, -706, -587, 232, 98,
	232, -316, 2, 204, -714, 479, 578, 317, 2, 2,
	574, 2, 104, 549, 126, 2, 2, 2, 2, 2,
	2, 2, 549, -335, 2, -316, 195, -542, 263, -359,
	232, -360, 2, 496, -728, 435, -583, 232, 2, 455,
	605, -351, 232, 2, -351, 249, 265, -330, 232, 2,
	554, 552, 554, 552, 202, 2, 263, 2, 263, 2,
	-534, 2, -535, -529, -536, 656, 377, -545, 2, -544,
	-581, 601, -127, 658, -127, 658, 500, 658, -587, -347,
	-347, -497, 2, -156, -139, 2, -497, 2, -156, 2,
	-316, 2, -153, -587, -152, 658, 202, 595, -316, 2,
	-497, 2, -156, -139, 2, -497, 2, -156, 2, -255,
	195, 2, 127, 549, -216, 2, 195, 596, 2, 8,
	2, 240, -251, -587, 489, 187, 430, 2, 506, 2,
	507, 79, -468, 625, 79, 202, 2, 202, 2, -451,
	2, 619, 422, 202, 2, 2, -653, 2, 376, 202,
	2, 202, 2, 202, 2, 202, 2, 202, 2, -215,
	501, 570, 548, 426, 272, 2, -156, 616, -139, 272,
	271, -497, 616, 2, -672, 195, 485, -497, 2, 568,
	281, 169, 202, -451, 2, 202, 2, 202, 2, 5,
	2, 43, 427, 529, 2, 270, 421, 529, 2, 527,
	2, -347, 549, 605, 496, 127, 204, 29, 2, 484,
	2, 2, 94, 95, 202, 2, 202, 2, 217, 202,
	2, 443, 202, 549, -432, 660, -432, 625, 2, -443,
	-533, -482, 565, -409, -411, -216, 506, 2, -269, -441,
	-271, 195, -473, -474, -272, 297, 182, 371, -273, -450,
	29, 148, -450, -450, 64, 659, 659, -707, 581, 11,
	12, 81, 43, 648, 649, 650, 651, 193, 652, 653,
	646, 647, 645, 638, 639, 643, 276, 277, 101, 642,
	640, 92, 311, 478, 183, 184, 185, 186, 452, 247,
	35, 248, 14, 15, 16, -375, 34, 381, 296, 626,
	236, 510, 641, 17, 18, 19, 267, 269, 360, 54,
	240, -324, 392, -374, 546, 72, -497, -497, -497, -497,
	-497, -497, -497, -497, 388, 658, -437, -492, 656, -264,
	658, 658, 658, 658, -574, -264, -497, -511, 659, -428,
	658, -264, -511, -506, 658, 476, 656, 658, -514, -497,
	5, 5, 5, 658, 660, -630, 620, 195, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 658, 658, 416, -556, 658, -555, 658, -555,
	-555, 606, -553, 658, 628, 621, 658, -553, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 606, 555, 663, -627, -405, 658, -433, -538, -497,
	650, -433, -433, 376, -425, -497, 113, -454, 273, 337,
	203, 293, 470, 254, -494, 662, -494, -522, 628, -264,
	-530, -346, -264, -532, 658, -528, -522, -128, -574, -109,
	-124, -133, -156, -172, -223, -224, 650, -347, 658, 202,
	658, 660, -578, 202, -415, -330, -359, -347, -366, -367,
	-372, -341, -316, 2, 2, 147, -425, -649, 579, 487,
	29, 4, -596, -590, -365, 496, -364, 549, 127, 176,
	204, -585, -319, 565, 39, -508, -548, -549, -601, 662,
	-600, -551, -561, -557, -560, 406, 410, -580, 58, 602,
	-563, 262, 4, -590, -592, 259, 260, 518, 55, 432,
	190, 133, 132, 368, 60, 561, 562, 563, 564, 207,
	208, 62, 603, 533, 74, 75, -649, 579, 487, 29,
	496, 195, -585, 195, 202, -585, 2, -587, 2, -292,
	663, 69, 461, 164, -687, 658, 2, 164, 2, 2,
	2, -316, -292, 663, 164, -423, 232, -292, 164, -292,
	164, -373, 232, -372, -292, 164, -292, 663, 164, -292,
	663, 164, 660, 663, 164, -585, 2, -467, -577, -425,
	39, -483, 2, 134, 4, 5, -731, 663, 295, -378,
	310, 357, 227, 377, 623, 369, 139, -586, 5, 4,
	-507, -519, 134, 303, 262, -568, -570, 9, -571, 648,
	649, -576, -575, 116, 660, -578, -233, 257, 41, -329,
	-329, -719, -719, 8, 8, -719, -719, -329, -329, -289,
	453, 503, 391, -288, 25, 30, 152, 251, 342, 599,
	170, -390, 252, 458, -387, 396, 164, 522, 588, -659,
	-662, 483, 557, 171, 451, 96, 369, 503, 391, 453,
	164, -447, -449, 39, 125, 342, 390, 65, 243, 315,
	316, 526, 459, 612, 164, 503, 391, 453, 391, -16,
	-305, 25, 152, -307, -300, 503, 30, -662, 105, 453,
	637, 632, 458, 402, 541, 419, -662, -659, 290, -661,
	615, 356, -291, 522, 588, -659, -472, -662, 483, 453,
	-290, 358, 613, -392, -387, 396, 164, 662, 25, 152,
	453, 503, 391, -710, -711, 30, -574, 2, -287, 240,
	-286, 25, -695, 453, 503, 391, -682, -697, 342, 66,
	466, 532, 238, 525, 614, 176, 494, 292, 358, 107,
	477, 540, 393, -282, -281, 25, 152, 503, 591, -165,
	-145, -164, 458, 503, -165, 2, 453, 391, -656, -337,
	-624, 240, 619, 164, -337, -337, -533, 232, -676, 195,
	2, -669, -152, 286, 5, 10, -587, -152, -422, 663,
	663, -578, 650, 485, 484, 164, 164, 164, 164, 272,
	195, 358, -706, 2, 358, 619, -699, -353, -715, 2,
	2, 2, 2, 2, 2, 2, -347, 232, -407, 376,
	-645, -646, -717, 549, -242, 619, -587, 358, 46, -350,
	232, 2, -353, 605, -656, 358, -664, -352, 232, -347,
	39, 658, 358, 2, -467, 2, 249, -624, 358, -534,
	-369, -347, -529, -369, 503, -340, 39, -494, -347, 659,
	663, -545, -545, -587, -242, 202, 658, -255, 619, 619,
	272, -541, 663, -540, 240, -588, -587, -153, -587, 456,
	202, 272, -587, -645, -330, 2, -347, 2, 549, 274,
	-152, 202, 240, -242, -587, -587, -587, -577, 29, 507,
	2, -215, 501, 570, 95, 507, 2, -347, 549, 127,
	249, 85, -676, 195, 2, -316, -654, 195, -650, 471,
	487, 579, -649, -347, 127, -347, 127, -347, 127, -347,
	-347, 2, 2, 2, 2, 2, 90, 2, -156, -497,
	2, 90, 2, 49, 523, -672, 195, 2, 568, 2,
	568, 2, -316, -316, -316, 371, 528, 295, 619, -347,
	-347, -347, -348, -353, -353, 489, 550, 580, 485, -497,
	2, -720, 2, 202, 195, 2, 549, 249, 549, 249,
	127, 202, 79, 127, 29, 202, 549, 482, 660, 4,
	-292, 663, -320, -269, -441, -577, -442, -441, -270, -269,
	-272, 195, 431, 589, 342, 508, 278, -474, -473, 29,
	-497, -478, 189, 341, -497, -476, -499, 648, 649, -569,
	-571, -424, 369, -263, -263, -263, -412, -524, -497, 419,
	249, -576, -707, -550, -548, -548, -345, -578, 561, -497,
	-497, -497, -497, -497, -497, -497, -497, -497, -497, -497,
	-497, -497, -497, -497, -497, -497, -497, -497, -497, -497,
	-497, -497, -497, -497, -497, -497, -497, -497, -497, -497,
	-497, -497, -497, -497, -497, 296, 236, 510, 54, 240,
	-497, 565, -497, -497, -497, -497, 334, 358, 365, 576,
	180, 586, 148, 369, -734, 543, 42, -504, -264, -429,
	658, -518, 36, 521, 29, -511, 658, 2, -492, -497,
	-493, -376, -374, -316, 648, 649, 650, 651, 652, 653,
	638, 639, 640, 14, 15, 16, 643, 647, 645, 646,
	193, 101, 642, 311, 478, 92, 183, 184, 185, 186,
	276, 277, 17, 18, 19, 35, 641, -426, -425, -425,
	659, 604, 29, 148, 650, 2, 659, 663, 39, 659,
	-497, -426, -510, -506, -425, -517, -516, 616, -462, -463,
	624, 320, 130, 230, 318, -464, 492, -572, 8, -578,
	650, -631, 188, 221, 658, 659, 2, 659, 2, 659,
	-497, 2, 659, -497, 2, 659, -497, 2, 659, -497,
	2, 659, 2, 659, 2, -497, -497, -497, -497, -497,
	-497, -497, -425, 8, -572, -572, 561, 561, -572, -572,
	-572, -564, 406, 407, 408, 409, 298, 299, 300, 301,
	410, 411, 412, 413, 326, 327, 328, 329, 322, 323,
	324, 325, 330, 331, 332, 333, 212, 213, 214, 215,
	208, 209, 210, 211, -564, -456, 2, -566, -425, 4,
	624, 320, 130, 230, 318, 492, 5, -456, 2, -457,
	2, -497, -425, -458, -498, -499, 648, 649, 641, -375,
	-459, 2, -497, -426, -497, 61, 289, 567, -460, -497,
	202, -425, -425, 2, -425, 2, -500, 2, -628, 39,
	-425, -418, 663, 202, 39, -595, 4, -594, 44, 66,
	107, 136, 143, 176, 238, 256, 266, 292, 393, 465,
	466, 494, 525, 540, 572, 614, 504, -418, -418, 658,
	659, 663, -455, 225, 314, 309, 265, -455, -528, -454,
	273, -452, 386, -452, -452, -522, -331, 656, 665, -578,
	-522, -521, -520, 39, -340, 383, -522, -522, 660, 659,
	-521, 657, -643, 658, 661, 661, 661, 661, 661, -347,
	658, -425, -578, 660, 530, 2, 659, 267, 267, 267,
	267, 267, 376, 477, 659, 565, -651, -356, -362, 497,
	550, 205, -422, 663, -422, -415, 98, -705, 619, -585,
	-126, 378, 659, 663, -417, 38, 656, 660, -572, 2,
	2, -567, 606, 658, 658, -463, 658, 202, -651, -362,
	550, 497, 205, 2, -655, 545, -416, -585, 565, -704,
	-705, -688, 659, -690, -698, -683, -692, 240, 385, 255,
	604, -579, -548, 4, -590, -316, 2, -347, -423, -292,
	164, -423, -423, -292, 663, 164, -330, -351, -356, -359,
	-362, -316, -583, -585, -292, -352, -707, 659, 569, -484,
	-377, 431, 520, 454, 498, 545, 9, 9, 663, -578,
	-234, 486, 342, -329, -329, -329, -329, 663, -708, 99,
	565, 83, 658, 487, -309, 304, 565, -488, 232, 83,
	-602, 99, -333, -603, -316, 77, 585, 419, 199, 162,
	-708, 99, 419, -708, 99, 2, 251, 99, 503, 528,
	658, 29, 64, -533, 43, 43, 29, -660, -661, 290,
	202, 625, 549, 249, 487, 565, 565, -533, -449, -548,
	125, 315, 316, 64, -573, -573, 64, -573, -573, -573,
	619, -573, 619, -350, -533, 487, 565, 565, 565, 441,
	539, 441, 539, 493, -300, -302, -170, 493, 539, 304,
	565, 565, -170, 29, -216, 462, 134, -732, 640, 441,
	290, -661, 565, 202, 663, 43, 43, 29, -660, 202,
	565, 613, -372, -331, 600, 45, 600, 45, 600, 565,
	45, 487, 565, 663, 45, -284, -283, 503, -286, -587,
	-285, 340, -713, -697, 461, 503, 565, 487, 565, 143,
	376, 365, 494, 136, 266, 292, -519, -519, -316, -281,
	-645, -645, -241, -240, -316, 5, -415, 79, 565, 565,
	-16, 503, -657, -321, 112, 348, 308, 349, 103, 345,
	102, 344, 110, 346, 111, 347, 607, 361, 608, 362,
	68, 343, 319, 350, 524, 351, 611, 363, -322, -323,
	155, 398, 598, 127, -583, -16, -16, 503, 391, 453,
	164, -677, 240, 29, -666, 240, -541, 240, -541, -364,
	-316, 660, -156, -497, -497, -156, -497, -156, 49, 164,
	39, 164, 2, 658, 283, 658, -381, 358, 202, -415,
	-542, 663, -347, 39, -241, 380, 164, -583, -448, -447,
	358, -352, 232, 2, 164, -728, -405, 358, 158, 658,
	429, 2, 164, -332, 232, -317, -316, -467, -294, 553,
	164, -445, 596, -479, -156, 658, 134, 39, -479, -434,
	-435, -539, -436, -333, 658, -340, -494, -127, -544, 659,
	659, 659, -255, -406, -334, -333, 126, 433, 433, -248,
	619, -152, -153, 659, 663, -541, 240, 531, -153, -587,
	-242, -242, -541, -541, -347, 195, -587, -152, -242, -242,
	-242, 2, 2, 2, 2, -451, -347, -330, -372, -347,
	-358, 240, 29, 660, -585, -585, -362, -363, -361, -316,
	-356, -451, -330, -451, -330, -451, -330, -451, -451, -156,
	-497, 528, 2, 500, 195, 195, 660, -451, 8, -408,
	464, 5, 2, 429, 127, 549, 396, 249, -347, -372,
	-347, -372, -330, 127, -330, 128, 127, -347, 4, -533,
	-442, -270, 377, 278, 508, -476, -477, -499, 476, 477,
	-477, 476, 477, 8, 9, 8, 9, -274, 512, 364,
	-423, 663, -279, 40, 144, 278, -347, -576, 625, 160,
	-497, -497, 565, -734, 543, -504, 160, -497, 334, 365,
	576, 180, 586, 148, 369, 202, 658, -498, -498, 659,
	-427, -497, -497, 657, 667, 659, 660, 659, -411, 663,
	-409, -497, -425, -425, 659, 660, -425, -415, 657, 657,
	663, 659, -515, -516, 153, -497, 565, 565, 565, 565,
	658, 659, 660, -636, 387, 658, 658, -497, 659, 659,
	659, 659, 39, 663, 663, 663, 659, 663, 663, 663,
	659, 659, 659, 663, 659, 625, 625, 659, 659, 659,
	659, 663, 659, 663, 659, 202, 659, 659, -465, 403,
	659, 11, 12, 648, 649, 650, 651, 193, 652, 653,
	646, 647, 645, 638, 639, 640, 92, 311, 478, 14,
	15, 16, -375, 267, 240, -498, -498, -498, -498, 659,
	-502, -503, 202, 195, 39, -460, -460, -460, 659, 202,
	-425, 659, 659, 658, -629, 313, 358, 659, -491, -490,
	617, -538, -419, 2, -528, -342, -578, -491, -491, -425,
	-497, 273, 273, -453, 596, 376, -455, -528, -521, -574,
	-496, -495, 197, 40, 144, 352, 353, 354, 235, 198,
	-521, -340, -405, -521, -521, -578, -522, -522, -520, 659,
	-644, -574, 659, -420, -531, -623, -411, 660, -578, -252,
	-624, -217, 5, 365, -217, -217, -217, -217, -347, -585,
	565, 565, 240, 240, 240, -422, -415, 26, -675, 619,
	404, -548, 656, 657, 8, -578, 658, -572, -572, -572,
	-585, 202, 202, 240, 240, 240, 376, -655, 202, -583,
	-292, 659, 663, -683, -692, -698, -692, 385, 2, -292,
	-423, -292, -292, -372, -373, -292, -292, -292, -446, 619,
	-575, -483, 583, 88, 431, 561, -575, 124, 486, -288,
	453, 503, -333, -333, -347, -259, -258, -256, -316, 5,
	-357, -316, 216, 442, -583, 358, -488, 232, -293, 358,
	232, -341, -548, 658, -469, 621, 278, 278, 596, -333,
	-341, 278, 232, -333, 232, -341, 2, -341, -658, 431,
	370, -497, -257, -256, 64, -388, 302, 429, 359, -289,
	453, 503, 391, -156, -156, -156, 658, -707, 596, 147,
	-347, -372, -347, -357, -583, -352, 503, 391, 453, 355,
	-366, -573, -573, -573, -447, 503, 391, 453, -357, -583,
	-350, -583, -299, 232, -316, 441, -299, 232, 441, 441,
	441, 441, 216, 442, 487, -330, 441, 625, 48, -732,
	565, 202, -497, -497, -290, -156, -156, -156, 658, -331,
	-291, -472, 453, 5, 232, -333, 5, -333, 232, 5,
	-316, -333, -357, -583, -711, 25, 152, -333, 663, 282,
	263, 619, -668, 203, 484, 436, -287, 640, -316, -357,
	-583, 376, 365, 376, 136, 266, -242, 663, 640, 640,
	-357, -583, -321, 398, -669, 365, 5, 10, 592, -330,
	-656, -337, 487, 565, 565, -533, -673, -674, 218, 469,
	487, 472, -585, -152, -245, 619, -152, -239, 244, 650,
	-648, -587, -587, -316, -685, -686, -689, -690, -316, -379,
	-382, -380, -333, -489, -488, -606, -607, -602, 296, 249,
	585, 265, 181, 99, -260, -261, 621, 619, 164, -370,
	-347, 656, -242, -646, -543, 181, 495, 658, -359, -360,
	164, -405, 358, -583, 605, 39, 164, 658, 2, 2,
	-351, 376, 358, -332, 232, -295, 154, -732, -330, -491,
	-419, -444, -481, 464, 376, -406, 601, -340, -444, -421,
	663, 202, 640, 660, -406, -537, 650, -127, -127, -242,
	658, -587, 659, 663, 660, 658, 640, 640, -250, 380,
	-249, 156, 280, 264, 514, 515, 516, 517, 146, 513,
	131, 339, 245, 555, 488, -541, -587, -248, -153, 202,
	-541, 240, 202, -82, 619, -242, 549, 240, -242, 662,
	487, 472, -316, 660, -451, -451, -451, 500, 500, -316,
	195, -415, -343, -578, -330, -347, -344, -372, 195, 195,
	-330, -330, 589, -477, 377, 307, -524, -280, 627, -347,
	662, -497, -497, 160, 160, -497, -498, -498, -497, 160,
	202, 658, -497, -508, 34, 34, 659, 663, -493, -497,
	-374, 659, 604, -411, -411, 659, 650, -578, 662, 659,
	-506, 157, -497, 559, 320, 230, 318, -464, 318, -464,
	-464, -572, 5, -578, 650, -637, -336, 658, -316, 617,
	-410, 382, 659, -550, -548, -497, -497, -497, -497, -497,
	-572, -553, -553, -568, -568, -497, -502, -497, -550, -548,
	-498, -498, -498, -498, -498, -498, -498, -498, -498, -498,
	-498, -498, -498, -498, -498, -498, -498, -498, -498, -498,
	148, 358, 369, -498, -503, -502, -497, -497, -548, 659,
	659, 659, -425, -126, 658, 313, -438, 221, -497, -541,
	663, -438, -438, 659, -528, -528, 658, -497, 273, 657,
	663, 666, 640, 640, -405, 660, -520, -521, 657, 659,
	663, 659, 663, -480, 39, 659, -578, -491, -254, -253,
	145, 57, 114, 142, 365, 373, 201, 226, 428, 160,
	196, 154, 267, -675, -585, -585, 487, 487, 487, 379,
	218, 5, 8, 656, 657, 660, -572, 659, 659, 659,
	-585, -585, 487, 487, 487, -649, 579, 487, 29, 202,
	-585, -690, -692, -692, -292, -292, 126, 342, -497, -231,
	619, 621, 565, 565, 659, 663, 640, 64, 240, 164,
	358, 598, 358, -603, 162, -608, -497, 658, 249, 658,
	658, 2, -276, -277, -278, 152, 503, 25, -709, 2,
	596, 164, -292, 164, -292, 623, 659, 663, -388, 658,
	658, 565, 487, -309, 565, 619, -425, -497, -243, 134,
	-577, -662, 662, -662, 662, 487, 565, 565, 487, 565,
	565, 358, -316, 164, -316, 232, -732, -316, -662, -662,
	240, 619, 179, 179, 625, -299, -497, -497, 195, 565,
	619, -425, 565, -552, 52, 27, 358, -351, -292, 164,
	565, 565, 579, 503, -283, -587, -152, -246, 156, 468,
	146, 280, 245, 49, 379, -669, -152, 175, 256, 365,
	-240, -587, -587, -669, -587, 365, -16, -357, -583, -352,
	503, 391, 453, -655, -655, 218, -362, -677, -541, -247,
	380, -246, -541, -245, 202, 263, 619, 659, 663, 134,
	640, 2, 659, 659, 663, 663, -609, -293, -347, -332,
	249, 249, -339, -317, 39, 373, 373, 658, -347, -105,
	619, -540, -574, -338, -316, -433, -241, 46, -350, 39,
	164, -656, -352, -156, -352, -546, -547, 5, 39, -347,
	164, 376, 358, -296, 288, -732, -582, -624, -411, -444,
	-433, 359, 97, 659, -491, -435, -419, -497, 2, 659,
	-587, -242, -255, -334, 2, -588, -587, -587, 663, 658,
	640, 640, 640, 640, 640, 640, 640, -248, -541, -152,
	-248, -153, -156, 380, -347, -152, 650, -357, -358, 650,
	-451, 5, -394, -393, 396, 369, -394, 476, 476, 377,
	189, 284, -279, -331, -497, -497, 160, 34, 34, -497,
	-497, -508, 659, -497, -497, -425, 657, 5, -497, 659,
	659, 8, -497, 659, 660, -638, -316, -497, 659, 64,
	659, 659, 663, 663, 659, 659, 659, 659, 659, 659,
	659, -503, 202, 148, 369, 658, 659, 659, -126, -505,
	224, 64, -528, -505, -505, -453, -415, -528, -495, -331,
	656, -331, 656, -578, -574, -531, 658, 660, -253, 640,
	-587, -587, 2, 2, 5, 5, 428, 358, 365, 5,
	-217, -675, -675, 619, -362, -362, -362, 379, 657, 2,
	656, -578, 659, -362, -362, -362, 202, -651, -362, 550,
	205, -585, 126, 195, 229, 229, -333, -333, -258, -575,
	549, 476, -299, 419, -488, 164, 164, -610, 99, -612,
	81, 181, 109, 358, 365, 585, 419, 77, 134, 376,
	438, -722, -723, -724, 39, 630, 631, 659, -413, -525,
	-623, 658, -316, -413, -415, 358, 536, 134, 376, 358,
	134, 376, 613, 126, 2, 579, 84, -333, -341, -256,
	-415, -415, -347, -357, -583, 172, 659, 663, 640, 2,
	650, 650, -357, -583, -352, -357, -583, -350, 164, 601,
	-299, 164, -299, 601, -299, 394, 179, 565, -156, -497,
	172, 659, -331, 5, 5, 164, -328, 81, -333, 5,
	-333, -351, 126, 640, 640, 640, 640, 640, 31, -669,
	-240, 619, -316, 256, 487, 565, 565, 376, 376, 379,
	-673, -674, -245, 663, 658, -245, -588, -152, 2, 466,
	-689, -497, -497, -395, 251, -333, -607, -604, -605, 419,
	-489, -611, -613, 181, 419, -383, 658, -332, -317, 658,
	-156, 2, -259, 658, -381, 380, 657, 202, 659, -583,
	-448, -156, -352, -405, -403, 619, -405, 659, 663, 158,
	-470, 596, -331, -347, 164, -297, 287, -732, -582, -294,
	-475, -473, 149, 658, 376, -156, -411, 640, 659, 126,
	659, -249, -250, -587, -152, -587, -587, -587, -152, -587,
	-248, -679, 39, -541, -83, -84, 249, 99, 401, -242,
	-242, -344, 549, 249, 658, 658, -279, -497, -497, -497,
	659, -411, -578, 650, -632, 396, 659, -524, -497, -497,
	-498, 202, 658, -508, 659, -633, 618, -497, -439, -440,
	-497, 474, 115, 222, -633, -633, 659, -574, -574, 2,
	-587, 2, 2, 365, 2, 2, 2, 565, 565, 565,
	656, 2, 202, 202, 202, -585, 202, 202, 240, 240,
	-156, 240, 39, 441, -488, -341, -341, -345, -338, 181,
	232, 365, 613, -469, 278, 658, -498, 589, -347, 658,
	2, 231, 231, 31, 64, -725, 139, 253, 659, 663,
	-526, -327, -316, -497, -526, 659, 659, 365, 589, 365,
	613, -497, 589, -548, 658, -292, -292, 659, 659, -497,
	565, -577, 106, -575, 2, -662, -299, -415, -415, -662,
	-330, -497, 195, -497, 565, 5, -292, -345, -292, -292,
	-328, 579, -587, -497, 576, 180, -152, -152, 375, -357,
	-583, -352, -678, 550, 497, 580, 489, 205, 475, -678,
	195, -246, -247, -245, -681, 504, -389, -390, 2, -609,
	278, -338, 278, 242, 163, -413, 658, 658, -415, -721,
	619, 659, -379, -260, -106, -107, 566, -540, -652, -369,
	-405, 39, 342, 126, 39, 5, 658, 658, -316, 376,
	658, -331, -311, 98, -732, -582, -295, -444, 359, -415,
	99, -475, -504, -242, 658, -242, 659, 555, -248, 663,
	29, 658, 29, 658, -347, -372, -425, -425, 659, -411,
	64, 663, 659, 659, -498, -508, 659, -634, -635, -336,
	663, 658, 658, 505, 657, 657, 2, -585, -585, -585,
	2, -585, -585, -585, -585, -585, 487, 487, -299, 419,
	-316, -603, -612, -338, 358, -261, 596, 619, -497, -498,
	-318, 658, -497, 658, 658, 39, 134, 253, 140, 237,
	-487, -726, 108, 537, 241, -525, -279, 659, -486, 596,
	438, -498, -328, -413, 658, 658, 658, 640, 202, -156,
	658, -552, -292, -351, 640, 565, 2, 202, -655, 659,
	-668, -691, -692, -260, 658, -261, -384, 86, 100, 135,
	231, 206, 250, 528, 534, 29, -384, 659, -413, -413,
	659, -385, 376, 126, 342, 659, 39, -107, 9, -491,
	39, -156, 126, -156, -546, -413, -347, -413, 376, -301,
	-300, 297, -582, -296, 659, -341, -444, -588, -574, 4,
	-84, -415, -415, 659, 659, -639, 429, 477, 223, -425,
	-412, 659, 663, 39, -440, 2, 2, 2, -675, -675,
	-675, -362, -362, 441, -293, 164, 225, 659, -614, 312,
	-316, 659, -448, -448, 39, 140, 237, -391, -387, 658,
	-280, -526, -261, 225, -347, -663, 596, 659, -397, -396,
	-393, -399, -398, -393, -425, -575, 106, 394, -425, -328,
	-152, -585, -585, 376, -670, 203, -693, -694, -696, 39,
	283, 572, 618, -697, -385, -414, -527, -333, -486, 659,
	659, 87, 126, -395, -156, -156, 2, -403, 659, 659,
	-470, 659, -347, -298, -589, 441, 443, -732, -297, -491,
	149, 659, 659, 659, 659, -640, -641, 54, 582, 116,
	-497, -640, -640, -635, -637, 202, 202, 181, -485, 628,
	-615, -618, -617, 635, 511, 203, 395, 659, 536, 612,
	659, 659, -725, -415, -485, -405, -497, -486, 659, 663,
	601, 659, 663, 601, 659, 202, 659, -292, -675, -292,
	-678, -244, 619, 49, -703, -700, 53, 465, -696, -684,
	5, -582, -310, -309, 659, 663, -487, -486, -391, 418,
	141, 152, -389, -721, -486, 658, -487, 658, -308, -307,
	-732, -568, -311, 149, 359, 589, -242, -642, 162, -641,
	415, 194, 476, 415, 194, -642, -642, -585, -585, -338,
	-261, 59, -617, 635, -618, 635, 589, 141, -491, 659,
	-614, -261, -396, 240, -398, 202, 394, 202, 484, -669,
	31, 44, -497, -261, -527, -391, -487, -261, 477, 477,
	2, -260, -385, -487, -413, -391, -413, -304, -305, -306,
	-415, -301, 359, 589, 503, 116, 221, 560, 342, 34,
	640, -616, 342, 461, 69, 503, -616, -615, 658, 658,
	-585, 380, -702, -261, -391, -491, 2, -385, -391, 659,
	-261, 659, -584, 391, -298, 503, -434, 476, 384, -641,
	-497, 24, 365, 134, -725, -425, -425, -292, -241, 658,
	-701, 157, -3, -700, -491, -261, -471, 358, 613, -310,
	-261, -486, -491, -487, -303, -302, 493, -732, -308, -434,
	-491, 659, 659, -241, 664, -471, -491, 613, -491, -487,
	-471, -391, -583, -304, -491, -386, -387, 565, 659, -471,
	-471, -391, -261, -303, 658, -261, -491, -425, -491, -471,
	659, -471, -386,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1731, 1733,
	720, 721, 723, 724, 725, 727, 728, 730, 732, 734,
	735, 736, 738, 739, 741, 742, 743, 744, 745, 747,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 843, 845, 0, 1713,
	1715, 1717, 1719, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 418, 420, 422, 424,
	0, 456, 458, 459, 461, 463, 464, 466, 468, -2,
	0, 650, 651, 653, 655, 657, -2, 0, 1289, 1291,
	1293, 0, 831, 833, 0, 1296, 1298, 1300, 0, 0,
	855, 856, 0, 1834, -2, 847, 849, 851, 853, 932,
	934, 936, 938, 940, 942, 944, 946, 948, 950, 951,
	953, 955, 957, 959, 961, 962, 964, 966, 968, 969,
	971, 972, 974, 976, 978, 980, 982, 984, 986, 988,
	990, 992, 994, 996, 998, 1000, -2, 1003, 1004, 1005,
	1007, -2, 0, -2, -2, 1727, 51, 53, 55, 57,
	59, 61, 63, 65, 67, 69, 71, 73, 75, 76,
	596, 598, 600, 602, 604, 607, 609, 611, 613, 1892,
	659, 661, 663, 665, 667, 669, 671, 673, 0, 0,
	-2, 1906, 0, 0, 0, 1096, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 146, 147, 148, 149,
	150, 151, 152, 153, 91, 92, 93, 95, 96, 97,
	98, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 143, 144, 89,
	118, 119, 120, 121, 122, 0, 0, 1865, 1867, 1869,
	1871, -2, 0, 0, 8, 12, 14, 16, 18, 20,
	22, 24, 26, 28, 30, 32, 36, 38, 40, 42,
	1732, 1734, 722, 726, 729, 731, 733, 737, 740, 746,
	748, 750, 705, 706, 709, 2608, 2626, 2627, 2628, 2631,
	2632, 2633, 2634, 2635, 2636, 3167, 3248, 3249, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780,
	2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790,
	2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800,
	2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880,
	2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890,
	2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900,
	2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910,
	2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920,
	2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930,
	2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940,
	2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950,
	2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960,
	2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970,
	2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980,
	2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990,
	2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000,
	3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010,
	3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020,
	3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030,
	3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040,
	3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050,
	3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060,
	3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070,
	3071, 3072, 3073, 3093, 3094, 3095, 3096, 3097, 3098, 3099,
	3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109,
	3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119,
	3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129,
	3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139,
	3140, 3141, 3142, 3143, 3144, 3145, 3146, 707, 708, 1483,
	0, 789, 787, 2591, 790, 2918, 792, 794, 644, 645,
	646, 647, 648, 649, 0, 824, 3023, 805, 1904, 825,
	827, 828, 829, 830, 784, 782, 0, 829, 824, 2664,
	3023, 822, 1711, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 658, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 575, 1546, 1547, 1548,
	1696, 1697, 2974, 1742, 0, 283, 844, -2, -2, 3131,
	-2, 886, 887, -2, -2, 901, 905, 896, 3136, 0,
	2977, 2959, -2, 908, 1714, 1716, 1718, 1008, 1009, 1010,
	2612, 1014, 1012, 1024, 1025, 1028, 0, 1045, -2, 0,
	2660, 2941, -2, -2, 1046, 1047, -2, -2, -2, -2,
	1026, 1027, 0, 0, 0, 0, 0, 1744, 1736, 1739,
	1737, 1738, 46, 48, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 293, -2,
	-2, -2, -2, 0, 0, 3029, 2722, 2559, 2628, 2562,
	2557, 419, 421, 423, 425, 426, 0, 0, 0, 0,
	0, 0, 0, 457, 460, 462, 465, 467, -2, 0,
	469, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1363, 1355, 1356, 1613, 0, 0, 0, -2, 652,
	654, 656, 710, 711, 0, 1893, 1893, 718, 719, -2,
	0, 0, 0, 0, 380, 371, 1290, 1292, 1294, 1295,
	0, 0, 0, 0, 0, 832, 834, 0, 0, 3023,
	344, 1297, 1299, 1301, 1302, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 848, 850, 852, 854, 933, 935,
	937, 939, 941, 943, 945, 947, 949, 952, 954, 956,
	958, 960, 963, 965, 967, 970, 973, 975, 977, 979,
	981, 983, 985, 987, 989, 991, 993, 995, 997, 999,
	1001, 1002, 1053, 0, 0, 0, 0, -2, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 1165, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 0,
	1258, 0, 0, 1056, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 0, 1138, 1163, 1164, 1174, 1006, 0, 1526, 1894,
	1744, 1721, 1722, 1723, 1728, 1730, 1724, 1725, 1726, 52,
	54, 56, 58, 60, 62, 64, 66, 68, 70, 72,
	74, 77, 597, 599, 601, 603, 605, 608, 610, 612,
	-2, 1863, 1864, 660, 662, 664, 666, 668, 670, 672,
	835, 0, 838, 0, 1058, 837, -2, 0, 1898, 1898,
	1898, 0, 0, 1864, 1862, 0, 0, 0, 841, 842,
	912, 913, 2171, 0, 0, 0, 0, 0, 0, 0,
	0, 2431, 2259, 0, 914, -2, 2292, 2294, 3105, 2890,
	3131, 2430, 2296, 2297, 2298, 2299, 2300, 0, 2302, 2303,
	2304, 2305, 2306, 2307, 0, 2309, 0, 2314, 2315, 2316,
	0, 3112, 2534, 2622, -2, 0, 0, 3119, 2618, 0,
	2397, 2332, -2, -2, 2645, 2624, 2103, 2104, 2105, 2106,
	2107, -2, -2, 3150, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 0, 3093, 3113, 3114, 3120,
	3122, 3115, 3102, 2357, 2738, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 2130, 2139,
	-2, -2, -2, -2, -2, -2, -2, 3106, 3107, 3125,
	3128, 3135, 3140, 3141, 3111, 3121, 3149, 3151, 3152, 3153,
	3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163,
	3164, 3165, 3166, 2131, -2, -2, -2, -2, 0, 1881,
	2934, 1884, 1483, 1882, 1866, 1868, 0, 1870, 0, 0,
	0, 1875, 1901, 1899, 0, 1950, 1879, 1880, 1973, 1973,
	1997, 0, 1978, 0, 1997, 1893, 2024, 0, 1984, 2964,
	2333, 2334, 0, 2628, 2623, -2, -2, 3147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	0, 791, 793, 0, 0, 0, 0, 824, 823, 1903,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	3113, 587, 537, 540, 0, 578, 579, 580, 581, 582,
	3113, 0, 0, 0, 0, 589, 590, 591, 592, 593,
	594, 595, 253, 3113, 678, 703, 0, 253, 3113, 681,
	253, 3113, 684, 0, 687, 1611, 253, 3113, 690, 2587,
	253, 3113, 693, 695, 2595, 253, 3113, 699, 2602, 2600,
	700, 0, 702, 273, 269, 270, 271, 272, 1707, 1708,
	1709, 1710, 0, 1741, 1612, 846, 0, 872, 0, 884,
	885, 3101, -2, 0, 2988, 889, 890, -2, 892, 1745,
	1749, 1750, 1751, 1752, 1753, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 879, 880, 899, 900, 906, 909,
	0, 1017, 1013, 1029, 0, 1044, 0, 1045, 1045, 2576,
	2567, 2568, 0, 0, 1045, 1045, 0, 0, 1048, 1049,
	1050, 1051, 1052, 1735, -2, 88, 0, 3113, 2024, 90,
	0, 2581, 2654, 2655, 2656, 2657, 2658, 3148, 3168, 3169,
	3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179,
	3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189,
	3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199,
	3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209,
	3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219,
	3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229,
	3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239,
	3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3150, 94,
	0, 3113, 99, 0, 3113, 0, -2, 123, 0, 145,
	0, 173, -2, -2, -2, 154, 0, 3113, 0, 2556,
	-2, 0, 265, -2, 0, 775, 383, 384, 2641, 2642,
	2650, 2651, 2652, 2653, 372, 373, 555, 0, 766, 0,
	875, 2431, 0, 0, 1327, -2, 0, 1539, 1541, 1541,
	0, -2, 0, 0, 0, 1278, 2553, 2558, 1279, 1280,
	2577, 1281, 2563, 0, 427, 428, 429, 430, 431, 0,
	432, 3113, 434, 435, 0, 437, 438, 3113, 440, 441,
	0, 443, 0, 445, 0, 308, 325, 323, 3113, 0,
	3113, 471, 474, 0, 576, 0, 573, 0, 557, 558,
	0, 560, 0, 0, 0, 565, 566, 568, 569, 570,
	571, 572, 0, 617, 615, 2592, 635, 397, 0, -2,
	3113, 0, 1324, 0, 0, 1591, -2, 0, 1532, -2,
	0, 1598, 3113, 1594, 0, -2, 0, 1891, 3113, 1762,
	1359, 1360, 1361, 1362, 2036, 641, 0, 1798, 0, 1800,
	0, 1820, 2030, 1973, 0, 0, 2035, 0, -2, 763,
	2611, -2, 713, 0, 714, 0, -2, 0, 397, 0,
	0, 1305, 1307, 1308, 1310, 1311, 1314, 1315, 1316, 1317,
	0, 1319, 2010, 345, 347, 0, 0, 0, 0, 1304,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 0,
	635, 857, 0, 0, 1054, 1055, 0, 0, 1073, 1074,
	1075, 0, 0, 397, -2, -2, -2, 1083, 0, 1090,
	1093, -2, 0, 0, 0, 0, 1100, 0, 1105, 1106,
	1107, 0, -2, 0, 1114, 1116, 1288, 1118, 0, 0,
	1120, 0, 1124, 0, 1127, 0, 1129, 0, 1131, -2,
	-2, -2, 1139, 1140, -2, 1145, -2, 0, 1149, -2,
	0, 1152, 0, 1155, -2, 0, 1165, 1161, 1162, 0,
	0, 0, 0, 1182, 1183, 0, 1192, 0, 1195, 1196,
	1197, 0, 0, 1202, 1203, 0, 1205, 1206, 1207, 1209,
	1210, 1211, 0, 3060, 2985, 2722, 2770, 0, 1220, -2,
	1226, 1228, 0, -2, 0, 1244, 0, 1248, 0, 0,
	1257, 0, 0, 0, 1057, 0, 1066, 1067, 1068, 253,
	2028, 1720, 0, -2, 0, 836, 0, 840, 1923, 1849,
	1846, 0, 1920, 1921, 1850, 0, 0, 0, 1857, 0,
	1896, 1897, 0, 0, 0, 1836, 1837, 0, 0, 0,
	0, 0, 0, 2436, 2437, 2438, 2439, 2452, 2440, 2441,
	2451, 2449, 2450, 2442, 2443, 2448, 2462, 2463, 2453, 2454,
	2444, 2457, 2455, 2456, 2458, 2459, 2460, 2461, 0, 0,
	2467, 0, 2445, 2446, 2447, 2475, 0, 0, 2476, 0,
	2478, 0, 2468, 2464, 2465, 2466, 0, 2238, 2240, 2542,
	0, 0, 0, 2474, 2469, 2470, 2176, 2177, 2178, 2179,
	2180, 2213, 2217, 2218, 0, 0, 2293, 2539, 2538, 2295,
	0, 0, 2490, 0, 2308, -2, 0, 2431, 2485, 0,
	0, 2317, 2318, 2319, 0, 0, 2490, 0, 0, 2533,
	2329, 2330, 2168, 0, 0, 2399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2117, 2116, 0, 2118, 0, 2119,
	2120, 2127, 2140, 0, 0, 0, 0, 2144, 0, 0,
	0, 0, 0, 0, 0, 2514, -2, 0, 0, 0,
	0, 2132, 0, 0, 1883, 0, 0, 1954, 2543, 2547,
	2548, 1954, 1954, 0, 0, 2491, 2021, 2021, 0, 0,
	2016, 2016, 2016, 2014, 1997, 0, 1997, 2007, 0, 1997,
	1997, 0, -2, 1978, 0, 0, 2007, 0, 1991, 751,
	753, 755, 757, 758, 759, 761, 2025, 2026, 0, 0,
	0, 0, 2629, 0, 0, 0, 0, 0, 0, 2614,
	0, 0, 2586, 452, 453, 0, 0, 0, 3042, 2977,
	0, -2, -2, -2, -2, 2985, 0, 0, 2722, 2759,
	2770, 796, 826, 0, 1893, 0, 2493, 2051, 2055, 0,
	2057, 2058, 2059, 2060, 2061, 0, 0, 2052, -2, 2128,
	2130, 2151, 2646, 2647, 2648, 2111, 2112, 2113, 2114, 2115,
	2123, 2110, 2110, 2110, 2121, 2150, 2142, 2150, 2146, 2096,
	2097, 2098, 2133, 2134, 2135, 2136, 0, 3042, 2977, 0,
	-2, 0, 808, 0, 0, 0, 1831, 335, 336, 535,
	0, 251, 252, 0, 539, 0, 577, 0, 584, 585,
	586, 0, 674, 0, 0, 253, 3113, 679, 0, 682,
	0, 253, 3113, 2551, 688, 0, 691, 0, 0, 697,
	0, 0, 0, 0, 0, 253, 1833, 0, 0, 0,
	0, -2, 894, 902, 903, 904, 0, 1747, 0, 1754,
	923, 924, 925, 1756, 1757, 0, 1759, 897, 926, 927,
	928, 929, 930, 931, 0, 2565, 2566, 2571, 2572, 0,
	0, 895, 916, 898, 0, 910, 1020, 1015, 1016, 1030,
	1031, 0, 0, 2569, 2570, 0, 0, 1036, 1037, 155,
	1693, 0, 0, 206, 0, 1693, 1693, 0, 0, 0,
	0, 234, 0, 0, 1393, 0, 0, 0, 0, 173,
	191, 202, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 100, 1505, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 1521, 1524, 0, 0, 0, 0, 0, 125,
	126, 0, 0, 131, 132, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 1795, 0, 181, 173, 0, 0,
	172, 174, 157, 0, 0, 173, 177, 192, 204, 0,
	240, 0, 180, 242, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 275, 0, 0, 310, 773, 0,
	776, 0, 549, 0, 524, 0, 0, 546, 554, 0,
	0, 511, 512, 513, 514, 0, 0, 519, 0, 0,
	0, 0, 525, 765, 767, 635, 635, 0, 0, 873,
	877, 878, 0, 0, 874, 876, 0, 0, 1533, 0,
	0, 0, 1890, 0, 0, 0, 0, 3113, 1691, 0,
	1674, 0, 2010, 2818, -2, -2, 345, 2010, 1277, 0,
	0, 2629, 2561, 0, 0, 0, 0, 0, 0, 444,
	0, 0, 0, 334, 0, 0, 0, 480, 0, 567,
	556, 559, 561, 562, 563, 606, 1452, 3113, 0, 0,
	639, 630, 0, 634, 0, 0, 638, 0, 0, 1504,
	3113, 1502, 2596, 0, 1530, 0, 1590, 1483, 3113, 2594,
	0, 0, 0, 1599, 2638, 1608, 1612, 1783, 0, 643,
	0, 1801, 1803, 0, 0, 2031, 0, 2033, 1973, 1893,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	1318, 354, 0, 2009, 0, 0, 385, 2010, 345, 2947,
	0, 1303, 397, 397, 2010, 859, 2010, 861, 0, 0,
	1076, 0, 0, 1079, 397, 397, 397, 1088, 1089, 1091,
	1092, -2, -2, -2, -2, 1094, 1095, 1189, 0, 0,
	0, 1188, 1689, 0, 1110, 1113, 1117, 0, 1261, 2959,
	2977, 3042, 1286, 1189, 2722, 1189, 2722, 1189, 2722, 1189,
	1189, 1133, 1177, 1185, 1144, 1151, 0, 1146, 1150, 1153,
	1156, 0, 1158, 1166, 0, -2, 0, 1169, 0, 1171,
	0, 1173, 1189, 1190, 1193, 0, 1201, 1204, 0, 1212,
	1213, 1214, 1215, 2609, 1216, 1217, 1218, 1219, -2, 1223,
	1224, 0, 1235, 1240, 1241, 1237, 0, 0, 0, 0,
	0, 0, 1251, 1252, 0, 0, 0, 1260, 0, 1069,
	1525, 0, 1729, 1923, 1849, 839, 1840, 1922, 1841, 1848,
	1851, 0, 0, 1853, 0, 1855, 0, 1918, 1919, 1926,
	1927, 0, 1937, 1938, 1930, 0, -2, 0, 0, 1933,
	1934, 1859, 0, 1876, 1877, 1878, 1907, 1910, 1627, 0,
	3248, 882, 0, 2172, 2046, 2173, 2174, 2580, 0, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, -2,
	-2, -2, -2, -2, -2, -2, -2, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, -2, -2,
	-2, 2214, 2215, 2216, -2, 2477, 2479, 0, 2542, 0,
	-2, 0, -2, -2, -2, -2, 2235, 0, 2237, 2242,
	2244, 2246, 0, 0, 0, 0, 2541, 2256, 2525, 2526,
	0, 0, 2433, 2434, 2435, 2241, 0, 2260, 2540, 2537,
	0, 0, 2471, 0, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 0, 2489, 1906,
	2321, 0, 0, 0, 0, 2328, 2313, 2487, 0, 2486,
	0, 0, 0, 2497, 0, 2532, 2528, 0, 2578, 2167,
	2154, 2155, 2156, 2157, 2158, 2159, 2169, 0, 2575, 2615,
	2621, 2407, 0, 0, 0, 2358, 2359, 2360, 2361, 2362,
	0, 2364, 2365, 0, 2367, 2368, 0, 2370, 2371, 0,
	2373, 2374, 2375, 2376, 2377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 0, 0, 2379, 0, 2500, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2381, 0,
	2383, 2491, 2511, 0, 0, 2261, 0, 0, 0, 0,
	0, 2386, 2491, 2519, 0, 0, 0, 0, 0, 2491,
	0, 2524, 0, 2393, 0, 2395, 1097, 1098, 1885, 0,
	0, 2041, 0, 0, 0, 2546, 2549, 2550, 3074, 3075,
	3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085,
	3086, 3087, 3088, 3089, 3090, 3091, 3092, 2041, 2041, 0,
	1949, 0, 0, 2017, 2018, 2019, 2020, 0, 0, 2021,
	0, 2011, 2015, 2012, 2013, 2007, 1970, 0, 0, 2582,
	2007, 1976, 2006, 0, 1483, 1996, 2007, 2007, 0, -2,
	1980, 1997, 0, 0, 752, 754, 756, 760, 762, 0,
	0, 1906, -2, 0, -2, 399, 1482, 0, 0, 0,
	0, 0, 0, 786, 788, 0, 0, 694, 0, 0,
	0, 0, 1267, 0, 1269, 1270, 0, 1272, 0, 1677,
	780, 0, 783, 0, 2042, 2045, 0, 0, 2056, 2062,
	2063, 0, -2, 0, 0, 2152, 0, 0, 0, 0,
	0, 0, 0, 821, 0, 3023, 0, 819, 0, 538,
	253, 0, 542, 543, 0, 0, 492, 493, 494, 495,
	497, 2649, 498, -2, -2, 0, 588, 704, 253, 676,
	0, 253, 253, 685, 0, 0, 253, 696, 253, 2603,
	253, 2601, 274, 701, 1832, 286, 0, 881, 0, 1746,
	1755, 0, 920, 0, 922, 0, 2573, 2574, 0, 911,
	0, 1018, 0, 1032, 1033, 1034, 1035, 0, 0, 0,
	0, 1692, 0, 0, 1637, 0, 0, 210, 3113, 0,
	255, 0, 0, 1445, 2588, 0, 1435, 0, 0, 2746,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 170, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 1507,
	1509, 1516, 1518, 0, 1512, 1513, 0, 1515, 1517, 1519,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 137, 1542, 2983, 0, 0,
	0, 0, 1543, 1544, 1545, 1771, 1772, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 179, 0, 2555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 311, 0, 777, 0,
	778, 0, 545, 547, 548, 524, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 520, 521, 522, 523, 768,
	397, 770, 771, 393, 390, 392, 772, 0, 0, 0,
	1535, 0, 1586, 1584, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	0, 0, 0, 0, -2, 1537, 1538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 388, 2554,
	2564, 0, 1312, 1313, 433, 436, 439, 442, 292, 0,
	0, 0, 473, 482, 0, 1365, 1337, 0, 0, 616,
	397, 635, 637, 0, 395, 2893, 2607, 1322, 1500, 1503,
	0, 1483, 3113, 1554, 0, 0, 0, 0, 0, 0,
	0, 1597, 0, 0, 3113, 2583, 2637, 2638, 1785, 1795,
	0, 2041, 0, 1818, 1804, 0, 0, 0, 1818, 1822,
	1823, 1825, 1826, 0, 0, 2032, 2038, 712, 764, 1893,
	1893, 397, 0, 0, 1807, 1809, 0, 0, 0, 337,
	0, 348, 2010, 346, 0, 354, 0, 0, 2010, 345,
	0, 629, 858, 863, 397, 0, 0, 397, 1080, 1081,
	1082, 1135, 1179, 1187, 1239, 1099, 1101, 1102, 1103, 0,
	1108, 0, 0, 0, 1287, 1282, 1283, 1284, 2604, 2600,
	1285, 1119, 1189, 1122, 1189, 1125, 1189, 1128, 1130, 1148,
	1154, 1167, 1160, 1168, 0, 0, 0, 1181, 0, 1199,
	0, 1208, 1222, 0, 0, 0, 0, 0, 0, 0,
	1245, 1246, 1247, 1249, 1254, 1253, 0, 1259, 1070, 2029,
	1844, 1845, 1847, 0, 1856, 0, 0, 1932, -2, -2,
	1931, 1935, 1936, -2, -2, -2, -2, 1852, 0, 1861,
	1858, 0, 1917, 1625, 1626, 0, 0, 883, 0, 0,
	-2, -2, 0, 0, 0, 2257, 0, -2, 2236, 2239,
	2243, 2245, 2247, 0, 0, 0, 0, 0, 0, 2480,
	0, 2482, 2258, 2535, 2538, 2473, 0, 2429, 0, 0,
	1905, 1906, 1906, 0, 2327, 0, 2488, 0, 2495, 2496,
	0, 2320, 0, 2529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2331, 0, 0, 0, 0, 2363, 2366,
	2369, 2372, 0, 0, 0, 0, 2352, 0, 0, 0,
	2356, 2122, 2108, 0, 2150, 2148, 2149, 2143, 2150, 2147,
	2100, 0, 2099, 0, 2378, 0, 2380, 2382, 0, 0,
	2384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2264, 2265, 2266, 2286, 2385,
	2517, 2518, 0, 0, 0, 0, 0, 0, 2391, 0,
	2523, 2392, 2394, 1893, 0, 1886, 0, 1951, 1940, 2040,
	0, 2544, 2010, 1953, 1955, 2545, 2585, 1940, 1940, 0,
	2492, 0, 0, 2001, 0, 0, 0, 2003, 1974, 0,
	0, 1968, 0, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1975, 1483, 2005, 1977, 1981, 2615, 0, 2007, 0, 1992,
	0, 1994, 2027, 0, 1986, 1989, 0, 0, 2630, 2041,
	0, 446, 454, 455, 447, 448, 449, 450, 0, 1677,
	0, 0, 0, 0, 0, 1268, 1271, 0, 804, 0,
	0, 2494, 0, 2047, 0, 2053, 0, 0, 0, 0,
	806, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	536, 541, 0, 0, 491, 0, 490, 496, 583, 675,
	253, 680, 683, 2552, 253, 689, 692, 698, 282, 0,
	871, -2, 918, 919, 921, 0, 917, 1023, 1019, 207,
	1693, 0, 0, 0, 1633, 0, 1348, 0, 1343, 1344,
	1635, 2599, 1639, 1645, 1648, 0, 212, 3113, 224, 0,
	3113, 0, 1409, 0, 0, 0, 0, 0, 0, 1695,
	0, 0, 3113, 253, 3113, 253, 228, 230, 233, 0,
	239, 235, 0, 1345, 0, 1397, 0, 0, 1400, 156,
	1693, 0, 0, 159, 163, 175, 0, 0, 0, 189,
	0, 0, 0, 1650, 1654, 1662, 0, 0, 0, 1510,
	1511, 1514, 1520, 1523, 101, 0, 0, 0, 1658, 1660,
	1666, 124, 127, 3113, 2597, 0, 129, 3113, 0, 138,
	1795, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 161, 165, 176, 0, 1668,
	158, 178, 0, 268, 0, 0, 258, 253, 3113, 0,
	260, 0, 261, 262, 276, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 774, 0, 550, 551,
	552, 0, 0, 0, 515, 516, 769, 0, 0, 0,
	1325, 1326, 1585, 0, 1528, 1529, 320, 321, 0, 1540,
	1534, 0, 0, 0, 0, 0, 1670, 1671, 0, 0,
	0, 1691, 1686, 2010, 288, 0, 2010, 296, 0, 2560,
	0, 324, 333, 470, 0, 481, 483, 485, 0, 0,
	0, 1364, 1463, 1366, 1368, 1369, 1370, 255, 0, 2638,
	1435, 2805, 2638, 0, 0, 1332, 0, 0, 0, 622,
	618, 0, 627, 631, 632, 0, 0, 0, -2, 0,
	0, 0, 0, -2, 0, 0, 0, 1601, 1595, 1596,
	0, 0, 0, 0, 3113, 1787, 1795, 0, 1891, 1906,
	642, 1796, 1818, 0, 0, 0, 1806, 1802, 1799, 2041,
	0, 0, 0, 0, 0, 2034, 2037, 715, 716, 374,
	0, 397, 0, 0, 0, 0, 0, 0, 352, 0,
	355, 0, 0, 0, 360, 361, 362, 363, 364, 365,
	0, 0, 0, 0, 370, 354, 386, 339, 2010, 0,
	354, 0, 0, 860, 0, 1071, 0, 0, 1078, 0,
	0, 1689, 1112, 0, 1121, 1123, 1126, 1170, 1172, 1189,
	0, 1200, 1229, 2584, 1230, 1387, 0, 1387, 0, 0,
	1250, 1256, 1854, 0, 1929, 1860, 1911, 1912, 0, 1627,
	0, 2175, 2220, 0, 0, -2, 0, 0, 2224, 0,
	0, 0, -2, 0, 0, 0, 2481, 2483, 0, 2537,
	2472, 2322, 0, 0, 0, 2326, 2310, 2311, 0, 2432,
	2498, 2527, 2531, 0, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 0, 2579, 2616, 2620, 2405, 2406, 2410, 2593, 0,
	0, 0, 2335, 0, 0, 0, 0, 0, 0, 0,
	0, 2141, 2145, 0, 0, 2499, 2510, 2512, 2262, 2263,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	-2, -2, -2, 2280, 2281, 2282, -2, -2, -2, 2287,
	0, 0, 0, 2513, 2515, 2516, 2520, 2521, 0, 2388,
	2389, 2390, 2522, 0, 1893, 1887, 1948, 0, 2039, 1952,
	0, 1948, 1948, 1900, 1999, 0, 0, 2023, 0, 1971,
	0, 1972, 0, 0, 2004, 0, 1979, 1982, 1983, 1993,
	0, 1985, 0, 1988, 0, 2322, -2, 398, 400, 402,
	0, 405, 406, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 795, 1677, 1677, 0, 0, 0, 797,
	0, 781, 0, 0, 2049, 0, 0, 2125, 2129, 2153,
	810, 812, 0, 0, 0, 0, 3042, 2977, 0, 0,
	809, 544, 488, 489, 677, 686, 284, 0, 2008, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 254, 0, 1444, 0, 1407, 0, 0, 1434, 0,
	0, 1450, 214, 215, 216, 0, 0, 0, 0, 226,
	0, 0, 222, 0, 232, 238, 237, 0, 1394, 0,
	0, 0, 0, 1638, 0, 0, 0, 186, 187, 188,
	0, 193, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 140, 141,
	0, 0, 1777, 1778, 0, 1765, 183, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 1624, 278, 0,
	0, 0, 0, 0, 312, 313, 314, 315, 0, 300,
	302, 0, 0, 0, 0, 322, 0, 0, 509, 0,
	394, 389, 391, 1527, 1588, 1589, 1536, 1651, 1655, 1663,
	0, 0, 0, 0, 0, 829, 1690, 0, 296, 294,
	0, 297, 296, 290, 0, 0, 0, 0, 0, 0,
	0, 564, 1335, 1451, 0, 0, 1453, 1371, 1375, 0,
	2638, 2638, 0, 2590, 0, 1333, 0, 0, 1452, 614,
	0, 621, 0, 636, 2589, 0, 0, 0, 1504, 0,
	0, 1531, 1483, 1557, 1483, 0, 1600, 1602, 0, 1610,
	0, 0, 0, 1789, 1795, 0, 1782, 1783, 1925, 1797,
	1816, -2, 0, 0, 1906, 1824, 1821, 1827, 1828, 0,
	0, 377, 0, 1808, 1810, 0, 1306, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 354, 351,
	341, 2010, 381, 0, 397, 397, 1104, 1688, 1109, 2605,
	1180, 1198, 1231, 1386, 0, 0, 1233, 0, 0, 1928,
	1915, 1916, 1913, 1627, 2222, 2226, 0, 0, 0, 2228,
	-2, 0, 2250, -2, -2, 2484, 2536, 2301, 1906, 2323,
	2325, 2312, 2530, 2170, 0, 2412, 2409, 0, 2396, 0,
	2347, 2348, 0, 0, 2351, 2353, 2354, 2355, 2109, 2102,
	2101, 2509, 0, 0, 0, 0, 2387, 1888, 0, 2401,
	0, 0, 1956, 2401, 2401, 2000, 0, 2002, 1969, 1957,
	0, 1966, 0, 2616, 1995, 1987, 0, 0, 403, 0,
	407, 408, 409, 410, 412, 0, 0, 0, 0, 0,
	451, 798, 799, 0, 0, 0, 0, 1676, 2043, 2048,
	0, 2054, 2124, 0, 0, 0, 0, 0, 0, 0,
	0, 820, 285, 0, 1021, 1022, 208, 209, 1349, 1347,
	1642, 1646, 1643, 0, 211, 0, 0, 1408, 0, 1411,
	0, 0, 0, 0, 1418, 1435, 0, 0, 0, 0,
	0, 0, 1437, 0, 1436, 0, 0, 1467, 0, 1615,
	1622, 0, -2, 0, 0, 0, 218, 244, 0, 0,
	0, 0, 247, 1694, 220, 0, 0, 253, 253, 1346,
	0, 0, 1634, 1636, 1649, 0, 0, 0, 0, 196,
	0, 0, 1652, 1656, 1664, 1659, 1661, 1667, 0, 0,
	130, 139, 1768, 0, 0, 0, 1779, 0, 182, 0,
	0, 0, 1669, 266, 267, 0, 253, 0, 253, 259,
	253, 1624, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 0, 553, 510, 0, 0, 0, 0, 0, 0,
	1672, 1673, 287, 0, 0, 289, 387, 296, 472, 479,
	484, 486, 487, 1396, 0, 1463, 1455, 1456, 1457, 0,
	1367, 1462, 1464, 0, 0, 1372, 0, 0, 0, 0,
	1352, 1334, 0, 1365, 1337, 0, 619, 0, 396, 1323,
	1501, 1549, 1483, 0, 1552, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 0, 1791, 1795, 0, 1784, 1785,
	1818, 1924, 0, 0, 0, 1805, 1925, 0, 397, 0,
	397, 356, 0, 357, 358, 359, 366, 367, 368, 369,
	340, 343, 0, 354, 862, 864, 0, 0, 870, 1072,
	1077, 1385, 0, 0, 0, 0, 1914, 2230, -2, -2,
	2251, 0, 2617, 2619, 1906, 0, 2398, 1908, 0, 0,
	-2, 0, 0, 0, 1889, 1872, 0, 1947, 1939, 1941,
	1943, 2962, 2717, 3112, 1873, 1874, 2022, 0, 0, 1990,
	404, 413, 414, 0, 416, 417, 800, 0, 0, 0,
	0, 2050, 0, 0, 0, 807, 0, 0, 0, 0,
	1011, 0, 0, 1644, 213, 0, 0, 1412, 1413, 1415,
	0, 1417, 1419, 1420, 1337, 0, 1424, 0, 2640, 0,
	1429, 1432, 1433, 0, 0, 1446, 1468, 0, 1477, 0,
	1617, 1627, 1621, 0, 1619, 1479, 0, 217, 246, 219,
	248, 243, 0, 1624, 0, 221, 231, 0, 0, 160,
	0, 0, 2710, 199, 197, 195, 128, 134, 136, 142,
	1631, 185, 0, 162, 0, 268, 277, 1623, 279, 263,
	253, 0, 299, 301, 303, 304, 305, 306, 0, 1653,
	1657, 1665, 0, 1680, 1681, 1682, 1683, 1684, 0, 0,
	0, 298, 0, 0, 0, 478, 1337, 1395, 1336, 1454,
	0, 1465, 1337, 0, 0, 0, 0, 0, 0, 1339,
	0, 1338, 0, 0, 620, 623, 0, 626, 2041, 633,
	0, 0, 0, 1556, 0, 1603, 1601, 0, 1609, 0,
	0, 0, 1764, 0, 0, 1786, 1787, 640, 1811, 0,
	0, 1818, 1829, 376, 0, 379, 353, 0, 342, 0,
	866, 0, 868, 0, 1232, 1234, 0, 0, 2324, 2416,
	0, 0, 2349, 2350, -2, 0, 2290, 2400, 2402, 0,
	0, 0, 0, 0, 1958, 1967, 415, 1677, 1677, 1677,
	2044, 814, 815, 817, 811, 813, 0, 0, 1640, 0,
	1647, 255, 1410, 1414, 0, 1421, 0, 0, 0, 1425,
	1487, 0, 0, 1504, 1504, 1438, 0, 0, 1471, 1472,
	1392, 0, 1473, 1474, 1475, 1616, 1917, 1622, 1337, 0,
	0, 245, 250, 0, 0, 0, 0, 0, 0, 184,
	0, 257, 280, 1624, 0, 0, 1685, 0, 0, 295,
	329, 501, 499, 1339, 0, 1466, 1373, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1374, 1479, 0, 0,
	1443, 1350, 0, 1353, 0, 1335, 0, 624, 625, 628,
	0, 1550, 0, 1557, 0, 0, 1610, 0, 0, 1774,
	1763, 1795, 1788, 1789, 2041, 0, 1819, 0, 349, 350,
	865, 0, 0, 1242, 1243, 0, 0, 0, 0, 2411,
	1909, 2291, 0, 0, 1942, 1944, 1945, 1946, 801, 802,
	803, 0, 0, 1641, 225, 0, 1481, 1423, 1492, 0,
	0, 0, 0, 0, 1439, 1469, 1470, 1467, 1391, 0,
	1620, 1618, 1448, 1481, 1483, 223, 0, 1479, 0, 1401,
	0, 0, 1404, 0, 0, 200, 2710, 198, 0, 253,
	779, 1677, 253, 0, 332, 0, 534, 500, 502, 0,
	0, 506, 507, 508, 1331, 0, 1459, 1461, 1477, 1479,
	1392, 0, 1354, 1396, 1352, 1551, 1555, 1553, 1593, 1479,
	0, 1477, 0, 1781, 1795, 1775, 1776, 0, 1791, 0,
	0, 397, 867, 869, 2408, 2428, 2417, -2, 3045, 2718,
	0, 2428, 2428, 2403, 2404, 0, 0, 0, 1337, 0,
	1426, 1488, 1489, 0, 1484, 1485, 1486, 2639, 1427, 1428,
	1430, 1431, 2041, 0, 1478, 1487, 249, 1337, 1398, 0,
	0, 1399, 0, 0, 203, 0, 205, 281, 1675, 1678,
	0, 307, 0, 0, 475, 532, 0, 0, 503, 504,
	526, 505, 1328, 1330, 1337, 0, 1392, 1477, 1337, 0,
	0, 0, 1337, 1339, 1477, 0, 1392, 0, 1770, 1780,
	0, 1790, 1764, 0, 1814, 0, 378, 2413, 0, 0,
	2419, 2420, 2421, 2422, 2423, 2414, 2415, 816, 818, 1416,
	1422, 0, 1490, 0, 1491, 0, 0, 0, 1447, 1476,
	1492, 229, 1402, 0, 1405, 0, 201, 0, 0, 327,
	328, 531, 527, 1458, 1460, 1337, 1392, 2041, 1340, 0,
	1342, 1339, 1351, 1392, 0, 1337, 0, 1793, 1769, 1773,
	2598, 1774, 1812, 0, 0, 0, 2425, 2426, 0, 0,
	0, 1493, 0, 1496, 1497, 0, 1494, 1467, 0, 0,
	253, 0, 1893, 2041, 1337, 1630, 1341, 1331, 1337, 1479,
	2041, 1477, 1767, 1795, 1781, 0, 2041, 2424, 2427, 2418,
	1480, 1495, 1498, 1499, 1449, 0, 0, 1679, 330, 0,
	0, 533, 528, 529, 1630, 2041, 1442, 0, 1629, 1329,
	2041, 1477, 1630, 1392, 1760, 1766, 0, 0, 1770, 2041,
	1815, 1389, 0, 0, 530, 1440, 1630, 1628, 1630, 1392,
	1606, 1337, 1792, 1767, 1813, 1403, 1388, 0, 331, 1441,
	1604, 1337, 2041, 1761, 0, 2041, 1630, 0, 1630, 1607,
	1389, 1605, 1406,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 646, 3, 652, 647, 3,
	658, 659, 650, 648, 663, 649, 660, 651, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 667, 664,
	638, 640, 639, 643, 662, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 656, 3, 657, 653, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 665, 645, 666, 641,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 642, 57981, 644, 57982, 654, 57983, 655, 57984, 661,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1656
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1700
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1706
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1773
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1799
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1813
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1833
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1889
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1900
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2036
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2049
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2062
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2098
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2132
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2156
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2165
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2186
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2230
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2241
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = true
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = false
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2294
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 182:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2356
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2373
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2392
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2411
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2421
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2431
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2440
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2451
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2457
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2483
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2488
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2579
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2623
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2633
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2636
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2642
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = nil
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = true
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = false
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2889
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2893
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3085
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3267
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = nil
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3432
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3535
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3700
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3709
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3715
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3720
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3725
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3757
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = nil
		}
	case 398:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3833
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3847
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4065
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4086
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4087
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4091
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4096
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4115
		{
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "CREATE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4130
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4133
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4141
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = true
		}
	case 477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = false
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = true
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = false
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4237
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4271
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4272
		{
			return unimplemented(sqllex, "create window function")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4316
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4342
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4470
		{
		}
	case 549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4471
		{
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = true
		}
	case 555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = false
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4521
		{
			return unimplemented(sqllex, "create access method")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4522
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return unimplemented(sqllex, "create cast")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4524
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4526
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4527
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4528
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4529
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4531
		{
			return unimplemented(sqllex, "create publication")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4532
		{
			return unimplemented(sqllex, "create rule")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4533
		{
			return unimplemented(sqllex, "create server")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4536
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
		}
	case 574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4541
		{
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4544
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4545
		{
		}
	case 577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4548
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4550
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4554
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4555
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4557
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4558
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4559
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4560
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			return unimplemented(sqllex, "drop server")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4694
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4712
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4743
		{
		}
	case 635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4745
		{
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.str = ""
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4763
		{

			sqlVAL.union.val = nil
		}
	case 640:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "DELETE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4791
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4818
		{
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "DROP")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4962
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5019
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5024
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5076
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5085
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5109
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5117
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "DELETE")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5142
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "INSERT")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "DELETE")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "INSERT")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5307
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5340
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5431
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5481
		{
			return helpWith(sqllex, "GRANT")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5631
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			return helpWith(sqllex, "RESET")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "RESET")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			return helpWith(sqllex, "USE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5722
		{
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5728
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "USE")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5746
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5790
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5844
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5862
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5870
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5900
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5906
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5920
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5942
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5967
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5983
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			return unimplemented(sqllex, "set from current")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5991
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6005
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6010
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6014
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6026
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = tree.Low
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = tree.Normal
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.High
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6164
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6172
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6174
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6176
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6178
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6180
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6188
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6193
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6194
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6195
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6196
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6199
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = true
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = false
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = true
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = false
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = false
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6361
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = int64(1)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = int64(1)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = int64(1)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6416
		{
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6417
		{
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6420
		{
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6421
		{
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6430
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6435
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6440
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6457
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.str = "client_encoding"
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6479
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.str = "timezone"
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6485
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6516
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6524
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6545
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6609
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6644
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6649
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6658
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6664
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6678
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6689
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6712
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6723
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6741
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6771
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6781
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6794
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6802
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6835
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6862
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6867
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = true
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = true
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = false
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6903
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6904
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6922
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6948
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6949
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6965
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6981
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7017
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7022
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7024
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7043
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7048
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7079
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7089
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7094
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = true
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = false
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7126
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7141
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7151
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7162
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7176
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7184
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7194
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7198
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7212
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7228
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7233
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7238
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7243
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7248
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7268
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7281
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7286
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7308
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7326
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7334
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7355
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7360
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7365
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7369
		{
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7378
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7392
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7401
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7479
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7489
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7637
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7684
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7740
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7748
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7803
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7818
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7819
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7911
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7958
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8022
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8037
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8065
		{

			sqlVAL.union.val = nil
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.str = ""
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8081
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = nil
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8104
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8108
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8144
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8157
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8171
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8172
		{
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8254
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8265
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8271
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.str = ""
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8517
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{

			sqlVAL.union.val = true
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = false
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8572
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8579
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8679
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8707
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8717
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8800
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8801
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8802
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8804
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8887
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8972
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8981
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8989
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9000
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9028
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9030
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9032
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9034
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9045
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.str = ""
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = true
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9169
		{

			sqlVAL.union.val = true
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = false
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9186
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9200
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9212
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9224
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9235
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9246
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = false
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = true
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = true
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = nil
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9393
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9419
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9421
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9423
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9425
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9427
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9429
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9464
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9482
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9501
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9518
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9535
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9539
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = false
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = true
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = false
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = true
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = false
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9593
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9599
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9605
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.str = ""
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.str = ""
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = true
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = false
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = false
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9680
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9686
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9911
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9917
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9929
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9935
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9949
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9955
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10014
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = true
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = false
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10078
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.str = ""
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10114
		{
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10117
		{
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10118
		{
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10129
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10156
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10214
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10229
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10230
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10231
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10250
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10263
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10274
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10291
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10297
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10298
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10305
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10312
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10317
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10360
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10456
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.str = ""
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.str = ""
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{

		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10528
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.str = ""
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.str = ""
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.str = ""
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.str = ""
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10583
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10609
		{
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10656
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10718
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10854
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10869
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11013
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11048
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11049
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11050
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11111
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11155
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11171
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = true
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = false
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11225
		{
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = nil
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11239
		{
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = true
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = false
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = false
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = true
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11269
		{
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11273
		{
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11326
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11331
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11357
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11390
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11446
		{
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11485
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11516
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11518
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11533
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11555
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11560
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11565
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11586
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11602
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11633
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11675
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11685
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11720
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11731
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11761
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11794
		{
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = nil
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = true
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = false
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.str = tree.AstFull
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.str = tree.AstRight
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.str = tree.AstInner
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11913
		{
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11914
		{
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.str = tree.AstHash
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.str = ""
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12006
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12018
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12028
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = true
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = false
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = true
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = false
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12077
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12090
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12098
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12099
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12117
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12119
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12127
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12147
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12196
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12208
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12209
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = types.Geography
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12258
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12266
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12292
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12300
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = nil
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = types.Int2
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = types.Int
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = types.Float4
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = types.Float
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12343
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12351
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12359
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = types.Bool
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12373
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = types.Float
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12392
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12398
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12420
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = types.String
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = true
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = false
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = types.Date
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12469
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12477
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12491
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12500
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12508
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12525
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = true
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = false
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = false
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = types.Interval
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12549
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12633
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12648
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = nil
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12678
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12738
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12887
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12895
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12925
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12929
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13017
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13094
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13116
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13144
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13224
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13232
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13254
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13324
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13328
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13333
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13335
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13355
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13359
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13368
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13375
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13379
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13383
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13393
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13402
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13406
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13410
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13417
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13421
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13425
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13428
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13429
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13441
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13444
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13453
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13519
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13531
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13540
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13564
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13602
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13606
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13610
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13614
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13618
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13622
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13626
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13634
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13644
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13649
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13658
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13676
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13685
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13690
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13695
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13700
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13705
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13710
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13719
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13720
		{
			return unimplemented(sqllex, "treat")
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13741
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13743
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13746
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13752
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13756
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13762
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13766
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13773
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13777
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13783
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13793
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13801
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13805
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13809
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13816
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13836
		{
			sqlVAL.str = ""
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13852
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13868
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13882
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13895
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13923
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13927
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13931
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13935
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13951
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13955
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13959
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13963
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13968
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13992
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14004
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14008
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14012
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14028
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14029
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14030
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14031
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14032
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14033
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14034
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14035
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14036
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14037
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14038
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14039
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14041
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14042
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14043
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14044
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14045
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14046
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14047
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14048
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14049
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14050
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14051
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14052
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14053
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14054
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14055
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14056
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14057
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14058
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14059
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14061
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14062
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14063
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14068
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14084
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14091
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14092
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14093
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14094
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14117
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14121
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14127
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14131
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14135
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14146
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14150
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14156
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14160
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14167
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14173
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14183
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14193
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14197
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14203
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14213
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14240
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14244
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14248
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14254
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14261
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14265
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14286
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14290
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14294
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14298
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14304
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14316
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14320
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14324
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14330
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14342
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14349
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14359
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14365
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14369
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14376
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14393
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14399
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14408
		{
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14409
		{
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14413
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14417
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14423
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14432
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14436
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14440
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14452
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14462
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14485
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14493
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14516
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14525
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14529
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14533
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14543
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14562
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14566
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14578
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14582
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14591
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14602
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14611
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14619
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14636
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14721
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14729
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14733
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14739
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14749
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14755
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14762
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14789
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14796
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14800
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14804
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14818
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14822
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14826
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14839
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14848
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14866
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14879
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14886
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14911
		{
			sqlVAL.str = ""
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14917
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14921
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
