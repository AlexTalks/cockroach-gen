// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15860

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1920,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	284, 582,
	-2, 0,
	-1, 76,
	8, 1055,
	29, 1055,
	651, 1055,
	652, 1055,
	-2, 0,
	-1, 77,
	8, 1055,
	29, 1055,
	651, 1055,
	652, 1055,
	-2, 0,
	-1, 80,
	1, 1767,
	140, 1767,
	271, 1767,
	359, 1767,
	422, 1767,
	432, 1767,
	632, 1767,
	664, 1767,
	-2, 0,
	-1, 81,
	1, 1767,
	664, 1767,
	-2, 0,
	-1, 87,
	264, 295,
	566, 295,
	-2, 0,
	-1, 101,
	205, 482,
	250, 1641,
	266, 1641,
	284, 482,
	424, 482,
	436, 1384,
	480, 482,
	497, 1384,
	550, 1384,
	579, 482,
	608, 1384,
	-2, 0,
	-1, 108,
	142, 1920,
	259, 1920,
	591, 1920,
	592, 1920,
	-2, 0,
	-1, 126,
	162, 1891,
	183, 1891,
	196, 1891,
	262, 1891,
	298, 1891,
	372, 1891,
	383, 1891,
	585, 1891,
	-2, 1862,
	-1, 170,
	170, 1192,
	282, 1192,
	427, 1153,
	502, 1153,
	549, 1153,
	569, 1192,
	571, 1153,
	-2, 0,
	-1, 175,
	4, 1922,
	21, 1922,
	22, 1922,
	23, 1922,
	24, 1922,
	25, 1922,
	26, 1922,
	27, 1922,
	28, 1922,
	30, 1922,
	31, 1922,
	37, 1922,
	41, 1922,
	43, 1922,
	44, 1922,
	45, 1922,
	47, 1922,
	48, 1922,
	49, 1922,
	50, 1922,
	51, 1922,
	52, 1922,
	53, 1922,
	54, 1922,
	55, 1922,
	57, 1922,
	58, 1922,
	59, 1922,
	60, 1922,
	62, 1922,
	63, 1922,
	64, 1922,
	65, 1922,
	66, 1922,
	67, 1922,
	68, 1922,
	69, 1922,
	73, 1922,
	74, 1922,
	75, 1922,
	76, 1922,
	78, 1922,
	79, 1922,
	80, 1922,
	84, 1922,
	85, 1922,
	86, 1922,
	87, 1922,
	88, 1922,
	89, 1922,
	90, 1922,
	91, 1922,
	94, 1922,
	95, 1922,
	96, 1922,
	97, 1922,
	98, 1922,
	99, 1922,
	101, 1922,
	103, 1922,
	104, 1922,
	105, 1922,
	106, 1922,
	107, 1922,
	108, 1922,
	109, 1922,
	111, 1922,
	112, 1922,
	113, 1922,
	115, 1922,
	116, 1922,
	117, 1922,
	125, 1922,
	126, 1922,
	127, 1922,
	128, 1922,
	129, 1922,
	131, 1922,
	132, 1922,
	133, 1922,
	134, 1922,
	136, 1922,
	137, 1922,
	138, 1922,
	139, 1922,
	141, 1922,
	142, 1922,
	143, 1922,
	144, 1922,
	146, 1922,
	147, 1922,
	148, 1922,
	151, 1922,
	152, 1922,
	153, 1922,
	155, 1922,
	156, 1922,
	157, 1922,
	159, 1922,
	160, 1922,
	161, 1922,
	163, 1922,
	164, 1922,
	165, 1922,
	166, 1922,
	167, 1922,
	168, 1922,
	169, 1922,
	170, 1922,
	171, 1922,
	172, 1922,
	173, 1922,
	174, 1922,
	175, 1922,
	176, 1922,
	177, 1922,
	178, 1922,
	179, 1922,
	180, 1922,
	182, 1922,
	188, 1922,
	189, 1922,
	190, 1922,
	191, 1922,
	195, 1922,
	197, 1922,
	198, 1922,
	199, 1922,
	201, 1922,
	202, 1922,
	205, 1922,
	206, 1922,
	207, 1922,
	208, 1922,
	209, 1922,
	210, 1922,
	211, 1922,
	212, 1922,
	213, 1922,
	214, 1922,
	215, 1922,
	216, 1922,
	217, 1922,
	218, 1922,
	220, 1922,
	221, 1922,
	223, 1922,
	224, 1922,
	226, 1922,
	227, 1922,
	228, 1922,
	229, 1922,
	230, 1922,
	231, 1922,
	232, 1922,
	233, 1922,
	234, 1922,
	235, 1922,
	236, 1922,
	238, 1922,
	239, 1922,
	240, 1922,
	242, 1922,
	243, 1922,
	244, 1922,
	245, 1922,
	246, 1922,
	250, 1922,
	251, 1922,
	252, 1922,
	253, 1922,
	256, 1922,
	257, 1922,
	258, 1922,
	259, 1922,
	260, 1922,
	261, 1922,
	263, 1922,
	265, 1922,
	266, 1922,
	267, 1922,
	269, 1922,
	271, 1922,
	272, 1922,
	273, 1922,
	275, 1922,
	279, 1922,
	280, 1922,
	281, 1922,
	282, 1922,
	283, 1922,
	284, 1922,
	285, 1922,
	287, 1922,
	288, 1922,
	289, 1922,
	291, 1922,
	292, 1922,
	293, 1922,
	295, 1922,
	296, 1922,
	299, 1922,
	300, 1922,
	301, 1922,
	302, 1922,
	303, 1922,
	304, 1922,
	305, 1922,
	308, 1922,
	309, 1922,
	310, 1922,
	311, 1922,
	313, 1922,
	314, 1922,
	315, 1922,
	316, 1922,
	317, 1922,
	318, 1922,
	319, 1922,
	320, 1922,
	321, 1922,
	322, 1922,
	323, 1922,
	324, 1922,
	325, 1922,
	326, 1922,
	327, 1922,
	328, 1922,
	329, 1922,
	330, 1922,
	331, 1922,
	332, 1922,
	333, 1922,
	334, 1922,
	335, 1922,
	337, 1922,
	339, 1922,
	340, 1922,
	341, 1922,
	342, 1922,
	343, 1922,
	344, 1922,
	345, 1922,
	346, 1922,
	347, 1922,
	348, 1922,
	349, 1922,
	350, 1922,
	351, 1922,
	352, 1922,
	353, 1922,
	354, 1922,
	355, 1922,
	357, 1922,
	358, 1922,
	360, 1922,
	362, 1922,
	363, 1922,
	364, 1922,
	365, 1922,
	367, 1922,
	368, 1922,
	369, 1922,
	370, 1922,
	371, 1922,
	374, 1922,
	376, 1922,
	378, 1922,
	379, 1922,
	380, 1922,
	381, 1922,
	384, 1922,
	385, 1922,
	386, 1922,
	388, 1922,
	390, 1922,
	391, 1922,
	392, 1922,
	393, 1922,
	394, 1922,
	395, 1922,
	396, 1922,
	397, 1922,
	398, 1922,
	399, 1922,
	400, 1922,
	401, 1922,
	402, 1922,
	403, 1922,
	405, 1922,
	406, 1922,
	407, 1922,
	408, 1922,
	409, 1922,
	410, 1922,
	411, 1922,
	412, 1922,
	413, 1922,
	414, 1922,
	415, 1922,
	416, 1922,
	417, 1922,
	418, 1922,
	419, 1922,
	421, 1922,
	422, 1922,
	423, 1922,
	425, 1922,
	426, 1922,
	427, 1922,
	428, 1922,
	429, 1922,
	430, 1922,
	431, 1922,
	432, 1922,
	433, 1922,
	434, 1922,
	435, 1922,
	436, 1922,
	437, 1922,
	438, 1922,
	440, 1922,
	442, 1922,
	443, 1922,
	444, 1922,
	450, 1922,
	451, 1922,
	452, 1922,
	454, 1922,
	455, 1922,
	456, 1922,
	457, 1922,
	458, 1922,
	459, 1922,
	460, 1922,
	461, 1922,
	462, 1922,
	463, 1922,
	464, 1922,
	466, 1922,
	467, 1922,
	468, 1922,
	469, 1922,
	470, 1922,
	472, 1922,
	473, 1922,
	474, 1922,
	475, 1922,
	476, 1922,
	477, 1922,
	478, 1922,
	480, 1922,
	481, 1922,
	482, 1922,
	483, 1922,
	484, 1922,
	485, 1922,
	486, 1922,
	487, 1922,
	488, 1922,
	489, 1922,
	490, 1922,
	491, 1922,
	492, 1922,
	493, 1922,
	494, 1922,
	495, 1922,
	497, 1922,
	498, 1922,
	499, 1922,
	500, 1922,
	501, 1922,
	502, 1922,
	504, 1922,
	505, 1922,
	506, 1922,
	507, 1922,
	508, 1922,
	509, 1922,
	510, 1922,
	512, 1922,
	513, 1922,
	514, 1922,
	515, 1922,
	516, 1922,
	517, 1922,
	518, 1922,
	519, 1922,
	521, 1922,
	523, 1922,
	524, 1922,
	525, 1922,
	526, 1922,
	527, 1922,
	528, 1922,
	529, 1922,
	530, 1922,
	531, 1922,
	532, 1922,
	533, 1922,
	534, 1922,
	535, 1922,
	536, 1922,
	537, 1922,
	538, 1922,
	539, 1922,
	540, 1922,
	541, 1922,
	542, 1922,
	543, 1922,
	545, 1922,
	546, 1922,
	548, 1922,
	549, 1922,
	551, 1922,
	552, 1922,
	553, 1922,
	554, 1922,
	555, 1922,
	556, 1922,
	558, 1922,
	559, 1922,
	561, 1922,
	562, 1922,
	563, 1922,
	564, 1922,
	565, 1922,
	567, 1922,
	569, 1922,
	570, 1922,
	571, 1922,
	572, 1922,
	573, 1922,
	574, 1922,
	575, 1922,
	576, 1922,
	578, 1922,
	579, 1922,
	580, 1922,
	581, 1922,
	582, 1922,
	583, 1922,
	584, 1922,
	587, 1922,
	588, 1922,
	589, 1922,
	590, 1922,
	591, 1922,
	592, 1922,
	593, 1922,
	594, 1922,
	595, 1922,
	597, 1922,
	600, 1922,
	601, 1922,
	602, 1922,
	603, 1922,
	604, 1922,
	605, 1922,
	607, 1922,
	608, 1922,
	609, 1922,
	610, 1922,
	611, 1922,
	612, 1922,
	613, 1922,
	614, 1922,
	615, 1922,
	616, 1922,
	617, 1922,
	618, 1922,
	623, 1922,
	624, 1922,
	625, 1922,
	626, 1922,
	627, 1922,
	628, 1922,
	-2, 0,
	-1, 177,
	1, 1767,
	664, 1767,
	667, 1767,
	-2, 0,
	-1, 178,
	1, 1767,
	566, 1767,
	664, 1767,
	667, 1767,
	-2, 0,
	-1, 214,
	162, 1890,
	183, 1890,
	196, 1890,
	262, 1890,
	298, 1890,
	372, 1890,
	383, 1890,
	585, 1890,
	-2, 1865,
	-1, 275,
	4, 1929,
	5, 1929,
	6, 1929,
	7, 1929,
	8, 1929,
	9, 1929,
	10, 1929,
	21, 1929,
	22, 1929,
	23, 1929,
	24, 1929,
	25, 1929,
	26, 1929,
	27, 1929,
	28, 1929,
	30, 1929,
	31, 1929,
	37, 1929,
	38, 1929,
	41, 1929,
	43, 1929,
	44, 1929,
	45, 1929,
	46, 1929,
	47, 1929,
	48, 1929,
	49, 1929,
	50, 1929,
	51, 1929,
	52, 1929,
	53, 1929,
	54, 1929,
	55, 1929,
	57, 1929,
	58, 1929,
	59, 1929,
	60, 1929,
	62, 1929,
	63, 1929,
	64, 1929,
	65, 1929,
	66, 1929,
	67, 1929,
	68, 1929,
	69, 1929,
	70, 1929,
	71, 1929,
	72, 1929,
	73, 1929,
	74, 1929,
	75, 1929,
	76, 1929,
	78, 1929,
	79, 1929,
	80, 1929,
	82, 1929,
	84, 1929,
	85, 1929,
	86, 1929,
	87, 1929,
	88, 1929,
	89, 1929,
	90, 1929,
	91, 1929,
	94, 1929,
	95, 1929,
	96, 1929,
	97, 1929,
	98, 1929,
	99, 1929,
	101, 1929,
	103, 1929,
	104, 1929,
	105, 1929,
	106, 1929,
	107, 1929,
	108, 1929,
	109, 1929,
	111, 1929,
	112, 1929,
	113, 1929,
	114, 1929,
	115, 1929,
	116, 1929,
	117, 1929,
	118, 1929,
	119, 1929,
	120, 1929,
	121, 1929,
	122, 1929,
	123, 1929,
	124, 1929,
	125, 1929,
	126, 1929,
	127, 1929,
	128, 1929,
	129, 1929,
	130, 1929,
	131, 1929,
	132, 1929,
	133, 1929,
	134, 1929,
	135, 1929,
	136, 1929,
	137, 1929,
	138, 1929,
	139, 1929,
	141, 1929,
	142, 1929,
	143, 1929,
	144, 1929,
	146, 1929,
	147, 1929,
	148, 1929,
	151, 1929,
	152, 1929,
	153, 1929,
	155, 1929,
	156, 1929,
	157, 1929,
	159, 1929,
	160, 1929,
	161, 1929,
	163, 1929,
	164, 1929,
	165, 1929,
	166, 1929,
	167, 1929,
	168, 1929,
	169, 1929,
	170, 1929,
	171, 1929,
	172, 1929,
	173, 1929,
	174, 1929,
	175, 1929,
	176, 1929,
	177, 1929,
	178, 1929,
	179, 1929,
	180, 1929,
	181, 1929,
	182, 1929,
	188, 1929,
	189, 1929,
	190, 1929,
	191, 1929,
	195, 1929,
	197, 1929,
	198, 1929,
	199, 1929,
	201, 1929,
	202, 1929,
	204, 1929,
	205, 1929,
	206, 1929,
	207, 1929,
	208, 1929,
	209, 1929,
	210, 1929,
	211, 1929,
	212, 1929,
	213, 1929,
	214, 1929,
	215, 1929,
	216, 1929,
	217, 1929,
	218, 1929,
	220, 1929,
	221, 1929,
	223, 1929,
	224, 1929,
	226, 1929,
	227, 1929,
	228, 1929,
	229, 1929,
	230, 1929,
	231, 1929,
	232, 1929,
	233, 1929,
	234, 1929,
	235, 1929,
	236, 1929,
	237, 1929,
	238, 1929,
	239, 1929,
	240, 1929,
	242, 1929,
	243, 1929,
	244, 1929,
	245, 1929,
	246, 1929,
	250, 1929,
	251, 1929,
	252, 1929,
	253, 1929,
	255, 1929,
	256, 1929,
	257, 1929,
	258, 1929,
	259, 1929,
	260, 1929,
	261, 1929,
	263, 1929,
	265, 1929,
	266, 1929,
	267, 1929,
	268, 1929,
	269, 1929,
	270, 1929,
	271, 1929,
	272, 1929,
	273, 1929,
	274, 1929,
	275, 1929,
	279, 1929,
	280, 1929,
	281, 1929,
	282, 1929,
	283, 1929,
	284, 1929,
	285, 1929,
	287, 1929,
	288, 1929,
	289, 1929,
	291, 1929,
	292, 1929,
	293, 1929,
	294, 1929,
	295, 1929,
	296, 1929,
	297, 1929,
	299, 1929,
	300, 1929,
	301, 1929,
	302, 1929,
	303, 1929,
	304, 1929,
	305, 1929,
	306, 1929,
	307, 1929,
	308, 1929,
	309, 1929,
	310, 1929,
	311, 1929,
	313, 1929,
	314, 1929,
	315, 1929,
	316, 1929,
	317, 1929,
	318, 1929,
	319, 1929,
	320, 1929,
	321, 1929,
	322, 1929,
	323, 1929,
	324, 1929,
	325, 1929,
	326, 1929,
	327, 1929,
	328, 1929,
	329, 1929,
	330, 1929,
	331, 1929,
	332, 1929,
	333, 1929,
	334, 1929,
	335, 1929,
	337, 1929,
	338, 1929,
	339, 1929,
	340, 1929,
	341, 1929,
	342, 1929,
	343, 1929,
	344, 1929,
	345, 1929,
	346, 1929,
	347, 1929,
	348, 1929,
	349, 1929,
	350, 1929,
	351, 1929,
	352, 1929,
	353, 1929,
	354, 1929,
	355, 1929,
	356, 1929,
	357, 1929,
	358, 1929,
	359, 1929,
	360, 1929,
	361, 1929,
	362, 1929,
	363, 1929,
	364, 1929,
	365, 1929,
	366, 1929,
	367, 1929,
	368, 1929,
	369, 1929,
	370, 1929,
	371, 1929,
	374, 1929,
	376, 1929,
	379, 1929,
	380, 1929,
	381, 1929,
	384, 1929,
	385, 1929,
	386, 1929,
	387, 1929,
	388, 1929,
	389, 1929,
	390, 1929,
	391, 1929,
	392, 1929,
	393, 1929,
	394, 1929,
	395, 1929,
	396, 1929,
	397, 1929,
	398, 1929,
	399, 1929,
	400, 1929,
	401, 1929,
	402, 1929,
	403, 1929,
	405, 1929,
	406, 1929,
	407, 1929,
	408, 1929,
	409, 1929,
	410, 1929,
	411, 1929,
	412, 1929,
	413, 1929,
	414, 1929,
	415, 1929,
	416, 1929,
	417, 1929,
	418, 1929,
	419, 1929,
	421, 1929,
	422, 1929,
	423, 1929,
	425, 1929,
	426, 1929,
	427, 1929,
	428, 1929,
	429, 1929,
	430, 1929,
	431, 1929,
	432, 1929,
	433, 1929,
	434, 1929,
	435, 1929,
	436, 1929,
	437, 1929,
	438, 1929,
	440, 1929,
	442, 1929,
	443, 1929,
	444, 1929,
	450, 1929,
	451, 1929,
	452, 1929,
	454, 1929,
	455, 1929,
	456, 1929,
	457, 1929,
	458, 1929,
	459, 1929,
	460, 1929,
	461, 1929,
	462, 1929,
	463, 1929,
	464, 1929,
	466, 1929,
	467, 1929,
	468, 1929,
	469, 1929,
	470, 1929,
	471, 1929,
	472, 1929,
	473, 1929,
	474, 1929,
	475, 1929,
	476, 1929,
	477, 1929,
	478, 1929,
	480, 1929,
	481, 1929,
	482, 1929,
	483, 1929,
	484, 1929,
	485, 1929,
	486, 1929,
	487, 1929,
	488, 1929,
	489, 1929,
	490, 1929,
	491, 1929,
	492, 1929,
	493, 1929,
	494, 1929,
	495, 1929,
	497, 1929,
	498, 1929,
	499, 1929,
	500, 1929,
	501, 1929,
	502, 1929,
	503, 1929,
	504, 1929,
	505, 1929,
	506, 1929,
	507, 1929,
	508, 1929,
	509, 1929,
	510, 1929,
	511, 1929,
	512, 1929,
	513, 1929,
	514, 1929,
	515, 1929,
	516, 1929,
	517, 1929,
	518, 1929,
	519, 1929,
	521, 1929,
	523, 1929,
	524, 1929,
	525, 1929,
	526, 1929,
	527, 1929,
	528, 1929,
	529, 1929,
	530, 1929,
	531, 1929,
	532, 1929,
	533, 1929,
	534, 1929,
	535, 1929,
	536, 1929,
	537, 1929,
	538, 1929,
	539, 1929,
	540, 1929,
	541, 1929,
	542, 1929,
	543, 1929,
	545, 1929,
	546, 1929,
	547, 1929,
	548, 1929,
	549, 1929,
	551, 1929,
	552, 1929,
	553, 1929,
	554, 1929,
	555, 1929,
	556, 1929,
	558, 1929,
	559, 1929,
	561, 1929,
	562, 1929,
	563, 1929,
	564, 1929,
	565, 1929,
	567, 1929,
	569, 1929,
	570, 1929,
	571, 1929,
	572, 1929,
	573, 1929,
	574, 1929,
	575, 1929,
	576, 1929,
	577, 1929,
	578, 1929,
	579, 1929,
	580, 1929,
	581, 1929,
	582, 1929,
	583, 1929,
	584, 1929,
	586, 1929,
	587, 1929,
	588, 1929,
	589, 1929,
	590, 1929,
	591, 1929,
	592, 1929,
	593, 1929,
	594, 1929,
	595, 1929,
	596, 1929,
	597, 1929,
	600, 1929,
	601, 1929,
	602, 1929,
	603, 1929,
	604, 1929,
	605, 1929,
	607, 1929,
	608, 1929,
	609, 1929,
	610, 1929,
	611, 1929,
	612, 1929,
	613, 1929,
	614, 1929,
	615, 1929,
	616, 1929,
	617, 1929,
	618, 1929,
	623, 1929,
	624, 1929,
	625, 1929,
	626, 1929,
	627, 1929,
	628, 1929,
	629, 1929,
	644, 1929,
	651, 1929,
	652, 1929,
	653, 1929,
	661, 1929,
	665, 1929,
	-2, 0,
	-1, 855,
	4, 1639,
	21, 1639,
	22, 1639,
	23, 1639,
	24, 1639,
	25, 1639,
	26, 1639,
	27, 1639,
	28, 1639,
	30, 1639,
	31, 1639,
	37, 1639,
	41, 1639,
	43, 1639,
	44, 1639,
	45, 1639,
	47, 1639,
	48, 1639,
	49, 1639,
	50, 1639,
	51, 1639,
	52, 1639,
	53, 1639,
	54, 1639,
	55, 1639,
	57, 1639,
	58, 1639,
	59, 1639,
	60, 1639,
	62, 1639,
	63, 1639,
	64, 1639,
	65, 1639,
	66, 1639,
	67, 1639,
	68, 1639,
	69, 1639,
	73, 1639,
	74, 1639,
	75, 1639,
	76, 1639,
	78, 1639,
	79, 1639,
	80, 1639,
	84, 1639,
	85, 1639,
	86, 1639,
	87, 1639,
	88, 1639,
	89, 1639,
	90, 1639,
	91, 1639,
	94, 1639,
	95, 1639,
	96, 1639,
	97, 1639,
	98, 1639,
	99, 1639,
	101, 1639,
	103, 1639,
	104, 1639,
	105, 1639,
	106, 1639,
	107, 1639,
	108, 1639,
	109, 1639,
	111, 1639,
	112, 1639,
	113, 1639,
	115, 1639,
	116, 1639,
	117, 1639,
	125, 1639,
	126, 1639,
	127, 1639,
	128, 1639,
	129, 1639,
	131, 1639,
	132, 1639,
	133, 1639,
	134, 1639,
	136, 1639,
	137, 1639,
	138, 1639,
	139, 1639,
	141, 1639,
	142, 1639,
	143, 1639,
	144, 1639,
	146, 1639,
	147, 1639,
	148, 1639,
	151, 1639,
	152, 1639,
	153, 1639,
	155, 1639,
	156, 1639,
	157, 1639,
	159, 1639,
	160, 1639,
	161, 1639,
	163, 1639,
	164, 1639,
	165, 1639,
	166, 1639,
	167, 1639,
	168, 1639,
	169, 1639,
	170, 1639,
	171, 1639,
	172, 1639,
	173, 1639,
	174, 1639,
	175, 1639,
	176, 1639,
	177, 1639,
	178, 1639,
	179, 1639,
	180, 1639,
	182, 1639,
	188, 1639,
	189, 1639,
	190, 1639,
	191, 1639,
	195, 1639,
	197, 1639,
	198, 1639,
	199, 1639,
	201, 1639,
	202, 1639,
	205, 1639,
	206, 1639,
	207, 1639,
	208, 1639,
	209, 1639,
	210, 1639,
	211, 1639,
	212, 1639,
	213, 1639,
	214, 1639,
	215, 1639,
	216, 1639,
	217, 1639,
	218, 1639,
	220, 1639,
	221, 1639,
	223, 1639,
	224, 1639,
	226, 1639,
	227, 1639,
	228, 1639,
	229, 1639,
	230, 1639,
	231, 1639,
	232, 1639,
	233, 1639,
	234, 1639,
	235, 1639,
	236, 1639,
	238, 1639,
	239, 1639,
	240, 1639,
	242, 1639,
	243, 1639,
	244, 1639,
	245, 1639,
	246, 1639,
	250, 1639,
	251, 1639,
	252, 1639,
	253, 1639,
	256, 1639,
	257, 1639,
	258, 1639,
	259, 1639,
	260, 1639,
	261, 1639,
	263, 1639,
	265, 1639,
	266, 1639,
	267, 1639,
	269, 1639,
	271, 1639,
	272, 1639,
	273, 1639,
	275, 1639,
	279, 1639,
	280, 1639,
	281, 1639,
	282, 1639,
	283, 1639,
	284, 1639,
	285, 1639,
	287, 1639,
	288, 1639,
	289, 1639,
	291, 1639,
	292, 1639,
	293, 1639,
	295, 1639,
	296, 1639,
	299, 1639,
	300, 1639,
	301, 1639,
	302, 1639,
	303, 1639,
	304, 1639,
	305, 1639,
	308, 1639,
	309, 1639,
	310, 1639,
	311, 1639,
	313, 1639,
	314, 1639,
	315, 1639,
	316, 1639,
	317, 1639,
	318, 1639,
	319, 1639,
	320, 1639,
	321, 1639,
	322, 1639,
	323, 1639,
	324, 1639,
	325, 1639,
	326, 1639,
	327, 1639,
	328, 1639,
	329, 1639,
	330, 1639,
	331, 1639,
	332, 1639,
	333, 1639,
	334, 1639,
	335, 1639,
	337, 1639,
	339, 1639,
	340, 1639,
	341, 1639,
	342, 1639,
	343, 1639,
	344, 1639,
	345, 1639,
	346, 1639,
	347, 1639,
	348, 1639,
	349, 1639,
	350, 1639,
	351, 1639,
	352, 1639,
	353, 1639,
	354, 1639,
	355, 1639,
	357, 1639,
	358, 1639,
	360, 1639,
	362, 1639,
	363, 1639,
	364, 1639,
	365, 1639,
	367, 1639,
	368, 1639,
	369, 1639,
	370, 1639,
	371, 1639,
	374, 1639,
	376, 1639,
	379, 1639,
	380, 1639,
	381, 1639,
	384, 1639,
	385, 1639,
	386, 1639,
	388, 1639,
	390, 1639,
	391, 1639,
	392, 1639,
	393, 1639,
	394, 1639,
	395, 1639,
	396, 1639,
	397, 1639,
	398, 1639,
	399, 1639,
	400, 1639,
	401, 1639,
	402, 1639,
	403, 1639,
	405, 1639,
	406, 1639,
	407, 1639,
	408, 1639,
	409, 1639,
	410, 1639,
	411, 1639,
	412, 1639,
	413, 1639,
	414, 1639,
	415, 1639,
	416, 1639,
	417, 1639,
	418, 1639,
	419, 1639,
	421, 1639,
	422, 1639,
	423, 1639,
	425, 1639,
	426, 1639,
	427, 1639,
	428, 1639,
	429, 1639,
	430, 1639,
	431, 1639,
	432, 1639,
	433, 1639,
	434, 1639,
	435, 1639,
	436, 1639,
	437, 1639,
	438, 1639,
	440, 1639,
	442, 1639,
	443, 1639,
	444, 1639,
	450, 1639,
	451, 1639,
	452, 1639,
	454, 1639,
	455, 1639,
	456, 1639,
	457, 1639,
	458, 1639,
	459, 1639,
	460, 1639,
	461, 1639,
	462, 1639,
	463, 1639,
	464, 1639,
	466, 1639,
	467, 1639,
	468, 1639,
	469, 1639,
	470, 1639,
	472, 1639,
	473, 1639,
	474, 1639,
	475, 1639,
	476, 1639,
	477, 1639,
	478, 1639,
	480, 1639,
	481, 1639,
	482, 1639,
	483, 1639,
	484, 1639,
	485, 1639,
	486, 1639,
	487, 1639,
	488, 1639,
	489, 1639,
	490, 1639,
	491, 1639,
	492, 1639,
	493, 1639,
	494, 1639,
	495, 1639,
	497, 1639,
	498, 1639,
	499, 1639,
	500, 1639,
	501, 1639,
	502, 1639,
	504, 1639,
	505, 1639,
	506, 1639,
	507, 1639,
	508, 1639,
	509, 1639,
	510, 1639,
	512, 1639,
	513, 1639,
	514, 1639,
	515, 1639,
	516, 1639,
	517, 1639,
	518, 1639,
	519, 1639,
	521, 1639,
	523, 1639,
	524, 1639,
	525, 1639,
	526, 1639,
	527, 1639,
	528, 1639,
	529, 1639,
	530, 1639,
	531, 1639,
	532, 1639,
	533, 1639,
	534, 1639,
	535, 1639,
	536, 1639,
	537, 1639,
	538, 1639,
	539, 1639,
	540, 1639,
	541, 1639,
	542, 1639,
	543, 1639,
	545, 1639,
	546, 1639,
	548, 1639,
	549, 1639,
	551, 1639,
	552, 1639,
	553, 1639,
	554, 1639,
	555, 1639,
	556, 1639,
	558, 1639,
	559, 1639,
	561, 1639,
	562, 1639,
	563, 1639,
	564, 1639,
	565, 1639,
	567, 1639,
	569, 1639,
	570, 1639,
	571, 1639,
	572, 1639,
	573, 1639,
	574, 1639,
	575, 1639,
	576, 1639,
	578, 1639,
	579, 1639,
	580, 1639,
	581, 1639,
	582, 1639,
	583, 1639,
	584, 1639,
	587, 1639,
	588, 1639,
	589, 1639,
	590, 1639,
	591, 1639,
	592, 1639,
	593, 1639,
	594, 1639,
	595, 1639,
	597, 1639,
	600, 1639,
	601, 1639,
	602, 1639,
	603, 1639,
	604, 1639,
	605, 1639,
	607, 1639,
	608, 1639,
	609, 1639,
	610, 1639,
	611, 1639,
	612, 1639,
	613, 1639,
	614, 1639,
	615, 1639,
	616, 1639,
	617, 1639,
	618, 1639,
	623, 1639,
	624, 1639,
	625, 1639,
	626, 1639,
	627, 1639,
	628, 1639,
	-2, 0,
	-1, 874,
	203, 2747,
	566, 2747,
	643, 2747,
	663, 2747,
	-2, 0,
	-1, 875,
	203, 2732,
	566, 2732,
	643, 2732,
	663, 2732,
	-2, 0,
	-1, 877,
	203, 3030,
	566, 3030,
	643, 3030,
	663, 3030,
	-2, 0,
	-1, 880,
	203, 2872,
	566, 2872,
	643, 2872,
	663, 2872,
	-2, 0,
	-1, 881,
	203, 3077,
	566, 3077,
	643, 3077,
	663, 3077,
	-2, 0,
	-1, 889,
	203, 2900,
	566, 2900,
	643, 2900,
	663, 2900,
	-2, 917,
	-1, 905,
	8, 1054,
	29, 1054,
	651, 1054,
	652, 1054,
	-2, 1059,
	-1, 909,
	1, 2805,
	664, 2805,
	667, 2805,
	-2, 1059,
	-1, 910,
	1, 2859,
	664, 2859,
	667, 2859,
	-2, 1059,
	-1, 913,
	1, 2905,
	664, 2905,
	667, 2905,
	-2, 1052,
	-1, 914,
	1, 2962,
	664, 2962,
	667, 2962,
	-2, 1053,
	-1, 915,
	1, 2810,
	664, 2810,
	667, 2810,
	-2, 1056,
	-1, 916,
	1, 2718,
	664, 2718,
	667, 2718,
	-2, 1057,
	-1, 959,
	663, 2675,
	666, 2675,
	-2, 1300,
	-1, 960,
	663, 2677,
	666, 2677,
	-2, 1301,
	-1, 961,
	663, 2676,
	666, 2676,
	-2, 1302,
	-1, 962,
	666, 2599,
	-2, 1303,
	-1, 988,
	196, 329,
	-2, 0,
	-1, 1010,
	46, 2648,
	-2, 0,
	-1, 1011,
	608, 1617,
	-2, 1385,
	-1, 1028,
	4, 2077,
	21, 2077,
	22, 2077,
	23, 2077,
	24, 2077,
	25, 2077,
	26, 2077,
	27, 2077,
	28, 2077,
	30, 2077,
	31, 2077,
	37, 2077,
	41, 2077,
	43, 2077,
	44, 2077,
	45, 2077,
	47, 2077,
	48, 2077,
	49, 2077,
	50, 2077,
	51, 2077,
	52, 2077,
	53, 2077,
	54, 2077,
	55, 2077,
	57, 2077,
	58, 2077,
	59, 2077,
	60, 2077,
	62, 2077,
	63, 2077,
	64, 2077,
	65, 2077,
	66, 2077,
	67, 2077,
	68, 2077,
	69, 2077,
	73, 2077,
	74, 2077,
	75, 2077,
	76, 2077,
	78, 2077,
	79, 2077,
	80, 2077,
	84, 2077,
	85, 2077,
	86, 2077,
	87, 2077,
	88, 2077,
	89, 2077,
	90, 2077,
	91, 2077,
	94, 2077,
	95, 2077,
	96, 2077,
	97, 2077,
	98, 2077,
	99, 2077,
	101, 2077,
	103, 2077,
	104, 2077,
	105, 2077,
	106, 2077,
	107, 2077,
	108, 2077,
	109, 2077,
	111, 2077,
	112, 2077,
	113, 2077,
	115, 2077,
	116, 2077,
	117, 2077,
	125, 2077,
	126, 2077,
	127, 2077,
	128, 2077,
	129, 2077,
	131, 2077,
	132, 2077,
	133, 2077,
	134, 2077,
	136, 2077,
	137, 2077,
	138, 2077,
	139, 2077,
	141, 2077,
	142, 2077,
	143, 2077,
	144, 2077,
	146, 2077,
	147, 2077,
	148, 2077,
	151, 2077,
	152, 2077,
	153, 2077,
	155, 2077,
	156, 2077,
	157, 2077,
	159, 2077,
	160, 2077,
	161, 2077,
	163, 2077,
	164, 2077,
	165, 2077,
	166, 2077,
	167, 2077,
	168, 2077,
	169, 2077,
	170, 2077,
	171, 2077,
	172, 2077,
	173, 2077,
	174, 2077,
	175, 2077,
	176, 2077,
	177, 2077,
	178, 2077,
	179, 2077,
	180, 2077,
	182, 2077,
	188, 2077,
	189, 2077,
	190, 2077,
	191, 2077,
	195, 2077,
	197, 2077,
	198, 2077,
	199, 2077,
	201, 2077,
	202, 2077,
	205, 2077,
	206, 2077,
	207, 2077,
	208, 2077,
	209, 2077,
	210, 2077,
	211, 2077,
	212, 2077,
	213, 2077,
	214, 2077,
	215, 2077,
	216, 2077,
	217, 2077,
	218, 2077,
	220, 2077,
	221, 2077,
	223, 2077,
	224, 2077,
	226, 2077,
	227, 2077,
	228, 2077,
	229, 2077,
	230, 2077,
	231, 2077,
	232, 2077,
	233, 2077,
	234, 2077,
	235, 2077,
	236, 2077,
	238, 2077,
	239, 2077,
	240, 2077,
	242, 2077,
	243, 2077,
	244, 2077,
	245, 2077,
	246, 2077,
	250, 2077,
	251, 2077,
	252, 2077,
	253, 2077,
	256, 2077,
	257, 2077,
	258, 2077,
	259, 2077,
	260, 2077,
	261, 2077,
	263, 2077,
	265, 2077,
	266, 2077,
	267, 2077,
	269, 2077,
	271, 2077,
	272, 2077,
	273, 2077,
	275, 2077,
	279, 2077,
	280, 2077,
	281, 2077,
	282, 2077,
	283, 2077,
	284, 2077,
	285, 2077,
	287, 2077,
	288, 2077,
	289, 2077,
	291, 2077,
	292, 2077,
	293, 2077,
	295, 2077,
	296, 2077,
	299, 2077,
	300, 2077,
	301, 2077,
	302, 2077,
	303, 2077,
	304, 2077,
	305, 2077,
	308, 2077,
	309, 2077,
	310, 2077,
	311, 2077,
	313, 2077,
	314, 2077,
	315, 2077,
	316, 2077,
	317, 2077,
	318, 2077,
	319, 2077,
	320, 2077,
	321, 2077,
	322, 2077,
	323, 2077,
	324, 2077,
	325, 2077,
	326, 2077,
	327, 2077,
	328, 2077,
	329, 2077,
	330, 2077,
	331, 2077,
	332, 2077,
	333, 2077,
	334, 2077,
	335, 2077,
	337, 2077,
	339, 2077,
	340, 2077,
	341, 2077,
	342, 2077,
	343, 2077,
	344, 2077,
	345, 2077,
	346, 2077,
	347, 2077,
	348, 2077,
	349, 2077,
	350, 2077,
	351, 2077,
	352, 2077,
	353, 2077,
	354, 2077,
	355, 2077,
	357, 2077,
	358, 2077,
	360, 2077,
	362, 2077,
	363, 2077,
	364, 2077,
	365, 2077,
	367, 2077,
	368, 2077,
	369, 2077,
	370, 2077,
	371, 2077,
	374, 2077,
	376, 2077,
	379, 2077,
	380, 2077,
	381, 2077,
	384, 2077,
	385, 2077,
	386, 2077,
	388, 2077,
	390, 2077,
	391, 2077,
	392, 2077,
	393, 2077,
	394, 2077,
	395, 2077,
	396, 2077,
	397, 2077,
	398, 2077,
	399, 2077,
	400, 2077,
	401, 2077,
	402, 2077,
	403, 2077,
	405, 2077,
	406, 2077,
	407, 2077,
	408, 2077,
	409, 2077,
	410, 2077,
	411, 2077,
	412, 2077,
	413, 2077,
	414, 2077,
	415, 2077,
	416, 2077,
	417, 2077,
	418, 2077,
	419, 2077,
	421, 2077,
	422, 2077,
	423, 2077,
	425, 2077,
	426, 2077,
	427, 2077,
	428, 2077,
	429, 2077,
	430, 2077,
	431, 2077,
	432, 2077,
	433, 2077,
	434, 2077,
	435, 2077,
	436, 2077,
	437, 2077,
	438, 2077,
	440, 2077,
	442, 2077,
	443, 2077,
	444, 2077,
	450, 2077,
	451, 2077,
	452, 2077,
	454, 2077,
	455, 2077,
	456, 2077,
	457, 2077,
	458, 2077,
	459, 2077,
	460, 2077,
	461, 2077,
	462, 2077,
	463, 2077,
	464, 2077,
	466, 2077,
	467, 2077,
	468, 2077,
	469, 2077,
	470, 2077,
	472, 2077,
	473, 2077,
	474, 2077,
	475, 2077,
	476, 2077,
	477, 2077,
	478, 2077,
	480, 2077,
	481, 2077,
	482, 2077,
	483, 2077,
	484, 2077,
	485, 2077,
	486, 2077,
	487, 2077,
	488, 2077,
	489, 2077,
	490, 2077,
	491, 2077,
	492, 2077,
	493, 2077,
	494, 2077,
	495, 2077,
	497, 2077,
	498, 2077,
	499, 2077,
	500, 2077,
	501, 2077,
	502, 2077,
	504, 2077,
	505, 2077,
	506, 2077,
	507, 2077,
	508, 2077,
	509, 2077,
	510, 2077,
	512, 2077,
	513, 2077,
	514, 2077,
	515, 2077,
	516, 2077,
	517, 2077,
	518, 2077,
	519, 2077,
	521, 2077,
	523, 2077,
	524, 2077,
	525, 2077,
	526, 2077,
	527, 2077,
	528, 2077,
	529, 2077,
	530, 2077,
	531, 2077,
	532, 2077,
	533, 2077,
	534, 2077,
	535, 2077,
	536, 2077,
	537, 2077,
	538, 2077,
	539, 2077,
	540, 2077,
	541, 2077,
	542, 2077,
	543, 2077,
	545, 2077,
	546, 2077,
	548, 2077,
	549, 2077,
	551, 2077,
	552, 2077,
	553, 2077,
	554, 2077,
	555, 2077,
	556, 2077,
	558, 2077,
	559, 2077,
	561, 2077,
	562, 2077,
	563, 2077,
	564, 2077,
	565, 2077,
	567, 2077,
	569, 2077,
	570, 2077,
	571, 2077,
	572, 2077,
	573, 2077,
	574, 2077,
	575, 2077,
	576, 2077,
	578, 2077,
	579, 2077,
	580, 2077,
	581, 2077,
	582, 2077,
	583, 2077,
	584, 2077,
	587, 2077,
	588, 2077,
	589, 2077,
	590, 2077,
	591, 2077,
	592, 2077,
	593, 2077,
	594, 2077,
	595, 2077,
	597, 2077,
	600, 2077,
	601, 2077,
	602, 2077,
	603, 2077,
	604, 2077,
	605, 2077,
	607, 2077,
	608, 2077,
	609, 2077,
	610, 2077,
	611, 2077,
	612, 2077,
	613, 2077,
	614, 2077,
	615, 2077,
	616, 2077,
	617, 2077,
	618, 2077,
	623, 2077,
	624, 2077,
	625, 2077,
	626, 2077,
	627, 2077,
	628, 2077,
	-2, 0,
	-1, 1039,
	284, 582,
	-2, 0,
	-1, 1119,
	203, 1099,
	-2, 0,
	-1, 1120,
	427, 1154,
	502, 1154,
	549, 1154,
	571, 1154,
	-2, 0,
	-1, 1121,
	427, 1153,
	502, 1153,
	549, 1153,
	571, 1153,
	-2, 1072,
	-1, 1125,
	1, 1210,
	660, 1210,
	662, 1210,
	664, 1210,
	667, 1210,
	-2, 0,
	-1, 1127,
	1, 1127,
	660, 1127,
	662, 1127,
	664, 1127,
	667, 1127,
	-2, 0,
	-1, 1128,
	1, 1131,
	660, 1131,
	662, 1131,
	664, 1131,
	667, 1131,
	-2, 0,
	-1, 1129,
	1, 1289,
	196, 1289,
	660, 1289,
	662, 1289,
	664, 1289,
	667, 1289,
	-2, 0,
	-1, 1138,
	1, 1159,
	660, 1159,
	662, 1159,
	664, 1159,
	667, 1159,
	-2, 0,
	-1, 1145,
	1, 1210,
	660, 1210,
	662, 1210,
	664, 1210,
	667, 1210,
	-2, 0,
	-1, 1146,
	1, 1203,
	660, 1203,
	662, 1203,
	664, 1203,
	667, 1203,
	-2, 0,
	-1, 1147,
	1, 1212,
	660, 1212,
	662, 1212,
	664, 1212,
	667, 1212,
	-2, 0,
	-1, 1148,
	1, 1215,
	660, 1215,
	662, 1215,
	664, 1215,
	667, 1215,
	-2, 0,
	-1, 1156,
	1, 1252,
	660, 1252,
	662, 1252,
	664, 1252,
	667, 1252,
	-2, 0,
	-1, 1157,
	1, 1254,
	660, 1254,
	662, 1254,
	664, 1254,
	667, 1254,
	-2, 0,
	-1, 1162,
	1, 1282,
	660, 1282,
	662, 1282,
	664, 1282,
	667, 1282,
	-2, 0,
	-1, 1216,
	183, 1933,
	196, 1933,
	298, 1933,
	372, 1933,
	-2, 1869,
	-1, 1233,
	183, 1932,
	196, 1932,
	298, 1932,
	372, 1932,
	-2, 1866,
	-1, 1262,
	663, 2674,
	-2, 925,
	-1, 1291,
	5, 2666,
	661, 2664,
	-2, 2655,
	-1, 1299,
	5, 2687,
	661, 2684,
	-2, 2675,
	-1, 1300,
	5, 2688,
	661, 2685,
	-2, 2676,
	-1, 1310,
	663, 2672,
	-2, 2654,
	-1, 1311,
	661, 3192,
	-2, 2673,
	-1, 1334,
	5, 2689,
	38, 2689,
	135, 2689,
	643, 2689,
	659, 2689,
	662, 2689,
	663, 2689,
	666, 2689,
	-2, 3191,
	-1, 1335,
	5, 2152,
	-2, 3161,
	-1, 1336,
	5, 2153,
	-2, 3162,
	-1, 1337,
	5, 2154,
	-2, 3177,
	-1, 1338,
	5, 2155,
	-2, 3139,
	-1, 1339,
	5, 2156,
	-2, 3174,
	-1, 1340,
	5, 2164,
	-2, 3152,
	-1, 1341,
	5, 2151,
	-2, 3148,
	-1, 1342,
	5, 2151,
	-2, 3147,
	-1, 1343,
	5, 2151,
	-2, 3167,
	-1, 1344,
	5, 2162,
	-2, 3141,
	-1, 1345,
	5, 2167,
	661, 2179,
	-2, 3140,
	-1, 1346,
	5, 2169,
	-2, 3187,
	-1, 1349,
	5, 2191,
	-2, 3180,
	-1, 1350,
	5, 2183,
	-2, 3181,
	-1, 1351,
	5, 2191,
	-2, 3182,
	-1, 1352,
	5, 2187,
	-2, 3183,
	-1, 1353,
	5, 2135,
	-2, 3153,
	-1, 1354,
	5, 2136,
	-2, 3154,
	-1, 1355,
	5, 2137,
	-2, 3142,
	-1, 1383,
	5, 2174,
	661, 2174,
	-2, 3188,
	-1, 1384,
	5, 2175,
	661, 2175,
	-2, 3178,
	-1, 1385,
	5, 2176,
	609, 2176,
	661, 2176,
	-2, 3143,
	-1, 1386,
	5, 2177,
	609, 2177,
	661, 2177,
	-2, 3144,
	-1, 1424,
	661, 2684,
	-2, 2675,
	-1, 1425,
	661, 2685,
	-2, 2676,
	-1, 1533,
	203, 3077,
	566, 3077,
	643, 3077,
	663, 3077,
	-2, 0,
	-1, 1538,
	1, 901,
	664, 901,
	667, 901,
	-2, 1775,
	-1, 1585,
	1, 1770,
	664, 1770,
	667, 1770,
	-2, 1775,
	-1, 1687,
	392, 2649,
	454, 2649,
	504, 2649,
	653, 2649,
	-2, 2637,
	-1, 1695,
	203, 170,
	291, 170,
	357, 170,
	618, 170,
	-2, 3072,
	-1, 1696,
	203, 171,
	291, 171,
	357, 171,
	618, 171,
	-2, 2795,
	-1, 1697,
	203, 172,
	291, 172,
	357, 172,
	618, 172,
	-2, 2985,
	-1, 1703,
	665, 2649,
	-2, 2651,
	-1, 1706,
	25, 3009,
	241, 3009,
	-2, 0,
	-1, 1727,
	1, 1614,
	459, 1568,
	504, 1568,
	635, 1568,
	640, 1568,
	660, 1614,
	662, 1614,
	664, 1614,
	667, 1614,
	-2, 1918,
	-1, 1733,
	219, 1714,
	241, 1714,
	470, 1714,
	-2, 0,
	-1, 1801,
	46, 2647,
	-2, 1347,
	-1, 1808,
	1, 1614,
	660, 1614,
	662, 1614,
	664, 1614,
	667, 1614,
	-2, 1918,
	-1, 1811,
	436, 1384,
	608, 1384,
	-2, 481,
	-1, 1817,
	4, 1639,
	21, 1639,
	22, 1639,
	23, 1639,
	24, 1639,
	25, 1639,
	26, 1639,
	27, 1639,
	28, 1639,
	30, 1639,
	31, 1639,
	37, 1639,
	41, 1639,
	43, 1639,
	44, 1639,
	45, 1639,
	47, 1639,
	48, 1639,
	49, 1639,
	50, 1639,
	51, 1639,
	52, 1639,
	53, 1639,
	54, 1639,
	55, 1639,
	57, 1639,
	58, 1639,
	59, 1639,
	60, 1639,
	62, 1639,
	63, 1639,
	64, 1639,
	65, 1639,
	66, 1639,
	67, 1639,
	68, 1639,
	69, 1639,
	73, 1639,
	74, 1639,
	75, 1639,
	76, 1639,
	78, 1639,
	79, 1639,
	80, 1639,
	84, 1639,
	85, 1639,
	86, 1639,
	87, 1639,
	88, 1639,
	89, 1639,
	90, 1639,
	91, 1639,
	94, 1639,
	95, 1639,
	96, 1639,
	97, 1639,
	98, 1639,
	99, 1639,
	101, 1639,
	103, 1639,
	104, 1639,
	105, 1639,
	106, 1639,
	107, 1639,
	108, 1639,
	109, 1639,
	111, 1639,
	112, 1639,
	113, 1639,
	115, 1639,
	116, 1639,
	117, 1639,
	125, 1639,
	126, 1639,
	127, 1639,
	128, 1639,
	129, 1639,
	131, 1639,
	132, 1639,
	133, 1639,
	134, 1639,
	136, 1639,
	137, 1639,
	138, 1639,
	139, 1639,
	141, 1639,
	142, 1639,
	143, 1639,
	144, 1639,
	146, 1639,
	147, 1639,
	148, 1639,
	151, 1639,
	152, 1639,
	153, 1639,
	155, 1639,
	156, 1639,
	157, 1639,
	159, 1639,
	160, 1639,
	161, 1639,
	163, 1639,
	164, 1639,
	165, 1639,
	166, 1639,
	167, 1639,
	168, 1639,
	169, 1639,
	170, 1639,
	171, 1639,
	172, 1639,
	173, 1639,
	174, 1639,
	175, 1639,
	176, 1639,
	177, 1639,
	178, 1639,
	179, 1639,
	180, 1639,
	188, 1639,
	189, 1639,
	190, 1639,
	191, 1639,
	195, 1639,
	197, 1639,
	198, 1639,
	199, 1639,
	201, 1639,
	202, 1639,
	205, 1639,
	206, 1639,
	207, 1639,
	208, 1639,
	209, 1639,
	210, 1639,
	211, 1639,
	212, 1639,
	213, 1639,
	214, 1639,
	215, 1639,
	216, 1639,
	217, 1639,
	218, 1639,
	220, 1639,
	221, 1639,
	223, 1639,
	224, 1639,
	226, 1639,
	227, 1639,
	228, 1639,
	229, 1639,
	230, 1639,
	231, 1639,
	232, 1639,
	233, 1639,
	234, 1639,
	235, 1639,
	236, 1639,
	238, 1639,
	239, 1639,
	240, 1639,
	242, 1639,
	243, 1639,
	244, 1639,
	245, 1639,
	246, 1639,
	251, 1639,
	252, 1639,
	253, 1639,
	256, 1639,
	257, 1639,
	258, 1639,
	259, 1639,
	260, 1639,
	261, 1639,
	263, 1639,
	265, 1639,
	266, 1639,
	267, 1639,
	269, 1639,
	271, 1639,
	272, 1639,
	273, 1639,
	275, 1639,
	279, 1639,
	280, 1639,
	281, 1639,
	282, 1639,
	283, 1639,
	284, 1639,
	285, 1639,
	287, 1639,
	288, 1639,
	289, 1639,
	291, 1639,
	292, 1639,
	293, 1639,
	295, 1639,
	296, 1639,
	299, 1639,
	300, 1639,
	301, 1639,
	302, 1639,
	303, 1639,
	304, 1639,
	305, 1639,
	308, 1639,
	309, 1639,
	310, 1639,
	311, 1639,
	313, 1639,
	314, 1639,
	315, 1639,
	316, 1639,
	317, 1639,
	318, 1639,
	319, 1639,
	320, 1639,
	321, 1639,
	322, 1639,
	323, 1639,
	324, 1639,
	325, 1639,
	326, 1639,
	327, 1639,
	328, 1639,
	329, 1639,
	330, 1639,
	331, 1639,
	332, 1639,
	333, 1639,
	334, 1639,
	335, 1639,
	337, 1639,
	339, 1639,
	340, 1639,
	341, 1639,
	342, 1639,
	343, 1639,
	344, 1639,
	345, 1639,
	346, 1639,
	347, 1639,
	348, 1639,
	349, 1639,
	350, 1639,
	351, 1639,
	352, 1639,
	353, 1639,
	354, 1639,
	355, 1639,
	357, 1639,
	358, 1639,
	362, 1639,
	363, 1639,
	364, 1639,
	365, 1639,
	367, 1639,
	368, 1639,
	369, 1639,
	370, 1639,
	371, 1639,
	374, 1639,
	376, 1639,
	377, 1639,
	379, 1639,
	380, 1639,
	381, 1639,
	384, 1639,
	385, 1639,
	386, 1639,
	388, 1639,
	390, 1639,
	391, 1639,
	392, 1639,
	393, 1639,
	394, 1639,
	395, 1639,
	396, 1639,
	397, 1639,
	398, 1639,
	399, 1639,
	400, 1639,
	401, 1639,
	402, 1639,
	403, 1639,
	405, 1639,
	406, 1639,
	407, 1639,
	408, 1639,
	409, 1639,
	410, 1639,
	411, 1639,
	412, 1639,
	413, 1639,
	414, 1639,
	415, 1639,
	416, 1639,
	417, 1639,
	418, 1639,
	419, 1639,
	421, 1639,
	422, 1639,
	423, 1639,
	425, 1639,
	426, 1639,
	427, 1639,
	428, 1639,
	429, 1639,
	430, 1639,
	431, 1639,
	432, 1639,
	433, 1639,
	434, 1639,
	435, 1639,
	436, 1639,
	437, 1639,
	438, 1639,
	440, 1639,
	442, 1639,
	443, 1639,
	444, 1639,
	450, 1639,
	451, 1639,
	452, 1639,
	454, 1639,
	455, 1639,
	456, 1639,
	457, 1639,
	458, 1639,
	459, 1639,
	460, 1639,
	461, 1639,
	462, 1639,
	463, 1639,
	464, 1639,
	466, 1639,
	467, 1639,
	468, 1639,
	469, 1639,
	470, 1639,
	472, 1639,
	473, 1639,
	474, 1639,
	475, 1639,
	476, 1639,
	477, 1639,
	478, 1639,
	480, 1639,
	481, 1639,
	482, 1639,
	483, 1639,
	484, 1639,
	485, 1639,
	486, 1639,
	487, 1639,
	488, 1639,
	489, 1639,
	490, 1639,
	491, 1639,
	492, 1639,
	493, 1639,
	494, 1639,
	495, 1639,
	497, 1639,
	498, 1639,
	499, 1639,
	500, 1639,
	501, 1639,
	502, 1639,
	504, 1639,
	505, 1639,
	506, 1639,
	507, 1639,
	508, 1639,
	509, 1639,
	510, 1639,
	512, 1639,
	513, 1639,
	514, 1639,
	515, 1639,
	516, 1639,
	517, 1639,
	518, 1639,
	519, 1639,
	521, 1639,
	523, 1639,
	524, 1639,
	525, 1639,
	526, 1639,
	527, 1639,
	528, 1639,
	529, 1639,
	530, 1639,
	531, 1639,
	532, 1639,
	533, 1639,
	534, 1639,
	535, 1639,
	536, 1639,
	537, 1639,
	538, 1639,
	539, 1639,
	540, 1639,
	541, 1639,
	542, 1639,
	543, 1639,
	545, 1639,
	546, 1639,
	548, 1639,
	549, 1639,
	551, 1639,
	552, 1639,
	553, 1639,
	554, 1639,
	555, 1639,
	556, 1639,
	558, 1639,
	559, 1639,
	561, 1639,
	562, 1639,
	563, 1639,
	564, 1639,
	565, 1639,
	567, 1639,
	569, 1639,
	570, 1639,
	571, 1639,
	572, 1639,
	573, 1639,
	574, 1639,
	575, 1639,
	576, 1639,
	578, 1639,
	579, 1639,
	580, 1639,
	581, 1639,
	582, 1639,
	583, 1639,
	584, 1639,
	587, 1639,
	588, 1639,
	589, 1639,
	590, 1639,
	591, 1639,
	592, 1639,
	593, 1639,
	594, 1639,
	595, 1639,
	597, 1639,
	600, 1639,
	601, 1639,
	602, 1639,
	603, 1639,
	604, 1639,
	605, 1639,
	607, 1639,
	608, 1639,
	609, 1639,
	610, 1639,
	611, 1639,
	612, 1639,
	613, 1639,
	614, 1639,
	615, 1639,
	616, 1639,
	617, 1639,
	618, 1639,
	623, 1639,
	624, 1639,
	625, 1639,
	626, 1639,
	627, 1639,
	628, 1639,
	-2, 0,
	-1, 1840,
	1, 727,
	660, 727,
	662, 727,
	664, 727,
	667, 727,
	-2, 1889,
	-1, 1843,
	4, 3186,
	11, 3186,
	12, 3186,
	14, 3186,
	15, 3186,
	16, 3186,
	17, 3186,
	18, 3186,
	19, 3186,
	21, 3186,
	22, 3186,
	23, 3186,
	24, 3186,
	25, 3186,
	26, 3186,
	27, 3186,
	28, 3186,
	30, 3186,
	31, 3186,
	34, 3186,
	35, 3186,
	37, 3186,
	39, 3186,
	41, 3186,
	43, 3186,
	44, 3186,
	45, 3186,
	47, 3186,
	48, 3186,
	49, 3186,
	50, 3186,
	51, 3186,
	52, 3186,
	53, 3186,
	54, 3186,
	55, 3186,
	57, 3186,
	58, 3186,
	59, 3186,
	60, 3186,
	62, 3186,
	63, 3186,
	64, 3186,
	65, 3186,
	66, 3186,
	67, 3186,
	68, 3186,
	69, 3186,
	72, 3186,
	73, 3186,
	74, 3186,
	75, 3186,
	76, 3186,
	78, 3186,
	79, 3186,
	80, 3186,
	81, 3186,
	84, 3186,
	85, 3186,
	86, 3186,
	87, 3186,
	88, 3186,
	89, 3186,
	90, 3186,
	91, 3186,
	92, 3186,
	94, 3186,
	95, 3186,
	96, 3186,
	97, 3186,
	98, 3186,
	99, 3186,
	101, 3186,
	102, 3186,
	103, 3186,
	104, 3186,
	105, 3186,
	106, 3186,
	107, 3186,
	108, 3186,
	109, 3186,
	111, 3186,
	112, 3186,
	113, 3186,
	114, 3186,
	115, 3186,
	116, 3186,
	117, 3186,
	125, 3186,
	126, 3186,
	127, 3186,
	128, 3186,
	129, 3186,
	131, 3186,
	132, 3186,
	133, 3186,
	134, 3186,
	136, 3186,
	137, 3186,
	138, 3186,
	139, 3186,
	141, 3186,
	142, 3186,
	143, 3186,
	144, 3186,
	146, 3186,
	147, 3186,
	148, 3186,
	151, 3186,
	152, 3186,
	153, 3186,
	155, 3186,
	156, 3186,
	157, 3186,
	159, 3186,
	160, 3186,
	161, 3186,
	163, 3186,
	164, 3186,
	165, 3186,
	166, 3186,
	167, 3186,
	168, 3186,
	169, 3186,
	170, 3186,
	171, 3186,
	172, 3186,
	173, 3186,
	174, 3186,
	175, 3186,
	176, 3186,
	177, 3186,
	178, 3186,
	179, 3186,
	180, 3186,
	184, 3186,
	185, 3186,
	186, 3186,
	187, 3186,
	188, 3186,
	189, 3186,
	190, 3186,
	191, 3186,
	194, 3186,
	195, 3186,
	197, 3186,
	198, 3186,
	199, 3186,
	201, 3186,
	202, 3186,
	204, 3186,
	205, 3186,
	206, 3186,
	207, 3186,
	208, 3186,
	209, 3186,
	210, 3186,
	211, 3186,
	212, 3186,
	213, 3186,
	214, 3186,
	215, 3186,
	216, 3186,
	217, 3186,
	218, 3186,
	220, 3186,
	221, 3186,
	223, 3186,
	224, 3186,
	226, 3186,
	227, 3186,
	228, 3186,
	229, 3186,
	230, 3186,
	231, 3186,
	232, 3186,
	233, 3186,
	234, 3186,
	235, 3186,
	236, 3186,
	237, 3186,
	238, 3186,
	239, 3186,
	240, 3186,
	241, 3186,
	242, 3186,
	243, 3186,
	244, 3186,
	245, 3186,
	246, 3186,
	248, 3186,
	249, 3186,
	251, 3186,
	252, 3186,
	253, 3186,
	255, 3186,
	256, 3186,
	257, 3186,
	258, 3186,
	259, 3186,
	260, 3186,
	261, 3186,
	263, 3186,
	265, 3186,
	266, 3186,
	267, 3186,
	268, 3186,
	269, 3186,
	270, 3186,
	271, 3186,
	272, 3186,
	273, 3186,
	274, 3186,
	275, 3186,
	277, 3186,
	278, 3186,
	279, 3186,
	280, 3186,
	281, 3186,
	282, 3186,
	283, 3186,
	284, 3186,
	285, 3186,
	287, 3186,
	288, 3186,
	289, 3186,
	291, 3186,
	292, 3186,
	293, 3186,
	294, 3186,
	295, 3186,
	296, 3186,
	297, 3186,
	299, 3186,
	300, 3186,
	301, 3186,
	302, 3186,
	303, 3186,
	304, 3186,
	305, 3186,
	308, 3186,
	309, 3186,
	310, 3186,
	311, 3186,
	312, 3186,
	313, 3186,
	314, 3186,
	315, 3186,
	316, 3186,
	317, 3186,
	318, 3186,
	319, 3186,
	320, 3186,
	321, 3186,
	322, 3186,
	323, 3186,
	324, 3186,
	325, 3186,
	326, 3186,
	327, 3186,
	328, 3186,
	329, 3186,
	330, 3186,
	331, 3186,
	332, 3186,
	333, 3186,
	334, 3186,
	335, 3186,
	337, 3186,
	338, 3186,
	339, 3186,
	340, 3186,
	341, 3186,
	342, 3186,
	343, 3186,
	344, 3186,
	345, 3186,
	346, 3186,
	347, 3186,
	348, 3186,
	349, 3186,
	350, 3186,
	351, 3186,
	352, 3186,
	353, 3186,
	354, 3186,
	355, 3186,
	357, 3186,
	358, 3186,
	361, 3186,
	362, 3186,
	363, 3186,
	364, 3186,
	365, 3186,
	367, 3186,
	368, 3186,
	369, 3186,
	370, 3186,
	371, 3186,
	374, 3186,
	376, 3186,
	379, 3186,
	380, 3186,
	381, 3186,
	382, 3186,
	384, 3186,
	385, 3186,
	386, 3186,
	388, 3186,
	390, 3186,
	391, 3186,
	392, 3186,
	393, 3186,
	394, 3186,
	395, 3186,
	396, 3186,
	397, 3186,
	398, 3186,
	399, 3186,
	400, 3186,
	401, 3186,
	402, 3186,
	403, 3186,
	405, 3186,
	406, 3186,
	407, 3186,
	408, 3186,
	409, 3186,
	410, 3186,
	411, 3186,
	412, 3186,
	413, 3186,
	414, 3186,
	415, 3186,
	416, 3186,
	417, 3186,
	418, 3186,
	419, 3186,
	421, 3186,
	422, 3186,
	423, 3186,
	425, 3186,
	426, 3186,
	427, 3186,
	428, 3186,
	429, 3186,
	430, 3186,
	431, 3186,
	432, 3186,
	433, 3186,
	434, 3186,
	435, 3186,
	436, 3186,
	437, 3186,
	438, 3186,
	440, 3186,
	442, 3186,
	443, 3186,
	444, 3186,
	450, 3186,
	451, 3186,
	452, 3186,
	453, 3186,
	454, 3186,
	455, 3186,
	456, 3186,
	457, 3186,
	458, 3186,
	459, 3186,
	460, 3186,
	461, 3186,
	462, 3186,
	463, 3186,
	464, 3186,
	466, 3186,
	467, 3186,
	468, 3186,
	469, 3186,
	470, 3186,
	471, 3186,
	472, 3186,
	473, 3186,
	474, 3186,
	475, 3186,
	476, 3186,
	477, 3186,
	478, 3186,
	479, 3186,
	480, 3186,
	481, 3186,
	482, 3186,
	483, 3186,
	484, 3186,
	485, 3186,
	486, 3186,
	487, 3186,
	488, 3186,
	489, 3186,
	490, 3186,
	491, 3186,
	492, 3186,
	493, 3186,
	494, 3186,
	495, 3186,
	497, 3186,
	498, 3186,
	499, 3186,
	500, 3186,
	501, 3186,
	502, 3186,
	504, 3186,
	505, 3186,
	506, 3186,
	507, 3186,
	508, 3186,
	509, 3186,
	510, 3186,
	511, 3186,
	512, 3186,
	513, 3186,
	514, 3186,
	515, 3186,
	516, 3186,
	517, 3186,
	518, 3186,
	519, 3186,
	521, 3186,
	523, 3186,
	524, 3186,
	525, 3186,
	526, 3186,
	527, 3186,
	528, 3186,
	529, 3186,
	530, 3186,
	531, 3186,
	532, 3186,
	533, 3186,
	534, 3186,
	535, 3186,
	536, 3186,
	537, 3186,
	538, 3186,
	539, 3186,
	540, 3186,
	541, 3186,
	542, 3186,
	543, 3186,
	545, 3186,
	546, 3186,
	547, 3186,
	548, 3186,
	549, 3186,
	551, 3186,
	552, 3186,
	553, 3186,
	554, 3186,
	555, 3186,
	556, 3186,
	558, 3186,
	559, 3186,
	561, 3186,
	562, 3186,
	563, 3186,
	564, 3186,
	565, 3186,
	567, 3186,
	569, 3186,
	570, 3186,
	571, 3186,
	572, 3186,
	573, 3186,
	574, 3186,
	575, 3186,
	576, 3186,
	578, 3186,
	579, 3186,
	580, 3186,
	581, 3186,
	582, 3186,
	583, 3186,
	584, 3186,
	587, 3186,
	588, 3186,
	589, 3186,
	590, 3186,
	591, 3186,
	592, 3186,
	593, 3186,
	594, 3186,
	595, 3186,
	597, 3186,
	600, 3186,
	601, 3186,
	602, 3186,
	603, 3186,
	604, 3186,
	605, 3186,
	607, 3186,
	608, 3186,
	609, 3186,
	610, 3186,
	611, 3186,
	612, 3186,
	613, 3186,
	614, 3186,
	615, 3186,
	616, 3186,
	617, 3186,
	618, 3186,
	623, 3186,
	624, 3186,
	625, 3186,
	626, 3186,
	627, 3186,
	628, 3186,
	629, 3186,
	631, 3186,
	641, 3186,
	642, 3186,
	643, 3186,
	644, 3186,
	645, 3186,
	646, 3186,
	648, 3186,
	649, 3186,
	650, 3186,
	651, 3186,
	652, 3186,
	653, 3186,
	654, 3186,
	655, 3186,
	656, 3186,
	659, 3186,
	662, 3186,
	663, 3186,
	665, 3186,
	666, 3186,
	-2, 0,
	-1, 1848,
	203, 3030,
	566, 3030,
	643, 3030,
	663, 3030,
	-2, 0,
	-1, 1896,
	203, 1100,
	-2, 3020,
	-1, 1897,
	203, 1101,
	-2, 2803,
	-1, 1898,
	203, 1102,
	-2, 2971,
	-1, 1899,
	203, 1103,
	-2, 3100,
	-1, 1904,
	427, 1154,
	502, 1154,
	549, 1154,
	571, 1154,
	-2, 0,
	-1, 1915,
	1, 1714,
	241, 1714,
	660, 1714,
	662, 1714,
	664, 1714,
	667, 1714,
	-2, 0,
	-1, 1933,
	1, 1149,
	660, 1149,
	662, 1149,
	664, 1149,
	667, 1149,
	-2, 0,
	-1, 1934,
	1, 1193,
	660, 1193,
	662, 1193,
	664, 1193,
	667, 1193,
	-2, 0,
	-1, 1935,
	1, 1205,
	660, 1205,
	662, 1205,
	664, 1205,
	667, 1205,
	-2, 0,
	-1, 1938,
	1, 1158,
	660, 1158,
	662, 1158,
	664, 1158,
	667, 1158,
	-2, 0,
	-1, 1940,
	1, 1164,
	660, 1164,
	662, 1164,
	664, 1164,
	667, 1164,
	-2, 0,
	-1, 1943,
	1, 1160,
	660, 1160,
	662, 1160,
	664, 1160,
	667, 1160,
	-2, 0,
	-1, 1948,
	1, 1174,
	660, 1174,
	662, 1174,
	664, 1174,
	667, 1174,
	-2, 0,
	-1, 1987,
	1, 3009,
	660, 3009,
	662, 3009,
	663, 3009,
	664, 3009,
	667, 3009,
	-2, 0,
	-1, 1992,
	1, 1263,
	660, 1263,
	662, 1263,
	664, 1263,
	667, 1263,
	-2, 0,
	-1, 2012,
	183, 1932,
	196, 1932,
	298, 1932,
	372, 1932,
	-2, 1870,
	-1, 2114,
	162, 1891,
	183, 1891,
	196, 1891,
	262, 1891,
	298, 1891,
	372, 1891,
	383, 1891,
	585, 1891,
	-2, 2356,
	-1, 2161,
	661, 2178,
	-2, 2168,
	-1, 2178,
	662, 2531,
	-2, 0,
	-1, 2215,
	162, 1891,
	183, 1891,
	196, 1891,
	262, 1891,
	298, 1891,
	372, 1891,
	383, 1891,
	585, 1891,
	-2, 2032,
	-1, 2254,
	663, 2675,
	666, 2675,
	-2, 1290,
	-1, 2255,
	663, 2677,
	666, 2677,
	-2, 1291,
	-1, 2256,
	663, 2676,
	666, 2676,
	-2, 1292,
	-1, 2257,
	666, 2599,
	-2, 1293,
	-1, 2293,
	661, 2179,
	-2, 2167,
	-1, 2310,
	203, 3027,
	663, 3027,
	666, 3027,
	-2, 0,
	-1, 2361,
	1, 903,
	664, 903,
	667, 903,
	-2, 1775,
	-1, 2564,
	241, 323,
	-2, 2683,
	-1, 2565,
	241, 324,
	-2, 388,
	-1, 2683,
	1, 1151,
	660, 1151,
	662, 1151,
	664, 1151,
	667, 1151,
	-2, 0,
	-1, 2684,
	1, 1195,
	660, 1195,
	662, 1195,
	664, 1195,
	667, 1195,
	-2, 0,
	-1, 2685,
	1, 1207,
	660, 1207,
	662, 1207,
	664, 1207,
	667, 1207,
	-2, 0,
	-1, 2686,
	1, 1265,
	660, 1265,
	662, 1265,
	664, 1265,
	667, 1265,
	-2, 0,
	-1, 2728,
	1, 1176,
	660, 1176,
	662, 1176,
	664, 1176,
	667, 1176,
	-2, 0,
	-1, 2754,
	1, 1244,
	660, 1244,
	662, 1244,
	664, 1244,
	667, 1244,
	-2, 0,
	-1, 2804,
	477, 1959,
	478, 1959,
	-2, 2212,
	-1, 2837,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2232,
	-1, 2838,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2233,
	-1, 2839,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2234,
	-1, 2840,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2235,
	-1, 2841,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2236,
	-1, 2842,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2237,
	-1, 2843,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2238,
	-1, 2844,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2239,
	-1, 2856,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2251,
	-1, 2857,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2252,
	-1, 2858,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2253,
	-1, 2862,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2260,
	-1, 2868,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2264,
	-1, 2870,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2272,
	-1, 2871,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2273,
	-1, 2872,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2274,
	-1, 2873,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2275,
	-1, 3050,
	5, 2687,
	203, 2542,
	661, 2684,
	-2, 2675,
	-1, 3051,
	203, 2543,
	-2, 3116,
	-1, 3052,
	203, 2544,
	-2, 2898,
	-1, 3053,
	203, 2545,
	-2, 2766,
	-1, 3054,
	203, 2546,
	-2, 2831,
	-1, 3055,
	203, 2547,
	-2, 2883,
	-1, 3056,
	203, 2548,
	-2, 3023,
	-1, 3057,
	203, 2549,
	-2, 2339,
	-1, 3152,
	1, 2033,
	2, 2033,
	114, 2033,
	162, 2033,
	183, 2033,
	196, 2033,
	204, 2033,
	222, 2033,
	225, 2033,
	255, 2033,
	262, 2033,
	274, 2033,
	294, 2033,
	298, 2033,
	338, 2033,
	372, 2033,
	377, 2033,
	383, 2033,
	465, 2033,
	471, 2033,
	585, 2033,
	598, 2033,
	620, 2033,
	621, 2033,
	622, 2033,
	632, 2033,
	660, 2033,
	662, 2033,
	664, 2033,
	666, 2033,
	667, 2033,
	-2, 2032,
	-1, 3168,
	661, 2656,
	-2, 2670,
	-1, 3170,
	1, 405,
	620, 405,
	667, 405,
	-2, 1918,
	-1, 3235,
	38, 2687,
	135, 2687,
	643, 2687,
	659, 2687,
	662, 2687,
	663, 2687,
	666, 2687,
	-2, 2684,
	-1, 3236,
	38, 2688,
	135, 2688,
	643, 2688,
	659, 2688,
	662, 2688,
	663, 2688,
	666, 2688,
	-2, 2685,
	-1, 3466,
	1, 1614,
	459, 1568,
	504, 1568,
	635, 1568,
	640, 1568,
	660, 1614,
	662, 1614,
	664, 1614,
	667, 1614,
	-2, 1918,
	-1, 3629,
	1, 1248,
	660, 1248,
	662, 1248,
	664, 1248,
	667, 1248,
	-2, 0,
	-1, 3657,
	378, 1962,
	-2, 3175,
	-1, 3658,
	378, 1963,
	-2, 3006,
	-1, 3662,
	477, 2610,
	478, 2610,
	-2, 2337,
	-1, 3663,
	477, 2614,
	478, 2614,
	-2, 2338,
	-1, 3664,
	477, 2611,
	478, 2611,
	-2, 2337,
	-1, 3665,
	477, 2615,
	478, 2615,
	-2, 2338,
	-1, 3679,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2262,
	-1, 3680,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2266,
	-1, 3686,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2268,
	-1, 3935,
	1, 898,
	660, 898,
	662, 898,
	664, 898,
	667, 898,
	-2, 1775,
	-1, 4162,
	46, 2647,
	-2, 1348,
	-1, 4167,
	1, 1614,
	660, 1614,
	662, 1614,
	664, 1614,
	667, 1614,
	-2, 1918,
	-1, 4283,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2270,
	-1, 4290,
	268, 0,
	270, 0,
	361, 0,
	-2, 2289,
	-1, 4359,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2318,
	-1, 4360,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2319,
	-1, 4361,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2320,
	-1, 4365,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2324,
	-1, 4366,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2325,
	-1, 4367,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2326,
	-1, 4419,
	661, 2657,
	-2, 2671,
	-1, 4661,
	663, 3293,
	-2, 1844,
	-1, 4720,
	268, 0,
	270, 0,
	361, 0,
	-2, 2290,
	-1, 4723,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2293,
	-1, 4724,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2295,
	-1, 4853,
	663, 2672,
	-2, 1649,
	-1, 5029,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2294,
	-1, 5030,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2296,
	-1, 5041,
	268, 0,
	-2, 2329,
	-1, 5245,
	268, 0,
	-2, 2330,
	-1, 5478,
	54, 0,
	237, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 3138,
}

const sqlPrivate = 57344

const sqlLast = 163521

var sqlAct = [...]int16{
	317, 5409, 5696, 5408, 1514, 5675, 5608, 5667, 3541, 3424,
	5549, 1242, 203, 5299, 5533, 3822, 5477, 5106, 5291, 3386,
	5464, 4148, 5342, 5491, 1038, 10, 5360, 5622, 1037, 6,
	2561, 5526, 4, 5447, 4703, 5420, 5423, 5399, 5492, 4633,
	5493, 5558, 5213, 5190, 5439, 2421, 3082, 5177, 5489, 5163,
	4981, 4323, 1570, 5249, 4975, 4986, 4944, 1428, 5111, 5476,
	1866, 4275, 4149, 2605, 1709, 2392, 3962, 2814, 3895, 5050,
	4849, 5016, 2221, 4653, 4185, 3510, 4645, 5196, 5327, 3228,
	4556, 4909, 2654, 4034, 4830, 4084, 1505, 3671, 961, 2885,
	4850, 3295, 2656, 2021, 2343, 3561, 4991, 4133, 4179, 4616,
	3965, 4599, 811, 4601, 2268, 3968, 886, 4409, 1407, 3402,
	2430, 5046, 2631, 4212, 3530, 3294, 1511, 961, 2824, 1591,
	203, 4214, 4138, 1234, 3525, 2815, 3498, 1290, 4118, 3949,
	3234, 3954, 1506, 4137, 4111, 2652, 4110, 3425, 3951, 4140,
	1684, 4130, 3950, 3182, 4422, 3845, 3871, 3837, 3828, 4702,
	3803, 3527, 4759, 1864, 3593, 3556, 3826, 1041, 3542, 2548,
	1417, 3473, 2531, 2550, 823, 2480, 924, 3415, 2190, 5534,
	3989, 4131, 3153, 2250, 3862, 1738, 2442, 2187, 2618, 1291,
	4386, 1739, 2821, 3802, 2092, 2164, 2602, 5250, 3878, 3145,
	2122, 2898, 3655, 1803, 1509, 1408, 882, 3435, 2963, 1032,
	3144, 956, 2549, 1912, 1298, 2529, 2525, 2507, 2503, 2511,
	3511, 1295, 3555, 1585, 2409, 1568, 2341, 2413, 1481, 1300,
	1553, 1498, 3226, 3125, 2954, 3227, 2191, 3188, 2882, 2210,
	2965, 3079, 2391, 2388, 1572, 2803, 2786, 1841, 2784, 1491,
	1711, 3535, 859, 1484, 1799, 2207, 2601, 3183, 1806, 3319,
	2534, 5676, 1114, 3320, 2381, 3280, 1743, 5361, 1540, 3147,
	5444, 1487, 4141, 963, 1461, 2200, 311, 2957, 1458, 962,
	3134, 1495, 1446, 1390, 1411, 1263, 3046, 2156, 1425, 310,
	3012, 2106, 3094, 2935, 1245, 2022, 2023, 902, 214, 867,
	215, 2785, 963, 1948, 2698, 2558, 878, 2787, 962, 1933,
	1694, 1832, 1011, 5550, 1297, 2539, 5609, 1768, 1274, 1839,
	842, 129, 816, 115, 1276, 1565, 798, 51, 50, 48,
	821, 1388, 39, 37, 35, 3709, 2028, 1584, 2003, 951,
	1413, 1136, 812, 1749, 825, 4400, 3703, 5711, 4401, 2321,
	3824, 3124, 2321, 2321, 1012, 1033, 125, 5699, 5685, 1742,
	3896, 4091, 5683, 2321, 967, 2319, 3124, 5487, 5486, 5078,
	2321, 2321, 895, 898, 5682, 5642, 5640, 970, 3124, 5110,
	5110, 5075, 5074, 86, 5580, 1036, 1035, 5070, 2570, 5069,
	5535, 2038, 2039, 967, 5536, 5073, 4194, 2082, 2083, 2084,
	5068, 5517, 87, 5515, 2353, 3124, 970, 3124, 5512, 5509,
	5474, 4968, 5513, 5510, 2570, 2069, 1238, 5473, 5472, 4195,
	92, 2570, 3566, 2041, 5462, 5460, 5451, 5450, 5110, 5110,
	5110, 5110, 3912, 5418, 2088, 5382, 1405, 5110, 5375, 3199,
	5374, 5365, 3124, 5341, 3124, 2570, 5338, 2570, 3906, 5320,
	5110, 1238, 2094, 4934, 3773, 3774, 5247, 3791, 3792, 3793,
	3199, 2040, 5227, 101, 5192, 5129, 4678, 1423, 4475, 2570,
	5128, 1549, 2060, 5117, 2570, 1227, 5116, 2570, 1800, 3888,
	5110, 5109, 2057, 3773, 3774, 5110, 5057, 2350, 4795, 2350,
	2570, 5031, 1420, 5001, 4969, 3199, 4091, 3566, 4091, 4904,
	2350, 2570, 1217, 3124, 1216, 2653, 1039, 4877, 4774, 4722,
	4669, 3124, 4775, 3199, 4207, 1549, 4663, 3538, 3096, 56,
	4207, 124, 3773, 3774, 2606, 108, 4613, 108, 121, 4506,
	4614, 3220, 2353, 4507, 1453, 3788, 2353, 2038, 2039, 1391,
	1391, 4474, 4415, 4413, 4393, 4475, 4416, 4414, 3124, 4390,
	1443, 1233, 4307, 4303, 2038, 2039, 2570, 3124, 4206, 3915,
	3670, 2069, 4207, 3916, 2063, 2064, 2065, 2066, 3503, 2041,
	3194, 3821, 3819, 1239, 2046, 3124, 3820, 3814, 2069, 2350,
	3813, 3124, 3718, 3764, 3124, 3762, 2041, 3765, 3719, 3763,
	3751, 3749, 1419, 109, 3752, 3124, 1421, 3720, 2094, 3124,
	3565, 3124, 1392, 3788, 3566, 3552, 3551, 2040, 3259, 2641,
	2641, 1394, 3124, 1395, 2353, 2094, 3198, 2079, 2060, 5383,
	3199, 2089, 1939, 46, 2040, 275, 3180, 5251, 2068, 2070,
	3124, 2353, 3172, 5242, 3123, 2060, 2570, 3779, 3124, 2960,
	2640, 5230, 3566, 4390, 2641, 2057, 3095, 4979, 4934, 2350,
	1444, 4878, 4678, 4615, 4608, 3393, 2435, 2055, 2056, 3279,
	2367, 2569, 3270, 2347, 3503, 4080, 3779, 2320, 3412, 3189,
	2185, 2334, 1444, 1736, 4524, 4278, 4244, 2077, 2208, 277,
	2911, 2912, 2913, 2930, 2931, 2932, 2518, 4196, 3164, 3163,
	3162, 3161, 2061, 3160, 1914, 1396, 1393, 2992, 1226, 3124,
	1225, 2933, 1224, 1223, 4716, 3779, 1222, 4197, 275, 1221,
	2063, 2064, 2065, 2066, 1220, 1219, 1215, 1214, 1213, 1212,
	2046, 1211, 1210, 1209, 1208, 1207, 1876, 2063, 2064, 2065,
	2066, 1206, 276, 1205, 3708, 3619, 4779, 2046, 2094, 2961,
	1204, 1203, 2322, 1202, 1201, 2322, 2322, 1200, 1199, 1198,
	1197, 269, 1196, 113, 1195, 3789, 2322, 1194, 2923, 1193,
	270, 1180, 277, 2322, 2322, 1112, 1111, 1110, 2919, 1109,
	1108, 1107, 1106, 2091, 2068, 2070, 1105, 1104, 1103, 1102,
	1101, 1100, 1099, 1098, 3789, 1097, 1096, 1095, 1094, 1093,
	216, 2068, 2070, 3287, 1092, 1091, 1090, 2720, 1089, 1088,
	1087, 1086, 1085, 3773, 3774, 1084, 3791, 3792, 3793, 1083,
	1082, 1081, 212, 1080, 116, 276, 1751, 120, 1079, 1078,
	2055, 2056, 1077, 3789, 1076, 1075, 4718, 2962, 2990, 2959,
	2350, 2350, 2350, 2067, 1074, 1063, 2091, 1062, 2061, 1061,
	1056, 1055, 4993, 4734, 2350, 2350, 1048, 275, 1047, 275,
	2924, 2925, 2926, 2927, 1046, 2061, 4448, 1040, 2350, 2062,
	2918, 170, 1031, 170, 1030, 2091, 1029, 3773, 3774, 987,
	1516, 1300, 1857, 216, 3095, 986, 1742, 985, 275, 984,
	3503, 983, 4194, 974, 3788, 973, 972, 971, 933, 932,
	893, 2080, 892, 5502, 891, 1444, 873, 305, 1300, 1300,
	1300, 277, 304, 277, 2091, 303, 302, 301, 300, 2976,
	299, 2350, 298, 297, 296, 295, 294, 293, 292, 2091,
	1751, 291, 3790, 290, 289, 288, 1445, 2093, 1880, 287,
	286, 175, 277, 285, 284, 283, 2091, 282, 281, 280,
	1455, 279, 278, 2928, 2929, 4405, 2353, 1594, 218, 3246,
	2350, 3790, 1300, 4248, 276, 1714, 276, 3817, 1300, 1300,
	2347, 4208, 1516, 1557, 1558, 1559, 1727, 2320, 2779, 3773,
	3774, 3874, 3731, 269, 1544, 269, 4512, 3714, 2921, 2067,
	3705, 3095, 270, 3621, 270, 276, 3779, 1300, 213, 1300,
	3790, 1300, 3596, 217, 2974, 3483, 2067, 1444, 3520, 1714,
	2167, 2964, 3818, 3203, 269, 2062, 3169, 2166, 3151, 2078,
	2776, 2394, 216, 270, 1034, 2352, 5501, 3287, 2211, 2234,
	1544, 2133, 2062, 1516, 2081, 2058, 2054, 1808, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2170, 2004, 2167,
	1704, 1763, 1745, 3537, 1561, 1714, 2166, 1699, 1740, 2035,
	3779, 1427, 1714, 5498, 5475, 5459, 5346, 203, 203, 1757,
	3795, 1300, 5254, 1300, 5239, 5045, 1751, 5233, 1714, 4995,
	5231, 5101, 4999, 2093, 2124, 4978, 2165, 1300, 4757, 1300,
	4756, 1750, 4750, 4749, 3785, 3786, 3787, 1536, 4748, 4741,
	2093, 3784, 3782, 3783, 3775, 3776, 3777, 3778, 3780, 3781,
	4740, 4738, 4733, 4730, 3789, 1538, 4729, 1490, 1494, 4626,
	3773, 3774, 1813, 1816, 4612, 1502, 275, 4607, 4449, 4418,
	3784, 3782, 3783, 3775, 3776, 3777, 3778, 3780, 3781, 4380,
	1714, 4379, 4378, 1575, 1576, 2958, 4339, 4299, 4294, 3869,
	3810, 1587, 3801, 1681, 1686, 2922, 3772, 1835, 3769, 3284,
	2124, 1300, 3779, 3768, 1300, 1725, 3773, 3774, 3766, 3784,
	3782, 3783, 3775, 3776, 3777, 3778, 3780, 3781, 3789, 3208,
	277, 3761, 1691, 2131, 2051, 2049, 2050, 2042, 2043, 2044,
	2045, 2047, 2048, 3760, 1530, 2091, 3759, 3756, 2058, 2054,
	3755, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	3285, 1564, 1737, 3754, 3750, 1833, 3730, 3713, 3706, 3704,
	3553, 3152, 1861, 2093, 1689, 1801, 2947, 2126, 86, 2035,
	275, 1404, 2621, 276, 2034, 4522, 1522, 2577, 5705, 5630,
	5629, 1567, 1241, 5548, 1721, 1577, 1578, 87, 1881, 1941,
	2575, 967, 269, 5546, 1429, 1844, 1846, 4325, 5410, 2091,
	1819, 270, 4627, 5325, 970, 92, 2125, 5311, 2123, 5307,
	5306, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 3522,
	3789, 3790, 1762, 5305, 277, 1751, 5285, 1544, 5284, 5282,
	5253, 216, 5252, 5225, 2888, 1842, 3773, 3774, 5211, 5208,
	1756, 275, 5207, 3779, 1300, 5188, 5187, 5125, 101, 5096,
	1300, 5043, 5026, 5025, 3815, 4964, 4960, 2908, 2909, 2910,
	2934, 2920, 2914, 4957, 2916, 2917, 2915, 2902, 2903, 2904,
	2905, 2906, 2907, 4935, 4755, 4679, 4510, 276, 4509, 4490,
	4489, 4487, 3284, 3863, 2894, 3790, 2188, 4396, 4383, 3779,
	4289, 1039, 2038, 2039, 2111, 277, 269, 4209, 4171, 4161,
	2013, 2091, 4060, 4994, 56, 270, 124, 2991, 4000, 1957,
	3967, 3735, 108, 121, 2113, 3901, 275, 3734, 3729, 3695,
	3497, 3495, 3312, 3284, 2041, 2173, 2172, 2171, 1886, 2168,
	2162, 2157, 2155, 3166, 3159, 216, 3122, 2009, 3003, 2972,
	2110, 1239, 2325, 2233, 2189, 1856, 4627, 2182, 276, 2181,
	2180, 2179, 2178, 2177, 2176, 2175, 2174, 2163, 1300, 1300,
	1300, 1875, 2040, 2152, 1300, 2151, 2150, 269, 2149, 2148,
	277, 1425, 275, 1425, 2147, 2146, 270, 2145, 109, 2144,
	2143, 2142, 2141, 3785, 3786, 3787, 203, 3790, 1594, 2140,
	3784, 3782, 3783, 3775, 3776, 3777, 3778, 3780, 3781, 2139,
	1300, 2138, 2137, 2256, 1516, 2126, 216, 3789, 2038, 2039,
	2197, 2281, 2256, 1905, 1516, 2112, 2109, 1516, 1714, 3779,
	2104, 1529, 1450, 276, 2036, 1439, 277, 5256, 5255, 4967,
	4800, 4726, 1942, 4447, 4412, 1521, 4200, 4399, 2989, 3717,
	2041, 2014, 269, 3201, 3157, 1838, 2249, 5071, 1571, 4802,
	3521, 270, 4446, 2125, 3899, 3782, 3783, 3775, 3776, 3777,
	3778, 3780, 3781, 2005, 2107, 4880, 2229, 4003, 1556, 3773,
	3774, 1554, 2010, 4609, 3387, 2046, 2038, 2039, 2040, 276,
	3866, 216, 1571, 2387, 1516, 275, 2018, 5621, 2091, 2243,
	1300, 1217, 2017, 1216, 5315, 5308, 2244, 2169, 269, 4998,
	4276, 4920, 2012, 275, 4919, 4918, 4917, 270, 2041, 4916,
	4879, 4781, 4686, 1571, 1300, 4685, 4684, 4683, 4682, 2975,
	2264, 2218, 1594, 2031, 2032, 275, 4681, 2194, 2195, 1571,
	2312, 1838, 1571, 2315, 4680, 4476, 2359, 216, 113, 277,
	4403, 2269, 4402, 4211, 2493, 1555, 2040, 1571, 4210, 2424,
	1423, 1748, 1423, 1755, 4093, 1761, 4092, 277, 3783, 3775,
	3776, 3777, 3778, 3780, 3781, 2385, 4089, 5494, 1569, 5576,
	5574, 5197, 4630, 2242, 3790, 1420, 1544, 1420, 2259, 277,
	2158, 2159, 1549, 1549, 2257, 2306, 2239, 2259, 3338, 3433,
	1239, 2046, 276, 2257, 2358, 5490, 2211, 212, 1904, 116,
	2355, 2167, 120, 2219, 2973, 2241, 2007, 4547, 2166, 1391,
	276, 269, 2238, 3758, 2209, 3757, 2373, 1191, 2091, 2135,
	270, 3677, 3323, 1552, 4505, 1855, 3969, 1860, 4151, 269,
	4150, 4470, 276, 4471, 275, 5277, 1549, 1958, 270, 1913,
	5278, 1874, 1040, 1879, 2606, 5191, 2237, 2216, 170, 5234,
	216, 269, 5232, 5523, 4976, 3562, 275, 4119, 4924, 5278,
	270, 2515, 1914, 2552, 4050, 2335, 4606, 4553, 216, 967,
	275, 2186, 1192, 2147, 2091, 1419, 275, 1419, 967, 1421,
	5100, 1421, 970, 4544, 2551, 4620, 2147, 4515, 277, 2673,
	216, 970, 2228, 2227, 2226, 1714, 1714, 2224, 2223, 2222,
	4239, 2213, 3777, 3778, 3780, 3781, 1594, 2361, 3933, 2742,
	277, 2650, 1940, 2585, 5047, 3723, 175, 2265, 3824, 1239,
	2492, 4864, 4327, 2955, 277, 2491, 1837, 5668, 5120, 4861,
	277, 5688, 1714, 218, 2161, 3400, 5092, 2183, 4168, 2527,
	2435, 276, 5499, 2614, 1812, 1732, 3775, 3776, 3777, 3778,
	3780, 3781, 1525, 1486, 5514, 2562, 2567, 2357, 3321, 5511,
	269, 1714, 2488, 276, 2497, 4896, 3389, 4892, 3409, 270,
	2508, 2499, 3406, 213, 4190, 3404, 4481, 276, 217, 2132,
	5300, 1890, 269, 276, 4982, 5417, 3972, 2362, 4500, 2960,
	3534, 270, 1869, 4102, 2622, 5577, 269, 2332, 3595, 216,
	5123, 1025, 269, 2337, 5578, 270, 1714, 2339, 1714, 5119,
	1714, 270, 1837, 2399, 2344, 2400, 2433, 2535, 2346, 5098,
	5500, 216, 2349, 1176, 2502, 2407, 2408, 2380, 1714, 1714,
	1403, 4270, 2502, 2037, 1556, 216, 5613, 2502, 1956, 4566,
	1237, 216, 1714, 3297, 2401, 2402, 3937, 5152, 2794, 1244,
	2429, 2405, 2406, 4866, 1714, 2441, 1775, 1714, 1714, 1714,
	1714, 1782, 3260, 5698, 2374, 1189, 2512, 2734, 5555, 5316,
	5145, 1550, 5156, 1187, 2645, 2732, 3775, 3776, 3777, 3778,
	3780, 3781, 2256, 1185, 2755, 1556, 931, 5131, 2556, 2961,
	3283, 4927, 928, 2554, 2555, 1835, 1734, 2633, 4926, 2633,
	4564, 3939, 4563, 2634, 2516, 1300, 2610, 3281, 2500, 2485,
	2463, 1555, 2792, 4555, 2671, 4565, 4530, 4002, 1026, 2674,
	4529, 4527, 4526, 4514, 2568, 1550, 4473, 3283, 2615, 4484,
	1243, 4472, 2042, 2043, 2044, 2045, 2047, 2048, 4108, 4107,
	1236, 4052, 3887, 2628, 3281, 2536, 2379, 2378, 1300, 3728,
	1571, 2387, 3727, 4860, 2498, 2484, 3726, 3725, 2481, 1539,
	2506, 4064, 1555, 967, 3681, 3431, 3300, 3900, 2679, 3430,
	2648, 4862, 3411, 3399, 3391, 1888, 970, 2962, 5121, 2959,
	3380, 4610, 2658, 3379, 5669, 1300, 5093, 1300, 2225, 3367,
	2544, 865, 3356, 2541, 1300, 2540, 2541, 1300, 2540, 2281,
	2281, 1594, 1546, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 2582,
	1300, 2638, 1300, 1300, 1300, 1300, 1842, 2589, 1842, 2625,
	2044, 2045, 2047, 2048, 2636, 2704, 1546, 2259, 4048, 3969,
	2794, 1238, 3344, 2257, 3202, 2552, 2665, 5614, 1300, 3354,
	2606, 5228, 1300, 1300, 2617, 3349, 2796, 2382, 2793, 3475,
	1300, 2745, 2783, 3348, 1300, 2501, 1300, 1300, 2630, 2664,
	1551, 1573, 1574, 2501, 1594, 4085, 2434, 1550, 2501, 5556,
	1300, 1300, 1300, 1300, 1937, 1530, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 3781, 2642, 4881, 2643, 2936, 2937,
	4845, 2048, 3328, 2513, 2792, 2389, 2390, 3342, 2431, 2822,
	2823, 1777, 2936, 2952, 3327, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1551, 1300, 3288, 1906, 967, 3181,
	1300, 2964, 1239, 1547, 1239, 4082, 1573, 1574, 4838, 3000,
	2791, 970, 1425, 1548, 2869, 2683, 2266, 2427, 2011, 1594,
	3008, 2694, 1573, 1574, 4081, 1573, 1574, 2705, 1425, 2684,
	2955, 3049, 3049, 3063, 3007, 2936, 3299, 1937, 3083, 3085,
	1573, 1574, 2826, 2754, 1300, 1594, 3093, 2751, 1735, 2184,
	3531, 5616, 2432, 4811, 2728, 2384, 5024, 1547, 1955, 1023,
	4863, 1022, 1786, 2790, 4822, 1472, 4839, 1548, 2820, 3214,
	2808, 2807, 2768, 1825, 5168, 1824, 1936, 1516, 1546, 2819,
	1778, 3325, 2006, 1823, 2428, 1822, 4241, 810, 3692, 203,
	3167, 864, 2691, 2765, 4049, 1883, 2383, 2604, 2685, 1182,
	1028, 1027, 2774, 5577, 2669, 2900, 3196, 1914, 2752, 1914,
	2002, 2780, 1934, 1235, 805, 2782, 2788, 2795, 5155, 1794,
	3690, 2781, 865, 3187, 3267, 1516, 2951, 1217, 3139, 2811,
	1217, 1217, 2812, 2813, 2884, 2958, 3236, 4821, 2753, 3408,
	2793, 2495, 2884, 1974, 3370, 3378, 2537, 2229, 3368, 922,
	3773, 3774, 3569, 3791, 3792, 3793, 5617, 3614, 3171, 1936,
	3131, 3311, 5293, 1970, 1516, 1516, 1551, 2740, 3254, 3668,
	1954, 1976, 3653, 4717, 2778, 3407, 2218, 2726, 4087, 3405,
	2892, 1935, 3403, 1528, 5496, 2199, 5176, 2890, 4591, 5646,
	5615, 1423, 3936, 3195, 2767, 3184, 3372, 2896, 3002, 2016,
	2688, 3416, 3298, 3004, 3005, 1594, 3006, 1423, 2545, 3009,
	1902, 3010, 3011, 1549, 2692, 866, 1420, 4253, 3310, 2949,
	2542, 1884, 2791, 4511, 3216, 2682, 4086, 1889, 2635, 1547,
	4252, 3788, 1420, 3616, 3130, 2538, 1072, 5677, 4160, 1548,
	3360, 3219, 3371, 4316, 3249, 3263, 3369, 3138, 2964, 3143,
	4592, 3211, 3149, 3150, 2281, 1391, 2443, 4020, 5268, 1544,
	3282, 3210, 3058, 3233, 3045, 2543, 1239, 1549, 3265, 3089,
	3087, 920, 3074, 5625, 3687, 2203, 1239, 5619, 3132, 5267,
	1239, 3255, 2447, 929, 2733, 3136, 3137, 3120, 3121, 3156,
	4834, 929, 2731, 2169, 3252, 5295, 4925, 4835, 3190, 3633,
	4590, 1184, 2216, 4528, 929, 3688, 4525, 3225, 4840, 3693,
	929, 4011, 3266, 3204, 1807, 4858, 1419, 3667, 4454, 4021,
	1421, 4453, 4452, 4441, 4440, 4439, 2206, 4245, 3191, 1594,
	4114, 4497, 1419, 3779, 3264, 967, 1421, 967, 2385, 2385,
	4106, 1714, 3193, 2444, 5169, 2201, 3257, 3289, 970, 4046,
	970, 4837, 3410, 4313, 3355, 3251, 5023, 3207, 5167, 3347,
	3326, 3213, 3239, 4083, 1516, 2204, 5165, 2721, 3466, 4019,
	4841, 3942, 864, 4012, 1239, 1805, 5497, 3248, 2158, 2159,
	3377, 3324, 1950, 1302, 3331, 1300, 1300, 967, 1300, 3258,
	3244, 3286, 1490, 2764, 1494, 3221, 3218, 5589, 4810, 2866,
	970, 2775, 3222, 3470, 5600, 3345, 3250, 3795, 2465, 2202,
	3243, 5599, 1971, 2880, 3212, 3185, 4246, 2964, 3179, 5164,
	1516, 3636, 3401, 4010, 3509, 1293, 3506, 1887, 3330, 1167,
	2574, 2573, 3315, 3274, 5648, 3261, 3660, 3661, 5563, 1549,
	4708, 4314, 4707, 2389, 2390, 2878, 3329, 4115, 3839, 5166,
	2475, 3789, 1714, 4940, 1231, 4188, 5527, 1953, 4187, 4495,
	3346, 2448, 203, 3624, 1714, 3471, 1714, 4112, 3186, 2435,
	1811, 3385, 1714, 3336, 3337, 3339, 3340, 3341, 3343, 2000,
	2321, 3302, 3305, 1714, 1714, 1785, 3518, 3292, 1471, 4042,
	5394, 806, 5495, 3375, 2766, 5618, 866, 2456, 3381, 3275,
	3276, 3241, 3417, 3277, 3278, 5084, 4043, 3245, 3478, 921,
	1516, 4044, 1516, 3480, 2690, 3469, 3689, 4836, 2547, 2471,
	5301, 3256, 4041, 5379, 3563, 3432, 3691, 3956, 4040, 3351,
	3467, 3468, 2091, 2449, 2450, 1300, 2438, 3572, 3573, 4856,
	3364, 3365, 2205, 4187, 3579, 2433, 4037, 5623, 3374, 3580,
	3581, 3582, 3583, 1168, 3373, 3481, 3383, 4859, 3388, 2457,
	2445, 3545, 3390, 1972, 4846, 4847, 3397, 923, 3635, 1714,
	2482, 919, 4087, 3557, 2519, 2487, 5466, 3273, 5467, 2526,
	2546, 2468, 2864, 807, 3142, 1807, 2867, 3560, 3559, 3938,
	1968, 5294, 3422, 3423, 3421, 1064, 3984, 3591, 2439, 2874,
	863, 3632, 1915, 3513, 3567, 3428, 1049, 3990, 2446, 2455,
	1300, 3574, 3476, 3575, 3554, 2964, 1300, 1300, 3790, 3564,
	4789, 3897, 1065, 2875, 1733, 3570, 3597, 4790, 3598, 4954,
	2876, 1300, 1448, 1054, 2881, 2473, 3683, 5562, 808, 5336,
	809, 2435, 2863, 1885, 2883, 3599, 967, 1183, 2437, 5541,
	3549, 2489, 2727, 2496, 1073, 2153, 3502, 3983, 2494, 970,
	5542, 3283, 4097, 2516, 3992, 2542, 5624, 3501, 5018, 3838,
	3638, 1973, 3640, 2891, 1300, 1300, 3517, 2452, 3303, 4704,
	1300, 2425, 5036, 5587, 5428, 5440, 3540, 3170, 1527, 3550,
	4788, 1969, 1842, 1300, 1300, 3548, 5328, 1975, 2483, 1300,
	1300, 2474, 2520, 3588, 2015, 1300, 2687, 3547, 5626, 3529,
	2543, 5329, 2465, 1173, 1172, 1901, 1903, 4857, 4113, 4898,
	3604, 3634, 3606, 3590, 3608, 5644, 3610, 3611, 1433, 5377,
	831, 2681, 2512, 2103, 3991, 2946, 2478, 4045, 3733, 3605,
	3135, 3607, 3921, 3609, 2451, 1435, 5330, 5649, 3476, 3620,
	1300, 1300, 1300, 3957, 2475, 3148, 1300, 1238, 4329, 5632,
	4966, 3603, 1169, 2203, 4693, 4930, 1300, 3684, 4799, 2199,
	2516, 4577, 4442, 1430, 1454, 1452, 4709, 5378, 4272, 3651,
	3785, 3786, 3787, 1300, 5343, 3648, 5434, 3784, 3782, 3783,
	3775, 3776, 3777, 3778, 3780, 3781, 5359, 3711, 3712, 3384,
	3641, 5210, 3715, 3643, 3352, 4929, 3659, 4928, 1920, 2466,
	4496, 4651, 975, 4175, 2206, 4030, 4028, 5332, 5017, 5159,
	2476, 1436, 3910, 2471, 4625, 2434, 3358, 2510, 3178, 3650,
	3649, 2600, 2453, 3133, 2196, 1451, 1442, 2472, 797, 982,
	2025, 2877, 5331, 2808, 2807, 3654, 3353, 2566, 2026, 4369,
	1437, 2879, 2739, 2204, 4705, 4753, 2865, 2509, 5561, 2203,
	3669, 5333, 4573, 3676, 1494, 1066, 1067, 4955, 2469, 5528,
	2810, 3707, 4571, 2322, 4573, 2467, 1050, 1051, 1300, 1300,
	1300, 1300, 2436, 2477, 4571, 2468, 2025, 1300, 1300, 1300,
	2375, 5118, 1300, 4100, 5654, 1434, 2504, 1170, 4101, 2020,
	5064, 4533, 4029, 3359, 3879, 3682, 1300, 1425, 1594, 3963,
	2206, 5219, 5275, 4652, 4559, 4534, 4482, 4480, 4312, 4176,
	4166, 3959, 3519, 4424, 3512, 3499, 5540, 3126, 1171, 2201,
	5441, 2432, 2372, 1300, 2629, 1300, 2623, 2479, 3812, 2473,
	2616, 2523, 2608, 2584, 1425, 2581, 3831, 3832, 2494, 2204,
	2800, 1779, 5344, 5204, 4466, 2024, 3420, 1463, 4384, 2470,
	1167, 4575, 1594, 2505, 872, 2496, 5400, 3129, 4273, 3287,
	5019, 5362, 2741, 4575, 2368, 3363, 4654, 1425, 4987, 3833,
	1594, 4425, 2025, 3496, 5183, 1231, 1473, 1175, 3722, 2513,
	5181, 5095, 1516, 2202, 2670, 3975, 4574, 3484, 3304, 2490,
	3487, 2024, 3489, 2521, 2493, 2474, 4398, 1174, 4574, 4426,
	2281, 3128, 4423, 3716, 1594, 2370, 3127, 3971, 3332, 4710,
	1516, 4434, 3970, 3843, 3674, 3652, 3836, 4432, 3835, 2026,
	2205, 1516, 4435, 3065, 2662, 3913, 2651, 3236, 2281, 2579,
	2478, 1938, 3868, 3177, 3753, 1239, 1944, 1943, 3176, 2486,
	3175, 3174, 3173, 2522, 1831, 3536, 4031, 1817, 3536, 4370,
	3361, 1829, 2371, 4433, 1071, 4605, 1236, 5288, 4429, 1300,
	4371, 4890, 4532, 1818, 2398, 2026, 4754, 1249, 1068, 1069,
	5107, 1300, 976, 977, 1168, 2103, 1423, 2495, 4945, 1052,
	1053, 2424, 3841, 4430, 1798, 3308, 4600, 2024, 2749, 1516,
	4621, 3873, 2801, 3958, 4488, 2281, 2627, 4122, 3886, 5185,
	2435, 1420, 2532, 2466, 4711, 4477, 3918, 3920, 3807, 3808,
	3809, 5584, 1300, 1423, 2476, 5653, 2205, 2424, 5082, 4538,
	3911, 5080, 3825, 1431, 3934, 3856, 3904, 3872, 1516, 5334,
	3898, 2472, 4008, 3612, 3877, 5335, 3940, 5079, 1420, 3842,
	3353, 3927, 3594, 1544, 3854, 911, 1423, 3474, 3865, 1516,
	3857, 3858, 1800, 4023, 3233, 4242, 3840, 1516, 5345, 5203,
	4467, 4027, 2469, 3881, 3882, 3883, 3884, 4236, 1516, 2467,
	2492, 1420, 4033, 1921, 4572, 2491, 4032, 2477, 5184, 3909,
	3362, 3908, 3860, 912, 5108, 1432, 4572, 3864, 3907, 3891,
	3890, 3889, 1300, 1300, 3568, 2515, 3946, 3947, 3333, 3334,
	1594, 1419, 3479, 2515, 3974, 1421, 3855, 3979, 4051, 5442,
	3981, 3477, 1516, 2655, 3960, 3861, 4075, 3892, 3973, 2551,
	4005, 3977, 4427, 1893, 4065, 3966, 5406, 979, 978, 5289,
	4428, 5103, 1516, 5102, 1173, 1172, 4095, 5090, 1419, 3903,
	4816, 4815, 1421, 5414, 4099, 4543, 5397, 4224, 4387, 3893,
	3919, 3987, 3917, 2470, 4038, 3880, 967, 5443, 4007, 4760,
	2971, 3924, 4222, 5067, 3928, 1922, 871, 4443, 1997, 970,
	5436, 1419, 4215, 2760, 3935, 1421, 1999, 1516, 1714, 4022,
	1714, 2397, 4478, 1169, 1594, 4431, 4090, 4026, 5091, 5588,
	4024, 961, 1714, 1714, 4098, 5586, 3236, 3943, 1996, 5516,
	1994, 980, 981, 5318, 1964, 5309, 1830, 4009, 5077, 4061,
	5042, 1962, 1960, 1828, 4807, 2242, 1070, 1516, 2530, 1932,
	4067, 4167, 4069, 5407, 1930, 4073, 5290, 4752, 1928, 4079,
	3993, 4604, 1926, 1924, 4459, 1425, 1917, 1911, 4117, 3847,
	4120, 3804, 4074, 4288, 4001, 1909, 4237, 4014, 4234, 4183,
	4053, 4181, 1827, 3905, 4015, 1714, 4018, 3767, 4016, 3694,
	4017, 4226, 4094, 203, 203, 3627, 4156, 1714, 3500, 1714,
	3398, 4165, 3392, 3322, 3209, 2773, 2769, 2748, 3914, 2672,
	4217, 2661, 2646, 2314, 2236, 2232, 2001, 1868, 5171, 4814,
	3805, 4267, 4266, 4116, 4256, 3923, 4216, 2020, 3618, 3925,
	3926, 3617, 4047, 4056, 3929, 3577, 3930, 2730, 3931, 4063,
	4062, 4174, 2789, 4136, 2696, 4192, 2560, 4203, 1170, 4076,
	1949, 2699, 2580, 3233, 4088, 2313, 4104, 2311, 2136, 1882,
	3375, 1387, 4096, 1594, 2970, 5488, 1594, 4159, 4899, 4546,
	4240, 927, 4545, 4243, 3848, 4531, 4903, 5396, 4876, 1171,
	4985, 4908, 4066, 3557, 4177, 4225, 4894, 4891, 4827, 4826,
	4650, 4309, 3557, 4232, 5559, 4640, 963, 2762, 4109, 4105,
	4562, 1300, 962, 4536, 2761, 5554, 4503, 1998, 1300, 1300,
	4443, 4501, 1300, 1300, 1300, 4479, 1300, 4103, 3330, 4170,
	4157, 4184, 4124, 4164, 4152, 1300, 2281, 3846, 3853, 1995,
	4230, 1993, 4163, 4162, 1300, 1963, 4235, 3532, 1175, 1300,
	3524, 1592, 1961, 1959, 1423, 1594, 3516, 3508, 3493, 3491,
	1931, 3472, 4233, 930, 1300, 1929, 3247, 3242, 1174, 1927,
	2578, 4265, 1594, 1925, 1923, 3852, 2576, 1916, 1910, 1420,
	2553, 2517, 2281, 2281, 1300, 1300, 1908, 1300, 1300, 1300,
	4189, 4201, 4202, 1826, 4182, 4264, 2454, 967, 2440, 4198,
	2426, 2354, 2351, 2348, 2345, 2340, 2338, 2333, 1300, 2327,
	970, 2323, 1300, 4180, 2281, 2281, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 4274, 1300, 4980, 4191,
	4291, 2729, 5471, 2029, 4228, 1300, 1300, 2281, 2695, 4249,
	2559, 4250, 1300, 4251, 1400, 2248, 4342, 3357, 4343, 1186,
	1188, 5578, 2376, 4077, 3672, 1300, 2269, 203, 2526, 4223,
	4218, 4219, 4220, 4221, 4301, 4302, 1425, 1425, 5287, 1419,
	1300, 1401, 3644, 1421, 4382, 2364, 2365, 4271, 2772, 3645,
	3642, 3465, 3849, 3850, 3851, 4262, 5453, 5353, 4381, 5000,
	4915, 4813, 3558, 3941, 4268, 2393, 1784, 4269, 3283, 958,
	3283, 4227, 2822, 4332, 3629, 1594, 5221, 3309, 5214, 3192,
	2758, 4257, 2626, 4662, 1239, 3281, 1771, 3306, 1516, 1516,
	4298, 1457, 4420, 2435, 2686, 4296, 1991, 1992, 2770, 1496,
	1497, 2724, 5452, 2719, 2822, 4348, 1516, 1516, 2693, 4867,
	4308, 2256, 4910, 1516, 3429, 1230, 1907, 3236, 2281, 5241,
	2281, 4324, 4229, 2030, 4331, 4315, 4317, 4318, 900, 3673,
	3997, 3998, 3313, 3999, 5105, 4761, 4739, 4377, 3988, 3314,
	1300, 3335, 4340, 1566, 5572, 2414, 4341, 2771, 2038, 2039,
	2415, 4078, 2414, 4373, 4345, 4436, 4347, 2415, 2038, 2039,
	4319, 1402, 4389, 2033, 1523, 1456, 1563, 3314, 1300, 4558,
	5524, 306, 4576, 1497, 3490, 4637, 2363, 2609, 1534, 3406,
	2041, 3404, 1707, 4338, 4394, 4395, 1058, 4374, 3413, 5592,
	1497, 3394, 3316, 3396, 4557, 1967, 3318, 4462, 5405, 4463,
	5384, 1300, 1300, 5620, 4437, 4438, 917, 3395, 4057, 4058,
	3317, 4059, 4391, 4392, 5351, 1423, 1423, 5347, 2040, 5286,
	903, 903, 4450, 4451, 2278, 794, 1769, 5205, 2040, 4460,
	5202, 5083, 5013, 4404, 4648, 4639, 4407, 4624, 4169, 3539,
	1420, 1420, 3505, 3492, 3233, 4417, 3090, 4516, 2360, 2267,
	4406, 4100, 5104, 1300, 1300, 4100, 4101, 4483, 3382, 1731,
	4101, 1300, 4539, 1730, 1724, 4411, 2274, 1232, 3894, 2532,
	5349, 5652, 5370, 2416, 3773, 3774, 1742, 5591, 1742, 1850,
	2416, 4921, 1714, 1714, 4455, 1741, 2259, 1258, 4461, 1742,
	1714, 2420, 2257, 1714, 1714, 1865, 2038, 2039, 2420, 4100,
	2404, 3269, 3647, 1714, 4101, 2403, 3268, 4554, 1516, 4520,
	4731, 2528, 4588, 1892, 4445, 4521, 4523, 1742, 4578, 1891,
	2966, 3622, 3001, 2404, 2403, 5531, 1966, 4647, 4583, 1965,
	5206, 5146, 3156, 4912, 4907, 4548, 4906, 2281, 4791, 4787,
	1419, 1419, 4786, 4569, 1421, 1421, 4727, 4701, 4444, 4320,
	4579, 4071, 4068, 3625, 4560, 4541, 4542, 1895, 2130, 4508,
	2129, 1300, 2777, 5637, 1310, 4513, 5601, 5457, 5388, 5387,
	5386, 4636, 2417, 2422, 5317, 5261, 5257, 967, 5179, 2417,
	2422, 5135, 1714, 5072, 5066, 5065, 5063, 4570, 1300, 5062,
	970, 4962, 4939, 4865, 4801, 3330, 1425, 1300, 4785, 4784,
	4655, 4674, 2235, 4668, 4611, 1714, 4499, 4491, 4617, 4664,
	1714, 1714, 1714, 4259, 4173, 4593, 4594, 313, 313, 313,
	4172, 800, 801, 3980, 817, 800, 817, 829, 4632, 4580,
	870, 3922, 3628, 3615, 890, 1714, 4631, 1714, 4587, 897,
	897, 897, 897, 1714, 313, 1594, 4656, 4596, 4567, 3587,
	4603, 3417, 313, 4598, 3586, 3585, 4602, 3584, 3523, 3494,
	3307, 4659, 3238, 2418, 3206, 3205, 2895, 3966, 4619, 4671,
	2418, 4586, 2763, 2725, 1045, 2718, 2717, 4597, 2716, 1594,
	4464, 313, 1300, 1300, 4465, 2715, 2714, 4589, 1300, 1300,
	2281, 2624, 2595, 1300, 1300, 4689, 1300, 2594, 4623, 2593,
	2592, 1300, 4675, 4695, 2591, 4638, 2590, 4658, 2330, 2329,
	3545, 2328, 1300, 2326, 2247, 2246, 1990, 2425, 1989, 3996,
	1918, 1793, 1792, 3557, 2425, 1791, 4687, 4641, 1300, 4635,
	1790, 4690, 1789, 4502, 1788, 4504, 2395, 1787, 1783, 1781,
	1780, 1718, 4725, 1717, 1583, 1582, 4657, 4642, 1581, 4644,
	1580, 1579, 4666, 4665, 1526, 1480, 4660, 1479, 1478, 1477,
	1476, 1475, 1474, 4673, 4672, 4712, 1468, 1467, 1466, 4688,
	1465, 1464, 1382, 2366, 3944, 1423, 1190, 4697, 1181, 2423,
	5292, 3994, 4844, 4843, 4842, 2759, 2423, 2603, 4713, 107,
	4691, 1425, 1776, 3350, 4721, 203, 100, 2524, 4498, 1425,
	1420, 4698, 5525, 1594, 1594, 5633, 1594, 5661, 2586, 2458,
	5438, 2281, 4758, 5437, 5322, 4706, 3223, 1425, 2324, 4129,
	2269, 4128, 5530, 2462, 3945, 4561, 5175, 1714, 1714, 992,
	5012, 3995, 1142, 5435, 800, 800, 1766, 1007, 5416, 3982,
	3434, 1919, 313, 5199, 2700, 3867, 3158, 5376, 4735, 1594,
	3732, 5248, 5035, 2969, 2134, 3816, 102, 1284, 4700, 1332,
	1516, 4953, 4952, 4828, 4485, 4139, 4949, 4948, 2271, 2273,
	1248, 1597, 3098, 3100, 5465, 2377, 5643, 1300, 2386, 2160,
	3048, 1309, 1347, 1304, 1305, 2275, 1308, 4777, 1425, 1306,
	1425, 1307, 2154, 1303, 2270, 2317, 4751, 4646, 4158, 3543,
	1419, 4199, 1836, 1834, 1421, 1144, 4793, 4794, 3154, 2889,
	2953, 3721, 4769, 4771, 2127, 1516, 1264, 1286, 2950, 4875,
	2571, 2419, 1449, 1275, 3844, 1594, 3823, 1516, 2419, 4186,
	1516, 4884, 3091, 4408, 4887, 2799, 1017, 3770, 2956, 4762,
	1438, 4776, 4820, 4765, 4763, 4764, 4768, 4767, 3071, 3064,
	3060, 3932, 3533, 1300, 2008, 5049, 1594, 2105, 3544, 1560,
	4854, 1268, 4823, 4778, 2887, 2118, 4780, 3699, 2809, 4193,
	1423, 3870, 4796, 4797, 4798, 3200, 4812, 3872, 1423, 5446,
	4328, 3623, 2599, 1399, 1398, 4804, 4805, 4806, 4817, 4818,
	4809, 1447, 1397, 5422, 5419, 1420, 1423, 2514, 4956, 4134,
	4808, 4135, 4825, 1420, 4869, 1714, 1714, 4922, 2369, 3236,
	1300, 1300, 2278, 2278, 3262, 2899, 4153, 4868, 4819, 1280,
	4893, 1420, 3600, 4895, 4792, 3601, 1702, 4897, 2746, 4260,
	3829, 4622, 1795, 5112, 1292, 2090, 3461, 3460, 1516, 5281,
	1545, 1543, 4970, 1542, 4874, 1541, 4870, 5610, 4851, 3419,
	4851, 1594, 4914, 4766, 2274, 2274, 1714, 4883, 3414, 2533,
	4886, 4494, 4493, 4492, 274, 4905, 4938, 1423, 3666, 1423,
	2027, 4888, 2019, 271, 4988, 273, 272, 3986, 4911, 4421,
	4913, 1714, 1714, 1714, 1714, 1714, 1714, 1714, 3876, 1894,
	5522, 4518, 1420, 4121, 1420, 1419, 27, 4937, 904, 1421,
	4974, 905, 4977, 1419, 906, 1594, 4885, 1421, 3272, 2396,
	1562, 4469, 26, 25, 4971, 4923, 24, 1300, 1300, 1300,
	4989, 1419, 23, 130, 28, 1421, 49, 4933, 30, 29,
	4946, 4936, 4932, 5, 4931, 1594, 3233, 22, 174, 172,
	1300, 149, 5005, 1300, 1300, 4958, 5009, 4855, 169, 4951,
	4941, 315, 4992, 1300, 4947, 4965, 2281, 4963, 5020, 5021,
	4983, 1300, 1300, 168, 140, 167, 4871, 4872, 166, 165,
	164, 163, 4990, 4959, 171, 162, 161, 156, 160, 159,
	1594, 158, 1714, 4643, 5011, 157, 155, 153, 4997, 154,
	148, 152, 1419, 5003, 1419, 151, 1421, 150, 1421, 147,
	5002, 5027, 146, 145, 144, 143, 142, 141, 1516, 1769,
	139, 173, 138, 137, 219, 2825, 136, 135, 134, 4973,
	133, 132, 131, 883, 5022, 884, 68, 5014, 67, 127,
	128, 21, 1594, 47, 16, 72, 73, 20, 2607, 15,
	1300, 42, 105, 5058, 119, 5059, 118, 117, 43, 114,
	41, 4692, 5032, 1300, 19, 18, 17, 112, 111, 110,
	5044, 40, 1300, 38, 13, 5038, 11, 2281, 44, 2220,
	14, 7, 5089, 211, 208, 5055, 5056, 1300, 207, 210,
	1300, 206, 209, 5060, 104, 205, 2269, 2644, 106, 204,
	103, 36, 12, 199, 5195, 4629, 95, 202, 201, 2278,
	200, 1300, 198, 197, 1300, 2657, 2659, 196, 2967, 193,
	96, 1594, 5115, 93, 195, 99, 98, 1714, 1300, 2663,
	1714, 1714, 194, 94, 5076, 97, 34, 1516, 5086, 8,
	5087, 5161, 71, 9, 2675, 2676, 2677, 2678, 5015, 4238,
	122, 2274, 5094, 123, 45, 5134, 2424, 91, 90, 5085,
	5088, 89, 88, 33, 70, 32, 268, 266, 1425, 267,
	265, 264, 189, 244, 243, 242, 241, 1440, 240, 239,
	1262, 238, 237, 236, 231, 5137, 235, 233, 817, 5170,
	5157, 5158, 232, 234, 230, 5132, 1594, 5194, 260, 1714,
	5178, 259, 817, 5136, 5182, 258, 5151, 5124, 313, 257,
	256, 255, 254, 253, 247, 1470, 246, 5215, 5140, 3168,
	252, 251, 250, 249, 248, 245, 313, 2278, 313, 313,
	263, 1501, 313, 1510, 84, 229, 1300, 1300, 5186, 5148,
	228, 5201, 227, 225, 1524, 221, 1723, 5173, 5172, 224,
	226, 223, 890, 1300, 2281, 890, 5180, 222, 220, 5198,
	262, 261, 192, 5216, 85, 187, 188, 5160, 83, 2274,
	186, 185, 5193, 5224, 184, 5226, 5218, 5174, 897, 1516,
	1516, 1516, 5237, 5238, 1516, 1516, 1516, 2633, 1516, 1516,
	4136, 5200, 183, 182, 181, 180, 82, 191, 5223, 5217,
	190, 4992, 31, 2, 5222, 5212, 1, 1300, 0, 1300,
	313, 1300, 313, 313, 313, 1501, 5162, 313, 313, 0,
	5229, 1425, 0, 0, 0, 1510, 0, 0, 4851, 5236,
	5141, 0, 0, 0, 1300, 0, 1425, 0, 0, 313,
	5274, 1744, 0, 0, 0, 0, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 5246, 5138,
	0, 0, 0, 5139, 0, 0, 1773, 0, 5276, 5240,
	0, 0, 1420, 0, 0, 4901, 5269, 0, 0, 3271,
	0, 0, 5273, 1797, 2269, 1510, 2281, 0, 5272, 0,
	313, 313, 0, 1501, 0, 5258, 5259, 5260, 1425, 1425,
	5262, 5263, 5264, 0, 5265, 5266, 5304, 0, 0, 5324,
	5297, 5296, 0, 0, 0, 890, 5303, 313, 313, 1425,
	0, 0, 1425, 0, 0, 5350, 1714, 5189, 0, 1862,
	0, 0, 0, 0, 5126, 5127, 1714, 5312, 0, 0,
	1870, 0, 0, 0, 0, 1045, 0, 0, 4961, 5314,
	0, 0, 1300, 1300, 0, 0, 5326, 0, 0, 0,
	0, 5220, 1300, 4972, 0, 5323, 0, 0, 5339, 5340,
	5321, 0, 1419, 0, 5337, 5147, 1421, 5149, 0, 5150,
	0, 4851, 0, 5348, 5319, 0, 0, 4996, 5198, 5356,
	5363, 0, 5358, 0, 5355, 0, 4851, 0, 5380, 0,
	1423, 5364, 0, 0, 2804, 0, 0, 5367, 0, 0,
	0, 5369, 5371, 0, 0, 1423, 0, 0, 1300, 1300,
	5381, 0, 1300, 0, 0, 1420, 1714, 1516, 5368, 1516,
	313, 5385, 5366, 0, 0, 0, 0, 5389, 5390, 5391,
	1420, 0, 0, 0, 0, 0, 0, 0, 0, 5395,
	5421, 5424, 0, 0, 0, 0, 313, 5445, 4851, 4851,
	0, 0, 5449, 0, 5425, 0, 0, 5412, 5429, 5411,
	5403, 5404, 5413, 0, 0, 0, 0, 1423, 1423, 4851,
	0, 2116, 4851, 0, 5426, 2121, 5431, 0, 1300, 1300,
	1300, 5470, 5468, 0, 0, 0, 0, 0, 1423, 0,
	0, 1423, 1420, 1420, 0, 0, 5430, 0, 0, 0,
	5392, 5393, 0, 5454, 0, 0, 0, 0, 5461, 5458,
	0, 0, 0, 1420, 0, 1419, 1420, 0, 1300, 1421,
	5469, 0, 0, 0, 0, 0, 5503, 0, 5081, 0,
	1419, 0, 5508, 5432, 1421, 5433, 5485, 5484, 5482, 5483,
	0, 5448, 1714, 0, 0, 3066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5539, 2424, 0, 0, 0,
	0, 0, 0, 5505, 5538, 0, 0, 0, 5537, 0,
	0, 0, 0, 5506, 5545, 0, 0, 0, 0, 1300,
	0, 5547, 0, 5529, 5521, 5551, 0, 1516, 1516, 5372,
	0, 5373, 1419, 1419, 0, 5560, 1421, 1421, 0, 5544,
	5178, 5519, 5543, 0, 0, 0, 5532, 5313, 0, 0,
	0, 0, 5553, 1419, 0, 0, 1419, 1421, 0, 5579,
	1421, 5552, 0, 0, 5566, 5567, 0, 0, 5570, 1300,
	0, 0, 5575, 5573, 0, 0, 5557, 0, 0, 0,
	0, 5596, 0, 0, 5581, 5421, 5583, 1425, 5424, 1425,
	5585, 5606, 5571, 0, 800, 5590, 0, 5597, 0, 0,
	0, 0, 0, 0, 5604, 5602, 0, 5603, 3418, 0,
	5595, 5582, 0, 0, 0, 313, 0, 313, 0, 0,
	5612, 313, 0, 0, 0, 0, 0, 3773, 3774, 1516,
	3791, 3792, 3793, 0, 1744, 1501, 1510, 313, 5594, 313,
	2245, 5635, 5598, 5568, 5569, 5628, 5627, 313, 5639, 817,
	4293, 0, 0, 0, 5636, 0, 313, 5605, 2414, 5607,
	0, 1300, 1300, 2415, 5647, 5638, 0, 0, 0, 0,
	1300, 1300, 0, 5645, 0, 0, 0, 5650, 2331, 1262,
	1262, 1262, 5659, 0, 0, 203, 5655, 0, 0, 0,
	5665, 313, 5448, 5670, 5672, 5680, 5679, 5673, 10, 5634,
	313, 5674, 6, 5681, 5678, 5664, 5663, 5504, 3788, 5641,
	5684, 0, 0, 5686, 0, 0, 5656, 5657, 5692, 1516,
	0, 5691, 5687, 5693, 5697, 0, 5694, 5689, 1678, 0,
	0, 5690, 890, 0, 5702, 5700, 5695, 5701, 5666, 3571,
	5704, 0, 5671, 0, 0, 5631, 1300, 4851, 0, 4851,
	3578, 0, 0, 5697, 5713, 5710, 0, 5712, 0, 5707,
	0, 0, 5709, 0, 0, 0, 1423, 0, 1423, 0,
	897, 3545, 897, 0, 0, 0, 0, 0, 4845, 0,
	0, 0, 897, 897, 0, 0, 2416, 0, 0, 0,
	0, 1420, 5708, 1420, 0, 5703, 0, 5310, 0, 0,
	0, 0, 3545, 0, 2420, 5706, 0, 0, 0, 86,
	3779, 0, 4224, 2278, 0, 0, 4838, 0, 0, 0,
	4831, 0, 0, 0, 1415, 0, 5518, 4222, 87, 5520,
	0, 0, 0, 0, 0, 0, 3630, 4215, 0, 4829,
	2278, 2278, 0, 2038, 2039, 0, 92, 0, 5611, 4833,
	0, 0, 0, 0, 0, 2274, 5352, 0, 0, 5354,
	0, 0, 0, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 4839, 2041, 0, 308, 308, 796,
	0, 0, 2274, 2274, 3795, 2417, 2422, 0, 0, 101,
	0, 1419, 0, 1419, 0, 1421, 0, 1421, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 2278, 0,
	0, 0, 3830, 2040, 0, 0, 0, 0, 0, 0,
	0, 4832, 0, 0, 0, 0, 4226, 0, 3789, 0,
	0, 0, 1039, 0, 0, 0, 0, 313, 0, 0,
	0, 313, 0, 0, 0, 4217, 0, 124, 0, 0,
	2274, 0, 0, 108, 121, 3773, 3774, 0, 3791, 3792,
	3793, 4216, 0, 0, 0, 0, 3859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2418, 0, 4292, 0,
	313, 0, 0, 0, 3875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 5455, 0, 0, 0, 5456, 0, 0, 0, 2091,
	313, 0, 0, 0, 0, 0, 0, 313, 3902, 109,
	4225, 0, 0, 0, 0, 2412, 2046, 5658, 0, 0,
	2425, 0, 0, 313, 0, 313, 3788, 0, 0, 800,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 0, 0, 0, 1045, 0, 0,
	0, 4213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 2070, 0, 0, 0, 0, 0, 2410, 0, 1501,
	313, 0, 2423, 0, 0, 3790, 0, 0, 4834, 0,
	0, 0, 0, 0, 0, 4835, 890, 3656, 0, 2278,
	0, 2038, 2039, 313, 0, 0, 4840, 0, 0, 0,
	0, 2697, 0, 0, 0, 0, 313, 0, 313, 0,
	313, 0, 313, 0, 313, 2069, 313, 2411, 3779, 0,
	0, 0, 0, 2041, 2061, 0, 3696, 3697, 0, 0,
	0, 2274, 0, 0, 0, 0, 0, 0, 3197, 4837,
	0, 2735, 0, 0, 2736, 1229, 2737, 1167, 2738, 4228,
	0, 0, 2094, 0, 0, 0, 0, 0, 4841, 113,
	0, 2040, 0, 313, 313, 313, 313, 0, 0, 313,
	3066, 3066, 1231, 0, 4223, 4218, 4219, 4220, 4221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3795, 0, 0, 0, 870, 0, 0, 1678,
	890, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 2893, 0, 0, 2419, 0, 4227, 0, 212, 0,
	116, 0, 1230, 120, 0, 0, 0, 2116, 0, 0,
	0, 0, 0, 0, 0, 0, 3789, 3785, 3786, 3787,
	0, 0, 0, 0, 3784, 3782, 3783, 3775, 3776, 3777,
	3778, 3780, 3781, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 1040, 0, 0, 0, 4229, 0, 170,
	0, 1168, 0, 0, 2046, 0, 0, 0, 3875, 0,
	934, 0, 0, 0, 0, 1723, 0, 0, 0, 2278,
	0, 2062, 1723, 0, 0, 2901, 0, 0, 0, 0,
	0, 0, 2038, 2039, 0, 4836, 946, 0, 0, 277,
	0, 3797, 3798, 3799, 3800, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 1262, 2069, 944, 2068, 2070,
	0, 2274, 0, 1678, 2041, 2278, 2278, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 947, 4846, 4847, 218, 3066, 3066, 3066, 3066, 2093,
	0, 0, 276, 2094, 0, 0, 0, 2278, 2278, 0,
	800, 0, 2040, 3092, 0, 0, 0, 2274, 2274, 0,
	0, 269, 0, 2060, 0, 0, 313, 0, 0, 0,
	270, 0, 2061, 2057, 213, 800, 0, 0, 0, 217,
	2278, 0, 313, 3790, 800, 0, 940, 0, 0, 2274,
	2274, 0, 0, 955, 0, 0, 313, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 4261, 0, 945,
	1592, 1173, 1172, 0, 0, 0, 313, 1510, 0, 0,
	0, 0, 2274, 313, 0, 313, 1744, 0, 313, 0,
	0, 0, 4287, 0, 0, 0, 0, 0, 0, 0,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0,
	0, 0, 0, 2091, 0, 2063, 2064, 2065, 2066, 0,
	1169, 0, 0, 939, 0, 2046, 0, 0, 0, 0,
	0, 0, 313, 1510, 0, 313, 817, 0, 817, 0,
	865, 0, 0, 0, 0, 313, 0, 0, 313, 4305,
	2278, 2278, 3237, 2278, 0, 0, 0, 1678, 313, 313,
	0, 0, 0, 313, 0, 313, 4321, 0, 942, 0,
	1501, 0, 313, 313, 0, 1510, 1510, 3253, 0, 2068,
	2070, 0, 313, 0, 0, 0, 0, 0, 0, 4125,
	4126, 0, 2274, 2274, 0, 2274, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 3785, 3786, 3787, 2055, 2056,
	0, 0, 3784, 3782, 3783, 3775, 3776, 3777, 3778, 3780,
	3781, 0, 0, 0, 0, 0, 897, 897, 0, 0,
	897, 897, 954, 0, 0, 0, 0, 0, 0, 3296,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	0, 313, 4205, 0, 0, 1170, 0, 0, 0, 0,
	0, 0, 0, 86, 4231, 313, 0, 2093, 0, 0,
	0, 0, 0, 0, 2038, 2039, 0, 0, 0, 313,
	0, 0, 87, 0, 1228, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	92, 0, 3366, 0, 0, 0, 2041, 0, 0, 4419,
	0, 890, 0, 0, 0, 936, 890, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 313, 101, 2040, 1175, 0, 0, 941, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3426, 1744, 0, 1174, 0, 0, 0, 0,
	2278, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0,
	1589, 0, 0, 0, 2067, 0, 1039, 1701, 0, 0,
	864, 0, 0, 0, 313, 3482, 0, 0, 0, 56,
	0, 124, 0, 0, 0, 0, 950, 108, 121, 0,
	2062, 0, 2274, 0, 0, 938, 0, 0, 0, 0,
	0, 1255, 0, 0, 0, 1744, 0, 0, 313, 0,
	0, 3426, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	3528, 0, 1678, 0, 0, 0, 0, 2046, 0, 0,
	3296, 0, 800, 0, 0, 0, 0, 0, 935, 0,
	0, 1045, 3296, 109, 948, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1852, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 2070, 0, 866, 313, 1501, 313, 0, 0,
	0, 0, 0, 2278, 0, 0, 937, 3602, 313, 0,
	0, 0, 1501, 0, 1501, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 1723, 0, 0,
	0, 0, 0, 0, 952, 953, 0, 949, 0, 0,
	0, 0, 0, 0, 0, 2274, 4284, 4285, 0, 0,
	0, 0, 0, 313, 0, 2061, 2058, 2054, 0, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 313,
	313, 313, 313, 1501, 0, 0, 1501, 0, 0, 313,
	1977, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	3066, 3066, 0, 0, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1723, 1723, 0, 113, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 313, 2278, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 0, 309, 4349,
	4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359,
	4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 0,
	4372, 0, 0, 0, 0, 0, 2274, 0, 0, 0,
	0, 0, 212, 0, 116, 0, 0, 120, 0, 0,
	0, 0, 0, 3066, 3066, 3066, 3066, 3066, 3066, 3066,
	3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066,
	3066, 3066, 3066, 0, 3066, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 1040, 926, 0,
	0, 0, 2062, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 2039, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 4568,
	0, 0, 0, 277, 0, 0, 2069, 0, 0, 0,
	4581, 4582, 0, 0, 2041, 2038, 2039, 0, 0, 0,
	4584, 0, 0, 0, 0, 0, 1678, 0, 0, 0,
	2093, 175, 0, 0, 0, 1723, 1723, 1723, 1723, 2069,
	0, 0, 0, 2094, 0, 0, 0, 2041, 218, 0,
	0, 0, 2040, 0, 0, 0, 276, 0, 0, 0,
	4773, 0, 2278, 2060, 3773, 3774, 0, 3791, 3792, 3793,
	0, 0, 0, 2057, 0, 269, 2094, 0, 0, 0,
	0, 2230, 0, 0, 270, 2040, 0, 0, 213, 0,
	0, 0, 0, 217, 0, 0, 0, 2240, 0, 1701,
	0, 0, 0, 4803, 2274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 4670, 0, 0, 0, 0, 2657, 4676, 4677,
	0, 0, 4282, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 313, 0, 0, 0, 3788, 0, 0, 0, 0,
	1678, 0, 0, 0, 0, 2063, 2064, 2065, 2066, 0,
	1701, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 800, 0, 0, 0, 0, 800, 0,
	0, 800, 0, 0, 800, 800, 0, 0, 2046, 0,
	800, 0, 0, 800, 0, 0, 0, 0, 0, 2278,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3779, 2055, 2056,
	0, 2274, 2068, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 313, 0, 0,
	0, 313, 313, 0, 3796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	2278, 3795, 0, 0, 0, 3296, 3296, 313, 0, 3952,
	3955, 0, 0, 0, 0, 0, 3296, 0, 2245, 0,
	0, 0, 0, 0, 4782, 4783, 0, 3296, 2245, 0,
	3296, 2245, 0, 0, 2245, 0, 0, 3952, 0, 1592,
	0, 0, 2274, 0, 2091, 3789, 0, 0, 0, 313,
	313, 3955, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5033,
	0, 0, 3955, 0, 313, 0, 0, 2091, 0, 4025,
	3955, 0, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4036, 0, 4036, 0, 0, 0, 0,
	0, 87, 0, 0, 2067, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 5033, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 2091, 0, 0, 3296,
	2062, 3296, 1262, 4072, 3296, 3955, 0, 0, 3296, 2597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3955, 0, 2620, 890, 0,
	0, 0, 101, 2062, 0, 0, 2825, 0, 0, 0,
	0, 0, 0, 2632, 0, 2632, 0, 2278, 0, 0,
	0, 2639, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 313, 2093, 0,
	0, 0, 2657, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 3790, 0, 0, 313, 0, 0, 4127, 2274,
	124, 4132, 3296, 0, 0, 313, 108, 121, 0, 0,
	2667, 2093, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2825, 0, 0, 0, 313,
	0, 0, 0, 2689, 3528, 0, 0, 1501, 0, 313,
	0, 0, 3296, 0, 800, 0, 0, 0, 2706, 0,
	2708, 3296, 2710, 0, 2712, 0, 2713, 0, 5004, 0,
	5006, 5007, 5008, 0, 5010, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 2058, 2054, 0, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 2278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4247, 0, 2743, 2744, 0, 0, 0, 0, 0,
	1723, 1723, 0, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 0, 0, 0, 4254, 0, 4255, 0, 0, 1744,
	0, 2274, 313, 0, 0, 0, 0, 0, 1501, 313,
	0, 313, 0, 0, 0, 0, 0, 1501, 0, 0,
	1501, 0, 0, 0, 3785, 3786, 3787, 0, 0, 5061,
	0, 3784, 3782, 3783, 3775, 3776, 3777, 3778, 3780, 3781,
	0, 0, 1462, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1678,
	1485, 0, 1485, 1485, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 1723, 1723, 1723, 1723, 1723, 1723, 1723,
	1723, 1723, 1723, 1723, 1723, 1723, 1723, 1723, 1723, 1723,
	1723, 1723, 1723, 0, 1723, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 2465, 0, 0, 0, 4326, 0,
	0, 0, 0, 1678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2475, 1687, 1462, 0,
	0, 1703, 926, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 116, 5153, 1678, 120, 3773, 3774, 0,
	3791, 3792, 3793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5041, 0, 0, 0,
	0, 0, 0, 0, 0, 4385, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 1040, 0, 0, 0,
	313, 313, 170, 0, 0, 2471, 0, 0, 0, 2074,
	1262, 0, 0, 0, 926, 926, 3165, 0, 0, 0,
	3066, 0, 1262, 0, 0, 800, 0, 0, 4410, 800,
	0, 0, 0, 0, 0, 0, 0, 800, 3788, 0,
	0, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5097, 0, 0, 0, 2468, 0, 0,
	175, 0, 0, 0, 0, 313, 0, 2038, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 2069, 0, 0, 0, 0, 0, 3066, 0, 2041,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 2473, 0, 270, 0, 0, 0, 213, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 2094, 0,
	3779, 0, 2620, 0, 0, 0, 0, 2040, 0, 0,
	0, 1678, 0, 216, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 890, 2057, 0,
	0, 2464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4535, 0, 0, 4537, 0, 0, 4540, 0,
	0, 0, 0, 0, 3795, 0, 4036, 0, 0, 0,
	2461, 0, 2478, 0, 0, 0, 0, 4281, 0, 0,
	0, 0, 313, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 2064, 2065, 2066, 0, 0, 3426, 0, 3789, 0,
	2046, 0, 0, 2657, 2038, 2039, 5245, 0, 0, 0,
	0, 3955, 0, 313, 0, 0, 0, 817, 817, 1510,
	0, 2074, 2459, 0, 0, 0, 0, 0, 2069, 0,
	0, 0, 0, 0, 0, 2466, 2041, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 2476, 313, 3528, 0,
	3066, 3528, 2245, 0, 2068, 2070, 0, 313, 0, 0,
	0, 0, 5280, 2472, 4634, 2094, 3426, 86, 0, 313,
	0, 0, 2460, 313, 2040, 313, 0, 0, 0, 2091,
	313, 0, 0, 2055, 2056, 2060, 87, 5302, 0, 0,
	0, 0, 0, 0, 2469, 2057, 0, 0, 0, 3296,
	313, 2467, 0, 0, 92, 0, 3066, 0, 0, 2477,
	0, 1045, 3296, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 1678, 0, 0, 1678, 3504, 0,
	0, 3066, 0, 0, 0, 0, 0, 0, 0, 2620,
	0, 0, 0, 0, 0, 0, 313, 101, 0, 0,
	3955, 0, 0, 3253, 3685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3790, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 0, 2470, 0, 2046, 0, 0,
	1039, 0, 0, 0, 3576, 2074, 0, 0, 0, 2091,
	0, 0, 0, 56, 0, 124, 1678, 0, 0, 0,
	0, 108, 121, 0, 0, 3589, 0, 3592, 0, 0,
	0, 2074, 0, 1678, 0, 1485, 0, 0, 0, 0,
	4736, 0, 0, 0, 1703, 0, 0, 0, 0, 0,
	0, 2068, 2070, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 2067,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 2056, 0, 3626, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 3637,
	1701, 3639, 1701, 0, 0, 313, 0, 0, 0, 3646,
	0, 1744, 0, 313, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 3785, 3786, 3787,
	0, 0, 0, 0, 3784, 3782, 3783, 3775, 3776, 3777,
	3778, 3780, 3781, 3675, 1510, 1510, 1510, 0, 0, 0,
	0, 0, 0, 2093, 0, 2074, 0, 1510, 1510, 1510,
	2074, 313, 1510, 0, 0, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 3296, 3296, 2074,
	3952, 0, 0, 4036, 3296, 0, 2091, 0, 0, 0,
	0, 0, 4853, 0, 4853, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3296, 0, 2245, 0,
	0, 0, 3952, 0, 1744, 1744, 313, 3955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3955, 0, 313, 3955, 0, 313, 4889, 113, 0, 0,
	0, 4036, 0, 0, 4036, 0, 2067, 2074, 4036, 0,
	0, 2058, 2054, 2074, 2051, 2049, 2050, 2042, 2043, 2044,
	2045, 2047, 2048, 0, 0, 0, 0, 3296, 0, 3296,
	313, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 116, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2588, 0, 0, 0, 0, 3296,
	3296, 0, 0, 0, 0, 3528, 3528, 0, 0, 0,
	0, 0, 3952, 275, 0, 0, 0, 0, 0, 0,
	2093, 1040, 0, 0, 2613, 313, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2198, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 2074, 2074,
	2074, 2074, 2074, 2074, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 2074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 218, 0, 0, 0, 0, 0, 2058, 2054,
	276, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 3452, 1723, 270, 0,
	0, 0, 213, 0, 0, 0, 0, 217, 0, 3070,
	4410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 1845, 0,
	2074, 3442, 3440, 3885, 0, 0, 0, 0, 0, 3444,
	3446, 3436, 0, 0, 0, 0, 0, 0, 0, 2613,
	2747, 0, 0, 2750, 0, 0, 0, 0, 0, 0,
	0, 3296, 2245, 0, 2245, 0, 1678, 4634, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 3462, 0, 5113, 0, 5113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1678, 1701, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 4036, 1744, 0, 0,
	0, 1744, 0, 1501, 0, 0, 0, 3948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3955, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4004,
	4006, 0, 0, 2620, 0, 0, 0, 0, 0, 4634,
	0, 0, 4853, 0, 0, 1744, 0, 0, 0, 3296,
	1723, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5209, 0, 0,
	0, 0, 0, 0, 1678, 1678, 0, 1678, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 3438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3454, 0,
	0, 0, 0, 0, 0, 0, 1723, 0, 313, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1678, 0, 3453, 3443, 3441, 3445, 3447, 3437, 3439, 3455,
	3457, 1723, 4326, 0, 0, 0, 0, 0, 0, 0,
	3449, 3451, 3459, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 126, 4036, 5271, 0,
	926, 0, 0, 0, 0, 4634, 0, 3463, 0, 0,
	0, 0, 1462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4853, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 4154, 0, 0, 0, 0,
	4853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 926, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 1462,
	0, 0, 1462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 3240, 0, 0, 817, 1485, 0, 1485,
	0, 0, 0, 0, 0, 0, 926, 926, 0, 0,
	0, 0, 4853, 4853, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4853, 0, 313, 4853, 0, 0, 0,
	0, 0, 0, 3456, 0, 0, 2245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 1744,
	0, 0, 1678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4258, 0, 0, 0, 0, 0, 0, 4263,
	0, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5401, 0, 1218,
	0, 0, 0, 1687, 0, 0, 1678, 0, 3464, 4277,
	0, 0, 1240, 5113, 0, 0, 313, 0, 3448, 3450,
	0, 0, 3458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 1678, 0, 0, 0,
	3296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 2074, 0,
	0, 0, 0, 1409, 313, 0, 0, 0, 0, 0,
	0, 1678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 2074, 0,
	0, 0, 0, 1678, 0, 0, 0, 0, 0, 2074,
	2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074,
	2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074,
	2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074,
	2074, 2074, 2074, 2074, 2074, 0, 0, 0, 0, 0,
	2074, 1262, 2074, 2074, 2074, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 3070, 3070, 0, 0, 0, 0,
	0, 0, 0, 4634, 0, 0, 0, 0, 0, 2074,
	0, 0, 1678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 3296, 926, 0, 0, 0, 0, 0, 0, 0,
	2074, 4853, 0, 4853, 0, 0, 1744, 0, 0, 0,
	0, 1247, 1247, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1678, 0, 0,
	2074, 0, 0, 2074, 0, 0, 2074, 0, 0, 2074,
	0, 0, 0, 0, 0, 2074, 2074, 2074, 2074, 2074,
	2074, 2074, 0, 0, 1703, 0, 1703, 0, 0, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 0,
	3296, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3426, 3041, 3042,
	3043, 3044, 3037, 3038, 3039, 3040, 0, 0, 0, 1485,
	1746, 3296, 1752, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 3426, 0, 3794, 0, 3070,
	3070, 3070, 3070, 0, 0, 2074, 0, 2074, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 1858, 0, 3017, 3018,
	3019, 3020, 0, 2620, 0, 0, 0, 0, 0, 0,
	1872, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3029, 3030, 3031, 3032, 3025, 3026, 3027, 3028,
	3033, 3034, 3035, 3036, 0, 0, 0, 4618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2620, 0, 2620, 0, 0, 0, 0,
	4649, 0, 0, 2038, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 2041, 3013, 3014, 3015, 3016,
	3021, 3022, 3023, 3024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 4694, 0, 0, 0,
	0, 0, 0, 2040, 0, 2038, 2039, 0, 2071, 2072,
	2073, 2082, 2083, 2084, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 2075, 2069,
	1262, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 126, 0, 0,
	0, 0, 0, 3678, 0, 0, 2060, 2115, 0, 0,
	0, 0, 0, 2128, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 2064, 2065, 2066,
	0, 0, 0, 0, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 2070, 0, 0, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 126, 0, 126, 0, 126, 0, 2055,
	2056, 2192, 2192, 2192, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 1703, 1703, 2074, 2074, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 0, 2061, 2089, 0, 0, 0, 0,
	0, 0, 2068, 2070, 0, 0, 0, 0, 0, 0,
	1240, 126, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 2086, 0, 4873, 126, 0, 126,
	0, 2055, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2620, 126, 0, 126, 0, 0, 0, 0,
	0, 2077, 0, 0, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 2613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 2087, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 2620, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 4984, 0, 0, 0,
	0, 2074, 2074, 0, 3070, 3070, 0, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3794, 3794,
	0, 0, 2074, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 2093,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 0, 0, 2114,
	0, 0, 0, 2120, 0, 2080, 0, 3070, 3070, 3070,
	3070, 3070, 3070, 3070, 3070, 3070, 3070, 3070, 3070, 3070,
	3070, 3070, 3070, 3070, 3070, 3070, 3070, 0, 3070, 3794,
	3794, 3794, 3794, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 2058, 2054, 0,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5099, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 2212, 0, 2215, 0,
	126, 0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058,
	2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 0, 0, 0, 0, 0, 4744, 0, 0, 0,
	4743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 2038,
	2039, 0, 0, 2632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 2722, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5235, 1701,
	2094, 0, 0, 0, 0, 0, 2074, 2074, 0, 2040,
	0, 2756, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2798, 0,
	2802, 0, 0, 0, 0, 0, 0, 2816, 0, 0,
	1247, 0, 0, 0, 0, 0, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 0, 2868, 0, 2870, 2871, 2872, 2873, 0,
	0, 0, 2063, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 2897, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 2948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2978, 2981, 2984, 2987, 0, 0, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 2068, 2070, 0, 0,
	0, 0, 0, 0, 0, 5357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3062, 0, 3073, 3075, 3080, 2055, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 2074, 0, 0, 2074, 3794, 3794, 2074, 0,
	2061, 0, 2074, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5415, 0, 0, 0,
	0, 1240, 0, 1240, 0, 2074, 2074, 2074, 2074, 2074,
	0, 0, 0, 0, 0, 0, 2074, 0, 2074, 0,
	0, 3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794,
	3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794,
	3794, 2091, 0, 0, 3794, 0, 0, 2074, 2074, 0,
	0, 0, 0, 0, 5463, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 2613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083,
	2084, 0, 0, 0, 1296, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 2075, 2069, 0, 0, 0,
	2074, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2094, 0, 0, 0, 312, 312, 312,
	0, 0, 2040, 0, 1218, 0, 0, 1218, 1218, 2074,
	0, 0, 0, 2060, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 2057, 312, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 968, 0, 0, 0, 2886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2114, 0, 0, 0, 2114,
	0, 0, 0, 0, 0, 2063, 2064, 2065, 2066, 0,
	0, 0, 0, 2058, 2054, 2046, 2051, 2049, 2050, 2042,
	2043, 2044, 2045, 2047, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 850, 0, 0, 0, 3485, 3486,
	0, 3488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 834, 0, 0, 2079, 2074,
	835, 0, 2089, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 926, 0, 0, 0, 2085,
	0, 2086, 0, 2215, 0, 0, 0, 0, 2055, 2056,
	0, 1334, 0, 836, 0, 0, 2074, 2074, 0, 0,
	0, 2074, 2074, 0, 837, 2074, 2074, 0, 2077, 0,
	2074, 0, 1422, 0, 2074, 0, 0, 0, 0, 2074,
	0, 0, 0, 2061, 0, 0, 0, 838, 0, 0,
	0, 0, 0, 126, 3070, 0, 0, 850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2613,
	856, 0, 0, 0, 0, 0, 0, 0, 834, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 839, 0, 0, 0, 0, 3613, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 840, 832,
	0, 0, 0, 0, 2091, 0, 836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 837, 0, 0,
	0, 3070, 841, 0, 0, 0, 0, 833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 0, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2095,
	2096, 0, 0, 856, 2067, 0, 0, 0, 0, 0,
	0, 0, 855, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 839, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 840, 832, 0, 0, 0, 0, 3679, 3680, 0,
	0, 0, 2080, 3686, 2074, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 841, 852, 0, 0, 0,
	833, 0, 3700, 3701, 0, 0, 0, 0, 2948, 0,
	0, 0, 0, 0, 0, 0, 0, 865, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 855, 0, 0, 0, 0,
	0, 0, 0, 3710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3724,
	2074, 2074, 2074, 862, 0, 843, 0, 0, 0, 0,
	0, 2074, 2074, 3794, 3070, 0, 3736, 0, 0, 0,
	2074, 0, 0, 2074, 0, 0, 0, 0, 0, 126,
	2078, 0, 126, 0, 126, 0, 863, 0, 844, 852,
	0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0,
	0, 0, 0, 3745, 0, 0, 0, 3746, 0, 3794,
	3070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 864, 0, 2074, 126, 0, 0,
	126, 0, 845, 0, 2074, 3070, 126, 860, 861, 0,
	858, 0, 2074, 0, 0, 0, 0, 0, 0, 853,
	0, 0, 846, 0, 2074, 0, 2074, 0, 843, 0,
	3080, 3080, 3080, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	0, 844, 0, 0, 0, 0, 0, 0, 0, 0,
	847, 0, 854, 0, 0, 0, 0, 0, 3834, 0,
	0, 848, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 864, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 0, 866, 0,
	860, 861, 0, 858, 0, 0, 0, 3794, 0, 0,
	851, 0, 853, 0, 0, 846, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 3794, 0, 0, 2074, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 3794, 854, 312, 0, 312, 312,
	0, 0, 312, 0, 848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 1247, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 866, 0, 2886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3985, 0, 0, 0, 0,
	312, 926, 312, 312, 312, 0, 0, 312, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 968,
	0, 0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073,
	2082, 2083, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2069, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 4054, 4055, 2088, 0, 0,
	312, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 312, 312, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	2079, 0, 0, 2074, 2089, 0, 1426, 0, 0, 0,
	0, 2068, 2070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2085, 0, 2086, 0, 0, 0, 0, 0, 0,
	2055, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2816, 0, 1426, 0, 0, 0,
	0, 4279, 4280, 1426, 0, 4283, 0, 0, 0, 4286,
	0, 0, 0, 0, 0, 0, 0, 0, 4290, 1426,
	0, 0, 0, 0, 2087, 0, 0, 4297, 0, 0,
	0, 0, 3834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 4310, 0, 0,
	0, 0, 126, 126, 0, 126, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4333, 4334, 0,
	4335, 4336, 4337, 0, 0, 0, 0, 0, 0, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4344, 0, 0, 0, 4346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2214, 2067, 1422, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 4375, 4376,
	126, 126, 0, 126, 0, 0, 0, 312, 2214, 312,
	0, 0, 2062, 0, 0, 0, 0, 968, 4388, 0,
	0, 0, 0, 0, 0, 0, 968, 0, 0, 0,
	0, 0, 0, 4397, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 993, 0,
	312, 0, 0, 994, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 995, 0, 1009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4468, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 1240, 0, 996, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 126, 126, 0,
	0, 4486, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1018, 2052, 2053, 2059, 2081, 2058, 2054,
	998, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 0, 0, 4517, 1016, 0, 0, 4742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 991, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 1426, 999, 4549, 4550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 1020, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2282, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1019,
	312, 0, 0, 0, 2192, 0, 0, 0, 0, 1014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 2192, 0, 0, 0, 0, 0, 312, 0, 0,
	4667, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 312, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 1013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1000, 0,
	0, 1409, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1001, 0, 0, 0, 4714, 4715, 0, 0, 0,
	0, 4719, 4720, 312, 0, 0, 4723, 4724, 0, 0,
	0, 0, 0, 0, 4728, 0, 968, 0, 312, 0,
	312, 0, 312, 0, 312, 4732, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 864, 0, 0,
	0, 4737, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 1010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 0, 312, 312, 312, 312, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 1426, 1426, 0, 0,
	0, 0, 0, 0, 1008, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1003, 0, 0, 0, 1004, 1023, 0,
	1022, 0, 0, 1426, 1005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 1015, 0, 0, 0, 0,
	0, 1024, 1426, 0, 1021, 0, 0, 0, 0, 0,
	0, 866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 0, 0, 0, 0, 1426, 0, 1426,
	0, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	1426, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 1426, 86, 0, 53, 52, 0, 0,
	0, 0, 0, 0, 0, 1426, 0, 0, 1426, 1426,
	1426, 1426, 0, 87, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 4902, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 55,
	0, 177, 0, 0, 0, 126, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 1422, 0, 101, 0, 0, 0, 0, 0,
	0, 1409, 0, 4942, 4943, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 75, 0, 0, 312, 0, 0, 0,
	0, 0, 58, 968, 0, 968, 0, 64, 312, 0,
	0, 0, 81, 126, 0, 0, 0, 0, 0, 0,
	56, 0, 124, 0, 0, 0, 0, 0, 108, 121,
	0, 0, 0, 0, 0, 0, 0, 76, 0, 0,
	2282, 2282, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 312, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 312, 312,
	5028, 5029, 5030, 312, 0, 312, 0, 0, 0, 0,
	0, 0, 312, 312, 109, 0, 0, 0, 0, 0,
	0, 0, 312, 2816, 0, 0, 5039, 5040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5048, 5051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 312, 0, 0, 1409, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 5114, 0, 0, 1426,
	0, 0, 0, 0, 0, 5122, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	5130, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 5142, 0, 0, 5144, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 5154, 0, 0, 0, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 0, 0,
	0, 0, 65, 212, 968, 116, 0, 0, 120, 0,
	0, 0, 0, 0, 61, 0, 0, 126, 178, 0,
	0, 0, 0, 0, 0, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 69, 312,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	126, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 312, 0, 312, 0, 126,
	0, 0, 79, 0, 0, 2282, 0, 0, 312, 218,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	5279, 0, 0, 0, 5283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 213,
	0, 0, 0, 312, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	312, 312, 312, 0, 0, 216, 0, 0, 3, 312,
	1426, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2816, 0, 0, 0,
	0, 0, 0, 0, 0, 5051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1426, 0, 1426, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 1426, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3099, 0, 0,
	0, 0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073,
	2082, 2083, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2069, 0,
	0, 0, 3097, 0, 0, 0, 2041, 3101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 0,
	0, 5481, 5481, 5481, 0, 0, 0, 0, 0, 3102,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	1426, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2886, 2060, 0, 0, 0, 0,
	0, 5507, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 3103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3104, 0, 0, 0, 0, 0, 0, 3105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1422, 5481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3106, 0, 0, 0, 0, 0, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 2046, 1422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2214, 0, 0, 0, 0, 0, 0, 0, 126,
	2079, 0, 3107, 312, 2089, 0, 0, 0, 0, 0,
	0, 2068, 2070, 0, 968, 0, 0, 0, 0, 0,
	3108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3109, 2085, 0, 2086, 0, 0, 0, 0, 0, 0,
	2055, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3110, 0, 126, 0,
	2077, 126, 0, 0, 5481, 5651, 0, 312, 0, 0,
	0, 312, 312, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 312,
	312, 0, 0, 312, 0, 0, 2091, 3111, 0, 0,
	2214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 1426, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 1426, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3112,
	3113, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 1426, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 3114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3119, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 2282, 0, 0, 0, 1426, 0, 0, 0, 3115,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 3116, 0, 0, 0, 0, 2282,
	2093, 0, 0, 0, 0, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2282, 0, 0, 0,
	3118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 312,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 0, 126,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 2069, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 1426,
	2040, 1426, 0, 0, 0, 1426, 0, 0, 0, 0,
	0, 2060, 0, 1426, 1426, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 314, 314, 314, 0, 0, 0, 0, 1426, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1422, 1422, 0, 2063, 2064, 2065, 2066, 0, 314, 0,
	0, 0, 0, 2046, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 2079, 1426, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 2068, 2070, 0,
	0, 0, 0, 0, 0, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2085, 0, 2086,
	0, 0, 0, 0, 0, 0, 2055, 2056, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 2282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2282, 2282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 2282, 2282, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2282, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 312, 0, 0, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 960, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	2080, 0, 0, 312, 0, 312, 0, 0, 0, 2282,
	312, 2282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1422, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050,
	2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0, 0,
	0, 2944, 0, 0, 0, 2945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 1426, 0, 0, 0, 0, 0,
	0, 1426, 0, 0, 1426, 1426, 0, 0, 0, 0,
	1113, 0, 1167, 0, 1426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1121, 0, 0,
	0, 0, 0, 0, 0, 1422, 0, 0, 2282, 0,
	0, 0, 0, 1422, 0, 1137, 0, 1119, 1118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1139, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 1123, 1426, 0, 0, 0, 1179, 0, 1150,
	0, 0, 0, 0, 0, 0, 0, 1426, 1134, 1135,
	0, 312, 0, 0, 0, 0, 1426, 0, 1155, 0,
	0, 1426, 1426, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 1125, 0, 0,
	0, 0, 2214, 1126, 2214, 0, 1426, 0, 1426, 0,
	0, 0, 0, 0, 1426, 0, 1426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 312, 0, 0, 312, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 1146, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 1131, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 314, 314, 0, 0, 314, 0, 0, 0,
	1140, 1138, 0, 0, 0, 0, 0, 0, 1133, 0,
	0, 0, 0, 1151, 0, 312, 1173, 1172, 0, 0,
	0, 0, 1426, 0, 0, 0, 312, 0, 0, 0,
	1426, 0, 1176, 1164, 1426, 1426, 0, 1426, 0, 0,
	0, 0, 2282, 0, 0, 0, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 1426,
	0, 0, 0, 0, 0, 1169, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 1598, 314, 314, 314, 0,
	1426, 314, 314, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 1426, 0, 0, 0, 0, 1124, 1598, 0, 1178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 314, 314, 1426, 0, 1159, 1160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 1598, 0, 0, 0, 0, 0, 0,
	1598, 314, 314, 0, 0, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	1170, 1157, 0, 0, 1301, 0, 0, 0, 0, 1177,
	1152, 0, 0, 1143, 1141, 0, 312, 0, 1147, 0,
	0, 0, 0, 0, 0, 0, 1148, 0, 0, 1115,
	0, 1171, 0, 0, 0, 0, 1426, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1116, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 1161, 0, 1149, 1130, 0, 0, 0, 0, 1145,
	0, 0, 1426, 0, 0, 0, 0, 1426, 0, 0,
	1175, 0, 0, 0, 314, 0, 0, 0, 1153, 0,
	1154, 0, 312, 0, 0, 0, 0, 0, 0, 1128,
	1174, 0, 1426, 1426, 1426, 1426, 1426, 1426, 1426, 0,
	314, 0, 0, 0, 0, 1156, 0, 0, 0, 0,
	0, 0, 2214, 0, 0, 0, 1426, 0, 1595, 0,
	0, 0, 0, 312, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2282, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 312, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1426, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2282, 0,
	2214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 0, 0, 1426, 0,
	0, 1426, 1426, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 2214, 2214, 0, 0, 1598, 0, 0, 0,
	0, 314, 314, 314, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 2214, 0, 312, 2214, 0, 0, 1426,
	314, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 0, 0,
	1426, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2282, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073,
	2082, 2083, 2084, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 0, 2075, 2069, 0,
	0, 0, 0, 0, 0, 0, 2041, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 2282, 0, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 1426,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 1426, 2255, 0, 0, 1426, 0, 0,
	0, 0, 0, 2255, 0, 0, 0, 1426, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 1598, 1598, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	1598, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 2214, 0, 2214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 314, 0, 0, 1426, 0, 0,
	2079, 314, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 2068, 2070, 1595, 0, 0, 0, 314, 0, 314,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 2085, 0, 2086, 1598, 0, 1598, 0, 1598, 0,
	2055, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 1598, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 314, 2061, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 1598, 1598, 1598, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 314, 0, 314, 0, 314, 0, 314, 0,
	314, 0, 0, 1426, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 314, 314,
	314, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1715, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 1595, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1426, 1598,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 1716, 1715, 0, 1715,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 0, 1716, 0, 0, 0, 0, 0, 0, 1715,
	1715, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 1715, 1715,
	1715, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2255, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	314, 0, 0, 1598, 0, 0, 0, 0, 0, 4295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 314, 0, 314,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 314, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 314, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 314, 314, 0, 0, 0, 314, 0, 314,
	0, 0, 0, 0, 0, 0, 314, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 2039,
	0, 2071, 2072, 2073, 2082, 2083, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 2075, 2069, 0, 0, 0, 0, 0, 0, 314,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2088, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2094,
	1595, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 1596, 0, 0, 0, 1595, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 1598, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 2064, 2065, 2066, 0, 0, 0, 0, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 2089, 0,
	1598, 0, 0, 0, 0, 2068, 2070, 0, 0, 0,
	0, 0, 1598, 0, 1598, 0, 1595, 0, 0, 0,
	1598, 0, 0, 0, 0, 2085, 0, 2086, 314, 0,
	0, 1598, 1598, 0, 2055, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 314, 0, 0, 2077, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 2087, 0,
	0, 0, 0, 314, 314, 314, 314, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 314, 2076,
	1595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 1715, 0, 0, 0, 0, 0, 0, 1716,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	1596, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 2080, 0,
	1716, 0, 1716, 0, 1716, 1715, 0, 1715, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 1716, 1715, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 1716, 1716, 1716, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 2038, 2039, 0, 2071, 2072, 2073,
	2082, 2083, 2084, 3748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2069, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 2088, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	0, 314, 0, 0, 0, 314, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	2079, 314, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 2068, 2070, 0, 0, 0, 0, 0, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2085, 0, 2086, 0, 0, 0, 0, 0, 0,
	2055, 2056, 0, 314, 314, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 1596,
	0, 0, 0, 0, 86, 1595, 53, 52, 0, 0,
	0, 314, 0, 0, 0, 0, 1598, 0, 1598, 0,
	0, 0, 1598, 87, 0, 0, 0, 0, 0, 314,
	1598, 1598, 0, 0, 1598, 0, 2067, 0, 0, 314,
	0, 92, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 55,
	0, 177, 2062, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 101, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 1598, 0, 0,
	0, 0, 57, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 58, 1596, 0, 0, 0, 64, 0, 0,
	2093, 0, 5662, 0, 0, 1716, 0, 0, 0, 0,
	56, 0, 124, 0, 0, 0, 0, 0, 108, 121,
	0, 0, 0, 0, 0, 0, 0, 76, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 1598, 0, 314, 1598, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 314, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 3747,
	0, 0, 0, 1598, 0, 0, 0, 0, 1716, 0,
	1716, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 1716, 1716, 1715,
	0, 1715, 0, 0, 0, 1595, 0, 0, 0, 0,
	0, 0, 960, 1715, 1715, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 2039, 0, 2071,
	2072, 2073, 2082, 2083, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	2069, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 2088,
	0, 0, 0, 1716, 0, 0, 0, 0, 1715, 0,
	1715, 0, 0, 0, 113, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 0, 63,
	0, 0, 0, 1598, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 0, 0,
	0, 0, 65, 212, 1595, 116, 0, 1595, 120, 0,
	5528, 0, 0, 0, 61, 0, 0, 0, 178, 314,
	0, 0, 0, 0, 0, 1598, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 2063,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 2046,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 175, 2068, 2070, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 2085, 0, 2086, 0, 276, 0, 0,
	0, 0, 2055, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 2077, 0, 0, 270, 314, 0, 0, 213,
	0, 0, 0, 0, 217, 0, 0, 2061, 0, 0,
	1598, 1598, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 1598, 1598, 0, 0, 216, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 1596, 314, 0, 0, 0, 314, 0, 314,
	0, 0, 2255, 0, 314, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 1598, 1598,
	1598, 0, 0, 0, 0, 0, 1596, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 1596, 1598, 0, 0, 0, 0,
	314, 1598, 0, 1598, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 0, 2080, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 1715, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 1715, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2078, 0, 0, 0, 0, 0,
	0, 1598, 1598, 0, 1598, 0, 2052, 2053, 2059, 2081,
	2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045,
	2047, 2048, 0, 0, 0, 1598, 1598, 0, 0, 0,
	0, 3744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 0, 1715, 0, 0, 0,
	0, 1715, 1715, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 1715, 0,
	0, 0, 0, 0, 1715, 0, 1595, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 314, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 1716, 0, 1716, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 1598, 0, 1716, 1716, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 1598, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 1716, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	314, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 1595, 0, 1595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	1598, 1598, 1598, 1598, 1598, 1598, 0, 0, 1715, 1715,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	1596, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 1598, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 1598, 1596,
	1598, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 1596, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 1595, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 1598,
	0, 0, 1595, 0, 2046, 1598, 0, 1715, 1598, 1598,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	0, 0, 1715, 1715, 1715, 1715, 1715, 1715, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 1595, 314, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 1598, 2085, 0,
	2086, 0, 0, 0, 0, 0, 1595, 2055, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 314, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073,
	2082, 2083, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2069, 0,
	0, 2087, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 2088, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 1716, 1716, 0, 0,
	0, 314, 0, 0, 1716, 0, 0, 1716, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 1595, 2067, 0, 0, 0, 0, 1715, 0,
	0, 1715, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 2063, 2064, 2065,
	2066, 2080, 0, 0, 0, 0, 0, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 1595, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 1716,
	0, 0, 0, 0, 1716, 1716, 1716, 0, 0, 0,
	2079, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 2068, 2070, 0, 0, 0, 0, 0, 0, 1716,
	314, 1716, 0, 0, 0, 0, 0, 1716, 0, 1596,
	0, 2085, 0, 2086, 1598, 0, 0, 0, 0, 0,
	2055, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 1596, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 2061, 0, 0, 314, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 1596, 0,
	1596, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 1716, 1716, 0, 0, 0, 2067, 0, 0, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 2075, 2069, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 1596,
	2093, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	1716, 0, 2078, 2063, 2064, 2065, 2066, 0, 0, 0,
	0, 0, 0, 2046, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 3742,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 2079, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 2068, 2070, 0,
	0, 0, 0, 0, 0, 1716, 1716, 1716, 1716, 1716,
	1716, 1716, 0, 0, 0, 0, 0, 2085, 0, 2086,
	0, 0, 0, 0, 0, 0, 2055, 2056, 0, 1596,
	0, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083,
	2084, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 2069, 0, 0, 1596,
	0, 2061, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 1596, 0, 1716, 0, 0, 0,
	2087, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 2063, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 1716, 0, 0, 1716, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	2080, 0, 2089, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 2086, 0, 0, 0, 0, 2093, 0, 2055, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 1716, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050,
	2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 2945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 1593, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 1599, 330, 331, 1600, 1601, 1602, 0,
	1603, 740, 1604, 1605, 1606, 332, 1607, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 1608, 745, 345, 346, 347,
	348, 349, 350, 351, 1609, 1610, 0, 352, 746, 747,
	748, 1611, 353, 354, 749, 1612, 1679, 1613, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 1614, 364, 365,
	366, 363, 367, 368, 1615, 369, 1716, 370, 371, 372,
	373, 374, 375, 376, 1616, 377, 378, 379, 1366, 380,
	381, 382, 1617, 1618, 1620, 1619, 1621, 1622, 1623, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 1624,
	393, 395, 389, 391, 1625, 394, 392, 396, 397, 1626,
	398, 399, 400, 1627, 1628, 401, 402, 403, 1629, 404,
	405, 406, 1630, 407, 408, 409, 1631, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 1632, 319, 1633, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	1634, 429, 430, 431, 1635, 432, 433, 1636, 1367, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 1637, 446, 758, 1638, 759, 447, 1639,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 1369, 455, 456, 457, 1640, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 1641, 1368,
	763, 466, 549, 467, 764, 765, 1642, 766, 1643, 468,
	469, 471, 1370, 767, 1371, 470, 472, 473, 1372, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	1644, 482, 484, 483, 1645, 486, 768, 485, 1373, 487,
	488, 1374, 1646, 489, 490, 491, 492, 493, 494, 497,
	1647, 1648, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 1375, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	1376, 541, 529, 1649, 321, 1377, 543, 544, 545, 546,
	1650, 769, 547, 770, 550, 551, 1651, 0, 552, 0,
	553, 1652, 1653, 555, 556, 557, 1654, 1655, 558, 559,
	771, 1378, 560, 1379, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 1656, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 1657, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 1658, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 1659,
	619, 620, 618, 621, 622, 1380, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	1660, 649, 650, 648, 651, 652, 653, 1661, 654, 779,
	655, 635, 636, 656, 657, 1381, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 1662, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 1663, 686,
	687, 0, 681, 672, 1664, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 1665, 696, 783, 784, 785, 786,
	1666, 708, 1667, 697, 699, 700, 701, 702, 787, 703,
	788, 1668, 704, 705, 706, 707, 698, 709, 710, 1669,
	1670, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	1671, 720, 1672, 0, 721, 722, 723, 789, 790, 791,
	1673, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 1674, 1675, 1676, 1677, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 3140, 0, 0, 0, 0, 0, 0,
	0, 0, 3141, 322, 323, 325, 324, 326, 327, 328,
	329, 1599, 330, 331, 1600, 1601, 1602, 0, 1603, 740,
	1604, 1605, 1606, 332, 1607, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 1608, 745, 345, 346, 347, 348, 349,
	350, 351, 1609, 1610, 0, 352, 746, 747, 748, 1611,
	353, 354, 749, 1612, 1679, 1613, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 1614, 364, 365, 366, 363,
	367, 368, 1615, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 1616, 377, 378, 379, 1366, 380, 381, 382,
	1617, 1618, 1620, 1619, 1621, 1622, 1623, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 1624, 393, 395,
	389, 391, 1625, 394, 392, 396, 397, 1626, 398, 399,
	400, 1627, 1628, 401, 402, 403, 1629, 404, 405, 406,
	1630, 407, 408, 409, 1631, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 1632, 319, 1633, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 1634, 429,
	430, 431, 1635, 432, 433, 1636, 1367, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 1637, 446, 758, 1638, 759, 447, 1639, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 1369,
	455, 456, 457, 1640, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 1641, 1368, 763, 466,
	549, 467, 764, 765, 1642, 766, 1643, 468, 469, 471,
	1370, 767, 1371, 470, 472, 473, 1372, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 1644, 482,
	484, 483, 1645, 486, 768, 485, 1373, 487, 488, 1374,
	1646, 489, 490, 491, 492, 493, 494, 497, 1647, 1648,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1375, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1376, 541,
	529, 1649, 321, 1377, 543, 544, 545, 546, 1650, 769,
	547, 770, 550, 551, 1651, 0, 552, 0, 553, 1652,
	1653, 555, 556, 557, 1654, 1655, 558, 559, 771, 1378,
	560, 1379, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 1656, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 1657, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 1658, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 1659, 619, 620,
	618, 621, 622, 1380, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 1660, 649,
	650, 648, 651, 652, 653, 1661, 654, 779, 655, 635,
	636, 656, 657, 1381, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 1662, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 1663, 686, 687, 0,
	681, 672, 1664, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 1665, 696, 783, 784, 785, 786, 1666, 708,
	1667, 697, 699, 700, 701, 702, 787, 703, 788, 1668,
	704, 705, 706, 707, 698, 709, 710, 1669, 1670, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 1671, 720,
	1672, 0, 721, 722, 723, 789, 790, 791, 1673, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 1674, 1675, 1676, 1677, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 4304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4306, 322, 323,
	325, 324, 326, 327, 328, 329, 1599, 330, 331, 1600,
	1601, 1602, 0, 1603, 740, 1604, 1605, 1606, 332, 1607,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 1608, 745,
	345, 346, 347, 348, 349, 350, 351, 1609, 1610, 0,
	352, 746, 747, 748, 1611, 353, 354, 749, 1612, 1679,
	1613, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	1614, 364, 365, 366, 363, 367, 368, 1615, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 1616, 377, 378,
	379, 1366, 380, 381, 382, 1617, 1618, 1620, 1619, 1621,
	1622, 1623, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 1624, 393, 395, 389, 391, 1625, 394, 392,
	396, 397, 1626, 398, 399, 400, 1627, 1628, 401, 402,
	403, 1629, 404, 405, 406, 1630, 407, 408, 409, 1631,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 1632, 319,
	1633, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 1634, 429, 430, 431, 1635, 432, 433,
	1636, 1367, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 1637, 446, 758, 1638,
	759, 447, 1639, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 1369, 455, 456, 457, 1640, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 1641, 1368, 763, 466, 549, 467, 764, 765, 1642,
	766, 1643, 468, 469, 471, 1370, 767, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 1644, 482, 484, 483, 1645, 486, 768,
	485, 1373, 487, 488, 1374, 1646, 489, 490, 491, 492,
	493, 494, 497, 1647, 1648, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1649, 321, 1377, 543,
	544, 545, 546, 1650, 769, 547, 770, 550, 551, 1651,
	0, 552, 0, 553, 1652, 1653, 555, 556, 557, 1654,
	1655, 558, 559, 771, 1378, 560, 1379, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 1656, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 1657, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 1658, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 1659, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 1660, 649, 650, 648, 651, 652, 653,
	1661, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 1662,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 1663, 686, 687, 0, 681, 672, 1664, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 1665, 696, 783,
	784, 785, 786, 1666, 708, 1667, 697, 699, 700, 701,
	702, 787, 703, 788, 1668, 704, 705, 706, 707, 698,
	709, 710, 1669, 1670, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1671, 720, 1672, 0, 721, 722, 723,
	789, 790, 791, 1673, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1674, 1675, 1676, 1677,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4772, 322, 323, 325,
	324, 326, 327, 328, 329, 1599, 330, 331, 1600, 1601,
	1602, 0, 1603, 740, 1604, 1605, 1606, 332, 1607, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 1608, 745, 345,
	346, 347, 348, 349, 350, 351, 1609, 1610, 0, 352,
	746, 747, 748, 1611, 353, 354, 749, 1612, 1679, 1613,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 1614,
	364, 365, 366, 363, 367, 368, 1615, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 1616, 377, 378, 379,
	1366, 380, 381, 382, 1617, 1618, 1620, 1619, 1621, 1622,
	1623, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 1624, 393, 395, 389, 391, 1625, 394, 392, 396,
	397, 1626, 398, 399, 400, 1627, 1628, 401, 402, 403,
	1629, 404, 405, 406, 1630, 407, 408, 409, 1631, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 1632, 319, 1633,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 1634, 429, 430, 431, 1635, 432, 433, 1636,
	1367, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 1637, 446, 758, 1638, 759,
	447, 1639, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 1369, 455, 456, 457, 1640, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	1641, 1368, 763, 466, 549, 467, 764, 765, 1642, 766,
	1643, 468, 469, 471, 1370, 767, 1371, 470, 472, 473,
	1372, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 1644, 482, 484, 483, 1645, 486, 768, 485,
	1373, 487, 488, 1374, 1646, 489, 490, 491, 492, 493,
	494, 497, 1647, 1648, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1375, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1376, 541, 529, 1649, 321, 1377, 543, 544,
	545, 546, 1650, 769, 547, 770, 550, 551, 1651, 0,
	552, 0, 553, 1652, 1653, 555, 556, 557, 1654, 1655,
	558, 559, 771, 1378, 560, 1379, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	1656, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 1657, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 1658, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 1659, 619, 620, 618, 621, 622, 1380, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 1660, 649, 650, 648, 651, 652, 653, 1661,
	654, 779, 655, 635, 636, 656, 657, 1381, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 1662, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	1663, 686, 687, 0, 681, 672, 1664, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 1665, 696, 783, 784,
	785, 786, 1666, 708, 1667, 697, 699, 700, 701, 702,
	787, 703, 788, 1668, 704, 705, 706, 707, 698, 709,
	710, 1669, 1670, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 1671, 720, 1672, 0, 721, 722, 723, 789,
	790, 791, 1673, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1674, 1675, 1676, 1677, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4770, 322, 323, 325, 324,
	326, 327, 328, 329, 1599, 330, 331, 1600, 1601, 1602,
	0, 1603, 740, 1604, 1605, 1606, 332, 1607, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 1608, 745, 345, 346,
	347, 348, 349, 350, 351, 1609, 1610, 0, 352, 746,
	747, 748, 1611, 353, 354, 749, 1612, 1679, 1613, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1614, 364,
	365, 366, 363, 367, 368, 1615, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1616, 377, 378, 379, 1366,
	380, 381, 382, 1617, 1618, 1620, 1619, 1621, 1622, 1623,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	1624, 393, 395, 389, 391, 1625, 394, 392, 396, 397,
	1626, 398, 399, 400, 1627, 1628, 401, 402, 403, 1629,
	404, 405, 406, 1630, 407, 408, 409, 1631, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 1632, 319, 1633, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 1634, 429, 430, 431, 1635, 432, 433, 1636, 1367,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1637, 446, 758, 1638, 759, 447,
	1639, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 1369, 455, 456, 457, 1640, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 1641,
	1368, 763, 466, 549, 467, 764, 765, 1642, 766, 1643,
	468, 469, 471, 1370, 767, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 1644, 482, 484, 483, 1645, 486, 768, 485, 1373,
	487, 488, 1374, 1646, 489, 490, 491, 492, 493, 494,
	497, 1647, 1648, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1649, 321, 1377, 543, 544, 545,
	546, 1650, 769, 547, 770, 550, 551, 1651, 0, 552,
	0, 553, 1652, 1653, 555, 556, 557, 1654, 1655, 558,
	559, 771, 1378, 560, 1379, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 1656,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 1657, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 1658, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	1659, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 1660, 649, 650, 648, 651, 652, 653, 1661, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 1662, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 1663,
	686, 687, 0, 681, 672, 1664, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 1665, 696, 783, 784, 785,
	786, 1666, 708, 1667, 697, 699, 700, 701, 702, 787,
	703, 788, 1668, 704, 705, 706, 707, 698, 709, 710,
	1669, 1670, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1671, 720, 1672, 0, 721, 722, 723, 789, 790,
	791, 1673, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1674, 1675, 1676, 1677, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5034, 322,
	323, 325, 324, 326, 327, 328, 329, 1599, 330, 331,
	1600, 1601, 1602, 0, 1603, 740, 1604, 1605, 1606, 332,
	1607, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 1608,
	745, 345, 346, 347, 348, 349, 350, 351, 1609, 1610,
	0, 352, 746, 747, 748, 1611, 353, 354, 749, 1612,
	1679, 1613, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 1614, 364, 365, 366, 363, 367, 368, 1615, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 1616, 377,
	378, 379, 1366, 380, 381, 382, 1617, 1618, 1620, 1619,
	1621, 1622, 1623, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 1624, 393, 395, 389, 391, 1625, 394,
	392, 396, 397, 1626, 398, 399, 400, 1627, 1628, 401,
	402, 403, 1629, 404, 405, 406, 1630, 407, 408, 409,
	1631, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 1632,
	319, 1633, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 1634, 429, 430, 431, 1635, 432,
	433, 1636, 1367, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 1637, 446, 758,
	1638, 759, 447, 1639, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 1369, 455, 456, 457, 1640,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 1641, 1368, 763, 466, 549, 467, 764, 765,
	1642, 766, 1643, 468, 469, 471, 1370, 767, 1371, 470,
	472, 473, 1372, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 1644, 482, 484, 483, 1645, 486,
	768, 485, 1373, 487, 488, 1374, 1646, 489, 490, 491,
	492, 493, 494, 497, 1647, 1648, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1375, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1376, 541, 529, 1649, 321, 1377,
	543, 544, 545, 546, 1650, 769, 547, 770, 550, 551,
	1651, 0, 552, 0, 553, 1652, 1653, 555, 556, 557,
	1654, 1655, 558, 559, 771, 1378, 560, 1379, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 1656, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 1657, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 1658, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 1659, 619, 620, 618, 621, 622, 1380,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 1660, 649, 650, 648, 651, 652,
	653, 1661, 654, 779, 655, 635, 636, 656, 657, 1381,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	1662, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 1663, 686, 687, 0, 681, 672, 1664, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 1665, 696,
	783, 784, 785, 786, 1666, 708, 1667, 697, 699, 700,
	701, 702, 787, 703, 788, 1668, 704, 705, 706, 707,
	698, 709, 710, 1669, 1670, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1671, 720, 1672, 0, 721, 722,
	723, 789, 790, 791, 1673, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1674, 1675, 1676,
	1677, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4882, 322, 323, 325, 324, 326, 327, 328, 329,
	1599, 330, 331, 1600, 1601, 1602, 0, 1603, 740, 1604,
	1605, 1606, 332, 1607, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 1608, 745, 345, 346, 347, 348, 349, 350,
	351, 1609, 1610, 0, 352, 746, 747, 748, 1611, 353,
	354, 749, 1612, 1679, 1613, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 1614, 364, 365, 366, 363, 367,
	368, 1615, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 1616, 377, 378, 379, 1366, 380, 381, 382, 1617,
	1618, 1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 1624, 393, 395, 389,
	391, 1625, 394, 392, 396, 397, 1626, 398, 399, 400,
	1627, 1628, 401, 402, 403, 1629, 404, 405, 406, 1630,
	407, 408, 409, 1631, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 1632, 319, 1633, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 1634, 429, 430,
	431, 1635, 432, 433, 1636, 1367, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	1637, 446, 758, 1638, 759, 447, 1639, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 1369, 455,
	456, 457, 1640, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 1641, 1368, 763, 466, 549,
	467, 764, 765, 1642, 766, 1643, 468, 469, 471, 1370,
	767, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 1644, 482, 484,
	483, 1645, 486, 768, 485, 1373, 487, 488, 1374, 1646,
	489, 490, 491, 492, 493, 494, 497, 1647, 1648, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1649, 321, 1377, 543, 544, 545, 546, 1650, 769, 547,
	770, 550, 551, 1651, 0, 552, 0, 553, 1652, 1653,
	555, 556, 557, 1654, 1655, 558, 559, 771, 1378, 560,
	1379, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 1656, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 1657, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	1658, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 1659, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 1660, 649, 650,
	648, 651, 652, 653, 1661, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 1662, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 1663, 686, 687, 0, 681,
	672, 1664, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 1665, 696, 783, 784, 785, 786, 1666, 708, 1667,
	697, 699, 700, 701, 702, 787, 703, 788, 1668, 704,
	705, 706, 707, 698, 709, 710, 1669, 1670, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1671, 720, 1672,
	0, 721, 722, 723, 789, 790, 791, 1673, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	1674, 1675, 1676, 1677, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4696, 322, 323, 325, 324, 326,
	327, 328, 329, 1599, 330, 331, 1600, 1601, 1602, 0,
	1603, 740, 1604, 1605, 1606, 332, 1607, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 1608, 745, 345, 346, 347,
	348, 349, 350, 351, 1609, 1610, 0, 352, 746, 747,
	748, 1611, 353, 354, 749, 1612, 1679, 1613, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 1614, 364, 365,
	366, 363, 367, 368, 1615, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 1616, 377, 378, 379, 1366, 380,
	381, 382, 1617, 1618, 1620, 1619, 1621, 1622, 1623, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 1624,
	393, 395, 389, 391, 1625, 394, 392, 396, 397, 1626,
	398, 399, 400, 1627, 1628, 401, 402, 403, 1629, 404,
	405, 406, 1630, 407, 408, 409, 1631, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 1632, 319, 1633, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	1634, 429, 430, 431, 1635, 432, 433, 1636, 1367, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 1637, 446, 758, 1638, 759, 447, 1639,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 1369, 455, 456, 457, 1640, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 1641, 1368,
	763, 466, 549, 467, 764, 765, 1642, 766, 1643, 468,
	469, 471, 1370, 767, 1371, 470, 472, 473, 1372, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	1644, 482, 484, 483, 1645, 486, 768, 485, 1373, 487,
	488, 1374, 1646, 489, 490, 491, 492, 493, 494, 497,
	1647, 1648, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 1375, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	1376, 541, 529, 1649, 321, 1377, 543, 544, 545, 546,
	1650, 769, 547, 770, 550, 551, 1651, 0, 552, 0,
	553, 1652, 1653, 555, 556, 557, 1654, 1655, 558, 559,
	771, 1378, 560, 1379, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 1656, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 1657, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 1658, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 1659,
	619, 620, 618, 621, 622, 1380, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	1660, 649, 650, 648, 651, 652, 653, 1661, 654, 779,
	655, 635, 636, 656, 657, 1381, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 1662, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 1663, 686,
	687, 0, 681, 672, 1664, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 1665, 696, 783, 784, 785, 786,
	1666, 708, 1667, 697, 699, 700, 701, 702, 787, 703,
	788, 1668, 704, 705, 706, 707, 698, 709, 710, 1669,
	1670, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	1671, 720, 1672, 0, 721, 722, 723, 789, 790, 791,
	1673, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 1674, 1675, 1676, 1677, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4322, 322, 323,
	325, 324, 326, 327, 328, 329, 1599, 330, 331, 1600,
	1601, 1602, 0, 1603, 740, 1604, 1605, 1606, 332, 1607,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 1608, 745,
	345, 346, 347, 348, 349, 350, 351, 1609, 1610, 0,
	352, 746, 747, 748, 1611, 353, 354, 749, 1612, 1679,
	1613, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	1614, 364, 365, 366, 363, 367, 368, 1615, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 1616, 377, 378,
	379, 1366, 380, 381, 382, 1617, 1618, 1620, 1619, 1621,
	1622, 1623, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 1624, 393, 395, 389, 391, 1625, 394, 392,
	396, 397, 1626, 398, 399, 400, 1627, 1628, 401, 402,
	403, 1629, 404, 405, 406, 1630, 407, 408, 409, 1631,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 1632, 319,
	1633, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 1634, 429, 430, 431, 1635, 432, 433,
	1636, 1367, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 1637, 446, 758, 1638,
	759, 447, 1639, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 1369, 455, 456, 457, 1640, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 1641, 1368, 763, 466, 549, 467, 764, 765, 1642,
	766, 1643, 468, 469, 471, 1370, 767, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 1644, 482, 484, 483, 1645, 486, 768,
	485, 1373, 487, 488, 1374, 1646, 489, 490, 491, 492,
	493, 494, 497, 1647, 1648, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1649, 321, 1377, 543,
	544, 545, 546, 1650, 769, 547, 770, 550, 551, 1651,
	0, 552, 0, 553, 1652, 1653, 555, 556, 557, 1654,
	1655, 558, 559, 771, 1378, 560, 1379, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 1656, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 1657, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 1658, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 1659, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 1660, 649, 650, 648, 651, 652, 653,
	1661, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 1662,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 1663, 686, 687, 0, 681, 672, 1664, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 1665, 696, 783,
	784, 785, 786, 1666, 708, 1667, 697, 699, 700, 701,
	702, 787, 703, 788, 1668, 704, 705, 706, 707, 698,
	709, 710, 1669, 1670, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1671, 720, 1672, 0, 721, 722, 723,
	789, 790, 791, 1673, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1674, 1675, 1676, 1677,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4123, 322, 323, 325, 324, 326, 327, 328, 329, 1599,
	330, 331, 1600, 1601, 1602, 0, 1603, 740, 1604, 1605,
	1606, 332, 1607, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 1608, 745, 345, 346, 347, 348, 349, 350, 351,
	1609, 1610, 0, 352, 746, 747, 748, 1611, 353, 354,
	749, 1612, 1679, 1613, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1614, 364, 365, 366, 363, 367, 368,
	1615, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1616, 377, 378, 379, 1366, 380, 381, 382, 1617, 1618,
	1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 1624, 393, 395, 389, 391,
	1625, 394, 392, 396, 397, 1626, 398, 399, 400, 1627,
	1628, 401, 402, 403, 1629, 404, 405, 406, 1630, 407,
	408, 409, 1631, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 1632, 319, 1633, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 1634, 429, 430, 431,
	1635, 432, 433, 1636, 1367, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1637,
	446, 758, 1638, 759, 447, 1639, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 1369, 455, 456,
	457, 1640, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 1641, 1368, 763, 466, 549, 467,
	764, 765, 1642, 766, 1643, 468, 469, 471, 1370, 767,
	1371, 470, 472, 473, 1372, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 1644, 482, 484, 483,
	1645, 486, 768, 485, 1373, 487, 488, 1374, 1646, 489,
	490, 491, 492, 493, 494, 497, 1647, 1648, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1375, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1376, 541, 529, 1649,
	321, 1377, 543, 544, 545, 546, 1650, 769, 547, 770,
	550, 551, 1651, 0, 552, 0, 553, 1652, 1653, 555,
	556, 557, 1654, 1655, 558, 559, 771, 1378, 560, 1379,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 1656, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	1657, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 1658,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 1659, 619, 620, 618, 621,
	622, 1380, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 1660, 649, 650, 648,
	651, 652, 653, 1661, 654, 779, 655, 635, 636, 656,
	657, 1381, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 1662, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 1663, 686, 687, 0, 681, 672,
	1664, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	1665, 696, 783, 784, 785, 786, 1666, 708, 1667, 697,
	699, 700, 701, 702, 787, 703, 788, 1668, 704, 705,
	706, 707, 698, 709, 710, 1669, 1670, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 1671, 720, 1672, 0,
	721, 722, 723, 789, 790, 791, 1673, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1674,
	1675, 1676, 1677, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2968, 322, 323, 325, 324, 326, 327,
	328, 329, 1599, 330, 331, 1600, 1601, 1602, 0, 1603,
	740, 1604, 1605, 1606, 332, 1607, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 1608, 745, 345, 346, 347, 348,
	349, 350, 351, 1609, 1610, 0, 352, 746, 747, 748,
	1611, 353, 354, 749, 1612, 1679, 1613, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 1614, 364, 365, 366,
	363, 367, 368, 1615, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 1616, 377, 378, 379, 1366, 380, 381,
	382, 1617, 1618, 1620, 1619, 1621, 1622, 1623, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 1624, 393,
	395, 389, 391, 1625, 394, 392, 396, 397, 1626, 398,
	399, 400, 1627, 1628, 401, 402, 403, 1629, 404, 405,
	406, 1630, 407, 408, 409, 1631, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 1632, 319, 1633, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 1634,
	429, 430, 431, 1635, 432, 433, 1636, 1367, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 1637, 446, 758, 1638, 759, 447, 1639, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	1369, 455, 456, 457, 1640, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 1641, 1368, 763,
	466, 549, 467, 764, 765, 1642, 766, 1643, 468, 469,
	471, 1370, 767, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 1644,
	482, 484, 483, 1645, 486, 768, 485, 1373, 487, 488,
	1374, 1646, 489, 490, 491, 492, 493, 494, 497, 1647,
	1648, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1649, 321, 1377, 543, 544, 545, 546, 1650,
	769, 547, 770, 550, 551, 1651, 0, 552, 0, 553,
	1652, 1653, 555, 556, 557, 1654, 1655, 558, 559, 771,
	1378, 560, 1379, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 1656, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 1657, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 1658, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 1659, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 1660,
	649, 650, 648, 651, 652, 653, 1661, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 1662, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 1663, 686, 687,
	0, 681, 672, 1664, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 1665, 696, 783, 784, 785, 786, 1666,
	708, 1667, 697, 699, 700, 701, 702, 787, 703, 788,
	1668, 704, 705, 706, 707, 698, 709, 710, 1669, 1670,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1671,
	720, 1672, 0, 721, 722, 723, 789, 790, 791, 1673,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1674, 1675, 1676, 1677, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 1590, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2572, 322, 323, 325,
	324, 326, 327, 328, 329, 1599, 330, 331, 1600, 1601,
	1602, 0, 1603, 740, 1604, 1605, 1606, 332, 1607, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 1608, 745, 345,
	346, 347, 348, 349, 350, 351, 1609, 1610, 0, 352,
	746, 747, 748, 1611, 353, 354, 749, 1612, 1679, 1613,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 1614,
	364, 365, 366, 363, 367, 368, 1615, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 1616, 377, 378, 379,
	1366, 380, 381, 382, 1617, 1618, 1620, 1619, 1621, 1622,
	1623, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 1624, 393, 395, 389, 391, 1625, 394, 392, 396,
	397, 1626, 398, 399, 400, 1627, 1628, 401, 402, 403,
	1629, 404, 405, 406, 1630, 407, 408, 409, 1631, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 1632, 319, 1633,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 1634, 429, 430, 431, 1635, 432, 433, 1636,
	1367, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 1637, 446, 758, 1638, 759,
	447, 1639, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 1369, 455, 456, 457, 1640, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	1641, 1368, 763, 466, 549, 467, 764, 765, 1642, 766,
	1643, 468, 469, 471, 1370, 767, 1371, 470, 472, 473,
	1372, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 1644, 482, 484, 483, 1645, 486, 768, 485,
	1373, 487, 488, 1374, 1646, 489, 490, 491, 492, 493,
	494, 497, 1647, 1648, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1375, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1376, 541, 529, 1649, 321, 1377, 543, 544,
	545, 546, 1650, 769, 547, 770, 550, 551, 1651, 0,
	552, 0, 553, 1652, 1653, 555, 556, 557, 1654, 1655,
	558, 559, 771, 1378, 560, 1379, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	1656, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 1657, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 1658, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 1659, 619, 620, 618, 621, 622, 1380, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 1660, 649, 650, 648, 651, 652, 653, 1661,
	654, 779, 655, 635, 636, 656, 657, 1381, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 1662, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	1663, 686, 687, 0, 681, 672, 1664, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 1665, 696, 783, 784,
	785, 786, 1666, 708, 1667, 697, 699, 700, 701, 702,
	787, 703, 788, 1668, 704, 705, 706, 707, 698, 709,
	710, 1669, 1670, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 1671, 720, 1672, 0, 721, 722, 723, 789,
	790, 791, 1673, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1674, 1675, 1676, 1677, 735,
	736, 793, 737, 738, 739, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	1599, 330, 331, 1600, 1601, 1602, 0, 1603, 740, 1604,
	1605, 1606, 332, 1607, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 1608, 745, 345, 346, 347, 348, 349, 350,
	351, 1609, 1610, 0, 352, 746, 747, 748, 1611, 353,
	354, 749, 1612, 1679, 1613, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 1614, 364, 365, 366, 363, 367,
	368, 1615, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 1616, 377, 378, 379, 1366, 380, 381, 382, 1617,
	1618, 1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 1624, 393, 395, 389,
	391, 1625, 394, 392, 396, 397, 1626, 398, 399, 400,
	1627, 1628, 401, 402, 403, 1629, 404, 405, 406, 1630,
	407, 408, 409, 1631, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 1632, 319, 1633, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 1634, 429, 430,
	431, 1635, 432, 433, 1636, 1367, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	1637, 446, 758, 1638, 759, 447, 1639, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 1369, 455,
	456, 457, 1640, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 1641, 1368, 763, 466, 549,
	467, 764, 765, 1642, 766, 1643, 468, 469, 471, 1370,
	767, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 1644, 482, 484,
	483, 1645, 486, 768, 485, 1373, 487, 488, 1374, 1646,
	489, 490, 491, 492, 493, 494, 497, 1647, 1648, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1649, 321, 1377, 543, 544, 545, 546, 1650, 769, 547,
	770, 550, 551, 1651, 0, 552, 0, 553, 1652, 1653,
	555, 556, 557, 1654, 1655, 558, 559, 771, 1378, 560,
	1379, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 1656, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 1657, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	1658, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 1659, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 1660, 649, 650,
	648, 651, 652, 653, 1661, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 1662, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 1663, 686, 687, 0, 681,
	672, 1664, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 1665, 696, 783, 784, 785, 786, 1666, 708, 1667,
	697, 699, 700, 701, 702, 787, 703, 788, 1668, 704,
	705, 706, 707, 698, 709, 710, 1669, 1670, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1671, 720, 1672,
	0, 721, 722, 723, 789, 790, 791, 1673, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	1674, 1675, 1676, 1677, 735, 736, 793, 737, 738, 739,
	2943, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 2940, 330, 331,
	0, 0, 0, 0, 0, 1325, 1287, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 741, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1289, 1324,
	1254, 352, 1385, 1386, 748, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1259, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 2941, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1265, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1278,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1288, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 548, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1368, 763, 466, 549, 467, 1335, 1336,
	0, 1294, 0, 468, 469, 471, 1370, 1328, 1371, 470,
	472, 473, 1372, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	1364, 485, 1373, 487, 488, 1374, 0, 489, 490, 491,
	492, 493, 494, 497, 1319, 1318, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1375, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1376, 541, 529, 1256, 321, 1377,
	543, 544, 545, 546, 1279, 1329, 547, 1343, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 1378, 560, 1379, 1358, 561,
	562, 1266, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 1359, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 1339, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1380,
	623, 624, 625, 626, 627, 1267, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 1322, 654, 779, 655, 635, 636, 656, 657, 1381,
	658, 659, 660, 661, 662, 663, 664, 1337, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 1384, 675, 676, 677, 678, 1360, 682, 683,
	684, 685, 0, 686, 687, 1253, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	1349, 1350, 1351, 1352, 0, 708, 0, 697, 699, 700,
	701, 702, 1361, 703, 1362, 1277, 704, 705, 706, 707,
	698, 709, 710, 0, 1260, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1323, 720, 0, 0, 721, 722,
	723, 789, 1346, 1383, 2939, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 1257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 0, 0, 0, 0, 0, 0, 1250,
	1251, 2942, 0, 0, 0, 0, 0, 0, 0, 1283,
	2938, 0, 1241, 1281, 1299, 1271, 1272, 1273, 1269, 1270,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 1325, 1287, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 741, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1259, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1265, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1278, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1288, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 548, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1368, 763, 466, 549, 467,
	1335, 1336, 0, 1294, 0, 468, 469, 471, 1370, 1328,
	1371, 470, 472, 473, 1372, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 1364, 485, 1373, 487, 488, 1374, 0, 489,
	490, 491, 492, 493, 494, 497, 1319, 1318, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1375, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1376, 541, 529, 1256,
	321, 1377, 543, 544, 545, 546, 1279, 1329, 547, 1343,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1378, 560, 1379,
	1358, 561, 562, 1266, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 1359, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 1339, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1380, 623, 624, 625, 626, 627, 1267, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 275, 649, 650, 648,
	651, 652, 653, 1322, 654, 779, 655, 635, 636, 656,
	657, 1381, 658, 659, 660, 661, 662, 663, 664, 1337,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 1384, 675, 676, 677, 678, 1360,
	682, 683, 684, 685, 0, 686, 687, 1253, 681, 672,
	277, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 1349, 1350, 1351, 1352, 0, 708, 0, 697,
	699, 700, 701, 702, 1361, 703, 1362, 1277, 704, 705,
	706, 707, 698, 709, 710, 0, 1260, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 1323, 720, 0, 0,
	721, 722, 723, 1843, 1346, 1383, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 269, 735, 736, 793, 737, 738, 739, 1257,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 0, 0, 0,
	0, 1250, 1251, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 2119, 2117, 0, 0, 1281, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 275, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 277,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 1843, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 269, 735, 736, 793, 737, 738, 739, 1257, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0,
	2119, 3698, 0, 0, 1281, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 1325, 1287, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 741, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1289, 1324,
	1254, 352, 1385, 1386, 748, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1259, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1265, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1278,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1288, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 548, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1368, 763, 466, 549, 467, 1335, 1336,
	0, 1294, 0, 468, 469, 471, 1370, 1328, 1371, 470,
	472, 473, 1372, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	1364, 485, 1373, 487, 488, 1374, 0, 489, 490, 491,
	492, 493, 494, 497, 1319, 1318, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1375, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1376, 541, 529, 1256, 321, 1377,
	543, 544, 545, 546, 1279, 1329, 547, 1343, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 1378, 560, 1379, 1358, 561,
	562, 1266, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 1359, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 1339, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1380,
	623, 624, 625, 626, 627, 1267, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 275, 649, 650, 648, 651, 652,
	653, 1322, 654, 779, 655, 635, 636, 656, 657, 1381,
	658, 659, 660, 661, 662, 663, 664, 1337, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 1384, 675, 676, 677, 678, 1360, 682, 683,
	684, 685, 0, 686, 687, 1253, 681, 672, 277, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	1349, 1350, 1351, 1352, 0, 708, 0, 697, 699, 700,
	701, 702, 1361, 703, 1362, 1277, 704, 705, 706, 707,
	698, 709, 710, 0, 1260, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1323, 720, 0, 0, 721, 722,
	723, 1843, 1346, 1383, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	269, 735, 736, 793, 737, 738, 739, 1257, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 0, 0, 0, 0, 0, 0, 1250,
	1251, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 2119,
	2117, 0, 0, 1281, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 3076, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	3081, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 3077, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 3078, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 2988, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	1283, 2986, 0, 2985, 1281, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1256, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 1283, 2983, 0, 2982, 1281, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 1254, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1256, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 1283, 2980, 0, 2979, 1281, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 1370, 1328, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 1377, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 2977, 0, 1947,
	1281, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1946, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 1246, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 1261, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 5427, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1256, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 1261, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 1254, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 2818, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1256, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 2817, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 0, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 5133, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 1370, 1328, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 1377, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 1261, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 0,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 1261, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 0, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 4661,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 2193, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	1283, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 2193, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	1283, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 4300, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 3081, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1256, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 1254, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1256, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 1283, 2117, 0, 3086, 1281, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 1370, 1328, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 1377, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 3084,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 3072, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 3061, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1256, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 3059, 0, 3050, 3057, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 1254, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 3053, 390, 1342, 1341, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 3054, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 3055, 507, 3052, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1256, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 3056, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	3051, 739, 1257, 0, 0, 0, 0, 3047, 0, 3050,
	3057, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 3053, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 3054, 454, 1326, 1327,
	1330, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 1370, 1328, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 3055, 507, 3052, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 1377, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 3056, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 3051, 739, 1257, 0, 0, 0, 0, 0,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	0, 0, 0, 0, 0, 0, 2125, 0, 1283, 0,
	0, 0, 1281, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 2797, 330,
	331, 0, 0, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 2757, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1256, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 2723, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 1254, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1256, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 1952, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 1370, 1328, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 1377, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 1878,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 1873, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 1859, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1256, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 1854, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 1254, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1256, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 1760, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1759, 1327,
	1330, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 1370, 1328, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 1377, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 1754,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1753, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 1747, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 1720, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1256, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 1692, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 1254, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 1696, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1256, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 1697, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 1695, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 1520, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 1370, 1328, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 1377, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 0,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 0, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 5480, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 5479, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 5478, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 1254, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 5480, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	1256, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 5479, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 1254, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 5053,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 5054, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 1256, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 5052, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 0, 0, 1299,
	1271, 1272, 1273, 3664, 3665, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 1370, 1328, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 1377, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 0,
	0, 1299, 1271, 1272, 1273, 3662, 3663, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1289, 1324, 1254,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 1256, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 0, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1325, 1287, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 1338, 0, 343, 1345, 344, 1344,
	0, 1355, 345, 346, 347, 348, 349, 350, 351, 1289,
	1324, 1254, 352, 1385, 1386, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 1348,
	388, 390, 1342, 1341, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1340, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 1353, 1354, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 1335,
	1336, 0, 1294, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 1256, 321,
	1377, 543, 544, 545, 546, 1279, 1329, 547, 1343, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1339, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 1337, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1384, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1349, 1350, 1351, 1352, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 1346, 1383, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	2805, 2806, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1325, 1287,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1289, 1324, 0, 352, 1385, 1386, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 1335, 1336, 0, 1294, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	0, 321, 1377, 543, 544, 545, 546, 1279, 1329, 547,
	1343, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1339, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	1337, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1384, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1349, 1350, 1351, 1352, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 1346, 1383, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 3069, 0, 0, 0, 0,
	0, 0, 3067, 3068, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1325, 1287, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 1289, 1324, 0, 352, 1385, 1386, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 1335, 1336, 0, 1294, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 0, 321, 1377, 543, 544, 545, 546, 1279,
	1329, 547, 1343, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1339, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	3657, 3658, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 1337, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1384, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1349, 1350, 1351, 1352, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 789, 1346, 1383, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 2389, 2390, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1325, 1287, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 0,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1289, 1324, 1254, 352, 1385,
	1386, 748, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 5480, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 1335, 1336, 0, 1294, 0,
	468, 469, 471, 0, 1328, 0, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1364, 485, 1373,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 1319, 1318, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 1256, 321, 0, 543, 544, 545,
	546, 1279, 1329, 547, 1343, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 1358, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1359, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1339, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1322, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 1337, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1384,
	675, 676, 677, 678, 1360, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1349, 1350, 1351,
	1352, 0, 708, 0, 697, 699, 700, 701, 702, 1361,
	703, 1362, 1277, 704, 705, 706, 707, 698, 5479, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1323, 720, 0, 0, 721, 722, 723, 789, 1346,
	1383, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 3088,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1325, 1287, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 0, 1324, 0,
	352, 1385, 1386, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 1335, 1336, 0,
	1294, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 0, 321, 1377, 543,
	544, 545, 546, 1279, 1329, 547, 1343, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1339, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 1337, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1384, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1349,
	1350, 1351, 1352, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 1346, 1383, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 1722, 0,
	1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 1283, 0,
	0, 0, 1281, 1325, 1287, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	741, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 0, 1324, 0, 352,
	1385, 1386, 748, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1278, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1288,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 548, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1368, 763, 466, 549, 467, 1335, 1336, 0, 1294,
	0, 468, 469, 471, 1370, 1328, 1371, 470, 472, 473,
	1372, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 1364, 485,
	1373, 487, 488, 1374, 0, 489, 490, 491, 492, 493,
	494, 497, 1319, 1318, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1375, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1376, 541, 529, 0, 321, 1377, 543, 544,
	545, 546, 1279, 1329, 547, 1343, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 1378, 560, 1379, 1358, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 1359, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 1339,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 1380, 623, 624,
	625, 626, 627, 1267, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 1322,
	654, 779, 655, 635, 636, 656, 657, 1381, 658, 659,
	660, 661, 662, 663, 664, 1337, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	1384, 675, 676, 677, 678, 1360, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 1349, 1350,
	1351, 1352, 0, 708, 0, 697, 699, 700, 701, 702,
	1361, 703, 1362, 1277, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 1323, 720, 0, 0, 721, 722, 723, 789,
	1346, 1383, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 0, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 1241, 0, 1424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 1283, 0, 0,
	1325, 1281, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 1324, 0, 352, 746, 747, 748,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 1370, 1328, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 1410,
	482, 484, 483, 0, 486, 1364, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 1319,
	1318, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 0, 321, 1377, 543, 544, 545, 546, 0,
	1329, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 1416, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 1358, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1359, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	778, 1418, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 275,
	649, 650, 648, 651, 652, 653, 1322, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 1360, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 277, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 1361, 703, 1362,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1323,
	720, 0, 0, 721, 722, 723, 1843, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 269, 735, 736, 793, 737,
	738, 739, 1424, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 1414, 0, 2217, 1325, 0, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 1324,
	0, 352, 746, 747, 748, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 548, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1368, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 1370, 1328, 1371, 470,
	472, 473, 1372, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 1410, 482, 484, 483, 0, 486,
	1364, 485, 1373, 487, 488, 1374, 0, 489, 490, 491,
	492, 493, 494, 497, 1319, 1318, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1375, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1376, 541, 529, 0, 321, 1377,
	543, 544, 545, 546, 0, 1329, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 1416, 555, 556, 557,
	0, 0, 558, 559, 771, 1378, 560, 1379, 1358, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 1359, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1380,
	623, 624, 625, 626, 627, 778, 1418, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 275, 649, 650, 648, 651, 652,
	653, 1322, 654, 779, 655, 635, 636, 656, 657, 1381,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 1360, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 277, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 1361, 703, 1362, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1323, 720, 0, 0, 721, 722,
	723, 1843, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	269, 735, 736, 793, 737, 738, 739, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3827, 0, 1424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 2217,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	1324, 0, 352, 746, 747, 748, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 548, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1368, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 1370, 1328, 1371,
	470, 472, 473, 1372, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 1410, 482, 484, 483, 0,
	486, 1364, 485, 1373, 487, 488, 1374, 0, 489, 490,
	491, 492, 493, 494, 497, 1319, 1318, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1375, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1376, 541, 529, 0, 321,
	1377, 543, 544, 545, 546, 0, 1329, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 1416, 555, 556,
	557, 0, 0, 558, 559, 771, 1378, 560, 1379, 1358,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1359, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1380, 623, 624, 625, 626, 627, 778, 1418, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1322, 654, 779, 655, 635, 636, 656, 657,
	1381, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 1360, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 1361, 703, 1362, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1323, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1406, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 1414, 0,
	1412, 0, 0, 1325, 0, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 1324, 0, 352,
	746, 747, 748, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 548, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1368, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 1370, 1328, 1371, 470, 472, 473,
	1372, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 1410, 482, 484, 483, 0, 486, 1364, 485,
	1373, 487, 488, 1374, 0, 489, 490, 491, 492, 493,
	494, 497, 1319, 1318, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1375, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1376, 541, 529, 0, 321, 1377, 543, 544,
	545, 546, 0, 1329, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 1416, 555, 556, 557, 0, 0,
	558, 559, 771, 1378, 560, 1379, 1358, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 1359, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 1380, 623, 624,
	625, 626, 627, 778, 1418, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 1322,
	654, 779, 655, 635, 636, 656, 657, 1381, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 1360, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	1361, 703, 1362, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 1323, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 0, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 1424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 1414, 0, 1412, 1325, 0,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 1324, 0, 352, 746, 747, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 1410, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	0, 321, 1377, 543, 544, 545, 546, 0, 1329, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 1416,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 778, 1418,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	1414, 0, 1412, 1325, 0, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 1324, 0, 352,
	746, 747, 748, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 548, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1368, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 1370, 1328, 1371, 470, 472, 473,
	1372, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 1364, 485,
	1373, 487, 488, 1374, 0, 489, 490, 491, 492, 493,
	494, 497, 1319, 1318, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1375, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1376, 541, 529, 0, 321, 1377, 543, 544,
	545, 546, 0, 1329, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 1378, 560, 1379, 1358, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 1359, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 1380, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 1322,
	654, 779, 655, 635, 636, 656, 657, 1381, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 1360, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	1361, 703, 1362, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 1323, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 0, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 1424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 4852, 1325, 0,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 1324, 0, 352, 746, 747, 748, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 1370,
	1328, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1364, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 1319, 1318, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	0, 321, 1377, 543, 544, 545, 546, 0, 1329, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 1358, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1359, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 778, 1418,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1322, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	1360, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 1361, 703, 1362, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1323, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	2911, 2912, 2913, 2930, 2931, 2932, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 2933, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 2109, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 2094, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 2923, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 2919, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	2924, 2925, 2926, 2927, 425, 426, 427, 755, 0, 0,
	2918, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 2928, 2929, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 2921, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 2922, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 2093, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 0, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 1713, 2908, 2909, 2910,
	2934, 2920, 2914, 0, 2916, 2917, 2915, 2902, 2903, 2904,
	2905, 2906, 2907, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 1679, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 1368, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	1370, 767, 1371, 470, 472, 473, 1372, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 1373, 487, 488, 1374,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1375, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1376, 541,
	529, 0, 0, 1377, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 1378,
	560, 1379, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 1380, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 275, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 1381, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 277, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 1843, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 0, 0, 0, 269, 735, 736, 793, 737, 738,
	739, 0, 1840, 270, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 216, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 1679, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 1368, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 1370, 767,
	1371, 470, 472, 473, 1372, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 1373, 487, 488, 1374, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1375, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1376, 541, 529, 0,
	0, 1377, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1378, 560, 1379,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1380, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 275, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 1381, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	277, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 1843, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 269, 735, 736, 793, 737, 738, 739, 1713,
	1712, 270, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 216, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 1679, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 1370, 767, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 0, 0, 1377, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1713, 1712, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 1867, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 1679, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 1368, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 1370, 767,
	1371, 470, 472, 473, 1372, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 1373, 487, 488, 1374, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1375, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1376, 541, 529, 0,
	0, 1377, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1378, 560, 1379,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1380, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 1381, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 1713,
	1712, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 4204, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 1679, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 1370, 767, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 0, 0, 1377, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 2660, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1713, 2564, 0, 0, 0, 0,
	2565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 1867, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 1679, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 1368, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 1370, 767,
	1371, 470, 472, 473, 1372, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 2563, 484, 483,
	0, 486, 768, 485, 1373, 487, 488, 1374, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1375, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1376, 541, 529, 0,
	0, 1377, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1378, 560, 1379,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1380, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 1381, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 1713,
	1712, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 1867, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 1679, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	1368, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 1370, 767, 1371, 470, 472, 473, 1372,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 1373,
	487, 488, 1374, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1375, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1376, 541, 529, 0, 0, 1377, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1378, 560, 1379, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1380, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 1381, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1241, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 1849, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 275, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 277, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 1843, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 269, 735, 736, 793, 737, 738,
	739, 0, 0, 270, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 216, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 3427, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 2231, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 5660, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 1837, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 0, 0, 3235, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 4155, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 0, 2286, 0, 343, 2293,
	344, 2292, 0, 2301, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 2304, 2305, 0, 0, 353,
	354, 0, 0, 1679, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 1348, 388, 390, 2290, 2289, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 0, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 0,
	0, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 2288, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 2299,
	2300, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 0, 0, 0, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 0, 0, 0, 548, 1369, 455,
	456, 457, 3229, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 1368, 3231, 466, 549,
	467, 2283, 2284, 0, 2279, 0, 468, 469, 471, 1370,
	0, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 0, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	0, 0, 1377, 543, 544, 545, 546, 0, 0, 547,
	2291, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 3230, 1378, 560,
	1379, 0, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 2276, 575,
	576, 577, 2277, 578, 579, 580, 0, 581, 0, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 2287, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 0, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 0, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	2285, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 2303, 675, 676, 677, 678,
	0, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 2295, 2296, 2297, 2298, 0, 708, 0,
	697, 699, 700, 701, 702, 0, 703, 0, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 0, 2294, 2302, 3232, 725, 726,
	724, 727, 728, 731, 729, 730, 0, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 0, 737, 738, 739,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 3224, 740, 0, 2272, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 3235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 3546, 0,
	0, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 0, 2286, 0, 343,
	2293, 344, 2292, 0, 2301, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 2304, 2305, 0, 0,
	353, 354, 0, 0, 1679, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 1348, 388, 390, 2290, 2289, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 0, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	0, 0, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 2288, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	2299, 2300, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 0, 0, 0, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 0, 0, 0, 548, 1369,
	455, 456, 457, 3229, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 1368, 3231, 466,
	549, 467, 2283, 2284, 0, 2279, 0, 468, 469, 471,
	1370, 0, 1371, 470, 472, 473, 1372, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 0, 485, 1373, 487, 488, 1374,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1375, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1376, 541,
	529, 0, 0, 1377, 543, 544, 545, 546, 0, 0,
	547, 2291, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 3230, 1378,
	560, 1379, 0, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 2276,
	575, 576, 577, 2277, 578, 579, 580, 0, 581, 0,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 2287, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 1380, 623, 624, 625, 626, 627, 0,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 0, 655, 635,
	636, 656, 657, 1381, 658, 659, 660, 661, 662, 663,
	664, 2285, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 2303, 675, 676, 677,
	678, 0, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 2295, 2296, 2297, 2298, 0, 708,
	0, 697, 699, 700, 701, 702, 0, 703, 0, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 0, 2294, 2302, 3232, 725,
	726, 724, 727, 728, 731, 729, 730, 0, 732, 733,
	734, 0, 0, 0, 0, 735, 736, 0, 737, 738,
	739, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 2272, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 4325, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 0, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 1424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 2647, 1325, 0, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 1324, 0,
	352, 746, 747, 748, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 1370, 1328, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1364,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 1319, 1318, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 0, 321, 1377, 543,
	544, 545, 546, 0, 1329, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 1358, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1359, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1322, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 1360, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 1361, 703, 1362, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1323, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 2280, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 0, 2286, 0, 343,
	2293, 344, 2292, 0, 2301, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 2304, 2305, 0, 0,
	353, 354, 0, 0, 1679, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 1348, 388, 390, 2290, 2289, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 0, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 2288, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	2299, 2300, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 0, 0, 0, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 0, 0, 0, 548, 1369,
	455, 456, 457, 3229, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 1368, 3231, 466,
	549, 467, 2283, 2284, 0, 2279, 0, 468, 469, 471,
	1370, 0, 1371, 470, 472, 473, 1372, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 0, 485, 1373, 487, 488, 1374,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1375, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1376, 541,
	529, 0, 0, 1377, 543, 544, 545, 546, 0, 0,
	547, 2291, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 3230, 1378,
	560, 1379, 0, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 2276,
	575, 576, 577, 2277, 578, 579, 580, 0, 581, 0,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 2287, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 1380, 623, 624, 625, 626, 627, 0,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 0, 655, 635,
	636, 656, 657, 1381, 658, 659, 660, 661, 662, 663,
	664, 2285, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 2303, 675, 676, 677,
	678, 0, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 2295, 2296, 2297, 2298, 0, 708,
	0, 697, 699, 700, 701, 702, 0, 703, 0, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 0, 2294, 2302, 3232, 725,
	726, 724, 727, 728, 731, 729, 730, 0, 732, 733,
	734, 0, 0, 0, 0, 735, 736, 0, 737, 738,
	739, 1060, 0, 959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 2272, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 966, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 1057, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 1059, 0, 681, 672, 964,
	688, 689, 690, 691, 692, 965, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 2254, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 4458, 330, 331, 0, 0, 0, 0,
	0, 740, 969, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 2261, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 2262, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 2263,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 4457, 633, 642, 643, 644, 645, 647, 646,
	0, 2258, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 2260, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 4456, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 2254, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 2309, 330,
	331, 0, 0, 0, 0, 0, 740, 969, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 2261, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 2262, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 2263, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 2308, 633, 642,
	643, 644, 645, 647, 646, 0, 2310, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 2260,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 2307,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 2254, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 2253, 330, 331, 0, 0, 0, 0,
	0, 740, 969, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 2261, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 2262, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 2263,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 2252, 633, 642, 643, 644, 645, 647, 646,
	0, 2258, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 2260, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 2251, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 957, 0, 959, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 969, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 966,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 321, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 964, 688, 689, 690, 691, 692, 965, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	959, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 969, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 966, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 321, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 964, 688, 689, 690,
	691, 692, 965, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 3235, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 0, 969,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 0, 2286, 0, 343, 2293,
	344, 2292, 0, 2301, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 2304, 2305, 0, 0, 353,
	354, 0, 0, 1679, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 1348, 388, 390, 2290, 2289, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 0, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 0,
	0, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 2288, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 2299,
	2300, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 0, 0, 0, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 0, 0, 0, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 1368, 0, 466, 549,
	467, 2283, 2284, 0, 2279, 0, 468, 469, 471, 1370,
	0, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 0, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	0, 0, 1377, 543, 544, 545, 546, 0, 0, 547,
	2291, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 0, 1378, 560,
	1379, 0, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 2276, 575,
	576, 577, 2277, 578, 579, 580, 0, 581, 0, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 2287, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 0, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 0, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	2285, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 2303, 675, 676, 677, 678,
	0, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 2295, 2296, 2297, 2298, 0, 708, 0,
	697, 699, 700, 701, 702, 0, 703, 0, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 0, 2294, 2302, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 0, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 0, 737, 738, 739,
	3215, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 2272, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 321, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 2254, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 969, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 2261, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	2262, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 2263, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 321, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 2701, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 2702, 633, 642, 643, 644, 645, 647, 646, 0,
	2258, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 2260, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 2703, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 2280, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 0, 2286, 0, 343, 2293, 344, 2292, 0,
	2301, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 2304, 2305, 0, 0, 353, 354, 0, 0,
	1679, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 1348, 388,
	390, 2290, 2289, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 0, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 2288,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 2299, 2300, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 0,
	0, 0, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 0, 0, 0, 548, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 1368, 0, 466, 549, 467, 2283, 2284,
	0, 2279, 0, 468, 469, 471, 1370, 0, 1371, 470,
	472, 473, 1372, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	0, 485, 1373, 487, 488, 1374, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1375, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1376, 541, 529, 0, 0, 1377,
	543, 544, 545, 546, 0, 0, 547, 2291, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 0, 1378, 560, 1379, 0, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 2276, 575, 576, 577, 2277,
	578, 579, 580, 0, 581, 0, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 2287, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1380,
	623, 624, 625, 626, 627, 0, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 0, 655, 635, 636, 656, 657, 1381,
	658, 659, 660, 661, 662, 663, 664, 2285, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 2303, 675, 676, 677, 678, 0, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	2295, 2296, 2297, 2298, 0, 708, 0, 697, 699, 700,
	701, 702, 0, 703, 0, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 0, 2294, 2302, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 0, 732, 733, 734, 0, 0, 0,
	0, 735, 736, 0, 737, 738, 739, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 2272, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 321, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 969, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 321, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 925, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 1712, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4699, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 1679, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 1368, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 1370, 767, 1371, 470, 472, 473,
	1372, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	1373, 487, 488, 1374, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1375, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1376, 541, 529, 0, 0, 1377, 543, 544,
	545, 546, 4585, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 1378, 560, 1379, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 1380, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 1381, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 0, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 3631, 0, 1713, 1712, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 1679, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 1370, 767, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 0, 0, 1377, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 2583, 0, 1713, 1712, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 1679, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1770, 761, 762, 548, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 1368, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 1370, 767,
	1371, 470, 472, 473, 1372, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 1373, 487, 488, 1374, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1375, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1376, 541, 529, 0,
	0, 1377, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1378, 560, 1379,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1380, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 1381, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 2318,
	0, 1713, 1712, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 1679,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 1368, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 1370, 767, 1371, 470, 472,
	473, 1372, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 1373, 487, 488, 1374, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1375, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1376, 541, 529, 0, 0, 1377, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1378, 560, 1379, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1380, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 1381, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1900, 0, 1713, 1712,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 1679, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 1897, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 1368,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 1370, 767, 1371, 470, 472, 473, 1372, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 1373, 487,
	488, 1374, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 1375, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	1376, 541, 529, 0, 0, 1377, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 1378, 560, 1379, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 1898, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 1380, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 1896, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 1381, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 1899, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 0, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 1767, 0, 1713, 1712, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 1679, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1770, 761, 762, 548, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 1368, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 1370,
	767, 1371, 470, 472, 473, 1372, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 1373, 487, 488, 1374, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1375,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1376, 541, 529,
	0, 0, 1377, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1378, 560,
	1379, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1380, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 1381, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1708, 0, 1713, 1712, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	1679, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 1368, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 1370, 767, 1371, 470,
	472, 473, 1372, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 1373, 487, 488, 1374, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1375, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1376, 541, 529, 0, 0, 1377,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 1378, 560, 1379, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1380,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 1706, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 1381,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 1713, 1712, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 1679, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 1370, 767, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 0, 0, 1377, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1713, 1712, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	1679, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 1368, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 1370, 767, 1371, 470,
	472, 473, 1372, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 1373, 487, 488, 1374, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1375, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1376, 541, 529, 0, 0, 1377,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 1378, 560, 1379, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1380,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 1381,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1713, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 1679, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1368, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 1370, 767, 1371, 470, 472, 473, 1372, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 1373, 487, 488,
	1374, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1375, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1376,
	541, 529, 0, 0, 1377, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1378, 560, 1379, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1380, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 1381, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 3297, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 4147, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 3301, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	4146, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 3300, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 4143, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 4145, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 4142, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 3299, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 4144, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	3297, 353, 354, 749, 0, 0, 3291, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 3293, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 3301, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 3300, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 3290, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 3299, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 3298,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1986, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 1985,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 1981, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 1988, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 1984, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 1982, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	321, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 1987, 632, 634, 641, 633,
	642, 643, 644, 645, 1983, 646, 0, 1980, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	1978, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 1979, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1683,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1685, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 1416, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1680, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1682, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 1416, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 1586, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1588, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 321, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 1416,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	828, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 826, 328, 329, 815, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 818, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 824, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 820, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 827, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 814, 0, 316,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 815, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 818, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 819, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 820, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 813, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 316, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 815,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	818, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 819,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 820, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 316,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 815, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 818, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 4595, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 820, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 316, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	321, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 1416, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 316,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 4013, 541, 529, 0, 321, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 3515, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 3514, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 815, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 818, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 819, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 820, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 3217, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 2668, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 2612, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 2611, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 321, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	2596, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 2598, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 321, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 2587, 0, 316,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 321, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 316, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 2557, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	321, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 1416, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1815,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1814, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1705, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 1698, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1700, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 321, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	1688, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 321, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1504, 0, 316,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1503, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 321, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1493, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1492, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 1489, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1488, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1483, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1482,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 321, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1460, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1459, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 321, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 795, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	321, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 307,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 818, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 819, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 820, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	2711, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 2709, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	2707, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	2619, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 2342, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	2336, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1044, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 1043, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 1042, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 918, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 907, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 916, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 909, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 915, 433, 911, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 912, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 910, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 913, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 914, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 908, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	901, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	907, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 916,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 909, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 915,
	433, 911, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 912,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 910, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	913, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 914,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 908,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 4146, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 4950, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1531, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 1534, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 1532, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 889, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 888, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 887, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 1535, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 885, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1531,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 1534, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 1532, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 889, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 888,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 887, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 1535, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 885,
	784, 785, 786, 0, 708, 0, 697, 1533, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 896, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 894, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 804, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	803, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 802,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 3427, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 5270, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 3953, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 4824, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 4519, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	3155, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 3146, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 3427, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 3507, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 2496, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 888, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 887, 633, 642, 643, 644, 645,
	3376, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 885, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	2680, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	2666, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1871, 0, 316,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1863, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 879, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 875, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 880, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 889, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 888, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 887, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	1848, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 885, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1821, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1820,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1804, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1802, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1796, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1774,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1772, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1765, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 1726, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	1690, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1537, 0, 316,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 888, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 887, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 885, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1508, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1507, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 1500, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1499, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 316, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 1441, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 899, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	879, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 875, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 874,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 880, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 889, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	888, 624, 625, 626, 627, 876, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 887, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 877,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	885, 784, 785, 786, 0, 708, 0, 697, 881, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 868, 0, 316,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 869, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 830, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 822, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 799, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 4178,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 888, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 887,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 885, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 4070,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 4039, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 4035,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 3978, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 3976,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 3964, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 3961,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 3526, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 869, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	2637, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 0, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1469,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 316, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 1389, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	0, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 0, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 0, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 0, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1810, 0, 1515, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 0, 0, 0,
	0, 353, 354, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 1517, 383, 384,
	385, 386, 387, 0, 388, 390, 0, 0, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 0, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 0, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 0, 0, 0, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1809, 0, 0, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 0,
	466, 549, 467, 0, 0, 0, 0, 0, 468, 469,
	471, 0, 0, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 0, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	0, 547, 0, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 0,
	0, 560, 0, 0, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	0, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	0, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1518, 654, 0, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 0, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 0, 675, 676,
	677, 678, 0, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 0, 0, 0, 0, 0,
	708, 0, 697, 699, 700, 701, 702, 0, 703, 0,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 0, 0, 0, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 0, 732,
	733, 734, 1729, 0, 1515, 0, 735, 736, 0, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 0, 0, 0, 0, 353, 354,
	0, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 1517, 383, 384, 385, 386, 387,
	0, 388, 390, 0, 0, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 0, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 0, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 0, 0, 0, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1728, 0, 0, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 0, 466, 549, 467,
	0, 0, 0, 0, 0, 468, 469, 471, 0, 0,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 0, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 0, 547, 0,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 0, 0, 560, 0,
	0, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 0, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 0, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 1518, 654, 0, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 0,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 0, 675, 676, 677, 678, 0,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 0, 0, 0, 0, 0, 708, 0, 697,
	699, 700, 701, 702, 0, 703, 0, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 0, 0, 0, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 0, 732, 733, 734, 1513,
	0, 1515, 0, 735, 736, 0, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 0, 0, 0, 0, 353, 354, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 1517, 383, 384, 385, 386, 387, 0, 388, 390,
	0, 0, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 0, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 0, 0, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 0, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 0, 0,
	0, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1512, 0, 0, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 0, 466, 549, 467, 0, 0, 0,
	0, 0, 468, 469, 471, 0, 0, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 0,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 0, 547, 0, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 0, 0, 560, 0, 0, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 0, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 0, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1518, 654, 0, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 0, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 0, 675, 676, 677, 678, 0, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 0,
	0, 0, 0, 0, 708, 0, 697, 699, 700, 701,
	702, 0, 703, 0, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	0, 0, 0, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 0, 732, 733, 734, 2356, 0, 1515, 0,
	735, 736, 0, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 1517, 383,
	384, 385, 386, 387, 0, 388, 390, 0, 0, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 0,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 0, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 0, 0, 0, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 0, 0, 0,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	0, 466, 549, 467, 0, 0, 0, 0, 0, 468,
	469, 471, 0, 0, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 0, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 0, 547, 0, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	0, 0, 560, 0, 0, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 0, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 0, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 1518, 654, 0,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 0, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 0, 675,
	676, 677, 678, 0, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 0, 0, 0, 0,
	0, 708, 0, 697, 699, 700, 701, 702, 0, 703,
	0, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 0, 0, 0,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 0,
	732, 733, 734, 2316, 0, 1515, 0, 735, 736, 0,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 0, 0, 0, 0, 353,
	354, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 1517, 383, 384, 385, 386,
	387, 0, 388, 390, 0, 0, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 0, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 0, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 0, 0, 0, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 0, 0, 0, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 0, 466, 549,
	467, 0, 0, 0, 0, 0, 468, 469, 471, 0,
	0, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 0, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 0, 547,
	0, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 0, 0, 560,
	0, 0, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 0, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 0, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1518, 654, 0, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	0, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 0, 675, 676, 677, 678,
	0, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 0, 0, 0, 0, 0, 708, 0,
	697, 699, 700, 701, 702, 0, 703, 0, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 0, 0, 0, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 1515, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 0, 737, 738, 739,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 0, 0, 0, 0,
	353, 354, 0, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 1517, 383, 384, 385,
	386, 387, 0, 388, 390, 0, 0, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 0, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 0, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 0, 0, 0, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 0, 0, 0, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 0, 466,
	549, 467, 0, 0, 0, 0, 0, 468, 469, 471,
	0, 0, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 0, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 0,
	547, 0, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 0, 0,
	560, 0, 0, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 0,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 0,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 1518, 654, 0, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 0, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 0, 675, 676, 677,
	678, 0, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 0, 0, 0, 0, 0, 708,
	0, 697, 699, 700, 701, 702, 0, 703, 0, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 0, 0, 0, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 0, 732, 733,
	734, 0, 0, 0, 0, 735, 736, 0, 737, 738,
	739, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 2038, 2039, 0, 2071,
	2072, 2073, 2082, 2083, 2084, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 2075,
	2069, 2040, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 2088,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 2038, 2039,
	0, 2071, 2072, 2073, 2082, 2083, 2084, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 2075, 2069, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 2094,
	0, 0, 0, 0, 2046, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2063,
	2064, 2065, 2066, 0, 0, 0, 0, 2079, 0, 2046,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2079, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 2068, 2070, 0, 0, 2077, 0, 0,
	0, 2063, 2064, 2065, 2066, 0, 0, 0, 0, 0,
	0, 2046, 2061, 2085, 0, 2086, 0, 0, 0, 0,
	0, 0, 2055, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 0, 2061, 2089, 0,
	0, 2087, 0, 0, 0, 2068, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 2085, 0, 2086, 0, 0,
	0, 0, 0, 2091, 2055, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 2077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0,
	0, 0, 5402, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2052, 2053, 2059, 2081,
	2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045,
	2047, 2048, 0, 0, 0, 0, 0, 5398, 0, 0,
	0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082,
	2083, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 2069, 0, 0,
	0, 0, 0, 0, 0, 2041, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 2094, 0, 0, 0, 0, 5298,
	0, 0, 0, 2040, 0, 2038, 2039, 0, 2071, 2072,
	2073, 2082, 2083, 2084, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 2075, 2069,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 2075, 2069, 2040, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 2064, 2065, 2066,
	0, 2094, 0, 0, 0, 0, 2046, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2079,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	2068, 2070, 0, 0, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 2046, 0,
	2085, 0, 2086, 0, 0, 0, 0, 0, 0, 2055,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 2063, 2064, 2065, 2066, 0, 0, 0,
	0, 2079, 0, 2046, 2061, 2089, 0, 0, 0, 0,
	0, 0, 2068, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 2086, 0, 0, 0, 0, 0,
	0, 2055, 2056, 0, 0, 0, 2079, 0, 0, 0,
	2089, 0, 0, 2087, 0, 0, 0, 2068, 2070, 0,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 2061, 2085, 0, 2086,
	0, 0, 0, 0, 0, 2091, 2055, 2056, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 2062, 0, 0, 0, 0, 2038, 2039,
	0, 2071, 2072, 2073, 2082, 2083, 2084, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 2069, 0, 0, 2080, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2094,
	0, 2093, 0, 0, 0, 0, 0, 0, 2040, 0,
	2080, 2078, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 2057,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0,
	0, 0, 0, 0, 5244, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058,
	2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 2063, 2064, 2065, 2066, 0, 5243, 0, 0, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 2078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050,
	2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0, 0,
	0, 5037, 0, 0, 2079, 0, 2038, 2039, 2089, 2071,
	2072, 2073, 2082, 2083, 2084, 2068, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	2069, 0, 0, 0, 0, 2085, 0, 2086, 2041, 0,
	0, 0, 0, 0, 2055, 2056, 0, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2077, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 2038, 2039, 0,
	2071, 2072, 2073, 2082, 2083, 2084, 0, 0, 0, 2063,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 2046,
	2075, 2069, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 2094, 0,
	0, 0, 2079, 0, 0, 0, 2089, 2040, 0, 0,
	0, 0, 0, 2068, 2070, 0, 2062, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 0, 2085, 0, 2086, 0, 0, 0, 0,
	0, 0, 2055, 2056, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 2064, 2065, 2066, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 2079, 0, 0, 2078, 2089, 0, 0,
	0, 0, 0, 0, 2068, 2070, 0, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 2085, 0, 2086, 0, 0, 4848,
	0, 0, 0, 2055, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 2069, 0, 2080, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 2094, 2093, 0, 0, 0, 0, 0, 0, 2091,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 2069, 2078, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 2062, 2052, 2053, 2059, 2081,
	2058, 2054, 2088, 2051, 2049, 2050, 2042, 2043, 2044, 2045,
	2047, 2048, 0, 2063, 2064, 2065, 2066, 4747, 0, 0,
	2094, 0, 0, 2046, 0, 0, 0, 2080, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 2079, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 2068, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2085, 0, 2086,
	0, 0, 0, 0, 0, 0, 2055, 2056, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 2063, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 2061, 2046, 0, 0, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2052, 2053, 2059,
	2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044,
	2045, 2047, 2048, 0, 0, 0, 0, 0, 4746, 0,
	0, 0, 0, 0, 0, 2079, 0, 0, 0, 2089,
	2087, 0, 0, 0, 0, 0, 2068, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 2085, 0, 2086, 0,
	0, 0, 2091, 0, 0, 2055, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 2075, 2069, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 2062, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2094, 0, 0, 0, 0, 0, 0,
	2076, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	2080, 2091, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 2063, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 2080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050,
	2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 2079, 0,
	0, 4745, 2089, 0, 0, 2093, 0, 0, 0, 2068,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 2086, 0, 0, 0, 0, 0, 0, 2055, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2052,
	2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042,
	2043, 2044, 2045, 2047, 2048, 0, 0, 0, 0, 0,
	4330, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	2078, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 2085, 0,
	2086, 0, 0, 3740, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 3739, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 3738, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 2535, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2536, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 2435, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 3737, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 2433, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	3702, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2537, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 2434, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2538, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 5565, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 2432, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 3805, 2077, 0, 0,
	0, 0, 0, 3804, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 5564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	3672, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 3673, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 5143, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 4900, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 4551, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 4552, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2077, 0, 0,
	0, 0, 0, 3811, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 3806,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	4311, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 3741,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 3771, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2075, 2069, 0, 0, 0, 0,
	0, 2087, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2091, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 0, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2080, 2060, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2077, 0, 0,
	0, 0, 2649, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 2038, 2039, 2077, 2071, 2072,
	2073, 2082, 2083, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 2094, 0, 0, 0,
	0, 2087, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 2046, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 0, 0, 2089, 0, 0, 0, 2078,
	0, 0, 2068, 2070, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2093, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0,
	0, 2055, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058,
	2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048,
}

var sqlPact = [...]int32{
	13324, -1000, -1000, -1000, -1000, -1000, -1000, 268, -1000, -1000,
	267, 265, 264, 263, 261, 260, 259, 256, 255, 251,
	250, -1000, -1000, 249, 247, 244, 243, -1000, -1000, 242,
	241, -1000, 240, -1000, -1000, 239, -1000, 238, 236, 234,
	-1000, -1000, 233, -1000, 232, -1000, -1000, -1000, -1000, 231,
	228, 223, 112407, 111790, 113022, 2651, 141366, 122261, 2275, 98845,
	140749, 98228, 140132, 2529, 11402, 139515, 3152, 222, -1000, 138898,
	220, 218, 216, -1000, 121644, 138281, 119178, 118561, 2211, 87048,
	1930, 1924, -1000, 215, 214, -1000, 6258, 82721, 213, 212,
	211, 209, 3000, 207, -1000, 205, 203, -1000, 201, 195,
	-1000, 12685, 1699, -1000, 192, 190, 188, -1000, 343, 117944,
	180, 174, 172, 2794, 167, 166, 80259, 165, 163, 161,
	2783, 3252, -1000, -1000, 2353, -1000, -1000, 160, 151, 150,
	148, 145, 144, 139, 137, 136, 135, 131, 128, 127,
	126, -1000, 125, 124, 122, 121, 120, 115, -1000, 114,
	113, 112, -1000, 111, -1000, 109, 108, 107, 106, 105,
	104, 103, 102, 98, 97, 96, 95, 93, 92, 91,
	15568, -1000, -1000, 87, -1000, 2287, 1921, 1911, 1903, 1087,
	85, 83, 80, 78, 76, 75, 74, 73, 70, 69,
	67, 66, 59, 57, 51, 50, 49, 48, 47, 45,
	44, 43, 42, 202, 41, 40, 35, 32, 29, 28,
	26, 24, 6123, 4038, -1000, 1718, 1220, 1388, 36159, 3435,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 150591,
	141981, 22, -63, 21, -1000, 3812, 1209, 65316, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 378, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 573, 2835, 804, -1000,
	-1000, -1000, 137664, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2649, -26, 99460, -1000, 2399, -1000, -1000, -1000, -1000,
	-1000, 801, -1000, 2648, 2585, 321, 2584, 99460, -1000, -1000,
	-1000, 3901, 3793, 111173, 2829, 4369, 4368, 4366, 4365, 4364,
	149976, 2128, 2892, 4360, 4359, 4358, 4357, 4356, 4355, 4353,
	-1000, 110556, 1185, 109939, 109322, 3897, 137049, 108705, 136432, 153057,
	55215, 1214, 3900, -1000, -1000, -1000, -1000, -1000, -1000, 141981,
	-1000, 1184, -1000, -1000, 4352, 2371, 800, 121027, -1000, -1000,
	135815, 1997, -1000, -1000, -1000, 1035, 1308, 38687, 38687, 38687,
	371, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3909, -1000,
	-1000, -1000, -1000, 141981, 3142, 3142, 1579, 1561, 1561, 3142,
	3142, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4349,
	4348, 4346, 4343, 4342, -1000, -1000, -1000, 1771, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 97611, 28386, 96994, 96377, 108088,
	135198, 54583, 107471, 106854, 92058, 4341, 4339, 53951, 62796, 4035,
	134581, 152440, 4034, 4030, 1177, 2391, 1672, -1000, -1000, -1000,
	-1000, -1000, -1000, -3, 86433, 4081, 141981, -1000, 369, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 53319, 1069, 52687, 1047,
	52055, 1029, 133964, -1000, -1000, -1000, -1000, -1000, 91431, 3788,
	-1000, 133347, 1691, 2823, 4338, 4337, 1326, 4336, 3761, 2125,
	4335, 4332, 4330, 4328, 4323, 4320, 4319, 1759, 132730, 3088,
	132113, 2068, 151823, 2204, 1176, 106237, 113022, 2997, 131496, 1720,
	1710, -1000, -1000, -1000, -1000, 3550, 3249, 3242, 1193, -1000,
	-1000, -1000, -1000, -1000, 69070, 8297, 6573, -1000, -1000, 11515,
	130879, 72195, 113022, 113022, -1000, -1000, -1000, -1000, -1000, -1000,
	51423, 860, 50791, 1200, 130262, -1000, -1000, 69695, 3384, 1235,
	-1000, -1000, -1000, -1000, -1000, 129645, 50159, 714, 49527, 916,
	141981, -1000, 3433, 2283, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2615, 1819, 4111, 3182, 90804,
	2398, 1559, 3837, 3543, 3535, 1677, 2369, 3534, 4318, 2996,
	3245, 3531, 3530, 3526, 3522, 3517, 1800, 2958, 610, 2964,
	35527, 3424, 2086, 48895, 2078, 1675, 3510, 3509, 3502, 4124,
	3952, 2352, 2351, 2331, 2359, 95760, 4316, 4314, 3802, 3498,
	3496, 3250, 3474, 2225, -1000, 3383, 1750, 365, -1000, -1000,
	-1000, -1000, -1000, -1000, 365, 1644, -1000, -1000, -1000, -1000,
	-1000, 100690, -1000, -1000, 1771, -1000, -1000, -1000, 1642, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1718, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3146, -1000,
	2387, -1000, -1000, -1000, 2893, 3774, 3774, 3774, 3899, 552,
	547, -1000, 202, 942, 1291, -1000, -1000, 162480, -1000, -1000,
	55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847, 2534, -1000,
	799, -1000, -1000, 845, -1000, 795, 719, 673, -1000, -1000,
	-1000, -1000, -1000, -1000, 794, -1000, -1000, -1000, -1000, -1000,
	-1000, 4070, -1000, 31598, -1000, -1000, -1000, 587, 784, 55847,
	-1000, -1000, 4155, 4153, 1158, -1000, 348, 1036, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3432, 781, 780, -1000, 778, 768, 761, 760,
	759, -1000, 758, -1000, 756, 754, 753, 748, 747, 745,
	744, 742, -1000, 2428, -1000, -1000, -1000, -1000, -1000, -1000,
	711, 710, 710, 710, -1000, 1165, 709, 736, -1000, 405,
	708, 366, 706, 705, 704, -1000, 735, 734, 733, 732,
	731, 730, 729, 728, 726, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1168, -1000, -1000, -1000, -1000, 1683, -6, 141981,
	-1000, 665, -6, -1000, -1000, 723, -1000, 39969, 39969, 39969,
	-1000, -1000, 2647, 55847, -1000, 2845, -1000, 3, 3, 1005,
	67191, -1000, 64048, 1005, 341, 853, 73437, -1000, 3382, -1000,
	-1000, 722, 346, -1000, -1000, -1000, -1000, 29011, 3381, 141981,
	141981, 141981, 113022, 113022, 113022, 141981, 4313, 4312, 3667, 55847,
	-1000, -1000, 82104, 154902, 113637, 1640, -4, -1000, -1000, 4010,
	85808, 81489, 3431, 154902, 3429, 3380, 154291, 90177, 291, 3606,
	-1000, -1000, 721, 4311, -1000, -1000, -1000, -1000, -1000, 3604,
	4309, 4307, 4306, 141981, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2601, 3602, -1000, -5, -1000, 117327, 2601, 3601, -1000,
	-5, 2601, 3600, -1000, -5, 116712, -1000, -1000, 2601, 3599,
	-1000, -1000, 284, 3598, -1000, -1000, 274, 3597, -1000, -1000,
	342, -140, 3596, -1000, -1000, -1000, -1000, -1000, -1000, 162480,
	-1000, -1000, -1000, 153674, -1000, 3807, -1000, 141981, -1000, 55847,
	-1000, -1000, 4009, 1825, 3841, 3932, -1000, -1000, -16, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2868, 2894, 1278, 2710,
	-1000, 3682, 1982, 38687, 3748, -1000, -1000, -1000, -1000, -1000,
	338, 29011, 3223, -1000, -1000, 141981, -1000, 141981, 3142, 3142,
	-1000, -1000, -1000, 4116, 4115, 3142, 3142, 141981, 141981, -1000,
	-1000, -1000, -1000, -1000, -1000, -16, -1000, 5593, 3595, 1684,
	-1000, 2702, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2334, 3593, -1000, 2407, 3591, 2295, -1000, -1000, 7828,
	-1000, 2735, -1000, 159220, 1520, -1000, -1000, -1000, -1000, 2563,
	3576, 11, -1000, -1000, 2739, -1000, 4109, 3277, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 159120,
	-1000, 1951, -1000, -1000, 2396, 2316, -1000, 1483, 3575, -1000,
	3178, 3178, 105620, 3614, 71570, 69695, 86433, -15, -1000, -1000,
	-1000, -1000, -1000, -175, -1000, 27753, 162480, -1000, -1000, -1000,
	-1000, 2135, 162480, 1065, -1000, -1000, 3571, -1000, 162480, 1052,
	-1000, -1000, 3565, -1000, 2956, -1000, 3426, -1000, -1000, -1000,
	2776, 89550, 2774, 1131, -1000, 105005, 2366, 4304, -1000, 4302,
	-1000, -1000, 4298, -1000, 4297, 4295, 4290, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 104388, 2644, -1000, -1000, 1737, 1062,
	92683, -1000, 2773, 3931, -1000, 103771, 1175, -1000, 1081, 2771,
	-1000, 1696, 116097, 1173, 2767, -1000, 4289, 3880, 3046, 1081,
	2765, -1000, -1000, -1000, -1000, -1000, 1107, -1000, 74667, -1000,
	74667, -1000, 1914, -1000, 149361, 3, 113022, 4070, -1000, -32,
	-1000, -1000, -1000, 1209, -1000, 68442, -1000, 68442, 120410, 92683,
	1062, 3379, 78392, 162160, -1000, 1129, -1000, -1000, 162480, -1000,
	-1000, -1000, 2953, -1000, -171, 3172, -1000, 92683, 70945, 3378,
	2951, -1000, 162480, -1000, -1000, -1000, -1000, 162480, -1000, -1000,
	-1000, 92683, 1737, -1000, 129028, 103154, -1000, -1000, 1744, 2909,
	-1000, -1000, -1000, 69695, 3376, 1488, 92683, 92683, 92683, 92683,
	-1000, 128411, -1000, -1000, 2413, 1717, 3799, 2388, 113022, -1000,
	2154, -1000, -1000, -1000, 3823, 3612, 141981, -1000, -1000, 3425,
	-1000, 85193, 3425, 115482, -1000, 114867, -1000, 114252, -1000, 113022,
	-1000, 113022, -1000, 4284, 4283, 4276, -1000, -1000, 4274, -1000,
	4273, 3813, -1000, 785, 48263, 162480, 3811, -1000, 4271, 2318,
	3424, 162480, -1000, 3605, 1913, 1905, 141981, -1000, -1000, 141981,
	-1000, 141981, -1000, 141981, -1000, -1000, -1000, 2670, 1828, -1000,
	-1000, 2866, -1000, -1000, -1000, 1127, -1000, -1000, 113022, 113022,
	113022, 113022, 3374, 3037, 113022, 1747, -1000, 47631, 3782, -1000,
	-1000, 3471, 4270, 2033, -1000, 2134, -1000, 3373, 3819, -1000,
	3372, 1742, 2108, 337, 4158, 337, -1000, -1000, 292, -1000,
	-1000, 148746, -1000, 2893, -1000, 141981, -1000, 2847, 3401, 3416,
	1821, 2666, 2989, -1000, 46999, 2950, 59639, 2690, 202, -1000,
	-1000, 202, 202, 37423, -1000, -1000, 38687, 942, 85808, 85808,
	29011, 1670, 55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847,
	55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847,
	55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847,
	55847, 55847, 55847, 55847, 55847, 55847, 55847, 55847, 2535, 55847,
	1638, 55847, 55847, 55847, 55847, 2454, -1000, -1000, 2290, 613,
	2341, 719, -1000, -1000, -1000, 4085, 4085, 4085, 1321, 1321,
	1321, 162580, 162580, 663, 4264, 845, -1000, 55847, -1000, 119,
	67806, 55847, 29638, -1000, 547, 14869, 2886, -1000, 544, 30300,
	-1000, -1000, -1000, 31598, 673, 46337, 55847, 1144, 162480, -1000,
	-1000, 1698, 4112, 27120, 3445, 3238, 718, 982, 897, 34865,
	34203, 33541, 32879, 816, 685, 55847, 55847, 55847, 55847, 55847,
	55847, 55847, 55847, -1000, -1000, 4114, -1000, 4112, -1000, -1000,
	717, -1000, 4112, 4112, -1000, 4112, 1662, 1648, 4112, -1000,
	4112, 4112, 9589, 9589, 45705, 45073, 44441, 60271, 43809, 55847,
	32247, 43177, 42545, -1000, 62167, 141981, -6, 4007, 141981, 55847,
	305, -1000, 14153, -1000, 305, 305, 715, -38, 162480, 2891,
	2891, 65941, 2749, 2543, 2543, 2543, -1000, 1005, 21384, 1005,
	126566, 2561, 1005, 1005, 335, 377, 539, 63423, 2845, 125951,
	824, 713, 19, 17, 16, -1000, -1000, 15, 14, -1000,
	-1000, 113022, 712, 29638, 29011, 333, 2346, -40, 2974, 2973,
	2972, 2970, -1000, 2965, 2641, -1000, -1000, -1000, 2130, -46,
	1623, 113022, 141981, 2107, -1000, -1000, -1000, -1000, 86433, -7,
	86433, 141981, 3781, 113022, -62, -1000, 154902, 5739, -56, -1000,
	1445, 330, 4112, -1000, -1000, -1000, 4263, 4262, -1000, 498,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 711, 710,
	710, 710, -1000, 1165, 709, 405, 708, 366, 706, 705,
	704, -1000, -1000, -1000, -1000, -1000, 3371, 113022, 141981, 2053,
	84578, 102537, -140, 113637, 154902, -45, -1000, -1000, -1000, -1000,
	113022, -1000, -1000, 113022, -1000, 75901, -1000, 141981, -1000, -1000,
	-1000, 4260, -1000, 113022, 113022, 2601, 3562, -1000, 113022, -1000,
	113022, 273, 3561, -1000, -1000, 141981, -1000, 113022, 113022, -1000,
	141981, 141981, 141981, 154902, 154902, 270, -1000, 113022, 942, -64,
	1332, -16, -1000, -1000, -1000, -1000, 1771, -1000, 2003, -1000,
	-1000, -1000, -1000, -1000, -1000, 1768, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1158, -1000, -1000, -1000, -1000, 4097,
	4092, -14, -1000, -1000, 29011, -1000, 2280, -1000, -1000, -1000,
	-1000, 141981, 141981, -1000, -1000, 141981, 141981, -1000, -1000, -17,
	1884, 702, 1620, -1000, 95143, 2768, 3787, 4258, 3033, 3777,
	1904, -1000, 1822, 701, -1000, 3903, 100690, 3949, 3967, 1507,
	-1000, 3370, -1000, -1000, -1000, 1034, 2021, 2062, 1608, 1596,
	100690, 2407, -1000, 85808, -1000, 3082, 3877, 1561, 1564, 1561,
	1561, 1545, 1480, -1000, 100690, 2061, 1557, 1549, 2532, 1543,
	2056, 1466, 3673, -1000, -1000, 2639, 2727, -1000, -1000, -1000,
	-1000, 1935, 3113, -1000, 2872, 1514, 1514, 141981, -1000, 1463,
	-1000, -1000, 1896, 1892, -1000, -1000, 127796, 2030, -1000, 1457,
	1454, 143211, 4029, 3146, 2526, 871, 2306, -1000, 1515, 1448,
	3369, -1000, -1000, -21, 3948, 3964, 1507, -1000, -1000, 3367,
	1447, -1000, 1159, -1000, -1000, -1000, 3875, 113022, 29011, 1770,
	1767, 1763, 2054, 1446, -8, -1000, 3943, 1887, -1000, 4044,
	92683, -1000, 2805, 1832, -1000, 1737, 1737, 122876, 141981, -1000,
	-1000, -1000, 3836, 3835, -1000, -1000, 1443, 1439, -1000, 1125,
	8858, 3723, -1000, 154902, 1125, 1125, 2201, 3556, 3106, 2090,
	-1000, 3170, 991, 3161, -1000, -1000, -1000, 991, -15, 86433,
	141981, 322, -1000, 119, 55847, 55847, 119, 55847, 119, -1000,
	3925, 3554, 4004, -1000, 3553, 4257, 700, -1000, -1000, 2889,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 699, 2756, 3365,
	141981, 204, -1000, 113022, -1000, 4003, 127181, -1000, 3552, 154902,
	2407, 2755, -1000, -1000, 101922, -1000, 3551, 2339, 573, 2753,
	-1000, 829, 4256, 3545, -1000, 148131, -1000, 3807, 1686, 3542,
	1232, 372, 4000, -1000, 372, 76527, -1000, 141981, -1000, 3,
	1178, 93913, -66, -67, 538, -1000, 141981, 141981, 3735, 2344,
	2343, -1000, 1073, 69695, -1000, 69695, -72, -1000, -171, 3153,
	1810, 69695, -1000, 1062, -108, 991, -1000, 991, -1000, 113022,
	3409, -1000, 92683, 69695, -1000, 1062, 1062, 1062, 1062, -1000,
	-1000, -1000, -1000, 4255, 4253, 4252, 4247, -1000, -1000, 1080,
	113022, 141981, 113022, -1000, 3101, 1809, -1000, 319, -1000, 154902,
	-1000, 154902, 141981, 113022, -1000, -1000, 1080, 141981, 1080, 141981,
	1080, 141981, 1080, 1080, -1000, -1000, -1000, -1000, -1000, 119,
	-1000, -1000, 162480, -1000, 55847, -1000, -1000, 1818, 4231, 1922,
	-1000, 3405, -1000, 3402, -1000, 62, 310, -1000, -1000, 4113,
	2188, -1000, 4148, -1000, -1000, -1000, -1000, -1000, 113022, 3362,
	-1000, -1000, -1000, -1000, 4230, 3775, 162480, -1000, 88923, 2361,
	-1000, -1000, -1000, -1000, 113022, 113022, 113022, 113022, 141981, 3722,
	-1000, 141981, 3713, 3721, 113022, -1000, 4098, -1000, -1000, 100690,
	-1000, 2847, 3401, -1000, -1000, -1000, -1000, -1000, -1000, 1609,
	2591, -1000, 2936, -1000, 1853, -1000, -1000, -1000, 162480, 60903,
	-1000, -1000, 162480, 2149, -1000, 59007, 58375, -1000, -1000, 1994,
	113022, 2994, -1000, 2994, -116, -1000, 159960, 2935, 113022, -14,
	38687, -1000, -1000, -1000, -1000, -1000, 1033, 1437, 1437, 1505,
	1505, 1505, 1505, 3937, 6603, 6060, 7124, 370, 370, 516,
	516, 516, 516, 516, 370, 5792, 1321, 1321, 5792, 5792,
	5792, 5792, 5792, 1321, 1321, 1321, 370, 370, 370, 1321,
	162580, 20741, 9952, 55847, 55847, 1438, 2282, 613, 8253, 55847,
	10738, 10738, 10738, 10738, -1000, 2129, -1000, -1000, -1000, -1000,
	3356, 698, 60271, 60271, -1000, -1000, -1000, -1000, 30949, 55847,
	-1000, -1000, -1000, -1000, 41883, -1000, -1000, 158800, -334, 537,
	-1000, 307, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 536, -77, 58, -1000, 55847,
	55847, 55847, 535, -1000, 304, 55847, 141981, -1000, 20469, 819,
	-88, -1000, -75, 1601, -1000, 55847, -1000, -1000, 1431, -1000,
	1430, 1426, 1423, -1000, 697, 534, -1000, 299, -1000, 2540,
	696, 690, 55847, -1000, -1000, -1000, -1000, -1000, 158700, -1000,
	-1000, 158380, -1000, -1000, 158280, -1000, -1000, 157891, -1000, -1000,
	-1000, -1000, -1000, 162060, 20023, 19700, 18745, 11191, 18023, 17377,
	-81, 532, -82, 4112, 531, 518, 515, 1027, 1025, 514,
	511, 499, -87, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -89, 486, -1000, 3354, -77,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 481, -1000,
	476, -1000, 161740, -77, 474, 7173, -1000, 60271, 60271, 60271,
	60271, 470, -1000, 159640, -1000, 161640, 41251, 41251, 41251, 468,
	161320, 55847, -77, -92, -1000, -95, -1000, -1000, -1000, -1000,
	633, -100, -1000, -101, 1138, 39969, 64689, 29011, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1138, 1138, 55847, -1000, 55847, 2944, -1000, -1000, -1000, -1000,
	2942, 2261, 2891, 65941, -1000, -1000, -1000, -1000, 126566, -1000,
	4070, 3499, -1000, 126566, -1000, -1000, 141981, 665, -1000, 126566,
	126566, 29011, 1005, -1000, -1000, 141981, 662, 1005, 126566, 858,
	-1000, -1000, -1000, -1000, -1000, 467, 79017, 58, 298, 29011,
	1081, -1000, -1000, 3089, 3089, 3089, 3089, 3089, 113022, -1000,
	-1000, 154902, 1416, -13, -97, 3150, 3149, 3148, -15, 86433,
	-15, -175, 141981, -9, 4042, -272, -1000, 2406, -1000, 85808,
	-1000, 835, 1347, 29011, -1000, -1000, -1000, -1000, 4112, 154902,
	3350, 235, 3147, 3140, 3138, -1000, 2635, 99460, 219, -140,
	154902, -1000, 291, -113, -1000, -1000, 83951, 79632, -1000, 2546,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4229, -1000, 2601,
	-1000, -1000, 113022, 2601, 2601, -1000, 113022, 113022, 2601, -1000,
	284, -1000, 274, -1000, -1000, -140, -1000, 1126, 38687, -1000,
	1771, -1000, -1000, 1798, -1000, 2347, -1000, 1379, -1000, -1000,
	38687, -1000, 3738, -1000, 2074, -1000, -1000, -1000, -1000, 3920,
	141981, 141981, 113022, -1000, 124106, 141981, -1000, 2500, 154902, -1000,
	2752, 147516, 2740, 146901, 85808, -1000, -1000, 689, 1042, 2933,
	2928, 1228, 141981, 141981, 2906, 146286, 145671, -1000, 4221, 141981,
	2415, 55847, 124106, 3874, 2494, 3927, 119, 119, -1000, 119,
	-1000, -1000, 687, 1359, 113022, 113022, 141981, 154902, 113022, 2109,
	-1000, -1000, -1000, -1000, -1000, 101305, -1000, -1000, 1561, -1000,
	-1000, -1000, 1561, -1000, 1561, 2407, 2055, 141981, 154902, 113022,
	-1000, -1000, -1000, -1000, 141981, 141981, 154902, 2629, 2726, 2628,
	3109, -1000, -1000, -1000, -1000, -1000, -1000, 154902, 145056, 2294,
	144441, 2276, 2270, -1000, -1000, -1000, 2237, 2254, 2484, 2051,
	141981, -1000, -1000, -1000, -1000, -1000, 1656, -1000, 871, 1415,
	3347, 55847, 55847, 2456, 119, 119, -1000, 119, 681, 29011,
	-1000, 1547, -1000, 3419, 141981, 4147, 143826, 4146, 141981, 141981,
	141981, 154902, 3798, 141981, -11, -1000, 1931, -1000, 4044, -1000,
	963, -1000, -108, -12, -180, -1000, 953, 951, -175, 2371,
	141981, 154902, -1000, 143211, 8858, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2453, 3078, 1239, 141981, 1483, -1000, -1000, 2042,
	1413, 1412, 100690, 2438, 2032, 2164, 154902, 69695, 1075, 69695,
	3052, -1000, -1000, 26487, -1000, 162480, 162480, -1000, 162480, -1000,
	83336, 92683, 92683, 141981, -1000, 77152, 141981, 94528, 1046, 3529,
	75284, -175, 1062, 1737, 3455, 1932, -180, 678, 141981, -1000,
	-1000, 2407, 3528, 573, 2751, -1000, 154902, 1170, 3999, 3524,
	677, 4218, 4212, -1000, 113022, 2626, 2750, -1000, -1000, 142596,
	3618, 871, 141981, 1138, 65941, 2268, -1000, 72822, 1211, 141981,
	2183, 206, -1000, -1000, -1000, 34, 141981, -1000, 823, -1000,
	-1000, 1178, 1178, 1062, 70320, -114, -1000, 288, 676, 945,
	940, -1000, 5640, -1000, -171, -1000, 92683, 1073, 69695, 3345,
	-171, 3126, 3343, -1000, -1000, 1118, 1062, 1726, 3114, 1062,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1, -1000, 2029, 2133, 141981, -140, -140, -27,
	-1000, -1000, 280, -13, -1000, 1080, -1000, 1080, -1000, 1080,
	-1000, -1000, -1000, 162480, -1000, -1000, -1000, 1919, 1906, 141981,
	-1000, 141981, 3398, -1000, 141981, -1000, -1000, 113022, -1000, 4211,
	-1000, -1000, 29011, 141981, 113022, 29011, 113022, 3396, 3395, -1000,
	-1000, -1000, 141981, -1000, -1000, 141981, -1000, -1000, -1000, -1000,
	-1000, -1000, 1280, -1000, 2149, 2590, -1000, 673, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2850, -1000, -1000,
	37423, 910, -1000, -1000, 113022, 0, -14, 55847, 55847, 8066,
	7091, 55847, 60271, 60271, -1000, 55847, 6271, -1000, -1000, -1000,
	-1000, -1000, 3340, 669, 55847, 85808, 5904, 5576, -1000, 466,
	16553, 5792, -1000, 55847, -1000, 656, -1000, 465, 40619, -1000,
	160380, 23, -119, -1000, 22032, -77, -120, -1000, -1000, 834,
	-1000, 3503, -1000, 55847, 161220, 2787, 2312, 2114, 1945, 4112,
	4144, 25854, -1000, 77777, 1142, 2565, 157588, -1000, -1000, -1000,
	-1000, 85808, 85808, 55847, 55847, -1000, 55847, 55847, 55847, -1000,
	-1000, -1000, 4112, 464, -1000, -1000, 1017, -1000, -1000, -1000,
	1017, -1000, -1000, 1561, -1000, 1561, -1000, 55847, -1000, -1000,
	3338, 55847, -1000, 85808, 85808, 60271, 60271, 60271, 60271, 60271,
	60271, 60271, 60271, 60271, 60271, 60271, 60271, 60271, 60271, 60271,
	60271, 60271, 60271, 60271, 60271, 2890, 60271, 4063, 4063, 4063,
	1265, -1000, 3394, 3338, 55847, 55847, 85808, 460, 459, 457,
	-1000, 55847, -77, -1000, -1000, 7492, 667, -1000, 2834, -1000,
	141981, -1000, 3226, -1000, 55847, -1000, -127, -1000, 2845, -1000,
	-1000, 3226, 3226, -128, 162480, 65941, 65941, -1000, 666, 55847,
	2922, -1000, -1000, 817, -331, -1000, 939, -1000, -1000, -1000,
	-1000, -1000, -1000, 937, -1000, 665, -1000, -1000, -1000, 272,
	126566, 662, -1000, 141981, 126566, 814, -1000, -129, -1000, -1000,
	-130, -1000, 125951, 447, 29011, -1000, 1138, 3056, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2954, -272, 154902, 154902, 2027,
	2026, 2025, -15, -175, 2582, -1000, 3248, 4143, -1000, 4106,
	833, 813, 183, 446, -140, 154902, 154902, 2024, 2023, 2020,
	80874, 3331, 154902, -1000, -1000, -1000, 77152, 85808, -1000, 85808,
	-1000, -1000, -1000, -1000, 2601, -1000, -1000, -1000, 273, -1000,
	-1000, -1000, -1000, 3017, -1000, -16, -1000, -1000, -1000, 55847,
	-1000, 1049, -1000, -1000, 3785, 661, 1405, 1400, -1000, -131,
	-1000, 932, -1000, -1000, -1000, -1000, -1000, 3241, -1000, 3520,
	-1000, 2748, -1000, 1216, 2747, 1806, -1000, 55847, 660, 3044,
	659, 658, 4205, 2496, 4204, 1230, 3516, 2601, 3511, 2601,
	-1000, -1000, -1000, 1038, -1000, 162480, -143, -1000, 2494, -1000,
	657, 655, -1000, -17, 1847, 478, 1397, 1105, -1000, -1000,
	55847, 55847, 125336, -1000, 550, 3797, -1, -1000, -1000, -1000,
	2008, 1396, 1395, -1000, -1000, -1000, -1000, -1000, 2407, 2005,
	1394, 1390, -1000, -1000, -1000, -1000, -1000, -1000, 3469, 3005,
	2725, -1000, -1000, -1000, -1000, 2746, -1000, 141981, -1000, 3508,
	141981, 3086, 871, 141981, 3797, 3204, 1101, -1000, 3462, 3459,
	1019, 141981, 55847, 55847, 160900, 160800, -1000, 1085, -1000, -1000,
	55847, -1000, -21, -1000, 1387, 3942, 2745, 113022, -1000, 2601,
	3505, 1376, -1000, 1374, -1000, -1000, -1000, 3936, 3934, 1375,
	1887, 92683, 69695, 2917, -1000, 3923, 2581, 4094, 4044, 69695,
	-1000, 122876, 92683, 92683, -1000, -1000, -1000, 4094, -1000, -1000,
	-1000, -1000, 88296, -1000, -1000, 1125, 141981, 154902, 113022, 1986,
	-1000, -1000, 99460, 100075, 141981, 3106, -140, 991, -1000, 2905,
	991, 1075, 3328, -1000, 2991, -1000, -1000, 1084, 445, -22,
	-1000, 1378, 4202, 442, -146, -23, 85808, -1000, -1000, -1000,
	-1000, 2740, 113022, 141981, 1475, 3040, 141981, 141981, 3998, -1000,
	2640, 725, 113022, 990, -1000, 4070, -1000, -1000, -1000, 141981,
	39969, 122876, -1000, 3929, 113022, 3996, 3500, 1081, 113022, 119,
	113022, 4122, -1000, -1000, 3995, 113022, 3495, 2624, 2744, 2877,
	871, 93298, 1081, 2564, -33, -1000, 2183, 39319, 3786, -156,
	-1000, -1000, -1000, 1138, 76527, 65941, 55847, 4201, -162, -1000,
	-1000, -1000, -1000, -1000, 92683, 1062, 141981, 141981, 4199, 92683,
	92683, 92683, -24, 654, -1000, 931, 923, 915, -1000, -1000,
	-1000, -1000, -1000, -1000, 914, 913, 912, 909, -1000, -1000,
	1073, -1000, -1000, -171, 69695, 1073, 69695, 119, -1000, 2573,
	-1000, 113022, 69695, -1000, 25221, 141981, 3101, -1000, 87663, -1000,
	-1000, -1000, -1000, -1000, 1080, -1000, 4142, -175, -1000, -1000,
	-1000, -1000, -1000, 2472, 2674, 2472, 2155, 2153, -1000, -1000,
	-1000, 2588, -1000, -1000, -1000, -1000, 3019, 3784, 29011, 3947,
	10738, 55847, 55847, 533, 2329, 782, 10738, 55847, 55847, 85808,
	162864, -163, 55847, 55847, -1000, 55847, 811, 162480, -1000, 4141,
	55847, 434, 431, -1000, -1000, -1000, 4102, -1000, -1000, -1000,
	162480, 55847, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 430,
	-1000, 170, -1000, -1000, -1000, 151206, -1000, 55847, 429, 3872,
	-1000, 428, 417, 12173, 10024, 157469, 157156, 156995, 416, -1000,
	-1000, -1000, 411, 410, 162480, 3394, 162480, -1000, -1000, 1089,
	1089, 1498, 1498, 1498, 1498, 4063, 948, 1135, 846, 501,
	501, 501, 462, 1265, 1265, 501, 501, 501, 1265, 3324,
	2896, 653, 7946, -1000, -1000, 162480, 162480, 408, -1000, -1000,
	-1000, -77, 406, 7492, -1000, -1000, 3234, 3871, 162480, -1000,
	65941, 3234, 3234, -1000, -1000, 2261, 141981, 162480, 65941, -1000,
	3499, -1000, 23316, 22677, -1000, 29011, -1000, -1000, -164, -1000,
	85808, -1000, -1000, -1000, 4070, -1000, 79017, -1000, -1000, 63,
	-1000, 3056, -1000, 908, -1000, -1000, 92683, 92683, 4197, 4196,
	-1000, 4137, 4134, 2451, 4133, 3089, -1000, -272, -144, 141981,
	141981, 141981, -1000, 2578, -1000, 810, 4192, 830, 29011, -1000,
	-140, -140, 141981, 141981, 141981, 3311, 113022, 141981, 2037, 154902,
	-140, -1000, -1000, -1000, -1000, -1000, -1000, 3734, 162480, 3393,
	3211, 3210, 141981, 141981, -1000, 124106, 38687, 1777, 124721, 141981,
	3494, -1000, 3493, -1000, 1228, 5699, 156767, 66566, -1000, 66566,
	141981, -1000, -1000, -1000, -1000, 2370, 1634, 4191, 1313, -1000,
	3825, 141981, -1000, 141981, -1000, -1000, -1000, 124106, -1000, 141981,
	141981, 113022, 141981, -1000, 154902, 3475, -165, 162480, -25, -1000,
	907, -1000, 1503, -1000, 24588, 141981, 154902, 113022, 141981, 154902,
	113022, 141981, -1000, 3004, 3492, 1204, 141981, -1000, 3491, 141981,
	1202, -1000, -1000, 141981, 2514, -1000, -1000, 3458, -1000, 162480,
	160480, 119, 55847, 3473, -173, 29011, -1000, 4131, 4129, 3486,
	3831, -1000, 141981, 4128, 141981, 113022, 3733, -1000, -1000, -1000,
	-1000, 906, 903, 902, 901, 898, 4050, 122876, -1000, 1076,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1998, 1372, 1365, 2620, 2618, 2575, -27, 2438, 1075, -28,
	652, -1000, 1075, -1000, 92683, 69695, 4190, 2176, 77152, 55847,
	55847, -1000, 3026, -1000, 119793, 94528, 2637, -1000, -1000, 642,
	141981, 141981, 635, -1000, 119, -1000, 4189, 124106, 634, -1000,
	2569, -1000, 809, -1000, -1000, 198, -178, 154902, 2407, 119,
	113022, -1000, 573, 1072, 573, 403, -29, -1000, 3639, 1226,
	29011, 113022, 3485, 2880, 871, 93298, -1000, 1686, 2989, -1000,
	-30, -1000, 682, 119, 2564, -1000, -33, 162480, -1000, 896,
	400, -1000, 3732, -1000, -1000, -179, -1000, -1000, 3315, 3315,
	92683, 69695, 92683, 92683, 92683, 69695, 92683, -1000, 1073, 3993,
	-1000, -171, -1000, 2758, 1062, 1062, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 29011, 1996, -1000, 632, 631, -1000,
	-1000, -1000, -1000, 3784, 10738, 10738, 55847, 55847, 55847, 10738,
	162864, -181, -1000, 10738, 10738, -77, -1000, -1000, 160380, -1000,
	-1000, -1000, 162480, -1000, 23955, 2475, -1000, 156339, -1000, 37423,
	-1000, -1000, 55847, 55847, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 60271, 3307, 630, 85808, -1000, -1000, 393, 1133,
	55847, 57743, 2845, 1133, 1133, -1000, -186, -1000, -1000, -1000,
	4070, -1000, 4070, 63, -1000, 141981, -1000, -1000, -1000, 29011,
	-1000, 92683, -1000, -1000, -1000, -1000, -1000, 4187, 4184, 2724,
	4183, 4182, -1000, -1000, -1000, 3461, -176, -187, -189, -1000,
	828, -1000, 4181, -1000, 182, 169, 168, 154902, 3305, 156,
	3096, 3080, -140, -1000, 119, -1000, -1000, -1000, -1000, -1000,
	-1000, 3077, 3992, -1000, 2253, -1000, 141981, 141981, -1000, 141981,
	-1000, 29011, 141981, 3255, 1410, -1000, 1042, 2902, 628, 60271,
	1268, 113022, 1059, 3201, 3199, -1000, 4021, 3870, 3130, -191,
	-1000, 141981, 55847, 141981, -196, -199, 2715, -1000, -1000, 1258,
	1402, 55847, 1249, -1000, -1000, -1000, 85808, 626, 2601, 2601,
	-1000, -202, -207, -1000, -1000, -1000, 55847, 1361, 141981, 38055,
	-1000, 4179, 3797, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 141981, 141981, -1000, -1000, -1000, 141981, 3797, 141981, -1000,
	55847, -1000, 160060, 55847, 1344, -1000, -1000, -1000, 4126, 2601,
	29011, 2601, -1000, 2601, 3831, 1307, 92683, 55847, 1731, 69695,
	69695, -1000, -1000, -1000, 2633, 141981, 154902, 113022, 2058, 2058,
	3392, -1000, -1000, -1000, 2917, 2917, -1000, -34, 1075, -1000,
	1871, -1000, 162480, 162480, 2474, 4176, -1000, -1000, -1000, -1000,
	2901, -1000, -1000, -1000, 141981, 2895, 3135, 66566, 625, 624,
	141981, 1063, -1000, -208, 94528, 1046, 1044, -1000, 74667, -1000,
	-1000, -1000, -1000, 573, 3991, -1000, 3016, 3988, -1000, 4125,
	621, 618, 141981, 2614, 617, 29011, 3780, 871, 93298, -1000,
	3618, 2183, -1000, 2741, 141981, 3776, -1000, 2989, 613, 1062,
	612, 1062, -1000, -210, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1555, 1073, -35, -1000, 1031, 1028, -1000,
	-1000, -1000, -1000, 113022, 113022, 55847, 55847, -1000, 10738, 10738,
	10738, -1000, 392, -1000, -1000, 2564, 3855, -1000, -43, 156294,
	156222, 433, 60271, 85808, -216, -1000, -1000, 141981, 162480, -49,
	-1000, 162480, 611, 609, 546, -1000, -1000, -1000, 808, 807,
	-1000, -1000, -1000, -1000, 4174, -1000, -1000, -1000, 154902, 154902,
	154902, 4173, -1000, 154902, 154902, 154902, -140, 154902, 154902, 1981,
	1960, -1000, 123491, 141981, -1000, -1000, 1806, 2121, -1000, -1000,
	141981, 2743, -1000, -1000, -1000, 1077, 55847, 7946, 60271, 608,
	55847, -1000, 607, 605, 3980, 3703, -1000, 3003, 3288, 2243,
	66566, -1000, 3784, -1000, 155637, -1000, 1222, 2271, -1000, -1000,
	-1000, -1000, 162480, 60271, 3831, 66566, -1000, -1000, 602, 589,
	162480, 588, 892, 3302, -1000, -1000, -1000, -1000, -175, -175,
	-1000, -1000, 162480, 119, 162480, 586, 3942, -1000, -1000, -1000,
	-1000, 2601, 113022, -1000, 162480, -1000, -1000, -1000, -1000, 891,
	-1000, -1000, -1000, 1343, -1000, -1000, -1000, -1000, -1000, 4172,
	3300, 99460, -1000, -223, 2325, 85808, -1000, 1046, -1000, -1000,
	2637, 582, -1000, 1058, 2800, 2800, -226, 66566, 66566, -229,
	2597, 3015, -1000, 384, 3978, 1044, -1000, 4061, -1000, 1138,
	-1000, 3975, 119, 3730, -1000, 119, -1000, 4122, 66566, -1000,
	113022, 66566, 2609, 2423, 2863, 93298, -1000, 2877, -1000, -1000,
	-231, 141981, 2183, -1000, -1000, 92683, -1000, -1000, 4068, -1000,
	2758, -1000, 141981, -1000, 141981, -1000, -1000, -232, -234, -1000,
	2489, 55847, 37423, -1000, -1000, 433, -237, -1000, -57, -1000,
	3961, 57743, 4168, 4167, 4166, -1000, -1000, -1000, -272, -272,
	-272, -1000, -140, -140, -140, -140, -140, 141981, 141981, -1000,
	2238, -1000, 2740, -1000, -1000, 3482, -1000, 3220, 581, 155565,
	7946, 2843, 141981, 155520, 2407, 2407, -1000, 3959, 3285, -1000,
	-1000, 2456, 577, -1000, -1000, -1000, -1000, 910, 141981, 1058,
	3217, 113022, 7946, 1227, -239, 2472, 2472, 55847, 36791, 2479,
	-1000, 55847, -1000, -1000, 3831, 69695, 154902, -1000, 154902, 2599,
	-1000, 3266, 2836, -1000, 2597, 141981, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1222, -245,
	-246, -1000, -1000, 3815, -1000, 3729, 3026, 119, -1000, -1000,
	-1000, 119, -1000, 4165, 1072, 383, -247, 1226, -248, 113022,
	2324, -1000, 871, -1000, 2880, 1138, 3652, -1000, -254, -1000,
	-1000, -1000, -255, -262, -1000, -1000, 382, 57111, 57111, 57111,
	-77, -116, -1000, 141981, 576, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 155, 154, -1000, -1000, 3453, 1004, -1000, 969,
	2170, 381, 1245, 344, 221, -1000, -1000, -1000, 3130, -1000,
	141981, -1000, -1000, -1000, 1004, 573, -1000, 55847, 1222, -263,
	-1000, 1196, -264, -1000, 1191, -269, -1000, 3296, -1000, -271,
	2601, -1000, -272, 270, 2058, 1071, 3921, 2593, 2836, -1000,
	4120, 93298, -1000, -1000, -1000, 2854, -282, -1000, -1000, 2243,
	1222, 2456, 2697, -1000, 2474, 1063, -1000, -1000, -1000, -1000,
	1222, 572, 2243, 562, 1789, 871, -1000, -1000, 1561, 3780,
	3525, 1548, 1062, -1000, -1000, -1000, 3501, -1000, 61535, 2632,
	2151, 159540, 3501, 3501, -1000, -1000, 154902, 154902, 141981, 1058,
	3885, -1000, 972, 971, 1702, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1138, -288, -1000, 2843, 162480, 1058, -1000,
	2472, 3070, -1000, 2472, 3292, -1000, 2478, -1000, -1000, -1000,
	-1000, 3286, -1000, 2102, 4046, -1000, -1000, 3945, 55847, -1000,
	-1000, -1000, -1000, -1000, -1000, 1058, 141981, 2456, 2243, 1058,
	2123, 2116, 4164, 1046, 2597, 2243, 66566, 2456, 66566, 2445,
	-1000, 141981, -1000, 2423, 1516, -1000, 1876, -1000, -1000, 2124,
	3969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -140, -140,
	-1000, -1000, 884, -1000, 3679, -1000, 1244, 2394, 2394, -1000,
	-1000, 969, -1000, -1000, 559, -1000, 558, -1000, 154902, 2568,
	-1000, -1000, -1000, 162480, -1000, -1000, 1058, 2456, 1138, -1000,
	4161, -1000, 2597, -1000, 2456, -296, 1058, -297, 2523, -1000,
	-1000, -175, 2324, -1000, 1875, 76527, 2147, -1000, -1000, 2552,
	56479, 55847, -1000, 4047, -1000, -1000, 2949, -1000, 3130, 55847,
	55847, 270, 74052, 18414, 1138, 1058, 1408, -1000, 2854, 1058,
	1222, 1138, 2243, 1933, 871, 1789, 76527, -280, -1000, -1000,
	-1000, 162480, -1000, -1000, -1000, -1000, -298, -310, -1000, -180,
	122876, -319, -1000, -1000, -1000, 1408, 1138, -1000, 1155, -1000,
	-1000, 1138, 2243, 1408, 2456, -1000, -1000, 2237, 154902, 2445,
	-280, -1000, 2456, 1337, -315, -1000, -1000, 1408, -1000, 1408,
	2456, -1000, 1058, -1000, 1933, -1000, -1000, -1000, 557, -1000,
	-1000, -1000, 1058, 1138, -1000, 55847, 1138, 1408, -325, 1408,
	-1000, 2456, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5096, 5093, 32, 5092, 5090, 5087, 5086, 5085, 5084,
	5083, 5082, 5064, 5061, 5060, 5058, 165, 5056, 5055, 5054,
	5052, 5051, 5050, 5048, 5047, 5041, 5040, 5039, 5035, 5033,
	5032, 5030, 5025, 5024, 5020, 5015, 5014, 5013, 5012, 5011,
	5010, 5006, 5004, 5003, 5002, 5001, 5000, 4999, 4995, 4991,
	4988, 4984, 4983, 4982, 4977, 4976, 4974, 4973, 4972, 4971,
	4969, 4968, 4966, 4965, 4964, 4963, 4962, 4961, 4960, 4959,
	4957, 4956, 4955, 4954, 4953, 4952, 4951, 4948, 4947, 4944,
	4943, 4940, 4939, 4938, 71, 4933, 4932, 4929, 4926, 4925,
	4923, 4922, 4916, 4915, 4914, 4913, 4910, 4909, 4907, 4903,
	4902, 4900, 4898, 4897, 4896, 4895, 4894, 77, 4893, 324,
	4892, 4891, 4890, 4889, 4888, 4885, 4884, 4882, 4881, 4879,
	4878, 4874, 4873, 4871, 323, 4870, 28, 199, 4869, 4868,
	24, 4866, 4864, 322, 4863, 4861, 4859, 4858, 4857, 333,
	4856, 4855, 4854, 4850, 4849, 313, 4848, 4847, 4846, 4844,
	4842, 4841, 60, 153, 4839, 4837, 613, 4836, 4835, 4834,
	4833, 4831, 4830, 4829, 311, 305, 4828, 4826, 4825, 296,
	196, 4823, 319, 4822, 4821, 4820, 4818, 4817, 4816, 4814,
	4813, 4812, 4811, 4810, 4807, 4806, 4805, 4804, 4803, 4802,
	4799, 4797, 4795, 4791, 4790, 4789, 4787, 4786, 4785, 4781,
	4779, 4778, 4777, 4776, 4775, 4774, 4771, 4770, 4769, 4768,
	4765, 4764, 4763, 4748, 4741, 4739, 4738, 299, 252, 188,
	4737, 4733, 4729, 4728, 4726, 4724, 318, 317, 4723, 4722,
	4716, 4713, 4712, 3928, 4711, 4710, 4709, 4708, 4704, 4701,
	4698, 4696, 4693, 137, 9, 63, 4691, 4690, 128, 103,
	101, 95, 121, 113, 4689, 4688, 144, 4679, 157, 138,
	4677, 142, 129, 21, 62, 346, 290, 9245, 288, 4676,
	4675, 4673, 297, 236, 4672, 286, 4670, 4668, 4664, 4663,
	4662, 4661, 87, 61, 250, 4659, 167, 4658, 4649, 162,
	205, 217, 214, 209, 208, 355, 66, 114, 98, 73,
	55, 20, 83, 257, 26, 251, 5, 6, 306, 4647,
	303, 10, 169, 14, 42, 4645, 4643, 4641, 4640, 4164,
	151, 4639, 312, 289, 197, 4637, 4636, 4635, 308, 4634,
	4633, 81, 287, 221, 109, 124, 115, 155, 4632, 187,
	202, 39, 4631, 259, 100, 4630, 4629, 119, 118, 11214,
	5784, 4628, 4626, 140, 86, 178, 6998, 279, 266, 247,
	131, 154, 194, 193, 4625, 132, 4622, 175, 181, 211,
	179, 4619, 112, 4616, 3971, 94, 216, 184, 6761, 4615,
	4614, 4608, 97, 4601, 126, 4599, 4598, 78, 22, 2,
	1, 170, 47, 45, 3, 4597, 34, 149, 56, 35,
	4594, 36, 4593, 4592, 4591, 4584, 54, 4583, 57, 212,
	4582, 4581, 325, 4580, 123, 67, 70, 4579, 256, 272,
	4575, 282, 156, 4571, 4569, 227, 243, 239, 218, 261,
	4568, 46, 283, 4567, 4565, 4564, 4561, 4559, 328, 168,
	8, 158, 4558, 4557, 180, 4555, 69, 291, 238, 4554,
	74, 4552, 4551, 210, 75, 176, 326, 203, 270, 147,
	265, 223, 276, 4550, 4549, 4548, 231, 4540, 4538, 267,
	198, 4537, 4536, 271, 331, 105, 50, 7, 207, 93,
	285, 96, 235, 192, 4535, 241, 174, 4533, 177, 4532,
	107, 4529, 327, 213, 258, 48, 13, 18, 122, 133,
	4526, 15, 281, 191, 245, 145, 4524, 8833, 3223, 3267,
	275, 4523, 183, 150, 89, 152, 190, 314, 104, 4522,
	4518, 4087, 4517, 4516, 4514, 4511, 224, 4510, 4509, 254,
	189, 200, 4508, 172, 229, 4505, 125, 90, 58, 33,
	148, 108, 330, 146, 274, 195, 301, 4503, 4502, 4501,
	226, 4499, 82, 135, 244, 4498, 237, 309, 76, 4497,
	130, 4494, 182, 2615, 80, 185, 4493, 277, 4492, 4491,
	4489, 4486, 4485, 4484, 4483, 4482, 280, 4481, 4480, 4479,
	52, 234, 4478, 233, 230, 215, 72, 65, 232, 106,
	2774, 127, 2573, 240, 64, 4, 4476, 116, 4475, 3037,
	92, 4474, 0, 16044, 11471, 14978, 4473, 4472, 15241, 4471,
	4751, 4470, 4469, 4468, 262, 91, 4467, 4466, 4465, 139,
	4464, 99, 4463, 4462, 84, 4461, 37, 23, 27, 40,
	38, 304, 204, 4459, 4457, 160, 163, 11, 4456, 321,
	273, 4455, 4454, 4453, 4452, 111, 4451, 53, 4450, 51,
	4448, 4447, 59, 16, 41, 4446, 4445, 246, 186, 3869,
	201, 173, 4444, 143, 4443, 4441, 294, 102, 159, 4440,
	4439, 300, 249, 253, 110, 4438, 302, 4437, 242, 4436,
	85, 30, 4433, 4432, 293, 136, 134, 68, 295, 161,
	49, 4430, 4429, 4426, 4423, 225, 4422, 4421, 4419, 4418,
	4416, 141, 171, 4414, 79, 4413, 4410, 4409, 44, 260,
	222, 4408, 31, 4407, 4405, 4402, 264, 268, 307, 220,
	255, 4398, 4397, 206, 4396, 4393, 4392, 310, 4389, 4387,
	3943, 315, 4385, 43, 4384, 4383, 4382, 17, 4380, 4378,
	248, 3641, 4376, 4373, 19, 4372, 228,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	671, 671, 671, 672, 672, 673, 673, 673, 28, 56,
	58, 58, 478, 478, 21, 22, 22, 22, 22, 674,
	674, 674, 674, 41, 29, 57, 34, 34, 34, 34,
	34, 246, 246, 246, 246, 27, 27, 52, 52, 292,
	292, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 670, 670, 294, 294, 293, 279, 279, 280, 280,
	281, 281, 675, 675, 295, 295, 295, 296, 296, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 564,
	564, 564, 595, 595, 595, 595, 597, 597, 722, 722,
	723, 723, 723, 723, 723, 155, 155, 452, 452, 452,
	72, 72, 72, 72, 72, 660, 660, 248, 248, 248,
	250, 250, 249, 249, 249, 249, 249, 249, 249, 249,
	96, 96, 97, 97, 287, 287, 286, 286, 286, 286,
	286, 286, 286, 681, 681, 680, 718, 718, 679, 679,
	682, 682, 682, 247, 247, 247, 93, 93, 114, 114,
	151, 151, 151, 151, 151, 151, 151, 151, 152, 152,
	153, 153, 691, 691, 691, 251, 251, 251, 253, 253,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 258, 19, 19, 134, 134,
	134, 134, 134, 134, 134, 129, 129, 599, 599, 600,
	600, 242, 242, 243, 243, 243, 243, 244, 244, 245,
	245, 245, 87, 87, 255, 255, 257, 257, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 78, 78,
	85, 85, 85, 85, 85, 85, 85, 85, 219, 219,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 92, 92, 92, 92, 92, 103,
	103, 692, 692, 693, 693, 711, 697, 697, 698, 698,
	701, 701, 701, 702, 702, 702, 702, 702, 710, 710,
	710, 710, 710, 704, 703, 705, 705, 706, 706, 708,
	708, 708, 708, 708, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 696, 712, 713, 713, 714, 714, 715, 715, 715,
	122, 122, 122, 717, 717, 716, 716, 699, 699, 700,
	700, 67, 707, 707, 725, 725, 68, 69, 70, 71,
	694, 694, 724, 724, 724, 724, 724, 724, 724, 724,
	724, 724, 724, 724, 724, 724, 724, 724, 724, 726,
	726, 727, 727, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	104, 104, 410, 410, 373, 373, 105, 105, 105, 106,
	106, 107, 107, 89, 89, 89, 657, 657, 658, 664,
	729, 729, 555, 555, 554, 554, 109, 109, 451, 451,
	110, 110, 110, 110, 110, 110, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 120, 120, 120, 120, 120, 121, 121, 121, 118,
	118, 118, 115, 115, 115, 113, 113, 113, 119, 119,
	119, 663, 359, 359, 117, 117, 117, 116, 116, 116,
	426, 426, 427, 429, 428, 123, 123, 123, 123, 374,
	124, 124, 124, 124, 124, 124, 124, 124, 127, 127,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 557, 557, 5, 5, 285, 285, 284,
	284, 284, 284, 6, 6, 6, 290, 290, 289, 288,
	125, 125, 125, 519, 519, 130, 130, 130, 467, 467,
	131, 131, 131, 131, 131, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 667, 667, 419, 419, 322, 322, 322,
	322, 143, 143, 143, 143, 144, 144, 144, 144, 145,
	145, 228, 228, 161, 161, 161, 161, 160, 160, 160,
	160, 160, 160, 160, 160, 79, 79, 79, 80, 80,
	81, 81, 82, 82, 83, 83, 84, 84, 84, 84,
	84, 164, 164, 33, 33, 33, 33, 165, 165, 719,
	719, 167, 163, 163, 163, 163, 163, 163, 163, 162,
	162, 166, 166, 166, 166, 168, 170, 170, 170, 170,
	170, 169, 169, 169, 169, 169, 171, 171, 589, 589,
	437, 437, 587, 587, 611, 611, 588, 588, 380, 380,
	380, 380, 380, 381, 381, 381, 598, 598, 598, 598,
	598, 598, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 229, 229, 229, 230, 230, 235, 235, 236,
	236, 236, 237, 237, 237, 234, 234, 234, 231, 231,
	232, 232, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 240, 240, 238, 238, 239, 239, 731, 731,
	730, 730, 241, 241, 241, 241, 241, 200, 200, 200,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 438, 438, 203, 203, 203, 187, 187,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 254,
	254, 254, 254, 254, 179, 179, 179, 179, 179, 179,
	179, 179, 180, 180, 180, 174, 174, 189, 189, 189,
	189, 189, 181, 181, 182, 182, 182, 183, 183, 183,
	183, 211, 211, 186, 186, 186, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 175, 175, 175, 175, 191,
	191, 191, 191, 474, 474, 474, 217, 217, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 214, 214, 214, 214, 214, 214,
	683, 683, 684, 684, 684, 207, 207, 207, 207, 207,
	207, 535, 535, 201, 201, 201, 201, 206, 206, 206,
	206, 185, 185, 185, 185, 209, 209, 209, 209, 457,
	457, 198, 198, 198, 199, 199, 199, 204, 204, 216,
	205, 411, 411, 202, 202, 208, 208, 208, 208, 210,
	210, 210, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 177, 177, 177, 177, 178, 178,
	178, 178, 212, 212, 197, 197, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 732, 732, 193,
	193, 193, 192, 192, 192, 192, 195, 195, 196, 196,
	196, 196, 196, 196, 196, 194, 184, 215, 665, 665,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 662,
	662, 662, 662, 662, 666, 666, 135, 135, 135, 135,
	135, 135, 135, 146, 146, 146, 146, 146, 146, 146,
	149, 149, 136, 136, 136, 136, 136, 136, 136, 139,
	139, 137, 137, 137, 137, 138, 138, 98, 98, 98,
	98, 98, 18, 18, 18, 99, 99, 313, 313, 263,
	263, 263, 398, 398, 264, 264, 388, 388, 388, 388,
	259, 259, 260, 260, 261, 262, 262, 100, 100, 733,
	733, 733, 676, 676, 676, 677, 677, 677, 677, 677,
	677, 382, 382, 383, 383, 499, 499, 499, 499, 499,
	386, 386, 386, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 396, 397, 397, 389, 389, 395, 394, 394,
	393, 393, 392, 392, 390, 391, 391, 391, 400, 400,
	399, 402, 402, 401, 498, 620, 620, 622, 622, 622,
	622, 622, 622, 622, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 475, 475, 734, 734, 735, 736, 618, 618, 618,
	619, 614, 614, 615, 615, 615, 615, 615, 384, 384,
	385, 385, 385, 385, 616, 617, 417, 417, 539, 621,
	621, 623, 623, 625, 737, 737, 737, 737, 737, 737,
	738, 738, 738, 497, 497, 496, 496, 495, 495, 408,
	408, 626, 626, 626, 626, 627, 627, 627, 627, 627,
	630, 629, 628, 628, 628, 628, 628, 102, 102, 102,
	454, 454, 453, 453, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 224, 224, 325, 325, 325, 95, 95, 95,
	15, 15, 15, 15, 15, 15, 15, 340, 340, 16,
	16, 16, 16, 678, 678, 678, 101, 101, 101, 101,
	101, 101, 406, 406, 406, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 669, 669, 668, 668, 326, 326, 740, 740, 108,
	108, 108, 108, 108, 108, 108, 108, 558, 558, 559,
	559, 94, 94, 94, 94, 94, 476, 476, 473, 473,
	472, 472, 416, 416, 537, 537, 537, 538, 330, 330,
	331, 331, 282, 282, 282, 477, 477, 477, 36, 35,
	26, 26, 30, 30, 31, 31, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 32, 32, 60, 60, 60,
	60, 61, 61, 61, 61, 64, 64, 65, 65, 59,
	59, 59, 59, 62, 62, 55, 55, 66, 66, 66,
	66, 66, 685, 687, 687, 686, 686, 690, 690, 690,
	690, 690, 690, 688, 688, 361, 361, 689, 689, 720,
	720, 721, 721, 142, 142, 147, 147, 147, 147, 147,
	148, 148, 148, 148, 150, 150, 150, 150, 159, 159,
	220, 220, 220, 220, 220, 220, 220, 73, 73, 86,
	86, 157, 742, 742, 742, 158, 158, 158, 221, 221,
	221, 221, 222, 222, 223, 223, 741, 741, 323, 323,
	492, 492, 493, 493, 743, 743, 494, 494, 494, 494,
	494, 316, 315, 317, 317, 318, 318, 91, 91, 91,
	304, 304, 303, 306, 306, 305, 307, 307, 308, 308,
	301, 301, 601, 601, 310, 310, 310, 311, 311, 297,
	297, 298, 298, 299, 299, 300, 300, 314, 314, 596,
	596, 744, 744, 133, 133, 133, 227, 227, 372, 372,
	372, 485, 485, 485, 409, 409, 337, 337, 491, 491,
	491, 491, 491, 450, 450, 450, 226, 226, 424, 424,
	440, 440, 441, 441, 551, 551, 442, 140, 140, 141,
	141, 156, 156, 267, 267, 265, 265, 265, 265, 265,
	265, 265, 265, 272, 272, 273, 273, 274, 274, 275,
	276, 276, 276, 276, 430, 430, 277, 277, 277, 266,
	266, 266, 268, 268, 268, 268, 268, 268, 268, 271,
	271, 271, 271, 278, 278, 278, 270, 270, 637, 637,
	637, 639, 639, 641, 641, 640, 640, 636, 636, 638,
	638, 739, 739, 456, 456, 456, 405, 407, 403, 403,
	404, 404, 414, 414, 412, 413, 413, 415, 415, 536,
	536, 536, 283, 283, 283, 447, 447, 447, 447, 448,
	448, 481, 481, 479, 479, 479, 479, 480, 480, 482,
	482, 482, 483, 483, 484, 484, 444, 444, 445, 445,
	446, 446, 446, 446, 515, 515, 269, 269, 269, 421,
	421, 421, 422, 422, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 506, 506, 504, 504, 504,
	504, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	541, 542, 542, 423, 423, 543, 488, 488, 489, 489,
	486, 486, 487, 487, 490, 490, 655, 655, 655, 656,
	656, 534, 534, 544, 544, 544, 544, 544, 544, 530,
	530, 531, 531, 532, 532, 533, 533, 552, 553, 553,
	460, 460, 460, 460, 458, 458, 461, 461, 461, 461,
	461, 459, 459, 545, 545, 545, 545, 449, 449, 225,
	225, 546, 546, 546, 546, 547, 548, 548, 549, 549,
	500, 501, 501, 560, 560, 560, 560, 562, 420, 420,
	420, 420, 420, 613, 612, 612, 561, 561, 561, 561,
	561, 561, 561, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 577, 577, 577, 577, 577,
	577, 577, 563, 563, 563, 563, 563, 563, 563, 567,
	567, 567, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 568, 568, 573, 573, 574, 574, 574,
	569, 570, 575, 575, 575, 575, 745, 745, 579, 579,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 565,
	565, 565, 572, 572, 572, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 468, 468,
	470, 470, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 509, 509, 509, 509, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 631, 631, 631, 631, 631, 631, 631, 631,
	511, 511, 634, 634, 635, 635, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 642, 642, 643,
	643, 645, 645, 646, 646, 647, 648, 648, 648, 649,
	650, 650, 644, 644, 651, 651, 651, 651, 652, 652,
	653, 653, 653, 653, 653, 654, 654, 654, 654, 654,
	521, 521, 522, 522, 528, 528, 528, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 379, 379, 378, 327, 327, 327, 327, 327,
	327, 435, 435, 433, 433, 433, 436, 436, 434, 434,
	432, 432, 431, 431, 518, 518, 516, 516, 520, 520,
	462, 462, 578, 578, 578, 578, 578, 578, 578, 578,
	463, 463, 463, 471, 464, 464, 465, 465, 465, 465,
	465, 512, 513, 466, 466, 466, 514, 514, 523, 527,
	527, 526, 525, 525, 524, 524, 502, 502, 503, 503,
	443, 443, 746, 746, 439, 439, 550, 550, 550, 550,
	607, 607, 376, 376, 425, 425, 375, 375, 367, 367,
	368, 368, 368, 368, 418, 418, 529, 529, 580, 580,
	581, 581, 582, 582, 583, 583, 584, 585, 586, 517,
	517, 348, 347, 334, 335, 346, 345, 344, 333, 336,
	341, 342, 343, 338, 339, 355, 354, 353, 302, 309,
	360, 362, 362, 365, 365, 366, 364, 363, 363, 350,
	351, 352, 556, 332, 369, 369, 370, 370, 370, 371,
	371, 371, 371, 328, 328, 329, 329, 356, 356, 357,
	358, 358, 349, 349, 349, 319, 319, 319, 320, 320,
	321, 321, 594, 594, 591, 591, 591, 592, 592, 592,
	695, 593, 593, 593, 593, 590, 590, 590, 590, 590,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 603, 603, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 605, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 610, 610,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 4, 8, 7, 10, 9, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 8, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 4,
	4, 2, 1, 1, 3, 1, 3, 2, 4, 3,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 1, 3, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 3, 3, 3,
	12, 3, 5, 4, 1, 3, 3, 3, 3, 2,
	4, 4, 4, 1, 1, 2, 1, 4, 1, 0,
	3, 3, 0, 4, 6, 0, 6, 4, 4, 4,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 3, 3, 0, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 12,
	4, 2, 0, 1, 0, 1, 1, 0, 1, 3,
	1, 3, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 0, 1, 2, 2,
	2, 1, 1, 1, 4, 5, 1, 1, 1, 1,
	3, 3, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 1, 2, 1, 1, 3, 0, 1, 4, 0,
	4, 6, 3, 1, 3, 2, 1, 3, 2, 1,
	3, 5, 1, 2, 1, 0, 6, 6, 6, 8,
	1, 0, 4, 3, 3, 4, 3, 4, 4, 4,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 10, 5, 1, 3, 3, 1,
	1, 0, 2, 0, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 4, 3, 1, 2, 3,
	2, 2, 2, 4, 6, 3, 1, 2, 2, 7,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 7, 4, 7, 8, 8,
	9, 11, 11, 11, 6, 2, 6, 9, 4, 7,
	7, 10, 7, 10, 10, 10, 13, 10, 13, 5,
	8, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 4, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 1,
	2, 1, 2, 2, 2, 9, 2, 1, 0, 1,
	1, 0, 1, 2, 0, 2, 2, 0, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 3, 6, 8, 3, 3, 3,
	4, 8, 6, 4, 5, 5, 5, 5, 3, 0,
	1, 1, 1, 1, 4, 4, 3, 4, 4, 3,
	4, 4, 1, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 5, 7, 4, 2, 6, 4,
	3, 2, 3, 4, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 5, 3, 5, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 6, 4, 2, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 7,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 5,
	3, 3, 3, 4, 4, 4, 4, 5, 6, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 5, 6,
	5, 5, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 6, 3, 2, 5, 4, 2, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 3, 2,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 11, 12, 10,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 2, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 1, 2, 3, 0, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 2,
	1, 2, 3, 2, 2, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 15, 17, 3,
	1, 0, 4, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 7, 10, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 3, 0, 1, 3,
	0, 3, 1, 3, 1, 2, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 2,
	2, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 664, -3, -221, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -220, -229, -230, -231, -232, -241, -225, -222,
	-223, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -224,
	-226, -227, 33, 32, 107, 85, 166, 138, 148, 219,
	418, 470, 482, 435, 153, 458, 440, -166, -167, 504,
	-73, -86, -158, -157, 78, 139, 183, 322, 450, 588,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-724, 110, -638, -112, -116, -150, -114, -728, 174, 240,
	-136, -137, -138, 400, -144, -145, 461, -147, -148, -149,
	464, 175, -81, -80, 168, -265, -267, -163, -162, -164,
	-228, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-211, -184, -185, -186, -187, -188, -189, -190, -194, -214,
	-191, -192, -193, -196, -195, -197, -202, -198, -199, -200,
	-201, -203, -204, -206, -207, -208, -209, -210, -212, -213,
	510, -205, -215, -182, -216, 578, 527, 87, 474, 21,
	-8, -9, -10, -11, -12, -13, -14, -18, -17, -66,
	-5, -6, -20, -97, -91, -94, -98, -99, -100, -108,
	-101, -102, -103, -637, -113, -115, -118, -120, -121, -117,
	-119, -122, 459, 635, -268, -266, 661, 640, 595, -179,
	-23, -28, -24, -25, -27, -29, -26, -30, -31, -32,
	-51, -56, -53, -54, -52, -55, -57, -58, -59, -60,
	-61, -62, -63, -64, -65, -35, -41, -42, -36, -37,
	-38, -39, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -21, -22, -34, -67, -68, -70, -69, -71, 622,
	631, -271, -269, -270, -278, 496, 603, 550, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, -374, 2, -350, -356,
	-357, -358, -349, -319, -605, -610, 4, -602, -608, 182,
	250, 360, 21, 22, 24, 23, 25, 26, 27, 28,
	30, 31, 41, 43, 44, 45, 47, 48, 49, 50,
	51, 52, 53, 57, 59, 63, 64, 65, 66, 67,
	68, 69, 73, 78, 79, 84, 85, 86, 87, 88,
	89, 90, 91, 97, 94, 95, 96, 98, 99, 101,
	103, 104, 105, 106, 107, 108, 109, 111, 112, 113,
	115, 116, 117, 125, 126, 127, 128, 129, 131, 138,
	132, 139, 142, 136, 141, 137, 143, 144, 146, 147,
	148, 151, 152, 153, 155, 156, 157, 159, 160, 161,
	163, 164, 166, 167, 168, 171, 169, 172, 170, 173,
	174, 175, 176, 177, 180, 188, 189, 190, 195, 197,
	198, 199, 201, 202, 205, 206, 207, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 220, 224, 226, 227,
	228, 229, 230, 231, 232, 238, 239, 240, 242, 243,
	244, 245, 246, 251, 252, 253, 257, 259, 265, 266,
	271, 267, 272, 273, 275, 279, 280, 281, 282, 283,
	284, 285, 287, 289, 288, 293, 291, 295, 296, 299,
	300, 301, 302, 303, 304, 308, 309, 305, 310, 311,
	313, 314, 317, 315, 318, 319, 316, 320, 323, 324,
	325, 326, 327, 328, 329, 330, 331, 332, 333, 334,
	321, 322, 337, 335, 339, 340, 341, 342, 343, 358,
	353, 354, 355, 347, 348, 344, 349, 345, 346, 350,
	351, 357, 352, 362, 363, 364, 365, 368, 236, 258,
	370, 371, 374, 376, 393, 379, 380, 381, 384, 385,
	388, 391, 392, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 403, 405, 406, 408, 409, 410, 412, 413,
	414, 416, 418, 419, 421, 422, 423, 425, 426, 427,
	428, 429, 430, 431, 432, 434, 435, 437, 436, 438,
	440, 442, 443, 444, 450, 451, 458, 452, 454, 455,
	456, 457, 459, 460, 461, 462, 463, 464, 468, 466,
	467, 469, 470, 472, 473, 474, 475, 476, 478, 480,
	481, 485, 486, 489, 487, 507, 508, 530, 482, 483,
	484, 488, 490, 491, 492, 493, 495, 494, 499, 497,
	498, 500, 501, 502, 504, 506, 509, 510, 512, 513,
	514, 515, 516, 517, 518, 521, 523, 524, 525, 526,
	527, 528, 549, 529, 531, 535, 536, 537, 538, 532,
	533, 548, 540, 541, 542, 543, 545, 546, 551, 552,
	553, 554, 555, 556, 558, 559, 561, 569, 582, 570,
	571, 572, 573, 575, 578, 579, 580, 581, 567, 583,
	584, 587, 588, 589, 593, 590, 594, 591, 592, 595,
	597, 600, 601, 602, 609, 607, 608, 610, 611, 613,
	614, 612, 616, 617, 618, 623, 624, 626, 627, 628,
	37, 54, 55, 58, 60, 62, 74, 75, 76, 80,
	133, 134, 165, 178, 179, 191, 208, 209, 221, 223,
	233, 234, 235, 256, 260, 261, 263, 269, 292, 367,
	369, 386, 390, 407, 411, 415, 417, 433, 477, 505,
	519, 534, 539, 562, 563, 564, 565, 574, 576, 603,
	604, 605, 615, 625, -374, 2, -350, 377, -343, 2,
	-319, -319, 418, 29, 2, 29, 406, 498, 553, 555,
	2, -667, -419, 546, 2, 29, -322, -319, 110, 219,
	496, -343, 2, -667, 219, -419, 26, 546, 2, -319,
	2, 391, 177, 205, 23, 28, 71, 82, 105, 151,
	176, 200, -727, 393, 426, 480, 500, 548, 559, 575,
	2, 608, 314, 497, 550, 250, 128, 580, 488, -678,
	485, 486, 391, 424, 472, 222, 596, -323, 2, 482,
	-319, 314, 2, 664, 101, 79, 477, 501, -169, 2,
	304, 570, -170, -171, -168, 562, -589, 488, 472, 337,
	-319, 664, 664, 664, 29, -332, 2, -319, -332, 2,
	-233, 2, -332, -730, -240, -239, -238, 22, 451, 190,
	285, 203, 241, 342, 421, 201, 51, -233, 2, 550,
	250, 488, 128, 546, -354, 653, -356, -741, 2, 570,
	-741, 2, 664, 664, 2, 550, 397, 608, 497, 205,
	128, 430, 250, 580, 49, 151, 28, 73, 556, 639,
	488, -678, 636, 637, 314, 135, -660, 2, -659, 4,
	-608, -602, -368, -367, 550, 556, 128, -358, -349, 653,
	-357, 664, 664, 664, 664, 2, 272, 273, 428, 427,
	501, 502, 29, 664, 664, 664, 664, 664, 485, 177,
	2, 176, -692, 23, 28, 71, 100, 105, 135, 200,
	393, 426, 500, 548, 552, 559, 575, -677, 529, 73,
	488, -676, -678, 382, 314, 580, 151, -472, 128, 304,
	217, 589, 555, 553, 586, 142, 259, 592, 591, 664,
	664, 664, -127, 2, 661, 33, 32, -126, -130, 153,
	504, -258, 550, 264, 2, -319, 664, 664, 664, 2,
	272, 273, 485, 486, 29, 664, 664, 203, -659, 546,
	2, 664, 664, 664, 2, 29, 272, 273, 485, 486,
	264, 2, 73, 491, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 2, -218, 501, 529, 229, 50, 49,
	79, 29, 425, 84, 398, 129, 135, 160, 581, 220,
	546, 250, 251, 280, 100, 101, -474, 47, 273, 73,
	272, 486, -683, 485, -535, 551, 206, 490, 498, 545,
	91, 285, 482, 570, 572, 110, 597, 473, 628, 430,
	431, 543, 444, 540, 305, 169, 204, 4, 128, 337,
	472, 503, 289, 288, 582, 562, 304, 481, 401, 89,
	664, -739, 2, 550, 570, 2, -741, 2, -741, 2,
	-742, 570, 625, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, -266, -268, -267, 664,
	664, 664, 664, 664, 664, 664, 664, -218, 501, 2,
	79, 29, 29, -412, -414, 585, 262, 162, 383, -265,
	-267, 2, -637, 582, 501, -587, 2, -507, -611, -509,
	651, 652, 644, 547, 72, -378, 359, 629, -521, 135,
	586, 377, -610, -510, -523, 165, 393, 477, -436, 8,
	9, 5, 6, 7, -328, -511, -517, 577, 181, 366,
	-371, 665, 10, 661, -634, -267, -522, 38, 223, 70,
	-591, -370, -329, -563, 263, -369, -349, -631, -632, 4,
	-602, -603, -592, -566, -574, -573, -570, -569, -571, -577,
	-319, -605, 82, 119, 120, 118, 123, 122, 307, 306,
	124, 121, 503, 596, 71, 37, 233, 234, 269, 367,
	235, 80, -633, 152, -604, 260, 261, 519, 55, 433,
	191, 134, 133, 369, 60, 58, 604, -575, 130, 562,
	563, 564, 565, 208, 209, 62, 178, 179, 390, 415,
	539, 574, 576, 221, 292, 46, 114, 204, 255, 237,
	268, 270, 274, 294, 297, 338, 356, 361, 387, 389,
	471, 511, -745, 605, 534, 74, 75, 196, -639, 436,
	-640, -343, -639, 664, 664, 666, 664, -403, -405, -407,
	2, 29, 149, 661, 2, -540, 2, -541, -545, -267,
	286, -544, 661, -542, 659, -350, 378, -635, 478, -631,
	-632, -328, -349, -370, 4, -602, -604, 663, -408, 661,
	128, 488, 550, 83, 250, 100, 176, 205, -467, 661,
	-319, 29, 377, 566, 666, -667, -419, -404, 423, -519,
	661, 377, 380, 203, 380, -667, 64, 98, -717, 233,
	2, -716, -356, 318, 2, 2, 2, 2, 2, 233,
	-319, 550, 127, 284, 2, 2, 2, 2, 2, 2,
	2, -428, 233, 2, -426, -356, 608, -429, 233, 2,
	-426, -427, 233, 2, -426, -473, 2, 93, -333, 233,
	2, -319, -359, 233, 2, -354, -365, 233, 2, -362,
	-319, -597, 233, 2, -595, 4, -602, 124, 503, -507,
	2, -156, 2, 64, -319, 608, 2, 507, 2, 661,
	-169, 2, 76, 570, 46, 501, -170, 2, -493, 2,
	-494, -315, -316, -317, -552, -318, 271, 422, 432, 632,
	140, 359, 628, -719, 203, 643, 566, -587, -587, -587,
	-437, 663, -235, 57, -332, -731, -730, -731, -585, 29,
	-580, 8, -581, 651, 652, -585, -585, -731, -731, 2,
	2, 2, 2, 2, -492, -493, 2, -545, 233, -350,
	2, -347, -590, 4, -602, -608, -603, -609, -605, 29,
	32, 33, 34, 36, 38, 39, 40, 42, 61, 70,
	71, 77, 81, 83, 93, 100, 110, 118, 119, 121,
	120, 122, 123, 124, 135, 140, 145, 149, 150, 154,
	158, 162, 181, 183, 196, 200, 203, 219, 222, 225,
	241, 254, 262, 264, 286, 290, 298, 306, 307, 359,
	366, 372, 377, 378, 382, 383, 404, 420, 439, 465,
	496, 503, 522, 544, 550, 560, 566, 568, 577, 585,
	586, 596, 598, 606, 619, 620, 621, 622, -610, 82,
	2, -545, 233, 2, -353, 233, -545, -356, 2, -716,
	2, -333, 2, -507, -671, 558, 172, 452, 2, -375,
	233, -350, -352, -356, -354, 2, 485, -599, 2, -594,
	10, -593, 5, 4, -602, -608, -603, 2, 2, -507,
	2, -510, 2, -521, 29, -362, 2, -595, 233, 2,
	29, 29, 608, 423, 264, 566, 666, -425, -367, -368,
	-586, 4, 8, -418, -319, 663, -507, 2, -156, -139,
	2, 196, -507, 233, 2, -156, 233, 2, -507, 233,
	2, -156, 233, 2, -319, 2, -679, 2, -718, -599,
	233, 98, 233, -319, 2, 205, -726, 480, 579, 318,
	2, 2, 575, 2, 105, 550, 127, 2, 2, 2,
	2, 2, 2, 2, 550, -338, 2, -319, 196, -554,
	264, -362, 233, -363, 2, 497, -740, 436, -595, 233,
	2, 456, 608, -354, 233, 2, -354, 250, 266, -333,
	233, 2, 555, 553, 555, 553, 203, 2, 264, 2,
	264, 2, -546, 2, -547, -541, -548, 659, 378, -557,
	2, -556, -593, 603, -127, 661, -127, 661, 501, 661,
	-599, -350, -350, -507, 2, -156, -139, 2, -507, 2,
	-156, 2, -319, 2, -153, -599, -152, 661, 203, 597,
	-319, 2, -507, 2, -156, -139, 2, -507, 2, -156,
	2, -258, 196, 2, 128, 550, -218, 2, 196, 598,
	2, 8, 2, 241, -254, -599, 490, 188, 431, 601,
	2, 507, 2, 508, 79, -474, 628, 79, 203, 2,
	203, 2, -457, 2, 622, 423, 203, 2, 2, -665,
	2, 377, 220, 203, 2, 203, 2, 203, 2, 203,
	2, 203, 2, -217, 502, 571, 549, 427, 273, 2,
	-156, 619, -139, 273, 272, -507, 619, 2, -684, 196,
	486, -507, 2, 569, 282, 170, 203, -457, 2, 203,
	2, 203, 2, 203, 2, 5, 2, 43, 428, 530,
	2, 271, 422, 530, 2, 528, 2, -350, 550, 608,
	497, 128, 251, 494, 205, 29, 2, 485, 177, 2,
	2, 94, 95, 203, 2, 203, 2, 218, 203, 2,
	444, 203, 550, -438, 663, -438, 628, 2, -449, -545,
	-492, 566, -412, -414, -218, 507, 2, -272, -447, -274,
	196, -479, -480, -275, 298, 183, 372, -276, -456, 29,
	149, -456, -456, 64, 662, 662, -719, 582, 11, 12,
	81, 43, 651, 652, 653, 654, 194, 655, 656, 649,
	650, 648, 641, 642, 646, 277, 278, 102, 645, 643,
	92, 312, 479, 184, 185, 186, 187, 453, 248, 35,
	249, 14, 15, 16, -378, 34, 382, 297, 629, 237,
	511, 644, 17, 18, 19, 268, 270, 361, 54, 241,
	-327, 393, -377, 547, 72, -507, -507, -507, -507, -507,
	-507, -507, -507, 389, 661, -443, -502, 659, -267, 661,
	661, 661, 661, -586, -267, -507, -521, 662, -434, 661,
	-267, -521, -516, 661, 477, 659, 661, -524, -507, 5,
	5, 5, 661, 663, -642, 623, 196, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 417, -568, 661, -567, 661, -567, -567,
	-579, 609, 661, 661, -565, 661, 631, 624, 661, -565,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 609, 556, 666, -639, -488, 661, 661,
	-439, -550, -507, 653, -439, -439, 377, -431, -507, 114,
	-460, 274, 338, 204, 294, 471, 255, -504, 665, -504,
	-534, 631, -267, -542, -349, -267, -544, 661, -540, -534,
	-128, -586, -109, -124, -133, -156, -172, -226, -227, 653,
	-350, 661, 203, 661, 663, -590, 203, -418, -333, -362,
	-350, -369, -370, -375, -344, -319, 2, 2, 148, -431,
	-661, 580, 488, 29, 4, -608, -602, -368, 497, -367,
	550, 128, 177, 205, -597, -322, 566, 39, -518, -560,
	-561, -613, 665, -612, -563, -572, 407, 411, -592, 263,
	4, -602, -604, 260, 261, 519, 55, 433, 191, 134,
	133, 369, 60, 58, 604, 562, 563, 564, 565, 208,
	209, 62, 605, 534, 74, 75, -661, 580, 488, 29,
	497, 196, -597, 196, 203, -597, 2, -599, 2, -295,
	666, 69, 462, 165, -699, 661, 2, 165, 2, 2,
	2, -319, -295, 165, 666, -428, 233, -295, 165, -295,
	165, -376, 233, -375, -295, 165, -295, 666, 165, -295,
	666, 165, 663, 666, 165, -597, 2, -473, -589, -431,
	39, -493, 2, 135, 4, 5, -743, 666, 296, -381,
	311, 358, 228, 378, 626, 370, 140, -598, 5, 4,
	-517, -529, 135, 304, 263, -580, -582, 9, -583, 651,
	652, -588, -587, 117, 663, -590, -236, 258, 41, -332,
	-332, -731, -731, 8, 8, -731, -731, -332, -332, -292,
	454, 504, 392, -291, 25, 30, 153, 252, 343, 601,
	171, -393, 253, 459, -390, 397, 165, 523, 590, -671,
	-674, 484, 558, 172, 452, 96, 370, 504, 392, 454,
	165, -453, -455, 39, 126, 343, 391, 65, 244, 316,
	317, 527, 460, 615, 165, 504, 392, 454, -707, 454,
	504, 392, -694, -709, 343, 66, 467, 533, 239, 526,
	617, 177, 495, 293, 359, 108, 478, 541, 394, 392,
	-16, -308, 25, 153, -310, -303, 504, 30, -674, 106,
	454, 640, 635, 459, 403, 542, 420, -674, -671, 291,
	-673, 618, 357, -294, 523, 590, -671, -478, -674, 484,
	454, -293, 359, 616, -395, -390, 397, 165, 665, 25,
	153, 454, 504, 392, -722, -723, 30, -586, 2, -290,
	241, -289, 25, -285, -284, 25, 153, 504, 593, -165,
	-145, -164, 459, 504, -165, 2, 454, 392, -668, -340,
	-636, 241, 622, 165, -340, -340, -545, 233, -688, 196,
	2, -681, -152, 287, 5, 10, -599, -152, -425, 666,
	666, -590, 653, 486, 485, 165, 165, 165, 165, 273,
	196, 359, -718, 2, 359, 622, -711, 2, -356, -727,
	2, 2, 2, 2, 2, 2, 2, -350, 233, -410,
	377, -657, -658, -729, 550, -245, 622, -599, 359, 46,
	-353, 233, 2, -356, 608, -668, 359, -676, -355, 233,
	-350, 39, 661, 359, 2, -473, 2, 250, -636, 359,
	-546, -372, -350, -541, -372, 504, -343, 39, -504, -350,
	662, 666, -557, -557, -599, -245, 203, 661, -258, 622,
	622, 273, -553, 666, -552, 241, -600, -599, -153, -599,
	457, 203, 273, -599, -657, -333, 2, -350, 2, 550,
	275, -152, 203, 241, -245, -599, -599, -599, -599, -589,
	29, 508, 2, -217, 502, 571, 95, 508, 2, -350,
	550, 128, 250, 85, -688, 196, 2, -319, -666, 196,
	-662, 472, 488, 580, -661, -666, -350, 128, -350, 128,
	-350, 128, -350, -350, 2, 2, 2, 2, 2, 90,
	2, -156, -507, 2, 90, 2, 49, 524, -684, 196,
	2, 569, 2, 569, 2, -319, -319, -319, -319, 372,
	529, 296, 622, -350, -350, -353, -351, -356, 203, 251,
	-356, 490, 551, 581, 486, 177, -507, 2, 98, -732,
	2, 203, 196, 2, 550, 250, 550, 250, 128, 203,
	79, 128, 29, 203, 550, 483, 663, 4, -295, 666,
	-323, -272, -447, -589, -448, -447, -273, -272, -275, 196,
	432, 591, 343, 509, 279, -480, -479, 29, -507, -484,
	190, 342, -507, -482, -509, 651, 652, -581, -583, -430,
	370, -266, -266, -266, -415, -536, -507, 420, 250, -588,
	-719, -562, -560, -560, -348, -590, 562, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, 297, 237, 511, 54, 241, -507, 566,
	-507, -507, -507, -507, 335, 359, 366, 577, 181, 587,
	149, 370, -746, 544, 42, -514, -267, -435, 661, -528,
	36, 522, 29, -521, 661, 2, -502, -507, -503, -379,
	-377, -319, 651, 652, 653, 654, 655, 656, 641, 642,
	643, 14, 15, 16, 646, 650, 648, 649, 194, 102,
	645, 312, 479, 92, 184, 185, 186, 187, 277, 278,
	17, 18, 19, 35, 644, -432, -431, -431, 662, 606,
	29, 149, 653, 2, 662, 666, 39, 662, -507, -432,
	-520, -516, -431, -527, -526, 619, -468, -469, 627, 321,
	131, 231, 319, -470, 493, -584, 8, -590, 653, -643,
	189, 222, 661, 662, 2, 662, 2, 662, -507, 2,
	662, -507, 2, 662, -507, 2, 662, -507, 2, 662,
	2, 662, 2, -507, -507, -507, -507, -507, -507, -507,
	-431, 8, -584, 661, -584, -584, -584, 562, 562, -584,
	-584, -584, -576, 407, 408, 409, 410, 299, 300, 301,
	302, 411, 412, 413, 414, 327, 328, 329, 330, 323,
	324, 325, 326, 331, 332, 333, 334, 213, 214, 215,
	216, 209, 210, 211, 212, -576, -462, 2, -578, -431,
	4, 627, 321, 131, 231, 319, 493, 5, -462, 2,
	-463, 2, -507, -431, -464, -508, -509, 651, 652, 644,
	-378, -465, 2, -507, -432, -507, 61, 290, 568, -466,
	-507, 203, -431, -431, 2, -431, 2, -510, 2, -640,
	39, -489, -319, -431, -421, 666, 203, 39, -607, 4,
	-606, 44, 66, 108, 137, 144, 177, 239, 257, 267,
	293, 394, 466, 467, 495, 526, 541, 573, 617, 505,
	-421, -421, 661, 662, 666, -461, 226, 315, 310, 266,
	-461, -540, -460, 274, -458, 387, -458, -458, -534, -334,
	659, 668, -590, -534, -531, -530, 39, -343, 384, -534,
	-534, 663, 662, -533, -532, 39, -343, 660, -655, 661,
	664, 664, 664, 664, 664, -350, 661, -431, -590, 663,
	531, 2, 662, 268, 268, 268, 268, 268, 377, 478,
	662, 566, -663, -359, -365, 498, 551, 206, -425, 666,
	-425, -418, 98, -717, 622, -597, -126, 379, 662, 666,
	-420, 38, 659, 663, -584, 2, 2, -469, 661, 203,
	-663, -365, 551, 498, 206, 2, -667, 546, -419, -597,
	566, -716, -717, -700, 662, -702, -710, -695, -704, 241,
	386, 256, 606, -591, -560, 4, -602, -319, 2, -428,
	-356, -295, 165, -429, -427, -295, 666, 165, -333, -354,
	-359, -362, -365, -319, -595, -597, -295, -355, -719, 662,
	570, -494, -380, 432, 521, 455, 499, 546, 9, 9,
	666, -590, -237, 487, 343, -332, -332, -332, -332, 666,
	-720, 100, 566, 83, 661, 488, -312, 305, 566, -498,
	233, 83, -614, 100, -336, -615, -319, 77, 586, 420,
	200, 163, -720, 100, 420, -720, 100, 2, 252, 100,
	504, 529, 661, 29, 64, -545, 43, 43, 29, -672,
	-673, 291, 203, 628, 550, 250, 488, 566, 566, -545,
	-455, -560, 126, 316, 317, 64, -585, -585, 64, -585,
	-585, -585, 622, -585, 622, -353, -545, 488, 566, 566,
	-725, -709, 462, 504, 566, 488, 566, 144, 377, 366,
	495, 137, 267, 293, -529, -529, -319, 566, 442, 540,
	442, 540, 494, -303, -305, -170, 494, 540, 305, 566,
	566, -170, 29, -218, 463, 135, -744, 643, 442, 291,
	-673, 566, 203, 666, 43, 43, 29, -672, 203, 566,
	616, -375, -334, 602, 45, 602, 45, 602, 566, 45,
	488, 566, 666, 45, -287, -286, 504, -289, -599, -288,
	341, -284, -657, -657, -244, -243, -319, 5, -418, 79,
	566, 566, -16, 504, -669, -324, 113, 349, 309, 350,
	104, 346, 103, 345, 111, 347, 112, 348, 610, 362,
	611, 363, 68, 344, 320, 351, 525, 352, 614, 364,
	-325, -326, 156, 399, 600, 128, -595, -16, -16, 504,
	392, 454, 165, -689, 241, 29, -678, 241, -553, 241,
	-553, -367, -319, 663, -156, -507, -507, -156, -507, -156,
	49, 165, 39, 165, 2, 661, 284, 661, -384, 359,
	203, -418, -554, 666, -350, 39, -244, 381, 165, -595,
	-454, -453, 359, -355, 233, 2, 165, -740, -408, 359,
	159, 661, 430, 2, 165, -335, 233, -320, -319, -473,
	-297, 554, 165, -451, 598, -485, -156, 661, 135, 39,
	-485, -440, -441, -551, -442, -336, 661, -343, -504, -127,
	-556, 662, 662, 662, -258, -409, -337, -336, 127, 434,
	434, -251, 622, -152, -153, 662, 666, -553, 241, 532,
	-153, -599, -245, -245, -553, -553, -350, 196, -599, -152,
	-245, -245, -245, -245, 2, 2, 2, 2, -457, -350,
	-333, -375, -350, -361, 241, 29, 663, -597, -597, -365,
	-366, -364, -319, -359, -457, -333, -457, -333, -457, -333,
	-457, -457, -156, -507, 529, 2, 501, 196, 196, 663,
	-457, 663, 8, -411, 465, 5, -350, 203, 2, 99,
	-599, 2, 430, 128, 550, 397, 250, -350, -375, -350,
	-375, -333, 128, -333, 129, 128, -350, 4, -545, -448,
	-273, 378, 279, 509, -482, -483, -509, 477, 478, -483,
	477, 478, 8, 9, 8, 9, -277, 513, 365, -427,
	666, -282, 40, 145, 279, -350, -588, 628, 161, -507,
	-507, 566, -746, 544, -514, 161, -507, 335, 366, 577,
	181, 587, 149, 370, 203, 661, -508, -508, 662, -433,
	-507, -507, 660, 670, 662, 663, 662, -414, 666, -412,
	-507, -431, -431, 662, 663, -431, -418, 660, 660, 666,
	662, -525, -526, 154, -507, 566, 566, 566, 566, 661,
	662, 663, -648, 388, 661, 661, -507, 662, 662, 662,
	662, 39, 666, 666, 666, 662, 666, 666, 666, 662,
	662, 662, 666, -584, 662, 662, 662, 628, 628, 662,
	662, 662, 662, 666, 662, 666, 662, 203, 662, 662,
	-471, 404, 662, 11, 12, 651, 652, 653, 654, 194,
	655, 656, 649, 650, 648, 641, 642, 643, 92, 312,
	479, 14, 15, 16, -378, 268, 241, -508, -508, -508,
	-508, 662, -512, -513, 203, 196, 39, -466, -466, -466,
	662, 203, -431, 662, 662, 661, -641, 314, 359, 662,
	666, 662, -501, -500, 620, -550, -422, 2, -540, -345,
	-590, -501, -501, -431, -507, 274, 274, -459, 598, 377,
	-461, -540, -531, -586, -506, -505, 198, 40, 145, 353,
	354, 355, 236, 199, -531, -343, -488, -531, -531, -590,
	-534, -343, -486, 661, -534, -530, 662, -656, -586, 662,
	-423, -543, -635, -414, 663, -590, -255, -636, -219, 5,
	366, -219, -219, -219, -219, -350, -597, 566, 566, 241,
	241, 241, -425, -418, 26, -687, 622, 405, -560, 659,
	660, 8, -590, -584, -597, 203, 203, 241, 241, 241,
	377, -667, 203, -595, -295, 662, 666, -695, -704, -710,
	-704, 386, 2, -295, -428, -295, -295, -375, -376, -295,
	-295, -295, -452, 622, -587, -493, 584, 88, 432, 562,
	-587, 125, 487, -291, 454, 504, -336, -336, -350, -262,
	-261, -259, -319, 5, -360, -319, 217, 443, -595, 359,
	-498, 233, -296, 359, 233, -344, -560, 661, -475, 624,
	279, 279, 598, -336, -344, 279, 233, -336, 233, -344,
	2, -344, -670, 432, 371, -507, -260, -259, 64, -391,
	303, 430, 360, -292, 454, 504, 392, -156, -156, -156,
	661, -719, 598, 148, -350, -375, -350, -360, -595, -355,
	504, 392, 454, 356, -369, -585, -585, -585, -453, 504,
	392, 454, -360, -595, -353, -319, -360, -595, 377, 366,
	377, 137, 267, -595, -302, 233, -319, 442, -302, 233,
	442, 442, 442, 442, 217, 443, 488, -333, 442, 628,
	48, -744, 566, 203, -507, -507, -293, -156, -156, -156,
	661, -334, -294, -478, 454, 5, 233, -336, 5, -336,
	233, 5, -319, -336, -360, -595, -723, 25, 153, -336,
	666, 283, 264, 622, -680, 204, 485, 437, -290, 643,
	-245, 666, 643, 643, -360, -595, -324, 399, -681, 366,
	5, 10, 594, -333, -668, -340, 488, 566, 566, -545,
	-685, -686, 219, 470, 488, 473, -597, -152, -248, 622,
	-152, -242, 245, 653, -660, -599, -599, -319, -697, -698,
	-701, -702, -319, -382, -385, -383, -336, -499, -498, -618,
	-619, -614, 297, 250, 586, 266, 182, 100, -263, -264,
	624, 622, 165, -373, -350, 659, -245, -658, -555, 182,
	496, 661, -362, -363, 165, -408, 359, -595, 608, 39,
	165, 661, 2, 2, -354, 377, 359, -335, 233, -298,
	155, -744, -333, -501, -422, -450, -491, 465, 377, -409,
	603, -343, -450, -424, 666, 203, 643, 663, -409, -549,
	653, -127, -127, -245, 661, -599, 662, 666, 663, 661,
	643, 643, -253, 381, -252, 157, 281, 265, 515, 516,
	517, 518, 147, 514, 132, 340, 246, 556, 489, 607,
	-553, -599, -251, -153, 203, -553, 241, 203, -82, 622,
	-245, 550, 241, -245, 665, 488, 473, -319, 663, -457,
	-457, -457, 501, 501, -319, -319, 196, -418, -350, 2,
	-346, -590, -333, -350, -347, -375, 196, 196, -333, -333,
	591, -483, 378, 308, -536, -283, 630, -350, 665, -507,
	-507, 161, 161, -507, -508, -508, -507, 161, 203, 661,
	-507, -518, 34, 34, 662, 666, -503, -507, -377, 662,
	606, -414, -414, 662, 653, -590, 665, 662, -516, 158,
	-507, 560, 321, 231, 319, -470, 319, -470, -470, -584,
	5, -590, 653, -649, -339, 661, -319, 620, -413, 383,
	662, -562, -560, -507, -507, -507, -507, -507, -584, 662,
	-565, -565, -580, -580, -507, -512, -507, -562, -560, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, 149,
	359, 370, -508, -513, -512, -507, -507, -560, 662, 662,
	662, -431, -126, 661, 314, -319, -444, 222, -507, -553,
	666, -444, -444, 662, -540, -540, 661, -507, 274, 660,
	666, 669, 643, 643, -488, 663, -530, -486, -487, -490,
	-319, -531, 660, 662, 666, 662, 666, -533, 662, -590,
	-501, -257, -256, 146, 57, 115, 143, 366, 374, 202,
	227, 429, 161, 197, 155, 268, -687, -597, -597, 488,
	488, 488, 380, 219, 5, 8, 659, 660, 663, 662,
	-597, -597, 488, 488, 488, -661, 580, 488, 29, 203,
	-597, -702, -704, -704, -295, -295, 127, 343, -507, -234,
	622, 624, 566, 566, 662, 666, 643, 64, 241, 165,
	359, 600, 359, -615, 163, -620, -507, 661, 250, 661,
	661, 2, -279, -280, -281, 153, 504, 25, -721, 2,
	598, 165, -295, 165, -295, 626, 662, 666, -391, 661,
	661, 566, 488, -312, 566, 622, -431, -507, -246, 135,
	-589, -674, 665, -674, 665, 488, 566, 566, 488, 566,
	566, 176, 257, 366, 359, -319, 165, -319, 233, -744,
	-319, -674, -674, 241, 622, 180, 180, 628, -302, -507,
	-507, 196, 566, 622, -431, 566, -564, 52, 27, 359,
	-354, -295, 165, 566, 566, 580, 504, -286, -599, -152,
	-249, 157, 469, 147, 281, 246, 49, 380, -681, -152,
	-243, -599, -599, -681, -599, 366, -16, -360, -595, -355,
	504, 392, 454, -667, -667, 219, -365, -689, -553, -250,
	381, -249, -553, -248, 203, 264, 622, 662, 666, 135,
	643, 2, 662, 662, 666, 666, -621, -296, -350, -335,
	250, 250, -342, -320, 39, 374, 374, 661, -350, -105,
	622, -552, -586, -341, -319, -439, -244, 46, -353, 39,
	165, -668, -355, -156, -355, -558, -559, 5, 39, -350,
	165, 377, 359, -299, 289, -744, -594, -636, -414, -450,
	-439, 360, 97, 662, -501, -441, -422, -507, 2, 662,
	-599, -245, -258, -337, 2, -600, -599, -599, 666, 661,
	643, 643, 643, 643, 643, 643, 643, -251, -553, -152,
	-251, -153, -156, 381, -350, -152, 653, -360, -361, 653,
	-457, 5, -397, -396, 397, 370, -397, 477, 477, 378,
	190, 285, -282, -334, -507, -507, 161, 34, 34, -507,
	-507, -518, 662, -507, -507, -431, 660, 5, -507, 662,
	662, 8, -507, 662, 663, -650, -319, -507, 662, 64,
	662, 662, 666, 666, 662, 662, 662, 662, 662, 662,
	662, -513, 203, 149, 370, 661, 662, 662, -126, -515,
	225, 64, -540, -515, -515, -459, -418, -540, -505, -334,
	659, -334, 659, -590, 662, 666, -560, -586, -543, 663,
	-256, 643, -599, -599, 2, 2, 5, 5, 429, 359,
	366, 5, -219, -687, -687, 622, -365, -365, -365, 380,
	660, 2, 659, -590, -365, -365, -365, 203, -663, -365,
	551, 206, -597, 127, 196, 230, 230, -336, -336, -261,
	-587, 550, 477, -302, 420, -498, 165, 165, -622, 100,
	-624, 81, 182, 110, 359, 366, 586, 420, 77, 135,
	377, 439, -734, -735, -736, 39, 633, 634, 662, -416,
	-537, -635, 661, -319, -416, -418, 359, 537, 135, 377,
	359, 135, 377, 616, 127, 2, 580, 84, -336, -344,
	-259, -418, -418, -350, -360, -595, 173, 662, 666, 643,
	2, 653, 653, -360, -595, -355, -360, -595, -353, -319,
	257, 165, 603, -302, 165, -302, 603, -302, 395, 180,
	566, -156, -507, 173, 662, -334, 5, 5, 165, -331,
	81, -336, 5, -336, -354, 127, 643, 643, 643, 643,
	643, 31, -681, -243, 622, 488, 566, 566, 377, 377,
	380, -685, -686, -248, 666, 661, -248, -600, -152, 2,
	467, -701, -507, -507, -398, 252, -336, -619, -616, -617,
	420, -499, -623, -625, 182, 420, -386, 661, -335, -320,
	661, -156, 2, -262, 661, -384, 381, 660, 203, 662,
	-595, -454, -156, -355, -408, -406, 622, -408, 662, 666,
	159, -476, 598, -334, -350, 165, -300, 288, -744, -594,
	-297, -481, -479, 150, 661, 377, -156, -414, 643, 662,
	127, 662, -252, -253, -599, -152, -599, -599, -599, -152,
	-599, -251, -691, 39, -553, -83, -84, 250, 100, 402,
	-245, -245, -347, 550, 250, 661, 661, -282, -507, -507,
	-507, 662, -414, -590, 653, -644, 397, 662, -536, -507,
	-507, -508, 203, 661, -518, 662, -645, 621, -507, -445,
	-446, -507, 475, 116, 223, -645, -645, 662, -586, -586,
	-490, -599, 2, 2, 366, 2, 2, 2, 566, 566,
	566, 659, 2, 203, 203, 203, -597, 203, 203, 241,
	241, -156, 241, 39, 442, -498, -344, -344, -348, -341,
	182, 233, 366, 616, -475, 279, 661, -508, 591, -350,
	661, 2, 232, 232, 31, 64, -737, 140, 254, 662,
	666, -538, -330, -319, -507, -538, 662, 662, 366, 591,
	366, 616, -507, 591, -560, 661, -295, -295, 662, 662,
	-507, 566, -589, 107, -587, 2, -674, -302, -418, -418,
	-674, -333, -507, 196, -507, 566, 5, -295, -348, -295,
	-295, -331, 580, -599, -507, 577, 181, -152, -152, 376,
	-360, -595, -355, -690, 551, 498, 581, 490, 206, 476,
	-690, 196, -249, -250, -248, -693, 505, -392, -393, 2,
	-621, 279, -341, 279, 243, 164, -416, 661, 661, -418,
	-733, 622, 662, -382, -263, -106, -107, 567, -552, -664,
	-372, -408, 39, 343, 127, 39, 5, 661, 661, -319,
	377, 661, -334, -314, 98, -744, -594, -298, -450, 360,
	-418, 100, -481, -514, -245, 661, -245, 662, 556, -251,
	666, 29, 661, 29, 661, -350, -375, -431, -431, 662,
	-414, 64, 666, 662, 662, -508, -518, 662, -646, -647,
	-339, 666, 661, 661, 506, 660, 660, 2, -597, -597,
	-597, 2, -597, -597, -597, -597, -597, 488, 488, -302,
	420, -319, -615, -624, -341, 359, -264, 598, 622, -507,
	-508, -321, 661, -507, 661, 661, 39, 135, 254, 141,
	238, -497, -738, 109, 538, 242, -537, -282, 662, -496,
	598, 439, -508, -331, -416, 661, 661, 661, 643, 203,
	-156, 661, -564, -295, -354, 643, 566, 2, 203, -667,
	662, -680, -703, -704, -263, 661, -264, -387, 86, 101,
	136, 232, 207, 251, 529, 535, 29, -387, 662, -416,
	-416, 662, -388, 377, 127, 343, 662, 39, -107, 9,
	-501, 39, -156, 127, -156, -558, -416, -350, -416, 377,
	-304, -303, 298, -594, -299, 662, -344, -450, -600, -586,
	4, -84, -418, -418, 662, 662, -651, 430, 478, 224,
	-431, -415, 662, 666, 39, -446, 2, 2, 2, -687,
	-687, -687, -365, -365, 442, -296, 165, 226, 662, -626,
	313, -319, 662, -454, -454, 39, 141, 238, -394, -390,
	661, -283, -538, -264, 226, -350, -675, 598, 662, -400,
	-399, -396, -402, -401, -396, -431, -587, 107, 395, -431,
	-331, -152, -597, -597, 377, -682, 204, -705, -706, -708,
	39, 284, 573, 621, -709, -388, -417, -539, -336, -496,
	662, 662, 87, 127, -398, -156, -156, 2, -406, 662,
	662, -476, 662, -350, -301, -601, 442, 444, -744, -300,
	-501, 150, 662, 662, 662, 662, -652, -653, 54, 583,
	117, -507, -652, -652, -647, -649, 203, 203, 182, -495,
	631, -627, -630, -629, 638, 512, 204, 396, 662, 537,
	615, 662, 662, -737, -418, -495, -408, -507, -496, 662,
	666, 603, 662, 666, 603, 662, 203, 662, -295, -687,
	-295, -690, -247, 622, 49, -715, -712, 53, 466, -708,
	-696, 5, -594, -313, -312, 662, 666, -497, -496, -394,
	419, 142, 153, -392, -733, -496, 661, -497, 661, -311,
	-310, -744, -580, -314, 150, 360, 591, -245, -654, 163,
	-653, 416, 195, 477, 416, 195, -654, -654, -597, -597,
	-341, -264, 59, -629, 638, -630, 638, 591, 142, -501,
	662, -626, -264, -399, 241, -401, 203, 395, 203, 485,
	-681, 31, 44, -507, -264, -539, -394, -497, -264, 478,
	478, 2, -263, -388, -497, -416, -394, -416, -307, -308,
	-309, -418, -304, 360, 591, 504, 117, 222, 561, 343,
	34, 643, -628, 343, 462, 69, 504, -628, -627, 661,
	661, -597, 381, -714, -264, -394, -501, 2, -388, -394,
	662, -264, 662, -596, 392, -301, 504, -440, 477, 385,
	-653, -507, 24, 366, 135, -737, -431, -431, -295, -244,
	661, -713, 158, -3, -712, -501, -264, -477, 359, 616,
	-313, -264, -496, -501, -497, -306, -305, 494, -744, -311,
	-440, -501, 662, 662, -244, 667, -477, -501, 616, -501,
	-497, -477, -394, -595, -307, -501, -389, -390, 566, 662,
	-477, -477, -394, -264, -306, 661, -264, -501, -431, -501,
	-477, 662, -477, -389,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1758,
	1760, 730, 731, 733, 734, 735, 737, 738, 740, 742,
	744, 745, 746, 748, 749, 751, 752, 753, 754, 755,
	757, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 853, 855, 0,
	1740, 1742, 1744, 1746, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 422, 424,
	426, 428, 0, 460, 462, 463, 465, 467, 468, 470,
	472, -2, 0, 656, 657, 659, 661, 663, -2, 0,
	1316, 1318, 1320, 0, 841, 843, 0, 1323, 1325, 1327,
	0, 0, 865, 866, 0, 1861, -2, 857, 859, 861,
	863, 942, 944, 946, 948, 950, 952, 954, 956, 958,
	960, 962, 963, 965, 967, 969, 971, 973, 975, 976,
	978, 980, 982, 983, 985, 986, 988, 990, 992, 994,
	996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014,
	-2, 1017, 1018, 1019, 1021, -2, 0, -2, -2, 1754,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 74, 76, 78, 601, 603, 605, 607, 609, 612,
	614, 616, 618, 1919, 665, 667, 669, 671, 673, 675,
	677, 679, 0, 0, -2, 1933, 0, 0, 0, 1112,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	149, 150, 151, 152, 153, 154, 155, 156, 93, 94,
	95, 97, 98, 99, 100, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 146, 147, 91, 120, 121, 122, 123, 124, 0,
	0, 1892, 1894, 1896, 1898, -2, 0, 0, 8, 12,
	14, 16, 18, 20, 22, 24, 26, 28, 30, 32,
	36, 38, 40, 42, 1759, 1761, 732, 736, 739, 741,
	743, 747, 750, 756, 758, 760, 715, 716, 719, 2649,
	2667, 2668, 2669, 2672, 2673, 2674, 2675, 2676, 2677, 3211,
	3292, 3293, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827,
	2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857,
	2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867,
	2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877,
	2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887,
	2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897,
	2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907,
	2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917,
	2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927,
	2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937,
	2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947,
	2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957,
	2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967,
	2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977,
	2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987,
	2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997,
	2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007,
	3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017,
	3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027,
	3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037,
	3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047,
	3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057,
	3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067,
	3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077,
	3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087,
	3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097,
	3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107,
	3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117,
	3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146,
	3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156,
	3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166,
	3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176,
	3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186,
	3187, 3188, 3189, 3190, 717, 718, 1510, 0, 799, 797,
	2632, 800, 2960, 802, 804, 650, 651, 652, 653, 654,
	655, 0, 834, 3065, 815, 1931, 835, 837, 838, 839,
	840, 794, 792, 0, 839, 834, 2705, 3065, 832, 1738,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 581, 1573, 1574, 1575, 1723, 1724, 3016,
	1769, 0, 286, 854, -2, -2, 3175, -2, 896, 897,
	-2, -2, 911, 915, 906, 3180, 0, 3019, 3001, -2,
	918, 1741, 1743, 1745, 1022, 1023, 1024, 2653, 1028, 1026,
	1038, 1039, 1042, 0, 1059, -2, 0, 2701, 2983, -2,
	-2, 1060, 1061, -2, -2, -2, -2, 1040, 1041, 0,
	0, 0, 0, 0, 2069, 2070, 2636, 1771, 1763, 1766,
	1764, 1765, 47, 49, 51, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 296, -2,
	-2, -2, -2, 0, 0, 3071, 2764, 2600, 2669, 2603,
	2598, 423, 425, 427, 429, 430, 0, 0, 0, 0,
	0, 0, 0, 461, 464, 466, 469, 471, -2, 0,
	473, 0, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 1382, 1383, 1640, 0, 0, 0, -2, 658,
	660, 662, 720, 721, 0, 1920, 1920, 728, 729, -2,
	0, 0, 0, 0, 384, 375, 1317, 1319, 1321, 1322,
	0, 0, 0, 0, 0, 842, 844, 0, 0, 3065,
	347, 1324, 1326, 1328, 1329, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 858, 860, 862, 864, 943, 945,
	947, 949, 951, 953, 955, 957, 959, 961, 964, 966,
	968, 970, 972, 974, 977, 979, 981, 984, 987, 989,
	991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009,
	1011, 1013, 1015, 1016, 1067, 0, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 1182, 0, 0, 0, -2, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, -2, 0, 1285, 0, 0, 1070, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 0, 1155, 1180, 1181, 1191,
	1020, 0, 1553, 1921, 1771, 1748, 1749, 1750, 1755, 1757,
	1751, 1752, 1753, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 73, 75, 77, 79, 602, 604, 606,
	608, 610, 613, 615, 617, 619, -2, 1890, 1891, 666,
	668, 670, 672, 674, 676, 678, 680, 845, 0, 848,
	0, 1072, 847, -2, 0, 1925, 1925, 1925, 0, 0,
	1891, 1889, 0, 0, 0, 851, 852, 922, 923, 2212,
	0, 0, 0, 0, 0, 0, 0, 0, 2472, 2300,
	0, 924, -2, 2333, 2335, 3149, 2932, 3175, 2471, 2337,
	2338, 2339, 2340, 2341, 0, 2343, 2344, 2345, 2346, 2347,
	2348, 0, 2350, 0, 2355, 2356, 2357, 0, 3156, 2575,
	2663, -2, 0, 0, 3163, 2659, 0, 2438, 2373, -2,
	-2, 2686, 2665, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	-2, -2, 3194, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 0, 3137, 3157, 3158, 3164, 3166,
	3159, 3146, 2398, 2780, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 2171, 2180, -2,
	-2, -2, -2, -2, -2, -2, 3150, 3151, 3169, 3172,
	3179, 3184, 3185, 3155, 3165, 3193, 3195, 3196, 3197, 3198,
	3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208,
	3209, 3210, 2172, -2, -2, -2, -2, 0, 1908, 2976,
	1911, 2017, 1909, 1893, 1895, 0, 1897, 0, 0, 0,
	1902, 1928, 1926, 0, 1977, 1906, 1907, 2000, 2000, 2032,
	0, 2005, 0, 2032, 1920, 2063, 0, 2011, 3006, 2374,
	2375, 0, 2669, 2664, -2, -2, 3191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 795, 0,
	801, 803, 0, 0, 0, 0, 834, 833, 1930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 3157,
	542, 543, 546, 0, 584, 585, 586, 587, 588, 3157,
	0, 0, 0, 0, 594, 595, 596, 597, 598, 599,
	600, 256, 3157, 685, 714, 710, 0, 256, 3157, 688,
	713, 256, 3157, 691, 712, 0, 694, 1638, 256, 3157,
	697, 2628, 256, 3157, 700, 702, 256, 3157, 706, 2643,
	2641, 707, 0, 709, 276, 272, 273, 274, 275, 1734,
	1735, 1736, 1737, 0, 1768, 1639, 856, 0, 882, 0,
	894, 895, 3145, -2, 0, 3030, 899, 900, -2, 902,
	1772, 1776, 1777, 1778, 1779, 1780, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 889, 890, 909, 910, 916,
	919, 0, 1031, 1027, 1043, 0, 1058, 0, 1059, 1059,
	2617, 2608, 2609, 0, 0, 1059, 1059, 0, 0, 1062,
	1063, 1064, 1065, 1066, 1762, -2, 90, 0, 3157, 2063,
	92, 0, 2622, 2695, 2696, 2697, 2698, 2699, 3192, 3212,
	3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222,
	3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232,
	3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242,
	3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252,
	3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262,
	3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272,
	3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282,
	3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3194,
	96, 0, 3157, 101, 0, 3157, 0, -2, 125, 561,
	126, 0, 148, 0, 176, -2, -2, -2, 157, 0,
	3157, 0, 2597, -2, 0, 268, -2, 0, 785, 387,
	388, 2682, 2683, 2691, 2692, 2693, 2694, 376, 377, 0,
	776, 0, 885, 2472, 0, 0, 1354, -2, 0, 1566,
	1568, 1568, 0, -2, 0, 0, 0, 1305, 2594, 2599,
	1306, 1307, 2618, 1308, 2604, 0, 431, 432, 433, 434,
	435, 0, 436, 3157, 438, 439, 0, 441, 442, 3157,
	444, 445, 0, 447, 0, 449, 0, 311, 328, 326,
	3157, 0, 3157, 475, 478, 0, 582, 0, 579, 0,
	563, 564, 0, 566, 0, 0, 0, 571, 572, 574,
	575, 576, 577, 578, 0, 623, 621, 2633, 641, 401,
	0, -2, 3157, 0, 1351, 0, 0, 1618, -2, 0,
	1559, -2, 0, 1625, 3157, 1621, 0, -2, 0, 1918,
	3157, 1789, 1386, 1387, 1388, 1389, 2077, 647, 0, 1825,
	0, 1827, 0, 1847, 2071, 2000, 0, 0, 2076, 0,
	-2, 773, 2652, -2, 723, 0, 724, 0, -2, 0,
	401, 0, 0, 1332, 1334, 1335, 1337, 1338, 1341, 1342,
	1343, 1344, 0, 1346, 2049, 348, 350, 0, 0, 0,
	0, 1331, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 0, 641, 867, 0, 0, 1068, 1069, 0, 0,
	1087, 1088, 1089, 0, 0, 401, -2, -2, -2, -2,
	1098, 0, 1106, 1109, -2, 0, 0, 0, 0, 1116,
	0, 1121, 1122, 1123, 0, -2, 0, 1130, 1132, 1315,
	1135, 0, 1315, 0, 1137, 0, 1141, 0, 1144, 0,
	1146, 0, 1148, -2, -2, -2, 1156, 1157, -2, 1162,
	-2, 0, 1166, -2, 0, 1169, 0, 1172, -2, 0,
	1182, 1178, 1179, 0, 0, 0, 0, 1199, 1200, 0,
	1204, 0, 1213, 0, 1216, 1217, 1218, 0, 0, 1223,
	1224, 0, 1226, 1227, 1228, 1230, 1231, 1232, 0, 3104,
	3027, 2764, 2841, 3025, 2812, 0, 1243, -2, 2801, 1253,
	1255, 0, -2, 0, 1271, 0, 1275, 0, 0, 1284,
	0, 0, 0, 1071, 0, 1080, 1081, 1082, 256, 2067,
	1747, 0, -2, 0, 846, 0, 850, 1950, 1876, 1873,
	0, 1947, 1948, 1877, 0, 0, 0, 1884, 0, 1923,
	1924, 0, 0, 0, 1863, 1864, 0, 0, 0, 0,
	0, 0, 2477, 2478, 2479, 2480, 2493, 2481, 2482, 2492,
	2490, 2491, 2483, 2484, 2489, 2503, 2504, 2494, 2495, 2485,
	2498, 2496, 2497, 2499, 2500, 2501, 2502, 0, 0, 2508,
	0, 2486, 2487, 2488, 2516, 0, 0, 2517, 0, 2519,
	0, 2509, 2505, 2506, 2507, 0, 2279, 2281, 2583, 0,
	0, 0, 2515, 2510, 2511, 2217, 2218, 2219, 2220, 2221,
	2254, 2258, 2259, 0, 0, 2334, 2580, 2579, 2336, 0,
	0, 2531, 0, 2349, -2, 0, 2472, 2526, 0, 0,
	2358, 2359, 2360, 0, 0, 2531, 0, 0, 2574, 2370,
	2371, 2209, 0, 0, 2440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2158, 2157, 0, 2159, 0, 2160, 2161,
	0, -2, 0, 0, 2181, 0, 0, 0, 0, 2185,
	0, 0, 0, 0, 0, 0, 0, 2555, -2, 0,
	0, 0, 0, 2173, 0, 0, 1910, 0, 0, 0,
	1981, 2584, 2588, 2589, 1981, 1981, 0, 0, 2532, 2060,
	2060, 0, 0, 2055, 2055, 2055, 2053, 2032, 0, 2032,
	2042, 0, 2032, 2032, 0, -2, 2005, 0, 0, 2046,
	0, 2026, 761, 763, 765, 767, 768, 769, 771, 2064,
	2065, 0, 0, 0, 0, 2670, 0, 0, 0, 0,
	0, 0, 2655, 0, 0, 2627, 456, 457, 0, 0,
	0, 3084, 3019, 0, -2, -2, -2, -2, 3027, 0,
	0, 2764, 2801, 2812, 806, 836, 0, 1920, 0, 2534,
	2092, 2096, 0, 2098, 2099, 2100, 0, 0, 2093, 2192,
	2687, 2688, 2689, 2152, 2153, 2154, 2155, 2156, 2164, 2151,
	2151, 2151, 2162, -2, 2169, 2191, 2183, 2191, 2187, 2135,
	2136, 2137, 2174, 2175, 2176, 2177, 0, 3084, 3019, 0,
	-2, 0, 818, 0, 0, 0, 1858, 338, 339, 540,
	0, 254, 255, 0, 545, 0, 583, 0, 590, 591,
	592, 0, 681, 0, 0, 256, 3157, 686, 0, 689,
	0, 256, 3157, 2592, 695, 0, 698, 0, 0, 704,
	0, 0, 0, 0, 0, 256, 1860, 0, 0, 0,
	0, -2, 904, 912, 913, 914, 0, 1774, 0, 1781,
	933, 934, 935, 1783, 1784, 0, 1786, 907, 936, 937,
	938, 939, 940, 941, 0, 2606, 2607, 2612, 2613, 0,
	0, 905, 926, 908, 0, 920, 1034, 1029, 1030, 1044,
	1045, 0, 0, 2610, 2611, 0, 0, 1050, 1051, 158,
	1720, 0, 0, 209, 0, 1720, 1720, 0, 0, 0,
	0, 237, 0, 0, 1420, 0, 0, 0, 0, 176,
	194, 205, 170, 171, 172, 0, 0, 0, 0, 0,
	0, 102, 1532, 0, 1535, 0, 0, 0, 0, 0,
	0, 0, 1548, 1551, 0, 0, 0, 0, 555, 0,
	529, 0, 0, 552, 560, 0, 0, 516, 517, 518,
	519, 0, 0, 524, 0, 0, 0, 0, 530, 0,
	128, 129, 0, 0, 134, 135, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 1822, 0, 184, 176, 0,
	0, 175, 177, 160, 0, 0, 176, 180, 195, 207,
	0, 243, 0, 183, 245, 1417, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 278, 0, 0, 313, 783,
	0, 786, 0, 775, 777, 641, 641, 0, 0, 883,
	887, 888, 0, 0, 884, 886, 0, 0, 1560, 0,
	0, 0, 1917, 0, 0, 0, 0, 3157, 1718, 0,
	1701, 0, 2049, 2860, -2, -2, 348, 2049, 1304, 0,
	0, 2670, 2602, 0, 0, 0, 0, 0, 0, 448,
	0, 0, 0, 337, 0, 0, 0, 480, 485, 0,
	573, 562, 565, 567, 568, 569, 611, 1479, 3157, 0,
	0, 645, 636, 0, 640, 0, 0, 644, 0, 0,
	1531, 3157, 1529, 2637, 0, 1557, 0, 1617, 1510, 3157,
	2635, 0, 0, 0, 1626, 2679, 1635, 1639, 1810, 0,
	649, 0, 1828, 1830, 0, 0, 2072, 0, 2074, 2000,
	1920, 0, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 1345, 357, 0, 2048, 0, 0, 389, 2049, 348,
	2989, 0, 1330, 401, 401, 2049, 869, 2049, 871, 0,
	0, 1090, 0, 0, 1093, 401, 401, 401, 401, 1104,
	1105, 1107, 1108, -2, -2, -2, -2, 1110, 1111, 1210,
	0, 0, 0, 1209, 1716, 0, 1126, 1129, 1133, 0,
	1288, 3001, 3019, 3084, 1313, 1134, 1210, 2764, 1210, 2764,
	1210, 2764, 1210, 1210, 1150, 1194, 1206, 1161, 1168, 0,
	1163, 1167, 1170, 1173, 0, 1175, 1183, 0, -2, 0,
	1186, 0, 1188, 0, 1190, 1210, 1202, 1211, 1214, 0,
	1222, 1225, 0, 1233, 1234, 1235, 1236, 2650, 0, 0,
	1239, 1240, 1241, 1242, -2, 0, 1246, 1247, 0, 0,
	1262, 1267, 1268, 1264, 0, 0, 0, 0, 0, 0,
	1278, 1279, 0, 0, 0, 1287, 0, 1083, 1552, 0,
	1756, 1950, 1876, 849, 1867, 1949, 1868, 1875, 1878, 0,
	0, 1880, 0, 1882, 0, 1945, 1946, 1953, 1954, 0,
	1964, 1965, 1957, 0, -2, 0, 0, 1960, 1961, 1886,
	0, 1903, 1904, 1905, 1934, 1937, 1654, 0, 3292, 892,
	0, 2213, 2087, 2214, 2215, 2621, 0, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, -2, -2, -2,
	-2, -2, -2, -2, -2, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, -2, -2, -2, 2255,
	2256, 2257, -2, 2518, 2520, 0, 2583, 0, -2, 0,
	-2, -2, -2, -2, 2276, 0, 2278, 2283, 2285, 2287,
	0, 0, 0, 0, 2582, 2297, 2566, 2567, 0, 0,
	2474, 2475, 2476, 2282, 0, 2301, 2581, 2578, 0, 0,
	2512, 0, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 0, 2530, 1933, 2362, 0,
	0, 0, 0, 2369, 2354, 2528, 0, 2527, 0, 0,
	0, 2538, 0, 2573, 2569, 0, 2619, 2208, 2195, 2196,
	2197, 2198, 2199, 2200, 2210, 0, 2616, 2656, 2662, 2448,
	0, 0, 0, 2399, 2400, 2401, 2402, 2403, 0, 2405,
	2406, 0, 2408, 2409, 0, 2411, 2412, 0, 2414, 2415,
	2416, 2417, 2418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 0, 0, 2420, 0, 2541,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2422,
	0, 2424, 2532, 2552, 0, 0, 2302, 0, 0, 0,
	0, 0, 2427, 2532, 2560, 0, 0, 0, 0, 0,
	2532, 0, 2565, 0, 2434, 0, 2436, 1113, 1114, 1912,
	0, 0, 2018, 0, 2082, 0, 0, 0, 2587, 2590,
	2591, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126,
	3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136,
	2082, 2082, 0, 1976, 0, 0, 2056, 2057, 2058, 2059,
	0, 0, 2060, 0, 2050, 2054, 2051, 2052, 2042, 1997,
	0, 0, 2623, 2042, 2003, 2041, 0, 2017, 2031, 2042,
	2042, 0, -2, 2007, 2045, 0, 2020, 2032, 0, 0,
	762, 764, 766, 770, 772, 0, 0, 1933, -2, 0,
	-2, 403, 1509, 0, 0, 0, 0, 0, 0, 796,
	798, 0, 0, 701, 0, 0, 0, 0, 1294, 0,
	1296, 1297, 0, 1299, 0, 1704, 790, 0, 793, 0,
	2083, 2086, 0, 0, 2097, 2101, 2102, 2193, 0, 0,
	0, 0, 0, 0, 0, 831, 0, 3065, 0, 829,
	0, 544, 256, 0, 548, 549, 0, 0, 497, 498,
	499, 500, 502, 2690, 503, -2, -2, 0, 593, 256,
	711, 683, 0, 256, 256, 692, 0, 0, 256, 703,
	256, 2644, 256, 2642, 277, 708, 1859, 289, 0, 891,
	0, 1773, 1782, 0, 930, 0, 932, 0, 2614, 2615,
	0, 921, 0, 1032, 0, 1046, 1047, 1048, 1049, 0,
	0, 0, 0, 1719, 0, 0, 1664, 0, 0, 213,
	3157, 0, 258, 0, 0, 1472, 2629, 0, 1462, 0,
	0, 2788, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	173, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 1534, 1536, 1543, 1545, 0, 1539, 1540, 0, 1542,
	1544, 1546, 0, 1549, 0, 0, 0, 0, 0, 0,
	551, 553, 554, 529, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 525, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 136, 140, 1569, 3025, 0, 0, 0,
	0, 1570, 1571, 1572, 1798, 1799, 0, 1821, 1822, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	182, 0, 2596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 314, 0, 787, 0, 788,
	0, 778, 401, 780, 781, 397, 394, 396, 782, 0,
	0, 0, 1562, 0, 1613, 1611, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 0, 0, 0, 0, -2, 1564, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 0,
	392, 2595, 2605, 0, 1339, 1340, 437, 440, 443, 446,
	295, 0, 0, 0, 477, 487, 0, 1392, 1364, 0,
	0, 622, 401, 641, 643, 0, 399, 2935, 2648, 1349,
	1527, 1530, 0, 1510, 3157, 1581, 0, 0, 0, 0,
	0, 0, 0, 1624, 0, 0, 3157, 2624, 2678, 2679,
	1812, 1822, 0, 2082, 0, 1845, 1831, 0, 0, 0,
	1845, 1849, 1850, 1852, 1853, 0, 0, 2073, 2079, 722,
	774, 1920, 1920, 401, 0, 0, 1834, 1836, 0, 0,
	0, 340, 0, 351, 2049, 349, 0, 357, 0, 0,
	2049, 348, 0, 635, 868, 873, 401, 0, 0, 401,
	1094, 1095, 1096, 1097, 1152, 1196, 1208, 1266, 1115, 1117,
	1118, 1119, 0, 1124, 0, 0, 0, 1314, 1309, 1310,
	1311, 2645, 2641, 1312, 1136, 1210, 1139, 1210, 1142, 1210,
	1145, 1147, 1165, 1171, 1184, 1177, 1185, 0, 0, 0,
	1198, 0, 0, 1220, 0, 1229, 1237, 0, 1245, -2,
	1250, 1251, 0, 0, 0, 0, 0, 0, 0, 1272,
	1273, 1274, 1276, 1281, 1280, 0, 1286, 1084, 2068, 1871,
	1872, 1874, 0, 1883, 0, 0, 1959, -2, -2, 1958,
	1962, 1963, -2, -2, -2, -2, 1879, 0, 1888, 1885,
	0, 1944, 1652, 1653, 0, 0, 893, 0, 0, -2,
	-2, 0, 0, 0, 2298, 0, -2, 2277, 2280, 2284,
	2286, 2288, 0, 0, 0, 0, 0, 0, 2521, 0,
	2523, 2299, 2576, 2579, 2514, 0, 2470, 0, 0, 1932,
	1933, 1933, 0, 2368, 0, 2529, 0, 2536, 2537, 0,
	2361, 0, 2570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2372, 0, 0, 0, 0, 2404, 2407, 2410,
	2413, 0, 0, 0, 0, 2393, 0, 0, 0, 2397,
	2163, 2149, 0, 0, 2166, 2170, 2191, 2189, 2190, 2184,
	2191, 2188, 2139, 0, 2138, 0, 2419, 0, 2421, 2423,
	0, 0, 2425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2305, 2306, 2307,
	2327, 2426, 2558, 2559, 0, 0, 0, 0, 0, 0,
	2432, 0, 2564, 2433, 2435, 1920, 0, 1913, 0, 2016,
	0, 1978, 1967, 2081, 0, 2585, 2049, 1980, 1982, 2586,
	2626, 1967, 1967, 0, 2533, 0, 0, 2036, 0, 0,
	0, 2038, 2001, 0, 0, 1995, 0, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 2002, 2017, 2040, 2004, 2008, 2656,
	0, 2020, 2044, 0, 2042, 0, 2027, 0, 2029, 2066,
	0, 2013, 2046, 0, 0, 2671, 2082, 0, 450, 458,
	459, 451, 452, 453, 454, 0, 1704, 0, 0, 0,
	0, 0, 1295, 1298, 0, 814, 0, 0, 2535, 0,
	2088, 0, 2094, 0, 816, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 541, 547, 0, 0, 496, 0,
	495, 501, 589, 682, 256, 687, 690, 2593, 256, 696,
	699, 705, 285, 0, 881, -2, 928, 929, 931, 0,
	927, 1037, 1033, 210, 1720, 0, 0, 0, 1660, 0,
	1375, 0, 1370, 1371, 1662, 2640, 1666, 1672, 1675, 0,
	215, 3157, 227, 0, 3157, 0, 1436, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 3157, 256, 3157, 256,
	231, 233, 236, 0, 242, 238, 0, 1372, 0, 1424,
	0, 0, 1427, 159, 1720, 0, 0, 162, 166, 178,
	0, 0, 0, 192, 0, 0, 0, 1677, 1681, 1689,
	0, 0, 0, 1537, 1538, 1541, 1547, 1550, 103, 0,
	0, 0, 1685, 1687, 1693, 556, 557, 558, 0, 0,
	0, 520, 521, 127, 130, 3157, 2638, 0, 132, 3157,
	0, 141, 1822, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 164, 168, 179,
	0, 1695, 161, 181, 0, 271, 0, 0, 261, 256,
	3157, 0, 263, 0, 264, 265, 279, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 784, 0,
	779, 0, 0, 0, 1352, 1353, 1612, 0, 1555, 1556,
	323, 324, 0, 1567, 1561, 0, 0, 0, 0, 0,
	1697, 1698, 0, 0, 0, 1718, 1713, 2049, 291, 0,
	2049, 299, 0, 2601, 0, 327, 336, 474, 0, 486,
	488, 490, 0, 0, 0, 1391, 1490, 1393, 1395, 1396,
	1397, 258, 0, 2679, 1462, 2847, 2679, 0, 0, 1359,
	0, 0, 0, 628, 624, 0, 633, 637, 638, 0,
	0, 0, -2, 0, 0, 0, 0, -2, 0, 0,
	0, 1628, 1622, 1623, 0, 0, 0, 0, 3157, 1814,
	1822, 0, 1918, 1933, 648, 1823, 1845, 0, 0, 0,
	1833, 1829, 1826, 2082, 0, 0, 0, 0, 0, 2075,
	2078, 725, 726, 378, 0, 401, 0, 0, 0, 0,
	0, 0, 355, 0, 358, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 0, 0, 0, 373, 374,
	357, 390, 342, 2049, 0, 357, 0, 0, 870, 0,
	1085, 0, 0, 1092, 0, 0, 1716, 1128, 0, 1138,
	1140, 1143, 1187, 1189, 1210, 1201, 0, 1221, 1238, 1249,
	1256, 2625, 1257, 1414, 0, 1414, 0, 0, 1277, 1283,
	1881, 0, 1956, 1887, 1938, 1939, 0, 1654, 0, 2216,
	2261, 0, 0, -2, 0, 0, 2265, 0, 0, 0,
	-2, 0, 0, 0, 2522, 2524, 0, 2578, 2513, 2363,
	0, 0, 0, 2367, 2351, 2352, 0, 2473, 2539, 2568,
	2572, 0, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 0,
	2620, 2657, 2661, 2446, 2447, 2451, 2634, 0, 0, 0,
	2376, 0, 0, 0, 0, 0, 0, 0, 0, 2165,
	2182, 2186, 0, 0, 2540, 2551, 2553, 2303, 2304, 2308,
	2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, -2,
	-2, -2, 2321, 2322, 2323, -2, -2, -2, 2328, 0,
	0, 0, 2554, 2556, 2557, 2561, 2562, 0, 2429, 2430,
	2431, 2563, 0, 1920, 1914, 2019, 1975, 0, 2080, 1979,
	0, 1975, 1975, 1927, 2034, 0, 0, 2062, 0, 1998,
	0, 1999, 0, 0, 2039, 0, 2006, 2043, 0, 2022,
	2024, 2009, 2010, 2028, 0, 2012, 0, 2015, 2363, -2,
	402, 404, 406, 0, 409, 410, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 805, 1704, 1704, 0,
	0, 0, 807, 0, 791, 0, 0, 2090, 0, 2194,
	820, 822, 0, 0, 0, 0, 3084, 3019, 0, 0,
	819, 550, 493, 494, 684, 693, 287, 0, 2047, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 257, 0, 1471, 0, 1434, 0, 0, 1461, 0,
	0, 1477, 217, 218, 219, 0, 0, 0, 0, 229,
	0, 0, 225, 0, 235, 241, 240, 0, 1421, 0,
	0, 0, 0, 1665, 0, 0, 0, 189, 190, 191,
	0, 196, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 138, 0, 0,
	0, 143, 144, 0, 0, 1804, 1805, 0, 1792, 186,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	1651, 281, 0, 0, 0, 0, 0, 315, 316, 317,
	318, 0, 303, 305, 0, 0, 0, 0, 325, 0,
	398, 393, 395, 1554, 1615, 1616, 1563, 1678, 1682, 1690,
	0, 0, 0, 0, 0, 839, 1717, 0, 299, 297,
	0, 300, 299, 293, 0, 0, 0, 0, 0, 0,
	0, 570, 1362, 1478, 0, 0, 1480, 1398, 1402, 0,
	2679, 2679, 0, 2631, 0, 1360, 0, 0, 1479, 620,
	0, 627, 0, 642, 2630, 0, 0, 0, 1531, 0,
	0, 1558, 1510, 1584, 1510, 0, 1627, 1629, 0, 1637,
	0, 0, 0, 1816, 1822, 0, 1809, 1810, 1952, 1824,
	1843, -2, 0, 0, 1933, 1851, 1848, 1854, 1855, 0,
	0, 381, 0, 1835, 1837, 0, 1333, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 357, 354,
	344, 2049, 385, 0, 401, 401, 1120, 1715, 1125, 2646,
	1197, 1219, 1258, 1413, 0, 0, 1260, 0, 0, 1955,
	1942, 1943, 1940, 1654, 2263, 2267, 0, 0, 0, 2269,
	-2, 0, 2291, -2, -2, 2525, 2577, 2342, 1933, 2364,
	2366, 2353, 2571, 2211, 0, 2453, 2450, 0, 2437, 0,
	2388, 2389, 0, 0, 2392, 2394, 2395, 2396, 2150, 2141,
	2140, 2550, 0, 0, 0, 0, 2428, 1915, 0, 2442,
	0, 0, 1983, 2442, 2442, 2035, 0, 2037, 1996, 1984,
	0, 1993, 0, 2657, 2021, 0, 2025, 2030, 2014, 0,
	407, 0, 411, 412, 413, 414, 416, 0, 0, 0,
	0, 0, 455, 808, 809, 0, 0, 0, 0, 1703,
	2084, 2089, 0, 2095, 0, 0, 0, 0, 0, 0,
	0, 0, 830, 288, 0, 1035, 1036, 211, 212, 1376,
	1374, 1669, 1673, 1670, 0, 214, 0, 0, 1435, 0,
	1438, 0, 0, 0, 0, 1445, 1462, 0, 0, 0,
	0, 0, 0, 1464, 0, 1463, 0, 0, 1494, 0,
	1642, 1649, 0, -2, 0, 0, 0, 221, 247, 0,
	0, 0, 0, 250, 1721, 223, 0, 0, 256, 256,
	1373, 0, 0, 1661, 1663, 1676, 0, 0, 0, 0,
	199, 0, 0, 1679, 1683, 1691, 1686, 1688, 1694, 559,
	515, 0, 0, 133, 142, 1795, 0, 0, 0, 1806,
	0, 185, 0, 0, 0, 1696, 269, 270, 0, 256,
	0, 256, 262, 256, 1651, 0, 0, 0, 0, 0,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 1699, 1700, 290, 0, 0, 292, 391, 299, 476,
	484, 489, 491, 492, 1423, 0, 1490, 1482, 1483, 1484,
	0, 1394, 1489, 1491, 0, 0, 1399, 0, 0, 0,
	0, 1379, 1361, 0, 1392, 1364, 0, 625, 0, 400,
	1350, 1528, 1576, 1510, 0, 1579, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 1818, 1822, 0, 1811,
	1812, 1845, 1951, 0, 0, 0, 1832, 1952, 0, 401,
	0, 401, 359, 0, 360, 361, 362, 369, 370, 371,
	372, 343, 346, 0, 357, 872, 874, 0, 0, 880,
	1086, 1091, 1412, 0, 0, 0, 0, 1941, 2271, -2,
	-2, 2292, 0, 2658, 2660, 1933, 0, 2439, 1935, 0,
	0, -2, 0, 0, 0, 1916, 1899, 0, 1974, 1966,
	1968, 1970, 3004, 2759, 3156, 1900, 1901, 2061, 0, 0,
	2023, 408, 417, 418, 0, 420, 421, 810, 0, 0,
	0, 0, 2091, 0, 0, 0, 817, 0, 0, 0,
	0, 1025, 0, 0, 1671, 216, 0, 0, 1439, 1440,
	1442, 0, 1444, 1446, 1447, 1364, 0, 1451, 0, 2681,
	0, 1456, 1459, 1460, 0, 0, 1473, 1495, 0, 1504,
	0, 1644, 1654, 1648, 0, 1646, 1506, 0, 220, 249,
	222, 251, 246, 0, 1651, 0, 224, 234, 0, 0,
	163, 0, 0, 2752, 202, 200, 198, 131, 137, 139,
	145, 1658, 188, 0, 165, 0, 271, 280, 1650, 282,
	266, 256, 0, 302, 304, 306, 307, 308, 309, 0,
	1680, 1684, 1692, 0, 1707, 1708, 1709, 1710, 1711, 0,
	0, 0, 301, 0, 0, 0, 483, 1364, 1422, 1363,
	1481, 0, 1492, 1364, 0, 0, 0, 0, 0, 0,
	1366, 0, 1365, 0, 0, 626, 629, 0, 632, 2082,
	639, 0, 0, 0, 1583, 0, 1630, 1628, 0, 1636,
	0, 0, 0, 1791, 0, 0, 1813, 1814, 646, 1838,
	0, 0, 1845, 1856, 380, 0, 383, 356, 0, 345,
	0, 876, 0, 878, 0, 1259, 1261, 0, 0, 2365,
	2457, 0, 0, 2390, 2391, -2, 0, 2331, 2441, 2443,
	0, 0, 0, 0, 0, 1985, 1994, 419, 1704, 1704,
	1704, 2085, 824, 825, 827, 821, 823, 0, 0, 1667,
	0, 1674, 258, 1437, 1441, 0, 1448, 0, 0, 0,
	1452, 1514, 0, 0, 1531, 1531, 1465, 0, 0, 1498,
	1499, 1419, 0, 1500, 1501, 1502, 1643, 1944, 1649, 1364,
	0, 0, 248, 253, 0, 0, 0, 0, 0, 0,
	187, 0, 260, 283, 1651, 0, 0, 1712, 0, 0,
	298, 332, 506, 504, 1366, 0, 1493, 1400, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1401, 1506, 0,
	0, 1470, 1377, 0, 1380, 0, 1362, 0, 630, 631,
	634, 0, 1577, 0, 1584, 0, 0, 1637, 0, 0,
	1801, 1790, 1822, 1815, 1816, 2082, 0, 1846, 0, 352,
	353, 875, 0, 0, 1269, 1270, 0, 0, 0, 0,
	2452, 1936, 2332, 0, 0, 1969, 1971, 1972, 1973, 811,
	812, 813, 0, 0, 1668, 228, 0, 1508, 1450, 1519,
	0, 0, 0, 0, 0, 1466, 1496, 1497, 1494, 1418,
	0, 1647, 1645, 1475, 1508, 1510, 226, 0, 1506, 0,
	1428, 0, 0, 1431, 0, 0, 203, 2752, 201, 0,
	256, 789, 1704, 256, 0, 335, 0, 539, 505, 507,
	0, 0, 511, 512, 513, 1358, 0, 1486, 1488, 1504,
	1506, 1419, 0, 1381, 1423, 1379, 1578, 1582, 1580, 1620,
	1506, 0, 1504, 0, 1808, 1822, 1802, 1803, 0, 1818,
	0, 0, 401, 877, 879, 2449, 2469, 2458, -2, 3087,
	2760, 0, 2469, 2469, 2444, 2445, 0, 0, 0, 1364,
	0, 1453, 1515, 1516, 0, 1511, 1512, 1513, 2680, 1454,
	1455, 1457, 1458, 2082, 0, 1505, 1514, 252, 1364, 1425,
	0, 0, 1426, 0, 0, 206, 0, 208, 284, 1702,
	1705, 0, 310, 0, 0, 479, 537, 0, 0, 508,
	509, 531, 510, 1355, 1357, 1364, 0, 1419, 1504, 1364,
	0, 0, 0, 1364, 1366, 1504, 0, 1419, 0, 1797,
	1807, 0, 1817, 1791, 0, 1841, 0, 382, 2454, 0,
	0, 2460, 2461, 2462, 2463, 2464, 2455, 2456, 826, 828,
	1443, 1449, 0, 1517, 0, 1518, 0, 0, 0, 1474,
	1503, 1519, 232, 1429, 0, 1432, 0, 204, 0, 0,
	330, 331, 536, 532, 1485, 1487, 1364, 1419, 2082, 1367,
	0, 1369, 1366, 1378, 1419, 0, 1364, 0, 1820, 1796,
	1800, 2639, 1801, 1839, 0, 0, 0, 2466, 2467, 0,
	0, 0, 1520, 0, 1523, 1524, 0, 1521, 1494, 0,
	0, 256, 0, 1920, 2082, 1364, 1657, 1368, 1358, 1364,
	1506, 2082, 1504, 1794, 1822, 1808, 0, 2082, 2465, 2468,
	2459, 1507, 1522, 1525, 1526, 1476, 0, 0, 1706, 333,
	0, 0, 538, 533, 534, 1657, 2082, 1469, 0, 1656,
	1356, 2082, 1504, 1657, 1419, 1787, 1793, 0, 0, 1797,
	2082, 1842, 1416, 0, 0, 535, 1467, 1657, 1655, 1657,
	1419, 1633, 1364, 1819, 1794, 1840, 1430, 1415, 0, 334,
	1468, 1631, 1364, 2082, 1788, 0, 2082, 1657, 0, 1657,
	1634, 1416, 1632, 1433,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 649, 3, 655, 650, 3,
	661, 662, 653, 651, 666, 652, 663, 654, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 670, 667,
	641, 643, 642, 646, 665, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 659, 3, 660, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 668, 648, 669, 644,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 645, 57984, 647,
	57985, 657, 57986, 658, 57987, 664, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1784
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1810
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1824
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1919
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1942
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1995
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2011
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2066
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2079
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2092
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2128
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2162
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2186
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2195
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2216
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2224
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2260
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2271
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2283
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = false
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2386
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2422
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2430
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2441
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2451
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2461
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2470
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2481
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2487
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2609
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2653
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2663
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2666
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2724
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = true
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = false
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3107
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3115
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3297
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3362
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = nil
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3462
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3535
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3734
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3743
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3749
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3759
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3867
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3953
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4120
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4149
		{
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "CREATE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4164
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4167
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4188
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = true
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = false
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = true
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = false
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4230
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4287
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			return unimplemented(sqllex, "create window function")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4391
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4392
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4526
		{
		}
	case 555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4527
		{
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = true
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = false
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplemented(sqllex, "create access method")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return unimplemented(sqllex, "create cast")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			return unimplemented(sqllex, "create publication")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4588
		{
			return unimplemented(sqllex, "create rule")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			return unimplemented(sqllex, "create server")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4596
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4597
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4600
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4601
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			return unimplemented(sqllex, "drop server")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4713
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4749
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4767
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4798
		{
		}
	case 641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4800
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.str = ""
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4818
		{

			sqlVAL.union.val = nil
		}
	case 646:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "DELETE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4846
		{
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4857
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4882
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "DROP")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4905
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5083
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5122
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5149
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5158
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5182
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5190
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "DELETE")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "INSERT")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "DELETE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "INSERT")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5380
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5413
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5421
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5454
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5505
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{
			return helpWith(sqllex, "GRANT")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5706
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5719
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			return helpWith(sqllex, "RESET")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "RESET")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "USE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5797
		{
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "USE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5865
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5929
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5937
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5945
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5975
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5981
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5990
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			return unimplemented(sqllex, "set from current")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6089
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6106
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.Low
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = tree.Normal
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.High
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6242
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = true
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = false
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = true
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = false
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = false
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6387
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6439
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = int64(1)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = int64(1)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = int64(1)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6495
		{
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6503
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6513
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6535
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.str = "client_encoding"
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6555
		{
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6557
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.str = "timezone"
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6594
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6602
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6615
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6623
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6695
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6734
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6739
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6748
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6754
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6768
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6802
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6831
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6861
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6871
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6884
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6899
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6910
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6923
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6948
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6959
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6964
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = true
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = true
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = false
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7000
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7019
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7046
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7062
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7070
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7114
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7119
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7121
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7125
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = true
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = false
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7140
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7145
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7176
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7204
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7214
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7219
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = true
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = false
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7237
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7258
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7266
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7276
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7287
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7309
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7314
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7319
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7323
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7354
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7359
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7364
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7369
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7374
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7379
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7384
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7417
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7434
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7439
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7450
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7461
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7479
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7487
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7508
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7513
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7518
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7522
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7531
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7545
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7554
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7632
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7642
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7655
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7790
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7837
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7893
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7952
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7954
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7963
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7964
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8003
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8048
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8056
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8067
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8103
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8167
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8182
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8210
		{

			sqlVAL.union.val = nil
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.str = ""
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8226
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = nil
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8249
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8253
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8289
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8302
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8316
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8318
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8373
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8416
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8417
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.str = ""
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8662
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8707
		{

			sqlVAL.union.val = true
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = false
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8721
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8724
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8824
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8852
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8862
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8945
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8948
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9032
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9117
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9126
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9134
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9177
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9185
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9206
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.str = ""
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9291
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = true
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{

			sqlVAL.union.val = true
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = false
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9331
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9345
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9357
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9369
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9380
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9391
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = false
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = true
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = nil
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9538
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9539
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9566
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9568
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9570
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9574
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9609
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9627
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9646
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9663
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9680
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9684
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = false
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = true
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = false
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = true
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = false
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9738
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9744
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9758
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.str = ""
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.str = ""
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = true
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = false
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = false
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9825
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9831
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10056
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10062
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10074
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10080
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10094
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10100
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10159
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = true
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = false
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10223
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.str = ""
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10259
		{
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10262
		{
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10263
		{
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10301
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10322
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10370
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10374
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10375
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10376
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10408
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10419
		{
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10442
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10457
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10461
		{
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10462
		{
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10490
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10505
		{
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10601
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.str = ""
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.str = ""
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10636
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10641
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{

		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10673
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.str = ""
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.str = ""
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.str = ""
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.str = ""
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10728
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10753
		{
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10754
		{
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10908
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10999
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11014
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11158
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11193
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11194
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11195
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11256
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11300
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11316
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = true
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = false
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11369
		{
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11370
		{
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = nil
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11384
		{
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = true
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = false
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = false
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = true
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11413
		{
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11414
		{
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11417
		{
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11418
		{
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11471
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11476
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11502
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11535
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11590
		{
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11591
		{
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11594
		{
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11629
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11630
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11631
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11661
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11663
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11678
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11700
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11731
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11747
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11778
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11820
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11830
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11865
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11876
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11906
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = nil
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = true
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = false
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.str = tree.AstFull
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.str = tree.AstRight
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.str = tree.AstInner
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12120
		{
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12121
		{
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.str = tree.AstHash
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.str = ""
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12195
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12225
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12237
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12247
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = true
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = false
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = true
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = false
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12296
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12309
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12317
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12318
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12336
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12338
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12346
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12359
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12366
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12415
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12425
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12426
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = types.Geography
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12475
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12483
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12511
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12519
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = nil
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = types.Int2
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = types.Int
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = types.Float4
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = types.Float
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12562
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12570
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12578
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = types.Bool
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12592
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = types.Float
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12611
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12617
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12639
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = types.String
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = true
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = false
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = types.Date
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12688
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12696
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12710
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12719
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12727
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12744
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = true
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = false
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = false
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = types.Interval
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12768
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12852
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = nil
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12889
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12897
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12938
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12942
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12957
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13106
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13114
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13144
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13184
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13228
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13236
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13297
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13313
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13335
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13355
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13359
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13363
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13379
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13383
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13387
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13391
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13399
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13403
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13419
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13423
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13427
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13443
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13451
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13465
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13469
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13473
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13487
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13495
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13531
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13535
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13539
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13543
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13547
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13552
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13566
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13570
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13574
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13578
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13587
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13602
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13612
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13617
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13621
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13625
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13629
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13633
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13636
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13647
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13648
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13663
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13672
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13725
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13738
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13750
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13759
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13760
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13779
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13817
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13821
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13825
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13837
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13841
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13845
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13849
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13853
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13863
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13868
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13877
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13886
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13895
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13904
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13909
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13911
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13914
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13919
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13924
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13929
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13938
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13939
		{
			return unimplemented(sqllex, "treat")
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13960
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13965
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13971
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13975
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13992
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13996
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14002
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14012
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14020
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14024
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14028
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14035
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14055
		{
			sqlVAL.str = ""
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14061
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14065
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14071
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14079
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14087
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14095
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14101
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14114
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14142
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14146
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14150
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14154
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14161
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14170
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14174
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14182
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14187
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14200
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14204
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14211
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14223
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14227
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14231
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14247
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14248
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14249
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14250
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14251
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14252
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14253
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14254
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14255
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14256
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14257
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14258
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14260
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14261
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14262
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14263
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14264
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14265
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14266
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14267
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14268
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14269
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14270
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14271
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14272
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14273
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14274
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14275
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14276
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14277
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14278
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14279
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14280
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14281
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14282
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14287
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14312
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14313
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14336
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14340
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14346
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14350
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14354
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14365
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14369
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14375
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14379
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14392
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14402
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14412
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14416
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14422
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14432
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14436
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14459
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14463
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14467
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14473
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14480
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14484
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14501
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14505
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14509
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14513
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14517
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14523
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14529
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14535
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14539
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14543
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14549
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14561
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14568
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14578
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14584
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14588
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14595
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14601
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14605
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14612
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14618
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14627
		{
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14628
		{
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14632
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14642
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14651
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14655
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14659
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14671
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14681
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14704
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14712
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14735
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14744
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14748
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14752
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14756
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14762
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14781
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14785
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14797
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14801
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14810
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14821
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14830
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14838
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14855
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14940
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14948
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14952
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14958
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14968
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14974
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14981
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15008
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15015
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15019
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2658:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15023
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2660:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15037
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15041
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15045
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15058
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15067
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15085
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15098
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15105
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15130
		{
			sqlVAL.str = ""
		}
	case 2680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15136
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15140
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
