// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:667
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11320

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1268,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	213, 190,
	431, 190,
	-2, 0,
	-1, 77,
	202, 1076,
	214, 1076,
	230, 311,
	327, 311,
	336, 874,
	367, 311,
	379, 874,
	416, 874,
	441, 311,
	466, 874,
	-2, 0,
	-1, 83,
	230, 315,
	-2, 0,
	-1, 84,
	118, 1268,
	208, 1268,
	451, 1268,
	452, 1268,
	-2, 0,
	-1, 100,
	133, 1239,
	151, 1239,
	164, 1239,
	211, 1239,
	243, 1239,
	286, 1239,
	296, 1239,
	446, 1239,
	-2, 1210,
	-1, 133,
	141, 760,
	229, 760,
	330, 729,
	384, 729,
	434, 760,
	-2, 0,
	-1, 135,
	4, 1270,
	21, 1270,
	22, 1270,
	23, 1270,
	24, 1270,
	25, 1270,
	26, 1270,
	28, 1270,
	29, 1270,
	35, 1270,
	40, 1270,
	41, 1270,
	42, 1270,
	43, 1270,
	44, 1270,
	45, 1270,
	46, 1270,
	47, 1270,
	48, 1270,
	50, 1270,
	51, 1270,
	52, 1270,
	54, 1270,
	55, 1270,
	56, 1270,
	57, 1270,
	58, 1270,
	62, 1270,
	63, 1270,
	64, 1270,
	65, 1270,
	67, 1270,
	68, 1270,
	69, 1270,
	73, 1270,
	74, 1270,
	75, 1270,
	76, 1270,
	77, 1270,
	78, 1270,
	79, 1270,
	82, 1270,
	83, 1270,
	84, 1270,
	85, 1270,
	87, 1270,
	89, 1270,
	90, 1270,
	91, 1270,
	93, 1270,
	95, 1270,
	96, 1270,
	104, 1270,
	105, 1270,
	106, 1270,
	107, 1270,
	109, 1270,
	110, 1270,
	111, 1270,
	113, 1270,
	114, 1270,
	115, 1270,
	117, 1270,
	118, 1270,
	120, 1270,
	121, 1270,
	124, 1270,
	125, 1270,
	126, 1270,
	128, 1270,
	129, 1270,
	131, 1270,
	132, 1270,
	134, 1270,
	135, 1270,
	136, 1270,
	137, 1270,
	138, 1270,
	139, 1270,
	140, 1270,
	141, 1270,
	142, 1270,
	143, 1270,
	144, 1270,
	145, 1270,
	146, 1270,
	147, 1270,
	148, 1270,
	150, 1270,
	156, 1270,
	157, 1270,
	158, 1270,
	159, 1270,
	163, 1270,
	165, 1270,
	169, 1270,
	170, 1270,
	171, 1270,
	172, 1270,
	173, 1270,
	174, 1270,
	176, 1270,
	177, 1270,
	179, 1270,
	180, 1270,
	182, 1270,
	183, 1270,
	184, 1270,
	185, 1270,
	186, 1270,
	187, 1270,
	188, 1270,
	189, 1270,
	190, 1270,
	192, 1270,
	193, 1270,
	195, 1270,
	196, 1270,
	197, 1270,
	198, 1270,
	202, 1270,
	203, 1270,
	204, 1270,
	205, 1270,
	208, 1270,
	209, 1270,
	210, 1270,
	212, 1270,
	214, 1270,
	216, 1270,
	218, 1270,
	219, 1270,
	220, 1270,
	222, 1270,
	226, 1270,
	227, 1270,
	228, 1270,
	229, 1270,
	230, 1270,
	231, 1270,
	233, 1270,
	234, 1270,
	235, 1270,
	237, 1270,
	238, 1270,
	240, 1270,
	241, 1270,
	244, 1270,
	245, 1270,
	246, 1270,
	249, 1270,
	250, 1270,
	251, 1270,
	252, 1270,
	254, 1270,
	255, 1270,
	256, 1270,
	257, 1270,
	258, 1270,
	259, 1270,
	260, 1270,
	261, 1270,
	262, 1270,
	263, 1270,
	264, 1270,
	266, 1270,
	268, 1270,
	269, 1270,
	270, 1270,
	271, 1270,
	272, 1270,
	273, 1270,
	275, 1270,
	277, 1270,
	279, 1270,
	281, 1270,
	282, 1270,
	283, 1270,
	284, 1270,
	285, 1270,
	288, 1270,
	291, 1270,
	292, 1270,
	293, 1270,
	294, 1270,
	297, 1270,
	298, 1270,
	299, 1270,
	301, 1270,
	303, 1270,
	304, 1270,
	305, 1270,
	306, 1270,
	307, 1270,
	308, 1270,
	309, 1270,
	310, 1270,
	311, 1270,
	312, 1270,
	313, 1270,
	314, 1270,
	316, 1270,
	317, 1270,
	318, 1270,
	319, 1270,
	320, 1270,
	321, 1270,
	322, 1270,
	323, 1270,
	324, 1270,
	326, 1270,
	328, 1270,
	329, 1270,
	330, 1270,
	331, 1270,
	332, 1270,
	333, 1270,
	334, 1270,
	335, 1270,
	336, 1270,
	337, 1270,
	338, 1270,
	345, 1270,
	347, 1270,
	348, 1270,
	349, 1270,
	350, 1270,
	351, 1270,
	352, 1270,
	353, 1270,
	354, 1270,
	356, 1270,
	357, 1270,
	358, 1270,
	360, 1270,
	361, 1270,
	362, 1270,
	363, 1270,
	364, 1270,
	365, 1270,
	367, 1270,
	368, 1270,
	369, 1270,
	370, 1270,
	371, 1270,
	372, 1270,
	373, 1270,
	374, 1270,
	375, 1270,
	376, 1270,
	377, 1270,
	379, 1270,
	380, 1270,
	381, 1270,
	382, 1270,
	383, 1270,
	384, 1270,
	386, 1270,
	387, 1270,
	388, 1270,
	389, 1270,
	390, 1270,
	392, 1270,
	393, 1270,
	394, 1270,
	396, 1270,
	398, 1270,
	399, 1270,
	400, 1270,
	401, 1270,
	402, 1270,
	403, 1270,
	404, 1270,
	405, 1270,
	406, 1270,
	407, 1270,
	408, 1270,
	409, 1270,
	410, 1270,
	412, 1270,
	413, 1270,
	415, 1270,
	417, 1270,
	418, 1270,
	419, 1270,
	420, 1270,
	421, 1270,
	422, 1270,
	423, 1270,
	424, 1270,
	426, 1270,
	427, 1270,
	428, 1270,
	429, 1270,
	430, 1270,
	432, 1270,
	434, 1270,
	435, 1270,
	436, 1270,
	437, 1270,
	438, 1270,
	440, 1270,
	441, 1270,
	442, 1270,
	444, 1270,
	445, 1270,
	448, 1270,
	449, 1270,
	450, 1270,
	451, 1270,
	452, 1270,
	453, 1270,
	454, 1270,
	456, 1270,
	459, 1270,
	460, 1270,
	461, 1270,
	462, 1270,
	463, 1270,
	464, 1270,
	466, 1270,
	467, 1270,
	468, 1270,
	473, 1270,
	474, 1270,
	475, 1270,
	476, 1270,
	477, 1270,
	478, 1270,
	-2, 0,
	-1, 136,
	1, 1144,
	218, 1144,
	326, 1144,
	334, 1144,
	481, 1144,
	505, 1144,
	-2, 0,
	-1, 138,
	1, 1144,
	505, 1144,
	-2, 0,
	-1, 139,
	1, 1144,
	505, 1144,
	-2, 0,
	-1, 140,
	1, 1144,
	431, 1144,
	505, 1144,
	-2, 0,
	-1, 169,
	133, 1238,
	151, 1238,
	164, 1238,
	211, 1238,
	243, 1238,
	286, 1238,
	296, 1238,
	446, 1238,
	-2, 1213,
	-1, 205,
	4, 1277,
	5, 1277,
	6, 1277,
	7, 1277,
	8, 1277,
	9, 1277,
	10, 1277,
	21, 1277,
	22, 1277,
	23, 1277,
	24, 1277,
	25, 1277,
	26, 1277,
	28, 1277,
	29, 1277,
	35, 1277,
	36, 1277,
	40, 1277,
	41, 1277,
	42, 1277,
	43, 1277,
	44, 1277,
	45, 1277,
	46, 1277,
	47, 1277,
	48, 1277,
	50, 1277,
	51, 1277,
	52, 1277,
	54, 1277,
	55, 1277,
	56, 1277,
	57, 1277,
	58, 1277,
	59, 1277,
	60, 1277,
	61, 1277,
	62, 1277,
	63, 1277,
	64, 1277,
	65, 1277,
	67, 1277,
	68, 1277,
	69, 1277,
	71, 1277,
	73, 1277,
	74, 1277,
	75, 1277,
	76, 1277,
	77, 1277,
	78, 1277,
	79, 1277,
	82, 1277,
	83, 1277,
	84, 1277,
	85, 1277,
	87, 1277,
	89, 1277,
	90, 1277,
	91, 1277,
	93, 1277,
	94, 1277,
	95, 1277,
	96, 1277,
	97, 1277,
	98, 1277,
	99, 1277,
	100, 1277,
	101, 1277,
	102, 1277,
	103, 1277,
	104, 1277,
	105, 1277,
	106, 1277,
	107, 1277,
	108, 1277,
	109, 1277,
	110, 1277,
	111, 1277,
	112, 1277,
	113, 1277,
	114, 1277,
	115, 1277,
	117, 1277,
	118, 1277,
	120, 1277,
	121, 1277,
	124, 1277,
	125, 1277,
	126, 1277,
	128, 1277,
	129, 1277,
	131, 1277,
	132, 1277,
	134, 1277,
	135, 1277,
	136, 1277,
	137, 1277,
	138, 1277,
	139, 1277,
	140, 1277,
	141, 1277,
	142, 1277,
	143, 1277,
	144, 1277,
	145, 1277,
	146, 1277,
	147, 1277,
	148, 1277,
	149, 1277,
	150, 1277,
	156, 1277,
	157, 1277,
	158, 1277,
	159, 1277,
	163, 1277,
	165, 1277,
	168, 1277,
	169, 1277,
	170, 1277,
	171, 1277,
	172, 1277,
	173, 1277,
	174, 1277,
	176, 1277,
	177, 1277,
	179, 1277,
	180, 1277,
	182, 1277,
	183, 1277,
	184, 1277,
	185, 1277,
	186, 1277,
	187, 1277,
	188, 1277,
	189, 1277,
	190, 1277,
	191, 1277,
	192, 1277,
	193, 1277,
	195, 1277,
	196, 1277,
	197, 1277,
	198, 1277,
	202, 1277,
	203, 1277,
	204, 1277,
	205, 1277,
	207, 1277,
	208, 1277,
	209, 1277,
	210, 1277,
	212, 1277,
	214, 1277,
	215, 1277,
	216, 1277,
	217, 1277,
	218, 1277,
	219, 1277,
	220, 1277,
	221, 1277,
	222, 1277,
	226, 1277,
	227, 1277,
	228, 1277,
	229, 1277,
	230, 1277,
	231, 1277,
	233, 1277,
	234, 1277,
	235, 1277,
	237, 1277,
	238, 1277,
	239, 1277,
	240, 1277,
	241, 1277,
	242, 1277,
	244, 1277,
	245, 1277,
	246, 1277,
	247, 1277,
	248, 1277,
	249, 1277,
	250, 1277,
	251, 1277,
	252, 1277,
	254, 1277,
	255, 1277,
	256, 1277,
	257, 1277,
	258, 1277,
	259, 1277,
	260, 1277,
	261, 1277,
	262, 1277,
	263, 1277,
	264, 1277,
	266, 1277,
	267, 1277,
	268, 1277,
	269, 1277,
	270, 1277,
	271, 1277,
	272, 1277,
	273, 1277,
	274, 1277,
	275, 1277,
	276, 1277,
	277, 1277,
	278, 1277,
	279, 1277,
	280, 1277,
	281, 1277,
	282, 1277,
	283, 1277,
	284, 1277,
	285, 1277,
	288, 1277,
	292, 1277,
	293, 1277,
	294, 1277,
	297, 1277,
	298, 1277,
	299, 1277,
	300, 1277,
	301, 1277,
	302, 1277,
	303, 1277,
	304, 1277,
	305, 1277,
	306, 1277,
	307, 1277,
	308, 1277,
	309, 1277,
	310, 1277,
	311, 1277,
	312, 1277,
	313, 1277,
	314, 1277,
	316, 1277,
	317, 1277,
	318, 1277,
	319, 1277,
	320, 1277,
	321, 1277,
	322, 1277,
	323, 1277,
	324, 1277,
	326, 1277,
	328, 1277,
	329, 1277,
	330, 1277,
	331, 1277,
	332, 1277,
	333, 1277,
	334, 1277,
	335, 1277,
	336, 1277,
	337, 1277,
	338, 1277,
	345, 1277,
	347, 1277,
	348, 1277,
	349, 1277,
	350, 1277,
	351, 1277,
	352, 1277,
	353, 1277,
	354, 1277,
	356, 1277,
	357, 1277,
	358, 1277,
	359, 1277,
	360, 1277,
	361, 1277,
	362, 1277,
	363, 1277,
	364, 1277,
	365, 1277,
	367, 1277,
	368, 1277,
	369, 1277,
	370, 1277,
	371, 1277,
	372, 1277,
	373, 1277,
	374, 1277,
	375, 1277,
	376, 1277,
	377, 1277,
	379, 1277,
	380, 1277,
	381, 1277,
	382, 1277,
	383, 1277,
	384, 1277,
	385, 1277,
	386, 1277,
	387, 1277,
	388, 1277,
	389, 1277,
	390, 1277,
	391, 1277,
	392, 1277,
	393, 1277,
	394, 1277,
	396, 1277,
	398, 1277,
	399, 1277,
	400, 1277,
	401, 1277,
	402, 1277,
	403, 1277,
	404, 1277,
	405, 1277,
	406, 1277,
	407, 1277,
	408, 1277,
	409, 1277,
	410, 1277,
	412, 1277,
	413, 1277,
	414, 1277,
	415, 1277,
	417, 1277,
	418, 1277,
	419, 1277,
	420, 1277,
	421, 1277,
	422, 1277,
	423, 1277,
	424, 1277,
	426, 1277,
	427, 1277,
	428, 1277,
	429, 1277,
	430, 1277,
	432, 1277,
	434, 1277,
	435, 1277,
	436, 1277,
	437, 1277,
	438, 1277,
	439, 1277,
	440, 1277,
	441, 1277,
	442, 1277,
	444, 1277,
	445, 1277,
	447, 1277,
	448, 1277,
	449, 1277,
	450, 1277,
	451, 1277,
	452, 1277,
	453, 1277,
	454, 1277,
	455, 1277,
	456, 1277,
	459, 1277,
	460, 1277,
	461, 1277,
	462, 1277,
	463, 1277,
	464, 1277,
	466, 1277,
	467, 1277,
	468, 1277,
	473, 1277,
	474, 1277,
	475, 1277,
	476, 1277,
	477, 1277,
	478, 1277,
	479, 1277,
	486, 1277,
	493, 1277,
	494, 1277,
	495, 1277,
	502, 1277,
	506, 1277,
	-2, 0,
	-1, 606,
	167, 1983,
	431, 1983,
	485, 1983,
	504, 1983,
	-2, 0,
	-1, 607,
	167, 2067,
	431, 2067,
	485, 2067,
	504, 2067,
	-2, 0,
	-1, 608,
	167, 1971,
	431, 1971,
	485, 1971,
	504, 1971,
	-2, 0,
	-1, 610,
	167, 2165,
	431, 2165,
	485, 2165,
	504, 2165,
	-2, 0,
	-1, 612,
	167, 2195,
	431, 2195,
	485, 2195,
	504, 2195,
	-2, 0,
	-1, 619,
	167, 2082,
	431, 2082,
	485, 2082,
	504, 2082,
	-2, 583,
	-1, 649,
	504, 1924,
	507, 1924,
	-2, 814,
	-1, 650,
	504, 1926,
	507, 1926,
	-2, 815,
	-1, 651,
	504, 1925,
	507, 1925,
	-2, 816,
	-1, 652,
	507, 1859,
	-2, 817,
	-1, 674,
	164, 204,
	-2, 0,
	-1, 697,
	466, 1053,
	-2, 875,
	-1, 735,
	4, 1074,
	21, 1074,
	22, 1074,
	23, 1074,
	24, 1074,
	25, 1074,
	26, 1074,
	28, 1074,
	29, 1074,
	35, 1074,
	40, 1074,
	41, 1074,
	42, 1074,
	43, 1074,
	44, 1074,
	45, 1074,
	46, 1074,
	47, 1074,
	48, 1074,
	50, 1074,
	51, 1074,
	52, 1074,
	54, 1074,
	55, 1074,
	56, 1074,
	57, 1074,
	58, 1074,
	62, 1074,
	63, 1074,
	64, 1074,
	65, 1074,
	67, 1074,
	68, 1074,
	69, 1074,
	73, 1074,
	74, 1074,
	75, 1074,
	76, 1074,
	77, 1074,
	78, 1074,
	79, 1074,
	82, 1074,
	83, 1074,
	84, 1074,
	85, 1074,
	87, 1074,
	89, 1074,
	90, 1074,
	91, 1074,
	93, 1074,
	95, 1074,
	96, 1074,
	104, 1074,
	105, 1074,
	106, 1074,
	107, 1074,
	109, 1074,
	110, 1074,
	111, 1074,
	113, 1074,
	114, 1074,
	115, 1074,
	117, 1074,
	118, 1074,
	120, 1074,
	121, 1074,
	124, 1074,
	125, 1074,
	126, 1074,
	128, 1074,
	129, 1074,
	131, 1074,
	132, 1074,
	134, 1074,
	135, 1074,
	136, 1074,
	137, 1074,
	138, 1074,
	139, 1074,
	140, 1074,
	141, 1074,
	142, 1074,
	143, 1074,
	144, 1074,
	145, 1074,
	146, 1074,
	147, 1074,
	148, 1074,
	150, 1074,
	156, 1074,
	157, 1074,
	158, 1074,
	159, 1074,
	163, 1074,
	165, 1074,
	169, 1074,
	170, 1074,
	171, 1074,
	172, 1074,
	173, 1074,
	174, 1074,
	176, 1074,
	177, 1074,
	179, 1074,
	180, 1074,
	182, 1074,
	183, 1074,
	184, 1074,
	185, 1074,
	186, 1074,
	187, 1074,
	188, 1074,
	189, 1074,
	190, 1074,
	192, 1074,
	193, 1074,
	195, 1074,
	196, 1074,
	197, 1074,
	198, 1074,
	202, 1074,
	203, 1074,
	204, 1074,
	205, 1074,
	208, 1074,
	209, 1074,
	210, 1074,
	212, 1074,
	214, 1074,
	216, 1074,
	218, 1074,
	219, 1074,
	220, 1074,
	222, 1074,
	226, 1074,
	227, 1074,
	228, 1074,
	229, 1074,
	230, 1074,
	231, 1074,
	233, 1074,
	234, 1074,
	235, 1074,
	237, 1074,
	238, 1074,
	240, 1074,
	241, 1074,
	244, 1074,
	245, 1074,
	246, 1074,
	249, 1074,
	250, 1074,
	251, 1074,
	252, 1074,
	254, 1074,
	255, 1074,
	256, 1074,
	257, 1074,
	258, 1074,
	259, 1074,
	260, 1074,
	261, 1074,
	262, 1074,
	263, 1074,
	264, 1074,
	266, 1074,
	268, 1074,
	269, 1074,
	270, 1074,
	271, 1074,
	272, 1074,
	273, 1074,
	275, 1074,
	277, 1074,
	279, 1074,
	281, 1074,
	282, 1074,
	283, 1074,
	284, 1074,
	285, 1074,
	288, 1074,
	292, 1074,
	293, 1074,
	294, 1074,
	297, 1074,
	298, 1074,
	299, 1074,
	301, 1074,
	303, 1074,
	304, 1074,
	305, 1074,
	306, 1074,
	307, 1074,
	308, 1074,
	309, 1074,
	310, 1074,
	311, 1074,
	312, 1074,
	313, 1074,
	314, 1074,
	316, 1074,
	317, 1074,
	318, 1074,
	319, 1074,
	320, 1074,
	321, 1074,
	322, 1074,
	323, 1074,
	324, 1074,
	326, 1074,
	328, 1074,
	329, 1074,
	330, 1074,
	331, 1074,
	332, 1074,
	333, 1074,
	334, 1074,
	335, 1074,
	336, 1074,
	337, 1074,
	338, 1074,
	345, 1074,
	347, 1074,
	348, 1074,
	349, 1074,
	350, 1074,
	351, 1074,
	352, 1074,
	353, 1074,
	354, 1074,
	356, 1074,
	357, 1074,
	358, 1074,
	360, 1074,
	361, 1074,
	362, 1074,
	363, 1074,
	364, 1074,
	365, 1074,
	367, 1074,
	368, 1074,
	369, 1074,
	370, 1074,
	371, 1074,
	372, 1074,
	373, 1074,
	374, 1074,
	375, 1074,
	376, 1074,
	377, 1074,
	379, 1074,
	380, 1074,
	381, 1074,
	382, 1074,
	383, 1074,
	384, 1074,
	386, 1074,
	387, 1074,
	388, 1074,
	389, 1074,
	390, 1074,
	392, 1074,
	393, 1074,
	394, 1074,
	396, 1074,
	398, 1074,
	399, 1074,
	400, 1074,
	401, 1074,
	402, 1074,
	403, 1074,
	404, 1074,
	405, 1074,
	406, 1074,
	407, 1074,
	408, 1074,
	409, 1074,
	410, 1074,
	412, 1074,
	413, 1074,
	415, 1074,
	417, 1074,
	418, 1074,
	419, 1074,
	420, 1074,
	421, 1074,
	422, 1074,
	423, 1074,
	424, 1074,
	426, 1074,
	427, 1074,
	428, 1074,
	429, 1074,
	430, 1074,
	432, 1074,
	434, 1074,
	435, 1074,
	436, 1074,
	437, 1074,
	438, 1074,
	440, 1074,
	441, 1074,
	442, 1074,
	444, 1074,
	445, 1074,
	448, 1074,
	449, 1074,
	450, 1074,
	451, 1074,
	452, 1074,
	453, 1074,
	454, 1074,
	456, 1074,
	459, 1074,
	460, 1074,
	461, 1074,
	462, 1074,
	463, 1074,
	464, 1074,
	466, 1074,
	467, 1074,
	468, 1074,
	473, 1074,
	474, 1074,
	475, 1074,
	476, 1074,
	477, 1074,
	478, 1074,
	-2, 0,
	-1, 812,
	330, 730,
	384, 730,
	-2, 0,
	-1, 813,
	330, 729,
	384, 729,
	-2, 677,
	-1, 817,
	1, 770,
	501, 770,
	503, 770,
	505, 770,
	-2, 0,
	-1, 818,
	1, 813,
	164, 813,
	501, 813,
	503, 813,
	505, 813,
	-2, 0,
	-1, 826,
	1, 733,
	501, 733,
	503, 733,
	505, 733,
	-2, 0,
	-1, 832,
	1, 770,
	501, 770,
	503, 770,
	505, 770,
	-2, 0,
	-1, 833,
	1, 772,
	501, 772,
	503, 772,
	505, 772,
	-2, 0,
	-1, 834,
	1, 775,
	501, 775,
	503, 775,
	505, 775,
	-2, 0,
	-1, 840,
	1, 792,
	501, 792,
	503, 792,
	505, 792,
	-2, 0,
	-1, 841,
	1, 794,
	501, 794,
	503, 794,
	505, 794,
	-2, 0,
	-1, 890,
	151, 1279,
	164, 1279,
	243, 1279,
	286, 1279,
	-2, 1217,
	-1, 905,
	151, 1278,
	164, 1278,
	243, 1278,
	286, 1278,
	-2, 1214,
	-1, 931,
	504, 1923,
	-2, 591,
	-1, 959,
	5, 1915,
	502, 1913,
	-2, 1904,
	-1, 967,
	5, 1936,
	502, 1933,
	-2, 1924,
	-1, 968,
	5, 1937,
	502, 1934,
	-2, 1925,
	-1, 976,
	504, 1921,
	-2, 1903,
	-1, 977,
	502, 2273,
	-2, 1922,
	-1, 1000,
	502, 2272,
	-2, 1938,
	-1, 1001,
	5, 1443,
	-2, 2243,
	-1, 1002,
	5, 1444,
	-2, 2244,
	-1, 1003,
	5, 1445,
	-2, 2258,
	-1, 1004,
	5, 1446,
	-2, 2223,
	-1, 1005,
	5, 1447,
	-2, 2256,
	-1, 1006,
	5, 1455,
	-2, 2235,
	-1, 1007,
	5, 1442,
	-2, 2231,
	-1, 1008,
	5, 1442,
	-2, 2230,
	-1, 1009,
	5, 1442,
	-2, 2249,
	-1, 1010,
	5, 1453,
	-2, 2225,
	-1, 1011,
	5, 1458,
	-2, 2224,
	-1, 1012,
	5, 1460,
	-2, 2268,
	-1, 1015,
	5, 1482,
	-2, 2261,
	-1, 1016,
	5, 1474,
	-2, 2262,
	-1, 1017,
	5, 1482,
	-2, 2263,
	-1, 1018,
	5, 1478,
	-2, 2264,
	-1, 1019,
	5, 1429,
	-2, 2236,
	-1, 1020,
	5, 1430,
	-2, 2237,
	-1, 1047,
	5, 1465,
	-2, 2269,
	-1, 1048,
	5, 1466,
	-2, 2259,
	-1, 1049,
	5, 1467,
	467, 1467,
	-2, 2226,
	-1, 1050,
	5, 1468,
	467, 1468,
	-2, 2227,
	-1, 1087,
	502, 1933,
	-2, 1924,
	-1, 1088,
	502, 1934,
	-2, 1925,
	-1, 1117,
	167, 2195,
	431, 2195,
	485, 2195,
	504, 2195,
	-2, 0,
	-1, 1120,
	1, 569,
	505, 569,
	-2, 1152,
	-1, 1245,
	347, 1899,
	386, 1899,
	495, 1899,
	-2, 1897,
	-1, 1257,
	506, 1899,
	-2, 1900,
	-1, 1264,
	1, 1050,
	501, 1050,
	503, 1050,
	505, 1050,
	-2, 1266,
	-1, 1317,
	336, 874,
	466, 874,
	-2, 310,
	-1, 1339,
	1, 1050,
	501, 1050,
	503, 1050,
	505, 1050,
	-2, 1266,
	-1, 1345,
	4, 1074,
	21, 1074,
	22, 1074,
	23, 1074,
	24, 1074,
	25, 1074,
	26, 1074,
	28, 1074,
	29, 1074,
	35, 1074,
	40, 1074,
	41, 1074,
	42, 1074,
	43, 1074,
	44, 1074,
	45, 1074,
	46, 1074,
	47, 1074,
	48, 1074,
	50, 1074,
	51, 1074,
	52, 1074,
	54, 1074,
	55, 1074,
	56, 1074,
	57, 1074,
	58, 1074,
	62, 1074,
	63, 1074,
	64, 1074,
	65, 1074,
	67, 1074,
	68, 1074,
	69, 1074,
	73, 1074,
	74, 1074,
	75, 1074,
	76, 1074,
	77, 1074,
	78, 1074,
	79, 1074,
	82, 1074,
	83, 1074,
	84, 1074,
	85, 1074,
	87, 1074,
	89, 1074,
	90, 1074,
	91, 1074,
	93, 1074,
	95, 1074,
	96, 1074,
	104, 1074,
	105, 1074,
	106, 1074,
	107, 1074,
	109, 1074,
	110, 1074,
	111, 1074,
	113, 1074,
	114, 1074,
	115, 1074,
	117, 1074,
	118, 1074,
	120, 1074,
	121, 1074,
	124, 1074,
	125, 1074,
	126, 1074,
	128, 1074,
	129, 1074,
	131, 1074,
	132, 1074,
	134, 1074,
	135, 1074,
	136, 1074,
	137, 1074,
	138, 1074,
	139, 1074,
	140, 1074,
	141, 1074,
	142, 1074,
	143, 1074,
	144, 1074,
	145, 1074,
	146, 1074,
	147, 1074,
	148, 1074,
	156, 1074,
	157, 1074,
	158, 1074,
	159, 1074,
	163, 1074,
	165, 1074,
	169, 1074,
	170, 1074,
	171, 1074,
	172, 1074,
	173, 1074,
	174, 1074,
	176, 1074,
	177, 1074,
	179, 1074,
	180, 1074,
	182, 1074,
	183, 1074,
	184, 1074,
	185, 1074,
	186, 1074,
	187, 1074,
	188, 1074,
	189, 1074,
	190, 1074,
	192, 1074,
	193, 1074,
	195, 1074,
	196, 1074,
	197, 1074,
	198, 1074,
	203, 1074,
	204, 1074,
	205, 1074,
	208, 1074,
	209, 1074,
	210, 1074,
	212, 1074,
	214, 1074,
	216, 1074,
	218, 1074,
	219, 1074,
	220, 1074,
	222, 1074,
	226, 1074,
	227, 1074,
	228, 1074,
	229, 1074,
	230, 1074,
	231, 1074,
	233, 1074,
	234, 1074,
	235, 1074,
	237, 1074,
	238, 1074,
	240, 1074,
	241, 1074,
	244, 1074,
	245, 1074,
	246, 1074,
	249, 1074,
	250, 1074,
	251, 1074,
	252, 1074,
	254, 1074,
	255, 1074,
	256, 1074,
	257, 1074,
	258, 1074,
	259, 1074,
	260, 1074,
	261, 1074,
	262, 1074,
	263, 1074,
	264, 1074,
	266, 1074,
	268, 1074,
	269, 1074,
	270, 1074,
	271, 1074,
	272, 1074,
	273, 1074,
	275, 1074,
	279, 1074,
	281, 1074,
	282, 1074,
	283, 1074,
	284, 1074,
	285, 1074,
	288, 1074,
	290, 1074,
	292, 1074,
	293, 1074,
	294, 1074,
	297, 1074,
	298, 1074,
	299, 1074,
	301, 1074,
	303, 1074,
	304, 1074,
	305, 1074,
	306, 1074,
	307, 1074,
	308, 1074,
	309, 1074,
	310, 1074,
	311, 1074,
	312, 1074,
	313, 1074,
	314, 1074,
	316, 1074,
	317, 1074,
	318, 1074,
	319, 1074,
	320, 1074,
	321, 1074,
	322, 1074,
	323, 1074,
	324, 1074,
	326, 1074,
	328, 1074,
	329, 1074,
	330, 1074,
	331, 1074,
	332, 1074,
	333, 1074,
	334, 1074,
	335, 1074,
	336, 1074,
	337, 1074,
	338, 1074,
	345, 1074,
	347, 1074,
	348, 1074,
	349, 1074,
	350, 1074,
	351, 1074,
	352, 1074,
	353, 1074,
	354, 1074,
	356, 1074,
	357, 1074,
	358, 1074,
	360, 1074,
	361, 1074,
	362, 1074,
	363, 1074,
	364, 1074,
	365, 1074,
	367, 1074,
	368, 1074,
	369, 1074,
	370, 1074,
	371, 1074,
	372, 1074,
	373, 1074,
	374, 1074,
	375, 1074,
	376, 1074,
	377, 1074,
	379, 1074,
	380, 1074,
	381, 1074,
	382, 1074,
	383, 1074,
	384, 1074,
	386, 1074,
	387, 1074,
	388, 1074,
	389, 1074,
	390, 1074,
	392, 1074,
	393, 1074,
	394, 1074,
	396, 1074,
	398, 1074,
	399, 1074,
	400, 1074,
	401, 1074,
	402, 1074,
	403, 1074,
	404, 1074,
	405, 1074,
	406, 1074,
	407, 1074,
	408, 1074,
	409, 1074,
	410, 1074,
	412, 1074,
	413, 1074,
	415, 1074,
	417, 1074,
	418, 1074,
	419, 1074,
	420, 1074,
	421, 1074,
	422, 1074,
	423, 1074,
	424, 1074,
	426, 1074,
	427, 1074,
	428, 1074,
	429, 1074,
	430, 1074,
	432, 1074,
	434, 1074,
	435, 1074,
	436, 1074,
	437, 1074,
	438, 1074,
	440, 1074,
	441, 1074,
	442, 1074,
	444, 1074,
	445, 1074,
	448, 1074,
	449, 1074,
	450, 1074,
	451, 1074,
	452, 1074,
	453, 1074,
	454, 1074,
	456, 1074,
	459, 1074,
	460, 1074,
	461, 1074,
	462, 1074,
	463, 1074,
	464, 1074,
	466, 1074,
	467, 1074,
	468, 1074,
	473, 1074,
	474, 1074,
	475, 1074,
	476, 1074,
	477, 1074,
	478, 1074,
	-2, 0,
	-1, 1417,
	1, 446,
	501, 446,
	503, 446,
	505, 446,
	-2, 1237,
	-1, 1420,
	4, 2267,
	11, 2267,
	12, 2267,
	14, 2267,
	15, 2267,
	16, 2267,
	17, 2267,
	18, 2267,
	19, 2267,
	21, 2267,
	22, 2267,
	23, 2267,
	24, 2267,
	25, 2267,
	26, 2267,
	28, 2267,
	29, 2267,
	32, 2267,
	33, 2267,
	35, 2267,
	37, 2267,
	40, 2267,
	41, 2267,
	42, 2267,
	43, 2267,
	44, 2267,
	45, 2267,
	46, 2267,
	47, 2267,
	48, 2267,
	50, 2267,
	51, 2267,
	52, 2267,
	54, 2267,
	55, 2267,
	56, 2267,
	57, 2267,
	58, 2267,
	62, 2267,
	63, 2267,
	64, 2267,
	65, 2267,
	67, 2267,
	68, 2267,
	69, 2267,
	70, 2267,
	73, 2267,
	74, 2267,
	75, 2267,
	76, 2267,
	77, 2267,
	78, 2267,
	79, 2267,
	80, 2267,
	82, 2267,
	83, 2267,
	84, 2267,
	85, 2267,
	87, 2267,
	88, 2267,
	89, 2267,
	90, 2267,
	91, 2267,
	93, 2267,
	94, 2267,
	95, 2267,
	96, 2267,
	104, 2267,
	105, 2267,
	106, 2267,
	107, 2267,
	109, 2267,
	110, 2267,
	111, 2267,
	113, 2267,
	114, 2267,
	115, 2267,
	117, 2267,
	118, 2267,
	120, 2267,
	121, 2267,
	124, 2267,
	125, 2267,
	126, 2267,
	128, 2267,
	129, 2267,
	131, 2267,
	132, 2267,
	134, 2267,
	135, 2267,
	136, 2267,
	137, 2267,
	138, 2267,
	139, 2267,
	140, 2267,
	141, 2267,
	142, 2267,
	143, 2267,
	144, 2267,
	145, 2267,
	146, 2267,
	147, 2267,
	148, 2267,
	152, 2267,
	153, 2267,
	154, 2267,
	155, 2267,
	156, 2267,
	157, 2267,
	158, 2267,
	159, 2267,
	162, 2267,
	163, 2267,
	165, 2267,
	168, 2267,
	169, 2267,
	170, 2267,
	171, 2267,
	172, 2267,
	173, 2267,
	174, 2267,
	176, 2267,
	177, 2267,
	179, 2267,
	180, 2267,
	182, 2267,
	183, 2267,
	184, 2267,
	185, 2267,
	186, 2267,
	187, 2267,
	188, 2267,
	189, 2267,
	190, 2267,
	191, 2267,
	192, 2267,
	193, 2267,
	194, 2267,
	195, 2267,
	196, 2267,
	197, 2267,
	198, 2267,
	200, 2267,
	201, 2267,
	203, 2267,
	204, 2267,
	205, 2267,
	207, 2267,
	208, 2267,
	209, 2267,
	210, 2267,
	212, 2267,
	214, 2267,
	215, 2267,
	216, 2267,
	217, 2267,
	218, 2267,
	219, 2267,
	220, 2267,
	221, 2267,
	222, 2267,
	224, 2267,
	225, 2267,
	226, 2267,
	227, 2267,
	228, 2267,
	229, 2267,
	230, 2267,
	231, 2267,
	233, 2267,
	234, 2267,
	235, 2267,
	237, 2267,
	238, 2267,
	239, 2267,
	240, 2267,
	241, 2267,
	242, 2267,
	244, 2267,
	245, 2267,
	246, 2267,
	249, 2267,
	250, 2267,
	251, 2267,
	252, 2267,
	253, 2267,
	254, 2267,
	255, 2267,
	256, 2267,
	257, 2267,
	258, 2267,
	259, 2267,
	260, 2267,
	261, 2267,
	262, 2267,
	263, 2267,
	264, 2267,
	266, 2267,
	267, 2267,
	268, 2267,
	269, 2267,
	270, 2267,
	271, 2267,
	272, 2267,
	273, 2267,
	275, 2267,
	278, 2267,
	279, 2267,
	281, 2267,
	282, 2267,
	283, 2267,
	284, 2267,
	285, 2267,
	288, 2267,
	292, 2267,
	293, 2267,
	294, 2267,
	295, 2267,
	297, 2267,
	298, 2267,
	299, 2267,
	301, 2267,
	303, 2267,
	304, 2267,
	305, 2267,
	306, 2267,
	307, 2267,
	308, 2267,
	309, 2267,
	310, 2267,
	311, 2267,
	312, 2267,
	313, 2267,
	314, 2267,
	316, 2267,
	317, 2267,
	318, 2267,
	319, 2267,
	320, 2267,
	321, 2267,
	322, 2267,
	323, 2267,
	324, 2267,
	326, 2267,
	328, 2267,
	329, 2267,
	330, 2267,
	331, 2267,
	332, 2267,
	333, 2267,
	334, 2267,
	335, 2267,
	336, 2267,
	337, 2267,
	338, 2267,
	345, 2267,
	346, 2267,
	347, 2267,
	348, 2267,
	349, 2267,
	350, 2267,
	351, 2267,
	352, 2267,
	353, 2267,
	354, 2267,
	356, 2267,
	357, 2267,
	358, 2267,
	359, 2267,
	360, 2267,
	361, 2267,
	362, 2267,
	363, 2267,
	364, 2267,
	365, 2267,
	366, 2267,
	367, 2267,
	368, 2267,
	369, 2267,
	370, 2267,
	371, 2267,
	372, 2267,
	373, 2267,
	374, 2267,
	375, 2267,
	376, 2267,
	377, 2267,
	379, 2267,
	380, 2267,
	381, 2267,
	382, 2267,
	383, 2267,
	384, 2267,
	386, 2267,
	387, 2267,
	388, 2267,
	389, 2267,
	390, 2267,
	391, 2267,
	392, 2267,
	393, 2267,
	394, 2267,
	396, 2267,
	398, 2267,
	399, 2267,
	400, 2267,
	401, 2267,
	402, 2267,
	403, 2267,
	404, 2267,
	405, 2267,
	406, 2267,
	407, 2267,
	408, 2267,
	409, 2267,
	410, 2267,
	412, 2267,
	413, 2267,
	415, 2267,
	417, 2267,
	418, 2267,
	419, 2267,
	420, 2267,
	421, 2267,
	422, 2267,
	423, 2267,
	424, 2267,
	426, 2267,
	427, 2267,
	428, 2267,
	429, 2267,
	430, 2267,
	432, 2267,
	434, 2267,
	435, 2267,
	436, 2267,
	437, 2267,
	438, 2267,
	440, 2267,
	441, 2267,
	442, 2267,
	444, 2267,
	445, 2267,
	448, 2267,
	449, 2267,
	450, 2267,
	451, 2267,
	452, 2267,
	453, 2267,
	454, 2267,
	456, 2267,
	459, 2267,
	460, 2267,
	461, 2267,
	462, 2267,
	463, 2267,
	464, 2267,
	466, 2267,
	467, 2267,
	468, 2267,
	473, 2267,
	474, 2267,
	475, 2267,
	476, 2267,
	477, 2267,
	478, 2267,
	479, 2267,
	480, 2267,
	483, 2267,
	484, 2267,
	485, 2267,
	486, 2267,
	487, 2267,
	488, 2267,
	490, 2267,
	491, 2267,
	492, 2267,
	493, 2267,
	494, 2267,
	495, 2267,
	496, 2267,
	497, 2267,
	498, 2267,
	500, 2267,
	503, 2267,
	504, 2267,
	506, 2267,
	507, 2267,
	-2, 0,
	-1, 1425,
	167, 2165,
	431, 2165,
	485, 2165,
	504, 2165,
	-2, 0,
	-1, 1473,
	330, 730,
	384, 730,
	-2, 0,
	-1, 1497,
	1, 725,
	501, 725,
	503, 725,
	505, 725,
	-2, 0,
	-1, 1498,
	1, 761,
	501, 761,
	503, 761,
	505, 761,
	-2, 0,
	-1, 1499,
	1, 732,
	501, 732,
	503, 732,
	505, 732,
	-2, 0,
	-1, 1501,
	1, 736,
	501, 736,
	503, 736,
	505, 736,
	-2, 0,
	-1, 1507,
	1, 743,
	501, 743,
	503, 743,
	505, 743,
	-2, 0,
	-1, 1535,
	1, 2215,
	501, 2215,
	503, 2215,
	504, 2215,
	505, 2215,
	-2, 790,
	-1, 1536,
	1, 2162,
	501, 2162,
	503, 2162,
	504, 2162,
	505, 2162,
	-2, 791,
	-1, 1551,
	1, 1147,
	505, 1147,
	-2, 1152,
	-1, 1554,
	151, 1278,
	164, 1278,
	243, 1278,
	286, 1278,
	-2, 1218,
	-1, 1648,
	133, 1239,
	151, 1239,
	164, 1239,
	211, 1239,
	243, 1239,
	286, 1239,
	296, 1239,
	446, 1239,
	-2, 1643,
	-1, 1708,
	503, 1793,
	-2, 0,
	-1, 1743,
	133, 1239,
	151, 1239,
	164, 1239,
	211, 1239,
	243, 1239,
	286, 1239,
	296, 1239,
	446, 1239,
	-2, 1359,
	-1, 1790,
	502, 1470,
	-2, 1458,
	-1, 1823,
	1, 571,
	505, 571,
	-2, 1152,
	-1, 2049,
	1, 727,
	501, 727,
	503, 727,
	505, 727,
	-2, 0,
	-1, 2050,
	1, 763,
	501, 763,
	503, 763,
	505, 763,
	-2, 0,
	-1, 2080,
	1, 745,
	501, 745,
	503, 745,
	505, 745,
	-2, 0,
	-1, 2126,
	364, 1305,
	365, 1305,
	-2, 1503,
	-1, 2157,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1523,
	-1, 2158,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1524,
	-1, 2159,
	88, 0,
	224, 0,
	225, 0,
	487, 0,
	488, 0,
	-2, 1525,
	-1, 2160,
	88, 0,
	224, 0,
	225, 0,
	487, 0,
	488, 0,
	-2, 1526,
	-1, 2161,
	88, 0,
	224, 0,
	225, 0,
	487, 0,
	488, 0,
	-2, 1527,
	-1, 2162,
	88, 0,
	224, 0,
	225, 0,
	487, 0,
	488, 0,
	-2, 1528,
	-1, 2163,
	88, 0,
	224, 0,
	225, 0,
	487, 0,
	488, 0,
	-2, 1529,
	-1, 2164,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1530,
	-1, 2176,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1542,
	-1, 2177,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1543,
	-1, 2178,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1544,
	-1, 2181,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1549,
	-1, 2187,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1553,
	-1, 2189,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1561,
	-1, 2190,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1562,
	-1, 2191,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1563,
	-1, 2192,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1564,
	-1, 2304,
	5, 1936,
	167, 1804,
	502, 1933,
	-2, 1924,
	-1, 2305,
	167, 1805,
	-2, 2219,
	-1, 2306,
	167, 1806,
	-2, 2081,
	-1, 2307,
	167, 1807,
	-2, 1994,
	-1, 2308,
	167, 1808,
	-2, 2036,
	-1, 2309,
	167, 1809,
	-2, 2076,
	-1, 2310,
	167, 1810,
	-2, 2160,
	-1, 2311,
	167, 1811,
	-2, 1626,
	-1, 2380,
	1, 1360,
	2, 1360,
	94, 1360,
	133, 1360,
	151, 1360,
	164, 1360,
	168, 1360,
	178, 1360,
	181, 1360,
	207, 1360,
	211, 1360,
	221, 1360,
	239, 1360,
	243, 1360,
	267, 1360,
	286, 1360,
	290, 1360,
	296, 1360,
	355, 1360,
	359, 1360,
	446, 1360,
	457, 1360,
	470, 1360,
	471, 1360,
	472, 1360,
	481, 1360,
	501, 1360,
	503, 1360,
	505, 1360,
	507, 1360,
	-2, 1359,
	-1, 2393,
	502, 1905,
	-2, 1919,
	-1, 2417,
	502, 1469,
	-2, 1459,
	-1, 2534,
	1, 1050,
	501, 1050,
	503, 1050,
	505, 1050,
	-2, 1266,
	-1, 2697,
	291, 1308,
	-2, 2257,
	-1, 2698,
	291, 1309,
	-2, 2146,
	-1, 2702,
	364, 1870,
	365, 1870,
	-2, 1624,
	-1, 2703,
	364, 1874,
	365, 1874,
	-2, 1625,
	-1, 2704,
	364, 1871,
	365, 1871,
	-2, 1624,
	-1, 2705,
	364, 1875,
	365, 1875,
	-2, 1625,
	-1, 2718,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1551,
	-1, 2719,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1555,
	-1, 2725,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1557,
	-1, 2922,
	218, 1152,
	326, 1152,
	334, 1152,
	481, 1152,
	-2, 568,
	-1, 3048,
	1, 1050,
	501, 1050,
	503, 1050,
	505, 1050,
	-2, 1266,
	-1, 3141,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1559,
	-1, 3148,
	215, 0,
	217, 0,
	278, 0,
	-2, 1578,
	-1, 3215,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1607,
	-1, 3216,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1608,
	-1, 3217,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1609,
	-1, 3221,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1613,
	-1, 3222,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1614,
	-1, 3223,
	14, 0,
	15, 0,
	16, 0,
	483, 0,
	484, 0,
	485, 0,
	-2, 1615,
	-1, 3269,
	502, 1906,
	-2, 1920,
	-1, 3388,
	504, 2373,
	-2, 1196,
	-1, 3440,
	215, 0,
	217, 0,
	278, 0,
	-2, 1579,
	-1, 3443,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1582,
	-1, 3444,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1584,
	-1, 3642,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1583,
	-1, 3643,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 1585,
	-1, 3654,
	215, 0,
	-2, 1616,
	-1, 3798,
	215, 0,
	-2, 1617,
	-1, 3947,
	47, 0,
	191, 0,
	242, 0,
	391, 0,
	479, 0,
	486, 0,
	-2, 2222,
}

const sqlPrivate = 57344

const sqlLast = 99571

var sqlAct = [...]int{

	238, 3728, 3688, 3820, 3685, 3957, 2618, 3841, 3291, 4054,
	3922, 3902, 3946, 2852, 3034, 3423, 3573, 3905, 3958, 3916,
	3887, 3959, 4004, 3735, 1283, 3180, 2853, 3673, 2590, 3802,
	915, 2136, 3945, 3604, 1408, 3631, 3599, 3380, 932, 1091,
	3744, 3558, 3063, 3329, 2450, 3507, 3586, 2204, 2940, 2029,
	906, 1403, 1267, 3766, 2004, 1563, 3609, 3056, 3030, 3133,
	3342, 1777, 3058, 1440, 3344, 3359, 919, 3292, 651, 2144,
	617, 2627, 2020, 1875, 3020, 2336, 2137, 2711, 2511, 2562,
	1749, 2579, 1149, 2553, 2629, 1080, 2867, 2565, 2875, 1407,
	2835, 2895, 651, 1242, 3422, 3659, 2858, 2591, 2620, 3479,
	2856, 1924, 1885, 1481, 2452, 2637, 1718, 1923, 2027, 2373,
	3240, 4, 2372, 966, 2217, 2574, 914, 160, 1656, 2576,
	2002, 2626, 1250, 2141, 3803, 2525, 1439, 1918, 3004, 963,
	2834, 646, 3729, 2636, 749, 1902, 2695, 1133, 1909, 2488,
	2246, 2563, 1859, 232, 1778, 1862, 2901, 2237, 1551, 1719,
	2354, 2201, 99, 2375, 2125, 2108, 3032, 1400, 1849, 2584,
	1694, 231, 2106, 2487, 1404, 2333, 2630, 652, 1337, 1738,
	1071, 1394, 1959, 968, 2441, 1418, 1384, 653, 970, 1122,
	585, 2240, 2362, 1689, 1074, 2344, 1728, 1053, 2218, 2300,
	2290, 1641, 1564, 1247, 169, 601, 743, 1958, 1565, 611,
	571, 160, 36, 648, 593, 1507, 1416, 1735, 1088, 1269,
	1360, 657, 723, 1278, 2107, 170, 2109, 697, 1874, 1979,
	2130, 944, 588, 41, 40, 1076, 38, 1570, 29, 660,
	27, 25, 596, 807, 2746, 657, 1051, 1550, 1289, 824,
	2742, 2854, 1578, 1579, 3254, 2248, 3255, 4112, 1995, 1995,
	4107, 2353, 1995, 660, 3089, 1995, 1995, 4095, 4094, 4071,
	910, 2353, 2353, 3523, 1609, 4069, 4065, 1130, 3987, 3523,
	1932, 1581, 3988, 3981, 1130, 3979, 3976, 2353, 3072, 2353,
	3977, 1070, 3973, 3968, 3943, 3942, 3974, 1932, 1932, 1932,
	3941, 3073, 910, 2028, 2013, 764, 2807, 2808, 3937, 3936,
	3244, 1580, 2013, 2013, 1068, 3931, 3929, 3900, 3881, 3523,
	3523, 3523, 2408, 3874, 3873, 3868, 3867, 2353, 2353, 3523,
	3523, 1083, 3861, 2920, 911, 3834, 1932, 1993, 3800, 3565,
	3780, 2346, 2408, 3777, 1932, 744, 3737, 3523, 3705, 3704,
	3738, 3696, 1932, 1932, 3695, 1932, 3665, 3644, 3523, 1107,
	1932, 2408, 3628, 1054, 1054, 891, 2013, 1057, 3617, 1058,
	3089, 66, 3089, 747, 746, 1578, 1579, 1102, 1611, 1612,
	1613, 1621, 1622, 1623, 3553, 3542, 890, 67, 2353, 2353,
	927, 3522, 2710, 2755, 3442, 3523, 1614, 1609, 2408, 2756,
	71, 3396, 3390, 1586, 1581, 3105, 3105, 2353, 1578, 1579,
	3357, 1627, 900, 3264, 3358, 905, 3262, 3265, 3247, 3164,
	3263, 3160, 2353, 1932, 3104, 2353, 3882, 3096, 3105, 2851,
	1609, 3097, 2846, 2353, 1580, 77, 2353, 1581, 2404, 2845,
	3795, 1608, 1610, 2353, 1600, 2798, 2796, 1055, 3783, 2799,
	2797, 2788, 1597, 1103, 2786, 2789, 2757, 2813, 2353, 2642,
	2353, 2616, 2615, 2013, 2425, 2016, 2016, 1580, 2353, 83,
	2407, 2402, 2396, 1932, 2408, 2353, 1932, 1600, 2013, 2352,
	2015, 2353, 98, 2353, 2016, 1597, 3244, 84, 95, 205,
	2345, 3598, 3565, 3543, 1601, 1932, 1500, 3097, 2502, 1303,
	2440, 1829, 1879, 1994, 2559, 1931, 2519, 2438, 1714, 1277,
	3321, 3136, 3074, 2745, 3114, 1736, 1603, 1604, 1605, 1606,
	1912, 2389, 2388, 2387, 1483, 2386, 1586, 207, 2385, 3436,
	205, 3075, 1282, 1059, 1056, 899, 85, 898, 897, 896,
	895, 1282, 894, 893, 889, 888, 887, 886, 2823, 1603,
	1604, 1605, 1606, 1996, 1996, 1618, 2675, 1996, 1628, 1586,
	1996, 1996, 885, 884, 1608, 1610, 883, 882, 207, 881,
	880, 879, 878, 206, 877, 876, 875, 874, 873, 1624,
	855, 1625, 805, 199, 804, 803, 802, 801, 1595, 1596,
	800, 200, 799, 798, 797, 796, 1448, 1608, 1610, 795,
	794, 793, 66, 792, 791, 790, 1616, 1602, 789, 788,
	787, 786, 785, 171, 206, 784, 3495, 1601, 67, 783,
	782, 1595, 1596, 781, 780, 779, 968, 230, 778, 777,
	968, 71, 767, 766, 762, 761, 755, 754, 714, 1658,
	713, 3072, 1626, 673, 672, 1152, 671, 663, 1434, 1152,
	1601, 662, 661, 1272, 171, 88, 1132, 3454, 1291, 1615,
	1137, 2824, 631, 1013, 623, 622, 77, 621, 605, 226,
	225, 3275, 1126, 1103, 224, 223, 968, 84, 968, 3258,
	968, 2345, 222, 221, 1302, 1272, 220, 219, 218, 217,
	216, 215, 214, 213, 168, 91, 212, 94, 211, 1103,
	83, 210, 1258, 209, 1253, 3786, 3106, 2604, 2011, 1272,
	1607, 2008, 2273, 98, 1994, 2101, 208, 2898, 84, 95,
	2768, 205, 2751, 2849, 2540, 1578, 1579, 2412, 2570, 748,
	1602, 2394, 2379, 133, 1582, 1583, 1584, 1585, 1587, 1588,
	2259, 1261, 1739, 1607, 2850, 961, 1281, 1609, 1857, 1762,
	1272, 968, 2257, 2023, 1581, 1619, 1272, 1667, 1291, 207,
	1272, 1342, 1344, 1602, 1285, 1577, 1697, 85, 968, 1139,
	968, 1120, 1696, 1697, 1272, 1659, 1090, 1657, 3100, 1696,
	968, 3964, 968, 135, 1580, 2818, 2816, 2817, 2809, 2810,
	2811, 2812, 2814, 2815, 1700, 3683, 1333, 172, 1970, 2587,
	3944, 1695, 3784, 3848, 3792, 206, 3658, 3618, 657, 3597,
	1291, 3613, 3500, 3477, 1145, 199, 1239, 1244, 3476, 3470,
	1115, 3469, 1272, 200, 3468, 3461, 660, 3460, 2022, 3458,
	3453, 3450, 1280, 3449, 3363, 3356, 3279, 3278, 968, 3277,
	3268, 968, 1279, 1617, 3235, 745, 1658, 1592, 1593, 1599,
	1620, 1598, 1594, 3234, 1591, 1589, 1590, 1582, 1583, 1584,
	1585, 1587, 1588, 3233, 3156, 3152, 2406, 3464, 1421, 1423,
	1297, 3463, 205, 160, 160, 205, 1586, 2893, 2842, 1288,
	2833, 1295, 2806, 1301, 1598, 1594, 88, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 2807, 2808, 2803, 2802,
	1939, 2800, 2807, 2808, 2795, 2794, 1347, 2793, 911, 2790,
	207, 205, 2787, 207, 1608, 1610, 1578, 1579, 1453, 1126,
	1388, 1391, 1126, 133, 3319, 168, 91, 2767, 94, 2572,
	2750, 968, 968, 968, 968, 968, 968, 968, 1609, 2743,
	1397, 2617, 1665, 2807, 2808, 1581, 1516, 2380, 2230, 207,
	1577, 1555, 205, 1576, 1414, 1937, 206, 959, 1067, 206,
	748, 4106, 968, 1502, 133, 1419, 199, 1601, 968, 199,
	2847, 1432, 205, 1437, 200, 1580, 4063, 200, 4062, 3997,
	3995, 3986, 1092, 1446, 2213, 1451, 3182, 3840, 2807, 2808,
	207, 2825, 2826, 2827, 3830, 206, 171, 3827, 3826, 171,
	3825, 3819, 3812, 3781, 1363, 199, 3765, 1433, 3764, 3438,
	207, 2207, 2822, 200, 135, 2507, 3752, 3749, 3701, 1447,
	2807, 2808, 3679, 3612, 205, 2807, 2808, 2890, 172, 3656,
	1452, 3639, 3638, 3625, 3624, 171, 206, 1549, 3590, 1501,
	1647, 3566, 3494, 3475, 3411, 3408, 199, 2813, 3362, 3309,
	2807, 2808, 1458, 2813, 200, 1296, 206, 2822, 3308, 3295,
	3294, 3250, 207, 1474, 3238, 205, 199, 1586, 3147, 1290,
	1645, 968, 968, 968, 200, 1503, 171, 968, 2943, 3107,
	1602, 3090, 2473, 3049, 1088, 2993, 1088, 2968, 2943, 2942,
	2915, 2913, 2772, 2771, 2813, 2766, 171, 2734, 2552, 2571,
	1703, 1152, 1702, 207, 1716, 1608, 1610, 1701, 206, 968,
	1552, 1698, 651, 1690, 911, 1688, 1795, 651, 199, 891,
	2419, 2418, 2391, 2384, 2351, 968, 200, 1765, 2255, 1272,
	1761, 1560, 1717, 1559, 1712, 1554, 1711, 1774, 2823, 2813,
	890, 1710, 1818, 1709, 968, 1556, 1573, 1574, 171, 206,
	1152, 2243, 1725, 1708, 1707, 1706, 205, 1705, 1601, 199,
	1704, 1770, 1685, 2024, 1684, 1086, 1683, 200, 1682, 1681,
	1680, 2813, 1679, 1678, 1855, 1677, 2813, 1126, 1722, 1723,
	3787, 1826, 1746, 1676, 1772, 2823, 1675, 1674, 1699, 2586,
	1578, 1579, 2828, 1820, 207, 1578, 1579, 1083, 1673, 1083,
	1821, 2813, 1691, 1692, 160, 1589, 1590, 1582, 1583, 1584,
	1585, 1587, 1588, 2272, 1672, 1671, 1054, 1660, 1646, 1581,
	1644, 1639, 1114, 205, 1581, 1105, 1098, 2244, 3804, 3593,
	2823, 1291, 3496, 3446, 3274, 1768, 3261, 3253, 911, 3668,
	206, 2258, 2754, 2410, 2382, 3498, 205, 3273, 1659, 1580,
	199, 2824, 2911, 2256, 1580, 657, 1747, 1642, 200, 3545,
	657, 207, 2823, 1971, 1245, 1757, 1680, 1257, 1260, 1848,
	1744, 1602, 1848, 660, 1134, 1136, 1823, 3785, 660, 1848,
	171, 1846, 4060, 1438, 207, 4053, 1272, 1272, 1868, 1737,
	1753, 3828, 2823, 3059, 1789, 3682, 1152, 1766, 2824, 1715,
	3740, 2245, 2242, 3739, 1127, 3616, 965, 206, 3568, 1741,
	3567, 1756, 1755, 942, 1754, 1773, 1752, 199, 1751, 1750,
	1817, 1680, 3544, 2807, 2808, 200, 2492, 1260, 1260, 1135,
	206, 1899, 3256, 3092, 1901, 1415, 1775, 1906, 3091, 1130,
	199, 1586, 1650, 2824, 3745, 2971, 1655, 171, 200, 1927,
	1929, 3366, 1697, 1739, 2792, 1547, 3307, 1669, 1696, 2791,
	1130, 2716, 1851, 1841, 1473, 1260, 2475, 1131, 1835, 871,
	171, 3036, 2021, 3035, 1482, 2824, 2816, 2817, 2809, 2810,
	2811, 2812, 2814, 2815, 2809, 2810, 2811, 2812, 2814, 2815,
	1517, 3736, 3984, 1130, 1884, 3969, 1910, 1590, 1582, 1583,
	1584, 1585, 1587, 1588, 3660, 2824, 205, 3956, 3021, 872,
	1483, 1925, 1128, 913, 3326, 3312, 3112, 2854, 3184, 2247,
	1129, 2760, 2818, 2816, 2817, 2809, 2810, 2811, 2812, 2814,
	2815, 657, 3965, 1272, 2238, 1272, 2417, 1272, 1713, 1666,
	1963, 1693, 3028, 2516, 207, 205, 1840, 1839, 1967, 660,
	1848, 1850, 1321, 1272, 1272, 1280, 3978, 1968, 1066, 1976,
	2819, 2820, 2821, 3975, 1272, 1279, 3068, 2818, 2816, 2817,
	2809, 2810, 2811, 2812, 2814, 2815, 2513, 1272, 1272, 1272,
	3286, 709, 1905, 207, 3821, 1319, 3600, 2030, 3899, 3809,
	206, 2946, 3966, 3302, 1824, 2624, 3018, 651, 1121, 4020,
	199, 1930, 2809, 2810, 2811, 2812, 2814, 2815, 200, 2811,
	2812, 2814, 2815, 2583, 1082, 4021, 3128, 1462, 1879, 2241,
	3339, 1084, 3721, 3533, 3860, 2924, 1984, 1973, 1309, 206,
	171, 2817, 2809, 2810, 2811, 2812, 2814, 2815, 1136, 199,
	2426, 1950, 851, 2086, 2421, 1949, 2084, 200, 2041, 2926,
	869, 2045, 2444, 1836, 1843, 1515, 867, 4102, 1275, 1320,
	3714, 1514, 865, 863, 3707, 2286, 2442, 1130, 860, 171,
	3352, 710, 3335, 3334, 2026, 1978, 3338, 968, 3328, 968,
	2031, 1986, 1987, 3325, 2912, 911, 968, 911, 1982, 1795,
	1795, 1152, 1135, 968, 968, 968, 968, 968, 968, 968,
	968, 968, 968, 968, 968, 968, 968, 968, 968, 968,
	968, 968, 968, 968, 968, 968, 968, 968, 968, 968,
	968, 968, 968, 968, 968, 968, 968, 968, 3323, 968,
	2118, 968, 968, 968, 968, 1115, 3283, 3282, 2105, 2017,
	657, 2018, 1419, 2765, 1419, 2126, 1363, 2444, 1981, 1513,
	1981, 2764, 2763, 968, 1845, 1136, 968, 968, 660, 205,
	2035, 2442, 2034, 2762, 968, 2720, 909, 2523, 968, 2522,
	968, 968, 1582, 1583, 1584, 1585, 1587, 1588, 1152, 1460,
	2518, 2970, 1588, 2509, 968, 968, 968, 968, 1844, 968,
	968, 968, 968, 968, 968, 968, 968, 207, 3859, 2501,
	2063, 2500, 2580, 2319, 2479, 2403, 2188, 2411, 1553, 1135,
	1127, 205, 2285, 2146, 1127, 968, 968, 968, 968, 968,
	968, 968, 968, 968, 1257, 2080, 1998, 3113, 968, 2000,
	2099, 2219, 2220, 2142, 2143, 2005, 2496, 2129, 2007, 1353,
	1088, 1352, 2010, 206, 908, 2219, 2235, 1152, 1351, 207,
	1350, 1374, 3546, 199, 2489, 2490, 1088, 2489, 2490, 2102,
	1315, 200, 2039, 2238, 2489, 2490, 2117, 1789, 1789, 1792,
	2110, 2281, 968, 1152, 1475, 891, 1276, 1948, 891, 891,
	2104, 2098, 2103, 171, 2320, 1328, 857, 2433, 2234, 205,
	2303, 2303, 2317, 4048, 2219, 206, 2133, 2337, 2339, 2134,
	2135, 3637, 1455, 2343, 1876, 199, 2395, 911, 1578, 1579,
	2815, 2116, 3519, 200, 712, 711, 911, 2203, 1128, 2466,
	911, 2477, 1128, 2090, 1558, 2367, 1129, 207, 3690, 910,
	1129, 1546, 1872, 2515, 2454, 171, 2359, 1581, 1272, 2693,
	2243, 3515, 2215, 3934, 1483, 2056, 2095, 2392, 4020, 2203,
	2465, 1783, 1746, 1083, 1512, 2114, 1877, 1878, 2232, 1526,
	1483, 2985, 2429, 2514, 1983, 2053, 629, 1580, 1152, 1083,
	2381, 1113, 2048, 206, 3119, 4049, 2431, 2097, 1054, 1338,
	2708, 3118, 2672, 199, 1873, 2211, 2100, 3516, 1126, 2358,
	1826, 200, 2209, 2923, 2247, 3324, 2512, 1795, 2405, 1471,
	2984, 2049, 3289, 160, 2299, 2312, 1456, 2328, 911, 2432,
	3322, 3310, 2341, 171, 1886, 2366, 2244, 2371, 2349, 2350,
	2377, 2378, 1336, 1152, 2430, 2364, 2365, 2360, 775, 1757,
	3529, 1095, 3692, 1890, 2457, 1852, 1853, 1272, 2678, 1863,
	1744, 2057, 3311, 3298, 1864, 2446, 2283, 968, 968, 2116,
	968, 2284, 2517, 2499, 2287, 2050, 2288, 2289, 1497, 1586,
	3173, 2478, 628, 2445, 1966, 1093, 3962, 4051, 2424, 2978,
	1898, 3170, 1461, 1130, 2115, 2085, 2510, 1130, 2083, 907,
	1699, 1887, 1879, 861, 1882, 2420, 1459, 2526, 846, 861,
	2245, 2242, 2556, 2114, 2707, 861, 862, 2481, 1691, 1692,
	2497, 861, 1863, 1936, 1935, 1509, 2443, 1864, 2977, 1897,
	2423, 904, 1498, 1530, 4064, 3636, 2700, 2701, 2427, 3878,
	632, 4037, 1257, 1881, 1272, 1272, 707, 1272, 706, 2212,
	4036, 1086, 2401, 1086, 2681, 2476, 2113, 2413, 2594, 1272,
	2449, 2482, 1865, 4074, 1650, 3171, 2535, 4009, 2537, 2459,
	2462, 3511, 2468, 1769, 3428, 3512, 3427, 2112, 1867, 2612,
	2094, 1096, 1373, 3065, 2480, 2491, 2493, 2494, 2495, 2199,
	2607, 1314, 4087, 1995, 1891, 1789, 1317, 2498, 2247, 3822,
	2638, 3836, 1338, 2925, 2957, 657, 4057, 2472, 968, 1879,
	847, 2096, 1870, 2456, 3527, 2661, 2197, 2662, 2324, 742,
	3514, 1727, 2641, 660, 3066, 1865, 3963, 1524, 2247, 1280,
	2640, 2609, 2115, 1686, 3517, 583, 2645, 2646, 2506, 2538,
	1869, 1867, 2659, 4050, 637, 2651, 2652, 2653, 2550, 2909,
	2996, 3633, 968, 2956, 1892, 1893, 2185, 2613, 968, 968,
	578, 2680, 160, 2560, 2528, 2731, 3691, 1888, 2541, 2596,
	2643, 2544, 2589, 2546, 2647, 2055, 2648, 2578, 4008, 1870,
	2683, 3424, 2685, 2247, 2677, 2527, 2529, 2623, 2656, 3065,
	3649, 3876, 2729, 630, 2113, 1731, 627, 2608, 2663, 3582,
	2665, 1889, 2667, 1869, 2600, 4030, 2601, 2610, 2602, 2722,
	3961, 2625, 2585, 968, 968, 2585, 644, 3910, 2696, 968,
	858, 2676, 2614, 3299, 3877, 2532, 3839, 1870, 2241, 1557,
	2606, 2193, 968, 968, 1734, 2455, 1457, 1638, 968, 968,
	639, 2202, 3513, 2194, 968, 1870, 3528, 2195, 1729, 1527,
	2229, 2200, 2770, 968, 968, 968, 1419, 664, 2444, 968,
	2363, 776, 1792, 1792, 2723, 1908, 1732, 3632, 2679, 968,
	848, 2052, 2460, 3347, 4075, 2210, 1112, 3520, 2047, 1525,
	2658, 2376, 3345, 2929, 2753, 1731, 968, 910, 1907, 2664,
	2690, 2666, 2699, 2668, 1730, 1094, 2689, 1894, 2320, 2320,
	2183, 2744, 2688, 2186, 1470, 1472, 2694, 2726, 1870, 2669,
	2129, 4085, 1584, 1585, 1587, 1588, 1903, 2869, 4055, 846,
	1913, 3429, 2686, 2727, 1734, 1920, 2959, 2732, 3186, 2748,
	2749, 3592, 3270, 1922, 2752, 3418, 4007, 1108, 2361, 2709,
	1877, 1878, 904, 3775, 1783, 1783, 2963, 634, 3130, 2691,
	3842, 2182, 968, 968, 968, 3347, 1732, 1528, 2961, 1485,
	2603, 968, 968, 968, 3345, 1895, 968, 2721, 1904, 3960,
	638, 3361, 1900, 2533, 3583, 1921, 968, 1088, 1152, 3634,
	4019, 3348, 968, 4017, 968, 2964, 1733, 4088, 1996, 849,
	911, 3767, 1088, 2861, 2862, 3856, 1866, 3751, 643, 1568,
	1082, 4056, 1082, 3768, 3990, 768, 2196, 1084, 3378, 1084,
	1152, 641, 3991, 2960, 2759, 2198, 3052, 636, 2320, 2320,
	2320, 847, 1088, 1919, 1957, 1152, 1724, 1106, 1101, 3769,
	570, 850, 3473, 1529, 4058, 3425, 2132, 3134, 1567, 1795,
	1880, 2844, 1837, 1152, 1567, 2883, 3698, 3343, 3697, 3677,
	579, 1562, 4080, 3224, 633, 968, 2902, 2863, 2907, 1866,
	3808, 3532, 3888, 3348, 1834, 3379, 3332, 3285, 3531, 968,
	3053, 3047, 2938, 2897, 665, 666, 1733, 2919, 2934, 2873,
	640, 1795, 2728, 2564, 2868, 2921, 3771, 2554, 2871, 3169,
	1083, 2730, 1977, 645, 1969, 2892, 1962, 968, 2900, 2927,
	2184, 756, 3770, 1944, 635, 1083, 1126, 2896, 3239, 2872,
	3346, 2461, 3131, 580, 2881, 1638, 2930, 2931, 2122, 3772,
	2884, 2885, 3843, 2889, 2091, 2855, 2839, 2840, 2841, 1567,
	1566, 2483, 2324, 1832, 2947, 1083, 1566, 2951, 3381, 2948,
	1152, 2870, 2953, 2954, 1245, 1830, 3605, 2551, 1376, 1272,
	2935, 581, 2877, 582, 1272, 3430, 1833, 2040, 2882, 1257,
	3734, 3917, 2973, 1272, 3732, 2933, 3918, 1272, 3678, 2949,
	1792, 1152, 2945, 1568, 2944, 2904, 2905, 2906, 651, 1568,
	2887, 848, 2888, 2910, 2355, 668, 667, 2714, 2999, 1272,
	2692, 3002, 3346, 3252, 3474, 3010, 3012, 2976, 2975, 1499,
	1272, 3005, 1916, 1868, 2866, 2922, 3005, 3225, 2865, 2400,
	3989, 2399, 2324, 2324, 1088, 3226, 2928, 1789, 2994, 2986,
	4079, 1566, 769, 770, 2987, 2939, 3061, 3033, 3431, 2123,
	3022, 1868, 3530, 2878, 2398, 3046, 2397, 3003, 669, 670,
	908, 2962, 3013, 2969, 1914, 2558, 2980, 1486, 1359, 3815,
	3574, 1345, 1783, 2357, 1272, 1272, 1260, 1260, 2356, 1789,
	3041, 2638, 3070, 1346, 1357, 1910, 774, 3101, 1975, 2983,
	2638, 2989, 3019, 1910, 3024, 1272, 2995, 3008, 3686, 2876,
	3015, 3044, 3014, 1915, 2484, 2485, 2981, 3844, 3622, 3081,
	2982, 4027, 3730, 3675, 2916, 2917, 2481, 2918, 2644, 2536,
	849, 2997, 2965, 2966, 2880, 1257, 2967, 1086, 1152, 3026,
	3896, 1152, 3885, 3891, 3062, 3816, 3480, 3773, 757, 758,
	3088, 657, 3774, 1086, 3054, 2988, 3241, 1083, 2254, 3914,
	3676, 2903, 2324, 2324, 2324, 4029, 2990, 2991, 1544, 660,
	2992, 968, 850, 1257, 3980, 1257, 3108, 968, 968, 3621,
	3067, 968, 968, 968, 3829, 968, 3082, 3086, 3087, 3076,
	3655, 3472, 160, 160, 968, 1795, 3125, 3351, 3687, 911,
	2836, 3146, 3069, 968, 771, 772, 968, 3110, 3099, 2801,
	2733, 2555, 1152, 2508, 2474, 3103, 2422, 2879, 3892, 1764,
	3817, 968, 1760, 3124, 1545, 1443, 2837, 3127, 3115, 1152,
	3116, 3109, 3117, 3126, 1562, 3060, 1542, 1521, 2082, 1795,
	1795, 968, 968, 1519, 968, 968, 968, 3132, 2320, 2320,
	2674, 2673, 2650, 2111, 3915, 1496, 3149, 2093, 3158, 3159,
	3121, 1508, 968, 2060, 1941, 1819, 968, 1670, 1795, 1795,
	968, 968, 968, 968, 968, 968, 968, 968, 968, 968,
	968, 968, 968, 968, 968, 968, 968, 968, 968, 1358,
	968, 3129, 1454, 1494, 1492, 1490, 1332, 968, 968, 1795,
	759, 760, 1488, 1480, 968, 1356, 1478, 773, 1355, 2253,
	3955, 3552, 3541, 2998, 4031, 968, 3884, 3154, 3603, 3557,
	3504, 3377, 3371, 859, 976, 3337, 1088, 1088, 3305, 3303,
	968, 3284, 3122, 1543, 3045, 3165, 2320, 2320, 2320, 2320,
	2320, 2320, 2320, 2320, 2320, 2320, 2320, 2320, 2320, 2320,
	2320, 2320, 2320, 2320, 2320, 3181, 2320, 3037, 2605, 1152,
	2581, 2569, 3188, 1727, 3172, 3174, 3175, 234, 234, 234,
	3166, 573, 574, 1789, 589, 573, 589, 599, 604, 3236,
	2561, 620, 3257, 2142, 3189, 3228, 626, 968, 3078, 3079,
	3080, 3203, 234, 2548, 3083, 3201, 3084, 3198, 3085, 3199,
	2081, 1541, 1520, 968, 968, 3280, 2014, 2012, 1518, 2009,
	753, 3196, 2142, 3204, 2006, 3197, 234, 1789, 1789, 3237,
	1495, 2001, 3248, 3249, 160, 3243, 3229, 2298, 2294, 968,
	968, 1999, 3245, 3246, 1997, 1988, 1571, 1731, 1940, 1083,
	1083, 1938, 3758, 3232, 1926, 1911, 1789, 1789, 1896, 1883,
	1871, 4005, 3057, 1771, 968, 4021, 2712, 3259, 1493, 1491,
	1489, 3260, 864, 866, 868, 3925, 3627, 1487, 1479, 3620,
	3619, 1477, 3176, 1354, 3564, 1063, 1734, 1789, 2639, 1272,
	1856, 1311, 2444, 3009, 2444, 902, 1082, 846, 1920, 3760,
	1729, 2464, 3389, 1084, 1795, 3195, 2442, 1879, 2463, 2292,
	1064, 3317, 1082, 2051, 3313, 3288, 3318, 3320, 1732, 1084,
	904, 3333, 642, 1974, 236, 1395, 2296, 2297, 2295, 1272,
	1539, 1540, 1792, 1396, 573, 573, 968, 2077, 2076, 3327,
	3924, 1572, 234, 2058, 1088, 968, 1730, 2713, 3534, 1578,
	1579, 3559, 1476, 3794, 3481, 3391, 2481, 3459, 3367, 2486,
	2467, 903, 1272, 1272, 1272, 1257, 1575, 3399, 3350, 4023,
	4015, 3985, 2324, 2324, 1792, 584, 2547, 3386, 1272, 2079,
	2513, 3383, 3385, 2291, 2293, 1152, 3354, 2594, 1966, 227,
	3382, 3368, 1827, 3331, 1578, 1579, 1919, 2521, 2520, 847,
	698, 3349, 1396, 2503, 1396, 1065, 739, 1152, 1580, 3369,
	968, 968, 3415, 3330, 1783, 2469, 968, 968, 1795, 3883,
	2638, 968, 968, 1581, 968, 3852, 3372, 595, 968, 1863,
	2505, 3276, 3384, 567, 1864, 3849, 2471, 3403, 1733, 968,
	3392, 3814, 3387, 2504, 3393, 3727, 2370, 3370, 2939, 2470,
	3360, 3267, 2588, 1580, 2342, 968, 1783, 1083, 3398, 1822,
	2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324,
	2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 3441,
	2324, 3413, 1789, 3432, 1776, 3433, 3409, 4052, 3416, 3406,
	3426, 3410, 1257, 1257, 3421, 3684, 2908, 931, 3917, 3445,
	3404, 3405, 4078, 3918, 3851, 2807, 2808, 1578, 1579, 3412,
	2436, 2437, 2434, 2435, 1464, 1088, 1282, 3451, 2249, 3272,
	1463, 2436, 4033, 1088, 2434, 2282, 3748, 1152, 1523, 1152,
	3715, 1522, 1865, 3560, 3556, 3555, 1088, 3447, 3375, 3271,
	3177, 3000, 1664, 1663, 4066, 3486, 1152, 4038, 1867, 3304,
	3805, 3306, 3711, 3669, 3667, 3589, 3497, 3414, 3395, 848,
	3355, 3353, 3471, 3301, 1086, 968, 3296, 3077, 3051, 1257,
	3050, 2671, 2655, 3525, 2654, 2598, 2573, 2549, 2415, 1086,
	2414, 2214, 2078, 3417, 2075, 2074, 2073, 2072, 1991, 1990,
	3526, 1989, 1152, 1972, 1952, 1951, 1789, 3501, 3502, 1152,
	1947, 1946, 1945, 3537, 3538, 3489, 3485, 1943, 3336, 1086,
	1869, 3482, 1942, 3488, 3492, 3483, 3484, 1538, 3535, 3487,
	3478, 2896, 1272, 1272, 3536, 160, 3503, 3493, 1083, 1537,
	1383, 1382, 1381, 1380, 1379, 1378, 1083, 1377, 1375, 1370,
	1369, 3524, 1368, 1367, 1366, 1327, 1326, 1325, 1152, 1083,
	3561, 1324, 3562, 1272, 1323, 1322, 3570, 1316, 1792, 1310,
	3563, 1308, 1307, 1143, 3572, 1142, 1141, 1140, 1111, 1110,
	1046, 3540, 1828, 3575, 870, 856, 901, 3554, 849, 968,
	3397, 3549, 3548, 3689, 3550, 3518, 3571, 3623, 1532, 3551,
	82, 1318, 685, 76, 3569, 1152, 1917, 3300, 829, 3913,
	1304, 3835, 1792, 1792, 1769, 3607, 3626, 968, 968, 968,
	1099, 3610, 3615, 3576, 3606, 1870, 693, 3898, 3591, 3594,
	850, 2955, 2524, 2059, 1484, 1152, 3601, 2061, 2891, 3596,
	968, 1792, 1792, 968, 968, 2383, 3608, 3875, 1109, 3455,
	1783, 2769, 3801, 968, 3648, 620, 1795, 2252, 1668, 2848,
	78, 968, 968, 1860, 952, 998, 3581, 3580, 3505, 3629,
	3287, 2628, 1792, 3578, 3577, 1780, 1152, 1782, 234, 3645,
	234, 234, 1248, 918, 234, 234, 1263, 3635, 1155, 1152,
	1838, 3640, 958, 1854, 1783, 1783, 1847, 968, 2416, 234,
	2302, 1284, 1861, 975, 968, 972, 1784, 1786, 974, 973,
	1785, 1086, 968, 1687, 1795, 971, 3651, 3657, 1779, 2320,
	3374, 3373, 968, 1783, 1783, 968, 1313, 2557, 2592, 1362,
	831, 1842, 2208, 968, 2236, 3671, 2758, 3662, 1661, 1331,
	1152, 1263, 933, 3584, 234, 234, 954, 1248, 1272, 1272,
	2233, 3666, 1104, 3595, 1783, 3710, 3670, 234, 3672, 3663,
	3664, 943, 2874, 2320, 3694, 1372, 3064, 3266, 3611, 2121,
	701, 3693, 2804, 3614, 2239, 1097, 1866, 234, 234, 234,
	2325, 1248, 234, 1263, 1152, 3720, 3742, 1272, 2318, 2314,
	3733, 2582, 1548, 620, 3708, 234, 234, 1260, 1640, 2593,
	1138, 3712, 936, 2206, 1652, 968, 968, 3723, 2738, 3717,
	3722, 2131, 3725, 3778, 3779, 3033, 3747, 3759, 753, 968,
	968, 3731, 3746, 1082, 3071, 2894, 3726, 2409, 3921, 3741,
	1084, 3185, 3757, 1956, 1789, 1062, 968, 1795, 1082, 3755,
	1061, 1060, 3904, 1966, 3762, 1084, 3756, 3901, 3754, 3407,
	931, 3610, 3761, 3031, 931, 1831, 3776, 2428, 3700, 1630,
	968, 3038, 3753, 968, 948, 1256, 2859, 1792, 1082, 1236,
	3102, 3763, 3789, 1236, 1329, 1084, 625, 960, 1629, 3793,
	2531, 3782, 968, 3807, 234, 3818, 2530, 3811, 1125, 1124,
	3824, 1123, 1789, 2937, 3790, 3791, 4086, 3806, 3799, 3297,
	204, 234, 2320, 2706, 1569, 1561, 201, 203, 202, 3585,
	3983, 3315, 3023, 20, 19, 18, 103, 39, 17, 116,
	968, 968, 3823, 3838, 132, 131, 130, 129, 128, 134,
	968, 127, 126, 968, 121, 1272, 125, 124, 3853, 3831,
	123, 3855, 122, 120, 119, 1272, 1272, 118, 117, 1783,
	115, 114, 113, 3833, 112, 111, 110, 109, 3846, 3847,
	108, 3866, 1272, 107, 3850, 3845, 106, 105, 104, 616,
	613, 55, 54, 3746, 3858, 968, 968, 102, 101, 3864,
	3865, 1792, 16, 37, 3863, 14, 59, 3857, 60, 3862,
	3871, 1150, 3872, 1086, 1086, 1251, 3869, 13, 32, 3870,
	3893, 81, 93, 92, 33, 90, 89, 3880, 968, 968,
	31, 968, 15, 87, 86, 1789, 30, 3895, 28, 11,
	9, 3903, 3906, 8, 3894, 34, 3919, 1748, 12, 5,
	165, 164, 167, 2324, 163, 166, 80, 162, 161, 3908,
	79, 26, 10, 3702, 3703, 3926, 157, 3743, 3365, 3938,
	3879, 3939, 3519, 74, 159, 3912, 158, 968, 968, 968,
	1082, 156, 3940, 1783, 155, 3923, 3716, 1084, 3935, 3718,
	3719, 3930, 3933, 154, 75, 2735, 2736, 2324, 3967, 72,
	968, 3515, 153, 3907, 3972, 3508, 3911, 152, 73, 3954,
	3951, 3952, 3953, 151, 24, 6, 58, 573, 7, 3630,
	3111, 3506, 96, 97, 35, 70, 69, 3510, 3992, 1411,
	3837, 68, 23, 3994, 3996, 57, 22, 3970, 234, 194,
	234, 193, 4002, 1966, 234, 192, 191, 3516, 968, 190,
	189, 3993, 184, 183, 188, 4001, 1260, 1284, 1248, 234,
	4006, 234, 186, 3998, 185, 187, 234, 1284, 589, 182,
	196, 234, 1284, 195, 4012, 4013, 198, 620, 4018, 2594,
	4016, 4022, 181, 4014, 179, 3509, 4026, 175, 174, 4025,
	3903, 4024, 178, 3906, 180, 4028, 968, 4041, 968, 4035,
	177, 4040, 176, 4046, 4042, 4032, 4044, 4039, 173, 3999,
	4000, 4034, 4045, 4043, 4003, 2830, 2831, 2832, 197, 4047,
	149, 1086, 150, 65, 148, 147, 146, 145, 144, 143,
	4061, 4059, 142, 3923, 64, 21, 2324, 2, 1, 0,
	0, 0, 0, 0, 0, 4070, 0, 4067, 3832, 4073,
	0, 0, 3927, 968, 968, 3928, 0, 0, 4068, 0,
	4072, 968, 0, 968, 968, 4076, 4082, 0, 0, 0,
	4089, 0, 0, 4090, 4092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4091, 1726, 0, 4093, 0, 0,
	0, 0, 4096, 4099, 0, 0, 4101, 0, 0, 0,
	0, 0, 4105, 4098, 4103, 0, 4108, 968, 0, 4100,
	0, 3511, 0, 0, 4113, 3512, 4104, 0, 0, 4109,
	2324, 2324, 4111, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 1578, 1579, 4083, 4084,
	0, 0, 234, 0, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 0,
	3514, 0, 1082, 1082, 0, 1581, 0, 0, 0, 1084,
	1084, 0, 0, 0, 3517, 0, 0, 0, 0, 0,
	0, 0, 4110, 0, 0, 0, 0, 1792, 931, 0,
	0, 0, 1086, 234, 1236, 1580, 0, 234, 0, 0,
	1086, 234, 0, 0, 0, 1600, 0, 0, 0, 0,
	0, 1783, 0, 1086, 0, 0, 0, 0, 0, 234,
	0, 234, 0, 234, 0, 0, 0, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3982, 1992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1257, 0, 0, 917, 234,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 1603, 1604, 1605,
	1606, 0, 3513, 0, 0, 0, 0, 1586, 0, 0,
	620, 0, 0, 0, 753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 1858, 3520, 0, 234,
	0, 1248, 234, 0, 0, 1608, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 1260,
	1236, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 234, 0, 234, 0, 234, 0, 234, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1082, 0, 0, 0, 0, 0, 0, 1084, 1601, 0,
	2087, 0, 0, 2088, 0, 2089, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3142, 3143, 0, 604, 0,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3205, 3206, 3207, 3208, 3209, 3210, 3211,
	3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221,
	3222, 3223, 0, 3227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 0, 0, 0, 1084, 1082,
	0, 0, 0, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 1082, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 573,
	0, 2807, 2808, 0, 2825, 2826, 2827, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 3437, 573, 1306, 0, 0, 0, 0, 0,
	234, 0, 573, 0, 0, 1591, 1589, 1590, 1582, 1583,
	1584, 1585, 1587, 1588, 234, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 1236, 0, 0, 1578, 1579,
	0, 1611, 1612, 1613, 1621, 1622, 1623, 0, 0, 0,
	2822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1609, 0, 0, 0, 0, 0, 0, 1581, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 1427,
	0, 0, 0, 0, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 1441, 0, 2807, 2808, 1580, 2825, 2826,
	2827, 917, 0, 0, 0, 917, 0, 1600, 0, 0,
	0, 0, 0, 0, 0, 1597, 3151, 0, 0, 0,
	0, 0, 1236, 0, 0, 0, 0, 0, 2453, 0,
	0, 0, 2813, 0, 0, 0, 234, 0, 0, 0,
	0, 1465, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 1286, 0, 1292, 0, 1298, 0, 2145, 0, 0,
	0, 234, 0, 0, 2822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 1603,
	1604, 1605, 1606, 0, 0, 2828, 0, 0, 0, 1586,
	0, 1236, 0, 0, 0, 0, 234, 2539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1236, 1618, 0,
	0, 1628, 1284, 2823, 0, 234, 1412, 1608, 1610, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 2577, 0,
	0, 0, 0, 1430, 2250, 1435, 2813, 0, 2453, 0,
	573, 1595, 1596, 2597, 0, 1444, 0, 1449, 0, 234,
	0, 0, 234, 0, 234, 0, 234, 0, 0, 1616,
	0, 1248, 0, 234, 234, 0, 1263, 1263, 0, 0,
	1601, 0, 0, 0, 0, 0, 2621, 753, 0, 2453,
	2453, 0, 0, 0, 0, 0, 0, 0, 0, 2828,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 1236, 1504, 0, 0, 1510, 0, 0, 0,
	234, 1248, 234, 0, 0, 1284, 0, 1284, 0, 0,
	1248, 0, 1248, 0, 1248, 0, 2824, 2823, 0, 2393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	234, 234, 234, 1248, 234, 0, 234, 1236, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 1602, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 67, 234, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 0, 0, 0, 0, 71, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2439, 0, 0, 1649, 0, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 1578, 1579,
	2824, 0, 77, 2819, 2820, 2821, 0, 0, 0, 0,
	2818, 2816, 2817, 2809, 2810, 2811, 2812, 2814, 2815, 0,
	1609, 0, 0, 0, 0, 0, 0, 1581, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 0, 0, 0,
	0, 0, 0, 0, 1284, 0, 0, 0, 0, 98,
	0, 0, 0, 0, 84, 95, 1617, 1580, 0, 0,
	1592, 1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 0, 0, 2807, 2808,
	0, 2825, 2826, 2827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 1720, 1720, 3150,
	0, 0, 0, 85, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3654, 2819, 2820, 2821,
	67, 0, 0, 0, 2818, 2816, 2817, 2809, 2810, 2811,
	2812, 2814, 2815, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2822, 0, 1586,
	0, 0, 0, 0, 0, 1441, 1441, 0, 0, 0,
	3680, 234, 0, 0, 0, 0, 0, 0, 77, 917,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 573, 0, 0, 0, 0, 573, 1608, 1610, 573,
	0, 0, 573, 573, 0, 0, 0, 0, 573, 0,
	0, 0, 83, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 0, 0, 1284, 0,
	84, 95, 88, 0, 0, 0, 0, 0, 0, 2813,
	0, 0, 0, 0, 0, 0, 0, 1284, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2453, 2453, 234, 0,
	1263, 168, 91, 2453, 94, 0, 2941, 0, 0, 85,
	0, 0, 0, 0, 2453, 2941, 0, 2453, 2941, 2941,
	0, 0, 2828, 0, 0, 0, 0, 0, 205, 0,
	0, 234, 234, 1263, 234, 0, 748, 0, 0, 3798,
	133, 0, 0, 0, 0, 0, 2019, 0, 0, 0,
	0, 0, 0, 0, 1263, 234, 1248, 0, 0, 0,
	2823, 0, 0, 2032, 0, 0, 207, 0, 2453, 0,
	3001, 2453, 1263, 2033, 0, 2453, 2453, 1263, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 2043, 2044, 0,
	135, 0, 1236, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 3027, 172, 0, 3029, 2453, 0, 0,
	234, 0, 206, 0, 234, 0, 1263, 0, 0, 0,
	0, 0, 199, 0, 1236, 0, 0, 0, 88, 0,
	200, 0, 0, 2577, 0, 0, 1248, 0, 234, 1236,
	0, 2453, 0, 573, 0, 0, 0, 0, 0, 0,
	2453, 0, 171, 0, 0, 0, 0, 1236, 0, 234,
	234, 0, 0, 0, 66, 0, 0, 168, 91, 931,
	94, 0, 0, 2824, 0, 0, 0, 0, 0, 0,
	67, 0, 0, 931, 0, 0, 234, 2577, 0, 0,
	2577, 0, 0, 71, 205, 0, 0, 0, 0, 0,
	0, 0, 748, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 2860, 0, 0, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 0, 0, 77, 0,
	3120, 0, 207, 1248, 234, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2886, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 135, 0, 0, 0,
	0, 2899, 83, 0, 0, 0, 0, 0, 0, 234,
	172, 0, 0, 0, 0, 98, 0, 0, 206, 2914,
	84, 95, 0, 0, 0, 1236, 0, 0, 199, 0,
	2819, 2820, 2821, 0, 0, 0, 200, 2818, 2816, 2817,
	2809, 2810, 2811, 2812, 2814, 2815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1424, 0,
	0, 0, 0, 0, 0, 3183, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2120, 0, 2124, 0, 0, 0, 0, 0,
	0, 2138, 0, 0, 0, 0, 0, 0, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 0, 2187, 0, 2189, 2190, 2191, 2192,
	0, 0, 0, 0, 0, 0, 0, 2899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 0,
	234, 234, 1236, 0, 0, 1236, 0, 0, 0, 1649,
	0, 0, 0, 2231, 0, 0, 0, 0, 0, 0,
	0, 0, 573, 573, 0, 0, 0, 0, 88, 2261,
	2264, 2267, 2270, 0, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 0, 0, 2807, 2808, 0, 2825, 2826, 2827, 0,
	0, 0, 0, 0, 0, 1284, 0, 0, 0, 0,
	0, 0, 2316, 0, 2327, 2329, 2334, 168, 91, 0,
	94, 0, 0, 0, 0, 0, 1236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1236, 205, 0, 0, 0, 0, 0,
	0, 0, 748, 0, 0, 620, 133, 0, 0, 0,
	0, 0, 2822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 2534, 1150, 0, 0,
	0, 0, 207, 0, 234, 0, 0, 0, 0, 0,
	1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 1614, 1609, 234, 0, 0, 0, 0, 0, 1581,
	172, 0, 234, 0, 0, 0, 1627, 0, 206, 0,
	234, 0, 0, 0, 0, 0, 0, 234, 199, 0,
	0, 0, 0, 0, 2813, 0, 200, 0, 3162, 1580,
	0, 0, 0, 0, 0, 0, 0, 2453, 234, 1600,
	0, 0, 0, 2611, 0, 3178, 0, 1597, 1422, 0,
	0, 0, 0, 1236, 2621, 2621, 2829, 0, 1441, 0,
	753, 753, 2453, 0, 0, 2577, 2577, 0, 0, 753,
	2453, 0, 0, 0, 0, 0, 0, 2828, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 1605, 1606, 2823, 0, 0, 0, 0,
	0, 1586, 2542, 2543, 0, 2545, 0, 0, 0, 0,
	0, 0, 0, 2807, 2808, 0, 2825, 2826, 2827, 0,
	0, 0, 235, 235, 235, 0, 0, 3456, 0, 0,
	1618, 0, 0, 1628, 0, 0, 0, 0, 0, 1608,
	1610, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 1624, 3269, 1625, 0, 0, 0,
	0, 0, 0, 1595, 1596, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 2822, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 1601, 0, 0, 1284, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2824, 0,
	234, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2453, 2453, 2453,
	0, 0, 0, 0, 1615, 0, 0, 0, 0, 0,
	1284, 0, 0, 2670, 0, 0, 0, 0, 2453, 1236,
	2941, 0, 0, 1284, 1284, 234, 1263, 0, 0, 0,
	0, 0, 0, 0, 2813, 0, 0, 1263, 234, 1263,
	234, 1236, 0, 0, 0, 0, 0, 0, 0, 0,
	2453, 0, 2453, 234, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 1631, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 2453, 0, 1602, 0, 3587, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 2828, 0, 0,
	0, 0, 0, 234, 0, 2819, 2820, 2821, 0, 0,
	1619, 0, 2818, 2816, 2817, 2809, 2810, 2811, 2812, 2814,
	2815, 0, 0, 0, 0, 0, 0, 0, 2718, 2719,
	0, 0, 0, 0, 2725, 2823, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2739, 2740, 0, 0, 0, 0, 2231,
	0, 0, 0, 0, 0, 0, 0, 0, 2747, 0,
	0, 1236, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2761, 0, 0, 0, 0, 0,
	1236, 0, 0, 0, 0, 0, 0, 0, 1617, 0,
	0, 2773, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591,
	1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 0,
	0, 0, 2782, 0, 0, 0, 2783, 0, 0, 2453,
	0, 2941, 0, 0, 3674, 0, 1236, 0, 0, 0,
	0, 0, 234, 1236, 0, 0, 0, 0, 2824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 2334, 2334, 2334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 1236, 0, 0, 3491, 0, 0, 0, 2864,
	0, 0, 0, 0, 0, 0, 0, 3674, 0, 0,
	0, 0, 3499, 0, 0, 2453, 0, 0, 0, 0,
	0, 0, 3016, 0, 0, 3750, 1441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1284, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 0, 3042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3048,
	0, 234, 234, 0, 0, 2819, 2820, 2821, 0, 1236,
	917, 0, 2818, 2816, 2817, 2809, 2810, 2811, 2812, 2814,
	2815, 0, 0, 0, 917, 3183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1236, 0, 2958, 3094, 3095, 0, 0, 0, 0, 0,
	0, 0, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 931,
	0, 1150, 0, 3587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 2941, 0, 0, 0, 0,
	0, 3646, 0, 235, 1156, 235, 235, 0, 1156, 235,
	235, 0, 1156, 0, 0, 0, 0, 0, 0, 0,
	1284, 0, 1284, 0, 235, 0, 0, 0, 1236, 0,
	0, 2807, 2808, 0, 2825, 2826, 2827, 0, 0, 0,
	0, 0, 3646, 0, 1156, 0, 0, 3889, 0, 0,
	0, 0, 0, 0, 1284, 2145, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1156, 235,
	235, 0, 0, 0, 234, 2453, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	2822, 0, 235, 235, 235, 0, 2145, 235, 0, 1156,
	0, 0, 0, 0, 0, 1156, 0, 3183, 0, 1156,
	235, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2138, 0, 0, 2453,
	0, 0, 3137, 3138, 1078, 0, 3141, 0, 0, 0,
	3144, 1156, 2813, 0, 0, 0, 0, 0, 0, 3148,
	3674, 0, 0, 0, 0, 0, 0, 0, 3155, 0,
	0, 2864, 0, 0, 0, 1578, 1579, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 3167, 229, 229, 569,
	0, 1284, 0, 2453, 0, 0, 235, 1609, 0, 0,
	0, 0, 0, 0, 1581, 0, 3190, 3191, 0, 3192,
	3193, 3194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 0, 3200, 0, 0,
	0, 3202, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 0, 0, 2823, 1600, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3230, 3231, 1578, 1579, 0, 1611, 1612, 1613,
	1621, 1622, 1623, 0, 0, 0, 0, 0, 0, 0,
	3242, 0, 0, 0, 0, 1614, 1609, 0, 3340, 0,
	2621, 0, 0, 1581, 0, 3251, 3145, 0, 0, 0,
	1627, 0, 2621, 0, 964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 1604, 1605, 1606,
	0, 0, 0, 1580, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 1600, 0, 0, 0, 0, 0, 0,
	0, 1597, 0, 0, 0, 0, 0, 233, 233, 233,
	0, 0, 3281, 0, 0, 0, 2824, 0, 0, 0,
	0, 3400, 3401, 3402, 1608, 1610, 0, 0, 3290, 3293,
	0, 0, 658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 1596,
	0, 0, 0, 0, 0, 3314, 658, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1604, 1605, 1606, 0,
	0, 0, 0, 0, 0, 1586, 0, 1601, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 0, 0, 235, 235, 235, 0, 0, 0,
	0, 235, 0, 0, 1618, 0, 235, 1628, 0, 0,
	0, 0, 0, 1608, 1610, 0, 0, 0, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 0,
	1625, 0, 0, 2819, 2820, 2821, 0, 1595, 1596, 1156,
	2818, 2816, 2817, 2809, 2810, 2811, 2812, 2814, 2815, 0,
	0, 1720, 0, 0, 0, 1616, 0, 0, 0, 0,
	3394, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	1607, 0, 1085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1602, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3434, 3435, 0, 0, 0,
	0, 3439, 3440, 0, 0, 0, 3443, 3444, 0, 0,
	0, 0, 0, 3448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3452, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3457, 0, 0, 0, 0, 1156, 1156, 235, 0, 1602,
	0, 0, 1441, 0, 0, 1156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584,
	1585, 1587, 1588, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 235, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 235, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1617, 0, 235, 0, 1592, 1593, 1599, 1620,
	1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585,
	1587, 1588, 0, 0, 0, 0, 2227, 0, 0, 0,
	2228, 0, 1156, 0, 1156, 0, 1156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1147, 0,
	0, 0, 1156, 1156, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 1156, 235, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 1156, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 235, 0, 235,
	0, 235, 0, 235, 3293, 235, 0, 3724, 1441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1364, 0, 0,
	0, 0, 3641, 3642, 3643, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 1387, 1387, 1387,
	0, 0, 0, 0, 0, 2138, 0, 0, 3652, 3653,
	0, 0, 0, 0, 0, 1428, 1429, 0, 0, 0,
	0, 0, 0, 953, 100, 0, 3661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	233, 233, 0, 0, 233, 233, 0, 0, 0, 3293,
	0, 0, 0, 0, 0, 0, 0, 3699, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 3706, 0, 0,
	917, 0, 0, 0, 0, 0, 0, 0, 3713, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 233, 0, 1156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 233, 233,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	3293, 3293, 0, 0, 0, 233, 233, 0, 0, 0,
	0, 0, 0, 0, 892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 912, 1156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 1156, 0, 0, 3810, 0, 0, 3813, 0,
	0, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3293, 0, 0,
	0, 0, 0, 1578, 1579, 0, 0, 0, 0, 1621,
	1622, 1623, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1609, 0, 0, 0, 0,
	0, 233, 1581, 0, 0, 0, 0, 1156, 0, 1627,
	0, 0, 0, 0, 0, 3293, 0, 0, 3293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1580, 0, 0, 0, 0, 1156, 0, 0,
	0, 0, 1600, 0, 0, 0, 0, 0, 0, 0,
	1597, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2138, 0, 235, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 1767,
	0, 1255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 1156, 0, 917, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 0, 0,
	0, 235, 0, 0, 1603, 1604, 1605, 1606, 0, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 3950, 3950, 3950, 0, 0, 235, 0, 0,
	0, 0, 0, 1618, 0, 0, 1628, 0, 0, 0,
	0, 0, 1608, 1610, 0, 3971, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 235, 0, 235,
	0, 235, 0, 0, 0, 0, 1595, 1596, 235, 235,
	0, 0, 0, 1156, 1156, 0, 1156, 0, 0, 0,
	0, 0, 0, 0, 1616, 0, 0, 0, 1156, 0,
	0, 0, 0, 3950, 0, 1601, 0, 0, 1742, 235,
	1085, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 235, 0, 233,
	1742, 233, 0, 0, 0, 0, 658, 0, 0, 0,
	0, 658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3293, 0, 3293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 235, 235, 235, 0, 235,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 235, 1954, 0, 0, 0, 1961, 3950, 4077,
	235, 0, 0, 0, 0, 0, 4081, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	0, 1980, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 100, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 1617, 2037, 0, 0, 0, 0, 0, 1620, 1598,
	1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587,
	1588, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 233, 2066, 0, 2068, 233, 2070, 0,
	2071, 233, 0, 0, 0, 100, 0, 0, 0, 912,
	100, 100, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 233, 100, 233, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 100, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1156, 1578, 1579,
	0, 1611, 1612, 1613, 1621, 1622, 1623, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	1609, 0, 0, 0, 0, 0, 0, 1581, 0, 1156,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1580, 0, 0,
	0, 0, 1156, 0, 0, 0, 0, 1600, 0, 233,
	0, 0, 233, 0, 0, 1597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 235, 0, 0, 0, 0, 0, 0,
	0, 658, 233, 0, 233, 0, 233, 0, 233, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 235, 892, 235,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 1603,
	1604, 1605, 1606, 0, 0, 0, 0, 233, 1643, 1586,
	235, 0, 0, 0, 0, 0, 0, 1000, 0, 1156,
	0, 0, 0, 0, 0, 1648, 0, 0, 1156, 1654,
	0, 0, 0, 1156, 0, 0, 0, 0, 1618, 0,
	0, 1628, 1156, 0, 0, 0, 1156, 1608, 1610, 0,
	1156, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 1624, 0, 1625, 235, 0, 0, 1156, 235,
	0, 1595, 1596, 0, 2390, 0, 0, 0, 0, 1156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 1578, 1579, 0, 0,
	0, 0, 0, 0, 235, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 1609, 0,
	0, 0, 0, 1156, 1156, 1581, 0, 0, 0, 0,
	0, 235, 1615, 0, 0, 0, 0, 1740, 0, 1743,
	0, 100, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 1156, 0, 235,
	1156, 235, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	1085, 0, 0, 0, 235, 1089, 1255, 3140, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 1604, 1605,
	1606, 0, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 1156, 0,
	0, 0, 2568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2599,
	0, 0, 1387, 0, 1387, 0, 1387, 0, 0, 1595,
	1596, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	1592, 1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 233, 0, 1601, 0,
	3890, 0, 0, 0, 2649, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2657, 233, 2660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 1156, 2682,
	1255, 2684, 1255, 0, 2687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 1607, 233, 0, 0, 0, 0, 1387, 0, 0,
	0, 0, 0, 0, 0, 2715, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 233, 0, 233, 0, 233, 0, 0, 0,
	0, 0, 0, 233, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 912, 0, 912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1156, 0,
	233, 0, 233, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 1156, 233,
	233, 233, 233, 0, 233, 0, 233, 0, 0, 0,
	0, 0, 1598, 1594, 0, 1591, 1589, 1590, 1582, 1583,
	1584, 1585, 1587, 1588, 0, 0, 0, 0, 0, 0,
	0, 1156, 1156, 1156, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 1156, 0, 0,
	0, 0, 0, 235, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 892, 0, 1156, 892, 892, 0,
	0, 0, 1089, 0, 0, 0, 1089, 0, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 912, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 2932, 0,
	0, 0, 0, 1089, 0, 0, 1156, 1089, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 1156, 0, 0, 0, 0,
	0, 2972, 2974, 0, 2568, 0, 0, 0, 0, 0,
	0, 0, 0, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 0, 0, 0, 1743,
	235, 1085, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 1156, 0, 235, 0, 235, 1085, 0, 1156, 650,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1156, 1156, 0, 0, 0, 1742, 0, 0, 0,
	3039, 0, 0, 0, 3043, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 1156, 235, 0,
	0, 0, 1156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 1255,
	1255, 1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623,
	0, 0, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 1614, 1609, 0, 0, 3098, 0, 100, 0,
	1581, 233, 233, 0, 233, 0, 0, 1627, 0, 0,
	0, 1742, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 100,
	1580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1600, 0, 0, 0, 3123, 0, 1255, 0, 1597, 0,
	0, 0, 0, 0, 0, 1156, 0, 0, 0, 100,
	0, 0, 100, 0, 100, 0, 0, 0, 1156, 0,
	0, 0, 658, 0, 0, 0, 0, 235, 0, 3135,
	233, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 100, 0, 1085, 0,
	0, 0, 1603, 1604, 1605, 1606, 0, 0, 0, 1156,
	0, 0, 1586, 0, 0, 0, 0, 1156, 1156, 233,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 1089, 0, 1089, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 1628, 0, 233, 0, 1089, 0,
	1608, 1610, 0, 1156, 0, 0, 1156, 0, 0, 0,
	0, 0, 0, 1796, 0, 1624, 0, 1625, 0, 0,
	0, 0, 0, 0, 1595, 1596, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 235, 0, 0,
	100, 0, 1616, 0, 233, 0, 233, 1089, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	2205, 235, 0, 0, 1156, 0, 0, 0, 0, 677,
	0, 695, 0, 0, 1156, 1156, 1602, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 1578, 1579,
	0, 1156, 0, 1089, 1089, 678, 0, 0, 679, 0,
	0, 1619, 0, 1089, 0, 0, 0, 0, 0, 0,
	1609, 0, 0, 0, 0, 702, 0, 1581, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 700, 0, 0, 0, 0, 0, 0,
	1085, 1085, 0, 2568, 0, 0, 0, 1580, 0, 235,
	0, 0, 3364, 0, 0, 681, 0, 1600, 0, 0,
	0, 0, 0, 0, 0, 1597, 235, 3376, 0, 0,
	0, 0, 0, 0, 0, 682, 0, 0, 683, 0,
	0, 0, 1153, 704, 0, 0, 1153, 644, 0, 1617,
	1273, 0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0,
	1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 3139,
	0, 0, 0, 0, 0, 0, 0, 3462, 0, 0,
	1072, 0, 1273, 0, 0, 0, 0, 0, 3419, 1603,
	1604, 1605, 1606, 0, 0, 1072, 0, 0, 0, 1586,
	1089, 0, 1089, 0, 1089, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 703, 0, 0, 0, 0,
	1089, 1089, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 233, 0, 0, 1608, 1610, 0,
	0, 0, 0, 0, 1089, 1089, 1089, 1273, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 1273, 0, 0,
	0, 1595, 1596, 233, 684, 0, 0, 0, 0, 0,
	0, 1273, 233, 0, 0, 687, 0, 0, 0, 0,
	233, 0, 0, 0, 1578, 1579, 0, 233, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 0, 100, 100, 0, 1609, 100, 1085, 0,
	0, 0, 0, 1581, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 0, 0, 0, 100, 100, 0,
	674, 100, 696, 1580, 0, 0, 0, 0, 233, 0,
	0, 689, 0, 1600, 0, 0, 1796, 1796, 1089, 0,
	0, 1597, 0, 0, 0, 0, 0, 0, 0, 0,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 690, 3539, 0, 707, 0, 706,
	0, 0, 0, 691, 0, 0, 0, 0, 2568, 0,
	0, 0, 0, 1602, 0, 2724, 692, 0, 0, 0,
	0, 699, 0, 0, 0, 0, 708, 1072, 705, 0,
	912, 0, 0, 0, 645, 1603, 1604, 1605, 1606, 0,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 0,
	1578, 1579, 0, 0, 0, 1089, 2568, 0, 0, 100,
	100, 0, 0, 3602, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 1581,
	0, 0, 0, 1608, 1610, 0, 0, 0, 0, 1085,
	0, 0, 0, 0, 0, 0, 0, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 1596, 1580,
	1742, 0, 0, 0, 0, 0, 0, 1089, 0, 1600,
	0, 0, 0, 0, 1089, 0, 0, 1597, 0, 0,
	0, 0, 0, 1089, 1598, 1594, 1601, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	233, 2717, 0, 0, 1154, 0, 0, 0, 1154, 0,
	0, 0, 1274, 233, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 1605, 1606, 0, 0, 0, 0, 0,
	0, 1586, 3681, 0, 0, 0, 0, 0, 1153, 0,
	0, 0, 0, 0, 1274, 1089, 233, 0, 0, 650,
	0, 0, 0, 233, 650, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 1273, 0, 1274, 1608,
	1610, 0, 0, 0, 0, 1089, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 1153, 0, 0,
	0, 0, 0, 1595, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 1274, 0, 0, 0, 1274,
	0, 100, 1601, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 1274, 0, 0, 0, 0, 0, 1072,
	1072, 0, 0, 0, 1089, 0, 0, 0, 0, 0,
	0, 3788, 1255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585,
	1587, 1588, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 1273, 1273, 0, 0, 0, 0, 0,
	0, 1089, 1089, 1153, 1089, 1602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3897, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1072, 0, 0,
	0, 0, 0, 0, 3920, 0, 1598, 1594, 0, 1591,
	1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 0,
	1273, 3932, 1273, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	1273, 1273, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 1273, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 1579,
	0, 1611, 1612, 1613, 1621, 1622, 1623, 0, 0, 0,
	1154, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	1609, 0, 0, 0, 0, 0, 0, 1581, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 1578, 1579,
	0, 1611, 1612, 1613, 1621, 1622, 1623, 1580, 0, 1154,
	0, 0, 100, 0, 233, 0, 0, 1600, 1072, 1614,
	1609, 0, 0, 0, 0, 1597, 1072, 1581, 1153, 1578,
	1579, 233, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 0, 1580, 1581, 0,
	0, 0, 0, 0, 1089, 1089, 0, 1600, 0, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 1580, 1603,
	1604, 1605, 1606, 0, 0, 0, 0, 1089, 1600, 1586,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 1089,
	0, 0, 1089, 0, 0, 1153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 1618, 0,
	1089, 1628, 0, 0, 100, 0, 0, 1608, 1610, 1603,
	1604, 1605, 1606, 0, 100, 1274, 1274, 0, 0, 1586,
	0, 0, 1624, 0, 1625, 1154, 0, 0, 0, 0,
	0, 1595, 1596, 0, 100, 0, 0, 0, 1796, 0,
	1603, 1604, 1605, 1606, 0, 0, 0, 0, 1618, 1616,
	1586, 1628, 0, 0, 1153, 0, 0, 1608, 1610, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 0, 1625, 0, 0, 0, 0, 0,
	1153, 1595, 1596, 0, 0, 1626, 0, 0, 1608, 1610,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 1616,
	0, 0, 1615, 0, 0, 0, 1089, 0, 0, 0,
	1601, 1089, 1595, 1596, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 1089, 0, 0, 0, 1089, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 1601, 0, 0, 0, 1273, 1089, 0, 0, 0,
	0, 0, 1615, 1607, 0, 0, 0, 1089, 0, 0,
	0, 0, 1274, 0, 1274, 0, 1274, 0, 0, 0,
	0, 1089, 0, 1602, 0, 1153, 0, 0, 0, 0,
	0, 0, 1274, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 1607, 0, 0, 1274, 1274, 1274, 0,
	0, 1089, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	1153, 0, 1089, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	2205, 0, 0, 0, 0, 1089, 0, 0, 1089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	1592, 1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 0, 0, 0, 0,
	0, 0, 0, 0, 3153, 0, 0, 0, 0, 0,
	1154, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 1273, 0, 1273, 0, 1617, 0, 0, 1089,
	1592, 1593, 1599, 1620, 1598, 1594, 1273, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 1089, 0, 0, 0,
	0, 0, 0, 0, 2785, 0, 1796, 1796, 0, 0,
	0, 100, 0, 0, 0, 1598, 1594, 0, 1591, 1589,
	1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 141, 0, 0, 0, 0, 0, 0, 66,
	0, 43, 42, 1089, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 61, 0,
	0, 0, 0, 100, 0, 45, 100, 138, 0, 0,
	0, 0, 1154, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 62, 0, 0, 0,
	0, 0, 48, 0, 0, 0, 0, 83, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 46, 0,
	98, 0, 0, 0, 0, 84, 95, 1274, 0, 0,
	0, 0, 1578, 1579, 0, 1611, 1612, 1613, 1621, 1622,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 1609, 0, 49, 1154, 0, 0,
	0, 1581, 0, 0, 0, 0, 1089, 0, 1627, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1600, 0, 0, 0, 0, 1089, 0, 0, 1597,
	0, 0, 1154, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 1153, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	1089, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 1153, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1153, 1603, 1604, 1605, 1606, 0, 0, 0,
	0, 0, 0, 1586, 1089, 0, 0, 0, 0, 0,
	1153, 0, 0, 88, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 0, 0, 0,
	0, 0, 1618, 1274, 1274, 1628, 1274, 0, 0, 0,
	0, 1608, 1610, 0, 0, 0, 63, 0, 1274, 0,
	0, 53, 168, 91, 0, 94, 1624, 0, 1625, 51,
	0, 0, 0, 140, 0, 1595, 1596, 0, 0, 0,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 1616, 0, 0, 0, 56, 0, 0,
	0, 133, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 1153, 0, 0,
	0, 0, 1089, 0, 0, 0, 1273, 207, 0, 1626,
	1089, 1273, 0, 0, 1089, 0, 1089, 0, 0, 0,
	1273, 0, 0, 1089, 1273, 0, 1615, 0, 1153, 0,
	0, 135, 0, 1089, 0, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 1273, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 1273, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 1607, 0, 1089,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 3, 1602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	1089, 1273, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 1089, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 0, 1153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1617, 0, 1089, 0, 1592, 1593, 1599, 1620, 1598, 1594,
	0, 1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588,
	0, 0, 0, 1796, 731, 0, 0, 0, 2784, 1153,
	0, 1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623,
	0, 0, 0, 1089, 0, 0, 1153, 1154, 715, 0,
	0, 0, 1614, 1609, 0, 0, 1089, 0, 0, 0,
	1581, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1154,
	0, 1796, 716, 0, 0, 0, 0, 0, 0, 0,
	1580, 0, 0, 717, 1154, 0, 0, 0, 0, 0,
	1600, 0, 0, 0, 0, 0, 0, 1089, 1597, 0,
	0, 718, 1154, 0, 0, 1089, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 1089, 0, 0, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 0, 1603, 1604, 1605, 1606, 1153, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 0, 0, 721, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 0, 0, 0, 1796, 0, 0, 0, 0, 1154,
	0, 1618, 0, 0, 1628, 0, 0, 0, 1274, 0,
	1608, 1610, 0, 1274, 735, 0, 0, 0, 0, 0,
	0, 0, 1274, 0, 0, 1624, 1274, 1625, 0, 0,
	1154, 0, 0, 0, 1595, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 1274,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 1626, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 1089, 0, 1615, 0, 0, 0, 0,
	0, 0, 0, 1274, 1274, 0, 0, 0, 724, 1089,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 1274, 0, 0, 0, 0, 742,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 1273,
	1273, 1273, 0, 0, 0, 0, 0, 1154, 0, 0,
	1154, 0, 643, 0, 0, 1273, 1602, 0, 0, 726,
	0, 0, 1153, 740, 741, 738, 0, 0, 0, 0,
	0, 733, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 1153, 0, 0, 0, 0, 0,
	1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 734, 0,
	0, 1614, 1609, 0, 0, 0, 729, 0, 0, 1581,
	0, 1154, 0, 0, 0, 0, 1627, 0, 0, 730,
	0, 0, 0, 0, 737, 0, 0, 0, 1154, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 0, 1580,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 1600,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 1617,
	0, 0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0,
	1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 2781, 0, 0,
	0, 0, 0, 0, 1153, 0, 1153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 1605, 1606, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1154, 1153,
	1618, 0, 0, 1628, 0, 0, 1153, 0, 0, 1608,
	1610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 0, 1625, 0, 0, 1273,
	1273, 0, 0, 1595, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 1153, 0, 0, 0, 0,
	1273, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1153, 0, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 1602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1153, 0, 0, 0,
	0, 1274, 1274, 1274, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 1153, 0, 0,
	0, 0, 0, 0, 0, 1273, 1273, 0, 0, 0,
	1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 1609, 0, 0, 0, 0, 0, 0, 1581,
	0, 1153, 0, 0, 1273, 0, 1627, 0, 1617, 0,
	0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591,
	1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 1580,
	0, 0, 0, 0, 0, 0, 2780, 0, 0, 1600,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 1154, 0,
	1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623, 0,
	0, 0, 0, 0, 0, 1154, 0, 0, 0, 0,
	0, 1614, 1609, 0, 0, 0, 0, 0, 0, 1581,
	0, 1603, 1604, 1605, 1606, 0, 1627, 0, 0, 0,
	0, 1586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1580,
	0, 1154, 0, 0, 0, 0, 0, 0, 1154, 1600,
	1618, 0, 1273, 1628, 0, 0, 0, 1597, 0, 1608,
	1610, 0, 1273, 1273, 0, 0, 0, 0, 0, 0,
	0, 1274, 1274, 0, 1624, 0, 1625, 0, 0, 1273,
	0, 0, 0, 1595, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 0, 0,
	0, 1616, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 1605, 1606, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 0, 0, 0, 0, 0,
	1618, 0, 0, 1628, 0, 0, 0, 0, 0, 1608,
	1610, 0, 0, 0, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 0, 1625, 0, 0, 0,
	0, 0, 0, 1595, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 1154, 0, 0, 0, 0,
	0, 0, 1601, 0, 0, 1602, 0, 0, 1154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1154,
	0, 0, 0, 0, 0, 0, 0, 1274, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 1617, 0,
	0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591,
	1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 0,
	1619, 0, 0, 0, 0, 0, 2779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1617, 0,
	0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591,
	1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 0,
	0, 0, 1151, 0, 1274, 0, 2228, 0, 0, 0,
	0, 0, 0, 0, 1274, 1274, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 1157, 249, 250, 1158, 1159,
	1160, 1274, 1161, 516, 1162, 1163, 1164, 1165, 251, 252,
	254, 253, 255, 256, 257, 517, 518, 0, 519, 258,
	520, 1166, 259, 260, 261, 262, 263, 1167, 1168, 0,
	264, 521, 522, 523, 1169, 265, 266, 524, 1170, 1237,
	1171, 267, 268, 269, 270, 271, 272, 273, 0, 1172,
	275, 276, 277, 274, 1173, 278, 0, 279, 280, 281,
	1174, 282, 1030, 283, 284, 1175, 1176, 1178, 1177, 1179,
	1180, 1181, 285, 286, 287, 288, 0, 289, 525, 526,
	1182, 293, 290, 291, 1183, 294, 292, 1184, 295, 296,
	1185, 1186, 297, 298, 299, 1187, 300, 301, 1188, 302,
	303, 1189, 304, 305, 527, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 528, 529, 1190, 240, 1191,
	0, 0, 0, 0, 317, 318, 319, 530, 0, 0,
	0, 320, 1192, 321, 1193, 1194, 1031, 322, 323, 531,
	532, 324, 325, 1195, 326, 533, 1196, 534, 327, 1197,
	328, 329, 330, 331, 332, 535, 536, 537, 388, 1033,
	333, 334, 1198, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 1199, 1032, 341, 538, 539, 1200,
	540, 1201, 343, 1034, 541, 1035, 344, 345, 346, 1036,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	1202, 354, 356, 355, 1203, 357, 542, 1037, 358, 359,
	1038, 1204, 360, 361, 362, 1205, 1206, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 1039, 379, 380, 381, 384,
	385, 383, 1040, 382, 1207, 242, 1041, 386, 1208, 543,
	387, 544, 389, 390, 1209, 0, 391, 0, 1210, 1211,
	393, 394, 395, 1212, 1213, 396, 397, 545, 1042, 398,
	1043, 546, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 1214, 409, 410, 547, 548, 549, 411,
	550, 412, 413, 1215, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 551, 423, 422, 424, 1216, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 1217, 434, 435, 436, 1044, 437, 438,
	439, 440, 552, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 1218, 457, 458, 456,
	459, 460, 461, 1219, 462, 446, 447, 463, 464, 1045,
	465, 466, 553, 0, 467, 1220, 468, 469, 470, 471,
	448, 472, 477, 554, 473, 474, 475, 476, 555, 1221,
	479, 480, 0, 478, 1222, 481, 482, 483, 484, 485,
	486, 311, 487, 1223, 488, 556, 557, 558, 559, 1224,
	495, 1225, 489, 490, 560, 491, 561, 1226, 492, 493,
	494, 0, 496, 497, 1227, 1228, 498, 499, 500, 502,
	503, 501, 504, 1229, 505, 1230, 0, 506, 507, 508,
	562, 563, 564, 1231, 510, 509, 565, 1232, 1233, 1234,
	1235, 511, 512, 566, 513, 514, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1151, 0, 0, 0, 0, 0, 0, 0, 2368, 0,
	0, 0, 0, 0, 0, 0, 2369, 243, 244, 245,
	246, 247, 248, 1157, 249, 250, 1158, 1159, 1160, 0,
	1161, 516, 1162, 1163, 1164, 1165, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 1166,
	259, 260, 261, 262, 263, 1167, 1168, 0, 264, 521,
	522, 523, 1169, 265, 266, 524, 1170, 1237, 1171, 267,
	268, 269, 270, 271, 272, 273, 0, 1172, 275, 276,
	277, 274, 1173, 278, 0, 279, 280, 281, 1174, 282,
	1030, 283, 284, 1175, 1176, 1178, 1177, 1179, 1180, 1181,
	285, 286, 287, 288, 0, 289, 525, 526, 1182, 293,
	290, 291, 1183, 294, 292, 1184, 295, 296, 1185, 1186,
	297, 298, 299, 1187, 300, 301, 1188, 302, 303, 1189,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 1190, 240, 1191, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	1192, 321, 1193, 1194, 1031, 322, 323, 531, 532, 324,
	325, 1195, 326, 533, 1196, 534, 327, 1197, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 1033, 333, 334,
	1198, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 1199, 1032, 341, 538, 539, 1200, 540, 1201,
	343, 1034, 541, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 1202, 354,
	356, 355, 1203, 357, 542, 1037, 358, 359, 1038, 1204,
	360, 361, 362, 1205, 1206, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 1207, 242, 1041, 386, 1208, 543, 387, 544,
	389, 390, 1209, 0, 391, 0, 1210, 1211, 393, 394,
	395, 1212, 1213, 396, 397, 545, 1042, 398, 1043, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 1214, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 1215, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 1216, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 1217, 434, 435, 436, 1044, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 1218, 457, 458, 456, 459, 460,
	461, 1219, 462, 446, 447, 463, 464, 1045, 465, 466,
	553, 0, 467, 1220, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 1221, 479, 480,
	0, 478, 1222, 481, 482, 483, 484, 485, 486, 311,
	487, 1223, 488, 556, 557, 558, 559, 1224, 495, 1225,
	489, 490, 560, 491, 561, 1226, 492, 493, 494, 0,
	496, 497, 1227, 1228, 498, 499, 500, 502, 503, 501,
	504, 1229, 505, 1230, 0, 506, 507, 508, 562, 563,
	564, 1231, 510, 509, 565, 1232, 1233, 1234, 1235, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1151, 0, 0, 0,
	0, 3161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3163, 243, 244, 245, 246, 247, 248, 1157,
	249, 250, 1158, 1159, 1160, 0, 1161, 516, 1162, 1163,
	1164, 1165, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 1166, 259, 260, 261, 262,
	263, 1167, 1168, 0, 264, 521, 522, 523, 1169, 265,
	266, 524, 1170, 1237, 1171, 267, 268, 269, 270, 271,
	272, 273, 0, 1172, 275, 276, 277, 274, 1173, 278,
	0, 279, 280, 281, 1174, 282, 1030, 283, 284, 1175,
	1176, 1178, 1177, 1179, 1180, 1181, 285, 286, 287, 288,
	0, 289, 525, 526, 1182, 293, 290, 291, 1183, 294,
	292, 1184, 295, 296, 1185, 1186, 297, 298, 299, 1187,
	300, 301, 1188, 302, 303, 1189, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 1190, 240, 1191, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 1192, 321, 1193, 1194,
	1031, 322, 323, 531, 532, 324, 325, 1195, 326, 533,
	1196, 534, 327, 1197, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 1033, 333, 334, 1198, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 1199, 1032,
	341, 538, 539, 1200, 540, 1201, 343, 1034, 541, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 1202, 354, 356, 355, 1203, 357,
	542, 1037, 358, 359, 1038, 1204, 360, 361, 362, 1205,
	1206, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 1207, 242,
	1041, 386, 1208, 543, 387, 544, 389, 390, 1209, 0,
	391, 0, 1210, 1211, 393, 394, 395, 1212, 1213, 396,
	397, 545, 1042, 398, 1043, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 1214, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 1215, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 1216, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 1217, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	1218, 457, 458, 456, 459, 460, 461, 1219, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 1220,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 1221, 479, 480, 0, 478, 1222, 481,
	482, 483, 484, 485, 486, 311, 487, 1223, 488, 556,
	557, 558, 559, 1224, 495, 1225, 489, 490, 560, 491,
	561, 1226, 492, 493, 494, 0, 496, 497, 1227, 1228,
	498, 499, 500, 502, 503, 501, 504, 1229, 505, 1230,
	0, 506, 507, 508, 562, 563, 564, 1231, 510, 509,
	565, 1232, 1233, 1234, 1235, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3490, 243, 244, 245, 246, 247, 248, 1157,
	249, 250, 1158, 1159, 1160, 0, 1161, 516, 1162, 1163,
	1164, 1165, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 1166, 259, 260, 261, 262,
	263, 1167, 1168, 0, 264, 521, 522, 523, 1169, 265,
	266, 524, 1170, 1237, 1171, 267, 268, 269, 270, 271,
	272, 273, 0, 1172, 275, 276, 277, 274, 1173, 278,
	0, 279, 280, 281, 1174, 282, 1030, 283, 284, 1175,
	1176, 1178, 1177, 1179, 1180, 1181, 285, 286, 287, 288,
	0, 289, 525, 526, 1182, 293, 290, 291, 1183, 294,
	292, 1184, 295, 296, 1185, 1186, 297, 298, 299, 1187,
	300, 301, 1188, 302, 303, 1189, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 1190, 240, 1191, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 1192, 321, 1193, 1194,
	1031, 322, 323, 531, 532, 324, 325, 1195, 326, 533,
	1196, 534, 327, 1197, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 1033, 333, 334, 1198, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 1199, 1032,
	341, 538, 539, 1200, 540, 1201, 343, 1034, 541, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 1202, 354, 356, 355, 1203, 357,
	542, 1037, 358, 359, 1038, 1204, 360, 361, 362, 1205,
	1206, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 1207, 242,
	1041, 386, 1208, 543, 387, 544, 389, 390, 1209, 0,
	391, 0, 1210, 1211, 393, 394, 395, 1212, 1213, 396,
	397, 545, 1042, 398, 1043, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 1214, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 1215, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 1216, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 1217, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	1218, 457, 458, 456, 459, 460, 461, 1219, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 1220,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 1221, 479, 480, 0, 478, 1222, 481,
	482, 483, 484, 485, 486, 311, 487, 1223, 488, 556,
	557, 558, 559, 1224, 495, 1225, 489, 490, 560, 491,
	561, 1226, 492, 493, 494, 0, 496, 497, 1227, 1228,
	498, 499, 500, 502, 503, 501, 504, 1229, 505, 1230,
	0, 506, 507, 508, 562, 563, 564, 1231, 510, 509,
	565, 1232, 1233, 1234, 1235, 511, 512, 566, 513, 514,
	515, 1151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3647, 243, 244,
	245, 246, 247, 248, 1157, 249, 250, 1158, 1159, 1160,
	0, 1161, 516, 1162, 1163, 1164, 1165, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	1166, 259, 260, 261, 262, 263, 1167, 1168, 0, 264,
	521, 522, 523, 1169, 265, 266, 524, 1170, 1237, 1171,
	267, 268, 269, 270, 271, 272, 273, 0, 1172, 275,
	276, 277, 274, 1173, 278, 0, 279, 280, 281, 1174,
	282, 1030, 283, 284, 1175, 1176, 1178, 1177, 1179, 1180,
	1181, 285, 286, 287, 288, 0, 289, 525, 526, 1182,
	293, 290, 291, 1183, 294, 292, 1184, 295, 296, 1185,
	1186, 297, 298, 299, 1187, 300, 301, 1188, 302, 303,
	1189, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 1190, 240, 1191, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 1192, 321, 1193, 1194, 1031, 322, 323, 531, 532,
	324, 325, 1195, 326, 533, 1196, 534, 327, 1197, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 1033, 333,
	334, 1198, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 1199, 1032, 341, 538, 539, 1200, 540,
	1201, 343, 1034, 541, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 1202,
	354, 356, 355, 1203, 357, 542, 1037, 358, 359, 1038,
	1204, 360, 361, 362, 1205, 1206, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 1207, 242, 1041, 386, 1208, 543, 387,
	544, 389, 390, 1209, 0, 391, 0, 1210, 1211, 393,
	394, 395, 1212, 1213, 396, 397, 545, 1042, 398, 1043,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 1214, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 1215, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 1216, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 1217, 434, 435, 436, 1044, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 1218, 457, 458, 456, 459,
	460, 461, 1219, 462, 446, 447, 463, 464, 1045, 465,
	466, 553, 0, 467, 1220, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 1221, 479,
	480, 0, 478, 1222, 481, 482, 483, 484, 485, 486,
	311, 487, 1223, 488, 556, 557, 558, 559, 1224, 495,
	1225, 489, 490, 560, 491, 561, 1226, 492, 493, 494,
	0, 496, 497, 1227, 1228, 498, 499, 500, 502, 503,
	501, 504, 1229, 505, 1230, 0, 506, 507, 508, 562,
	563, 564, 1231, 510, 509, 565, 1232, 1233, 1234, 1235,
	511, 512, 566, 513, 514, 515, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3547, 243, 244, 245, 246, 247, 248, 1157,
	249, 250, 1158, 1159, 1160, 0, 1161, 516, 1162, 1163,
	1164, 1165, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 1166, 259, 260, 261, 262,
	263, 1167, 1168, 0, 264, 521, 522, 523, 1169, 265,
	266, 524, 1170, 1237, 1171, 267, 268, 269, 270, 271,
	272, 273, 0, 1172, 275, 276, 277, 274, 1173, 278,
	0, 279, 280, 281, 1174, 282, 1030, 283, 284, 1175,
	1176, 1178, 1177, 1179, 1180, 1181, 285, 286, 287, 288,
	0, 289, 525, 526, 1182, 293, 290, 291, 1183, 294,
	292, 1184, 295, 296, 1185, 1186, 297, 298, 299, 1187,
	300, 301, 1188, 302, 303, 1189, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 1190, 240, 1191, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 1192, 321, 1193, 1194,
	1031, 322, 323, 531, 532, 324, 325, 1195, 326, 533,
	1196, 534, 327, 1197, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 1033, 333, 334, 1198, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 1199, 1032,
	341, 538, 539, 1200, 540, 1201, 343, 1034, 541, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 1202, 354, 356, 355, 1203, 357,
	542, 1037, 358, 359, 1038, 1204, 360, 361, 362, 1205,
	1206, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 1207, 242,
	1041, 386, 1208, 543, 387, 544, 389, 390, 1209, 0,
	391, 0, 1210, 1211, 393, 394, 395, 1212, 1213, 396,
	397, 545, 1042, 398, 1043, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 1214, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 1215, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 1216, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 1217, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	1218, 457, 458, 456, 459, 460, 461, 1219, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 1220,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 1221, 479, 480, 0, 478, 1222, 481,
	482, 483, 484, 485, 486, 311, 487, 1223, 488, 556,
	557, 558, 559, 1224, 495, 1225, 489, 490, 560, 491,
	561, 1226, 492, 493, 494, 0, 496, 497, 1227, 1228,
	498, 499, 500, 502, 503, 501, 504, 1229, 505, 1230,
	0, 506, 507, 508, 562, 563, 564, 1231, 510, 509,
	565, 1232, 1233, 1234, 1235, 511, 512, 566, 513, 514,
	515, 1151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3420, 243, 244,
	245, 246, 247, 248, 1157, 249, 250, 1158, 1159, 1160,
	0, 1161, 516, 1162, 1163, 1164, 1165, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	1166, 259, 260, 261, 262, 263, 1167, 1168, 0, 264,
	521, 522, 523, 1169, 265, 266, 524, 1170, 1237, 1171,
	267, 268, 269, 270, 271, 272, 273, 0, 1172, 275,
	276, 277, 274, 1173, 278, 0, 279, 280, 281, 1174,
	282, 1030, 283, 284, 1175, 1176, 1178, 1177, 1179, 1180,
	1181, 285, 286, 287, 288, 0, 289, 525, 526, 1182,
	293, 290, 291, 1183, 294, 292, 1184, 295, 296, 1185,
	1186, 297, 298, 299, 1187, 300, 301, 1188, 302, 303,
	1189, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 1190, 240, 1191, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 1192, 321, 1193, 1194, 1031, 322, 323, 531, 532,
	324, 325, 1195, 326, 533, 1196, 534, 327, 1197, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 1033, 333,
	334, 1198, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 1199, 1032, 341, 538, 539, 1200, 540,
	1201, 343, 1034, 541, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 1202,
	354, 356, 355, 1203, 357, 542, 1037, 358, 359, 1038,
	1204, 360, 361, 362, 1205, 1206, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 1207, 242, 1041, 386, 1208, 543, 387,
	544, 389, 390, 1209, 0, 391, 0, 1210, 1211, 393,
	394, 395, 1212, 1213, 396, 397, 545, 1042, 398, 1043,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 1214, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 1215, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 1216, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 1217, 434, 435, 436, 1044, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 1218, 457, 458, 456, 459,
	460, 461, 1219, 462, 446, 447, 463, 464, 1045, 465,
	466, 553, 0, 467, 1220, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 1221, 479,
	480, 0, 478, 1222, 481, 482, 483, 484, 485, 486,
	311, 487, 1223, 488, 556, 557, 558, 559, 1224, 495,
	1225, 489, 490, 560, 491, 561, 1226, 492, 493, 494,
	0, 496, 497, 1227, 1228, 498, 499, 500, 502, 503,
	501, 504, 1229, 505, 1230, 0, 506, 507, 508, 562,
	563, 564, 1231, 510, 509, 565, 1232, 1233, 1234, 1235,
	511, 512, 566, 513, 514, 515, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3179, 243, 244, 245, 246, 247, 248, 1157,
	249, 250, 1158, 1159, 1160, 0, 1161, 516, 1162, 1163,
	1164, 1165, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 1166, 259, 260, 261, 262,
	263, 1167, 1168, 0, 264, 521, 522, 523, 1169, 265,
	266, 524, 1170, 1237, 1171, 267, 268, 269, 270, 271,
	272, 273, 0, 1172, 275, 276, 277, 274, 1173, 278,
	0, 279, 280, 281, 1174, 282, 1030, 283, 284, 1175,
	1176, 1178, 1177, 1179, 1180, 1181, 285, 286, 287, 288,
	0, 289, 525, 526, 1182, 293, 290, 291, 1183, 294,
	292, 1184, 295, 296, 1185, 1186, 297, 298, 299, 1187,
	300, 301, 1188, 302, 303, 1189, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 1190, 240, 1191, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 1192, 321, 1193, 1194,
	1031, 322, 323, 531, 532, 324, 325, 1195, 326, 533,
	1196, 534, 327, 1197, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 1033, 333, 334, 1198, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 1199, 1032,
	341, 538, 539, 1200, 540, 1201, 343, 1034, 541, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 1202, 354, 356, 355, 1203, 357,
	542, 1037, 358, 359, 1038, 1204, 360, 361, 362, 1205,
	1206, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 1207, 242,
	1041, 386, 1208, 543, 387, 544, 389, 390, 1209, 0,
	391, 0, 1210, 1211, 393, 394, 395, 1212, 1213, 396,
	397, 545, 1042, 398, 1043, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 1214, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 1215, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 1216, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 1217, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	1218, 457, 458, 456, 459, 460, 461, 1219, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 1220,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 1221, 479, 480, 0, 478, 1222, 481,
	482, 483, 484, 485, 486, 311, 487, 1223, 488, 556,
	557, 558, 559, 1224, 495, 1225, 489, 490, 560, 491,
	561, 1226, 492, 493, 494, 0, 496, 497, 1227, 1228,
	498, 499, 500, 502, 503, 501, 504, 1229, 505, 1230,
	0, 506, 507, 508, 562, 563, 564, 1231, 510, 509,
	565, 1232, 1233, 1234, 1235, 511, 512, 566, 513, 514,
	515, 1151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3025, 243, 244,
	245, 246, 247, 248, 1157, 249, 250, 1158, 1159, 1160,
	0, 1161, 516, 1162, 1163, 1164, 1165, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	1166, 259, 260, 261, 262, 263, 1167, 1168, 0, 264,
	521, 522, 523, 1169, 265, 266, 524, 1170, 1237, 1171,
	267, 268, 269, 270, 271, 272, 273, 0, 1172, 275,
	276, 277, 274, 1173, 278, 0, 279, 280, 281, 1174,
	282, 1030, 283, 284, 1175, 1176, 1178, 1177, 1179, 1180,
	1181, 285, 286, 287, 288, 0, 289, 525, 526, 1182,
	293, 290, 291, 1183, 294, 292, 1184, 295, 296, 1185,
	1186, 297, 298, 299, 1187, 300, 301, 1188, 302, 303,
	1189, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 1190, 240, 1191, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 1192, 321, 1193, 1194, 1031, 322, 323, 531, 532,
	324, 325, 1195, 326, 533, 1196, 534, 327, 1197, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 1033, 333,
	334, 1198, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 1199, 1032, 341, 538, 539, 1200, 540,
	1201, 343, 1034, 541, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 1202,
	354, 356, 355, 1203, 357, 542, 1037, 358, 359, 1038,
	1204, 360, 361, 362, 1205, 1206, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 1207, 242, 1041, 386, 1208, 543, 387,
	544, 389, 390, 1209, 0, 391, 0, 1210, 1211, 393,
	394, 395, 1212, 1213, 396, 397, 545, 1042, 398, 1043,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 1214, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 1215, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 1216, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 1217, 434, 435, 436, 1044, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 1218, 457, 458, 456, 459,
	460, 461, 1219, 462, 446, 447, 463, 464, 1045, 465,
	466, 553, 0, 467, 1220, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 1221, 479,
	480, 0, 478, 1222, 481, 482, 483, 484, 485, 486,
	311, 487, 1223, 488, 556, 557, 558, 559, 1224, 495,
	1225, 489, 490, 560, 491, 561, 1226, 492, 493, 494,
	0, 496, 497, 1227, 1228, 498, 499, 500, 502, 503,
	501, 504, 1229, 505, 1230, 0, 506, 507, 508, 562,
	563, 564, 1231, 510, 509, 565, 1232, 1233, 1234, 1235,
	511, 512, 566, 513, 514, 515, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2251, 243, 244, 245, 246, 247, 248, 1157,
	249, 250, 1158, 1159, 1160, 0, 1161, 516, 1162, 1163,
	1164, 1165, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 1166, 259, 260, 261, 262,
	263, 1167, 1168, 0, 264, 521, 522, 523, 1169, 265,
	266, 524, 1170, 1237, 1171, 267, 268, 269, 270, 271,
	272, 273, 0, 1172, 275, 276, 277, 274, 1173, 278,
	0, 279, 280, 281, 1174, 282, 1030, 283, 284, 1175,
	1176, 1178, 1177, 1179, 1180, 1181, 285, 286, 287, 288,
	0, 289, 525, 526, 1182, 293, 290, 291, 1183, 294,
	292, 1184, 295, 296, 1185, 1186, 297, 298, 299, 1187,
	300, 301, 1188, 302, 303, 1189, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 1190, 240, 1191, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 1192, 321, 1193, 1194,
	1031, 322, 323, 531, 532, 324, 325, 1195, 326, 533,
	1196, 534, 327, 1197, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 1033, 333, 334, 1198, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 1199, 1032,
	341, 538, 539, 1200, 540, 1201, 343, 1034, 541, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 1202, 354, 356, 355, 1203, 357,
	542, 1037, 358, 359, 1038, 1204, 360, 361, 362, 1205,
	1206, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 1207, 242,
	1041, 386, 1208, 543, 387, 544, 389, 390, 1209, 0,
	391, 0, 1210, 1211, 393, 394, 395, 1212, 1213, 396,
	397, 545, 1042, 398, 1043, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 1214, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 1215, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 1216, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 1217, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	1218, 457, 458, 456, 459, 460, 461, 1219, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 1220,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 1221, 479, 480, 0, 478, 1222, 481,
	482, 483, 484, 485, 486, 311, 487, 1223, 488, 556,
	557, 558, 559, 1224, 495, 1225, 489, 490, 560, 491,
	561, 1226, 492, 493, 494, 0, 496, 497, 1227, 1228,
	498, 499, 500, 502, 503, 501, 504, 1229, 505, 1230,
	0, 506, 507, 508, 562, 563, 564, 1231, 510, 509,
	565, 1232, 1233, 1234, 1235, 511, 512, 566, 513, 514,
	515, 1249, 0, 1151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 0, 0,
	243, 244, 245, 246, 247, 248, 1157, 249, 250, 1158,
	1159, 1160, 0, 1161, 516, 1162, 1163, 1164, 1165, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 1166, 259, 260, 261, 262, 263, 1167, 1168,
	0, 264, 521, 522, 523, 1169, 265, 266, 524, 1170,
	1237, 1171, 267, 268, 269, 270, 271, 272, 273, 0,
	1172, 275, 276, 277, 274, 1173, 278, 0, 279, 280,
	281, 1174, 282, 1030, 283, 284, 1175, 1176, 1178, 1177,
	1179, 1180, 1181, 285, 286, 287, 288, 0, 289, 525,
	526, 1182, 293, 290, 291, 1183, 294, 292, 1184, 295,
	296, 1185, 1186, 297, 298, 299, 1187, 300, 301, 1188,
	302, 303, 1189, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 1190, 240,
	1191, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 1192, 321, 1193, 1194, 1031, 322, 323,
	531, 532, 324, 325, 1195, 326, 533, 1196, 534, 327,
	1197, 328, 329, 330, 331, 332, 535, 536, 537, 388,
	1033, 333, 334, 1198, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 1199, 1032, 341, 538, 539,
	1200, 540, 1201, 343, 1034, 541, 1035, 344, 345, 346,
	1036, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 1202, 354, 356, 355, 1203, 357, 542, 1037, 358,
	359, 1038, 1204, 360, 361, 362, 1205, 1206, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 1039, 379, 380, 381,
	384, 385, 383, 1040, 382, 1207, 242, 1041, 386, 1208,
	543, 387, 544, 389, 390, 1209, 0, 391, 0, 1210,
	1211, 393, 394, 395, 1212, 1213, 396, 397, 545, 1042,
	398, 1043, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 1214, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 1215, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 1216, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 1217, 434, 435, 436, 1044, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 1218, 457, 458,
	456, 459, 460, 461, 1219, 462, 446, 447, 463, 464,
	1045, 465, 466, 553, 0, 467, 1220, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	1221, 479, 480, 0, 478, 1222, 481, 482, 483, 484,
	485, 486, 311, 487, 1223, 488, 556, 557, 558, 559,
	1224, 495, 1225, 489, 490, 560, 491, 561, 1226, 492,
	493, 494, 0, 496, 497, 1227, 1228, 498, 499, 500,
	502, 503, 501, 504, 1229, 505, 1230, 0, 506, 507,
	508, 562, 563, 564, 1231, 510, 509, 565, 1232, 1233,
	1234, 1235, 511, 512, 566, 513, 514, 515, 1148, 0,
	1151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 1157, 249, 250, 1158, 1159, 1160, 0,
	1161, 516, 1162, 1163, 1164, 1165, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 1166,
	259, 260, 261, 262, 263, 1167, 1168, 0, 264, 521,
	522, 523, 1169, 265, 266, 524, 1170, 1237, 1171, 267,
	268, 269, 270, 271, 272, 273, 0, 1172, 275, 276,
	277, 274, 1173, 278, 0, 279, 280, 281, 1174, 282,
	1030, 283, 284, 1175, 1176, 1178, 1177, 1179, 1180, 1181,
	285, 286, 287, 288, 0, 289, 525, 526, 1182, 293,
	290, 291, 1183, 294, 292, 1184, 295, 296, 1185, 1186,
	297, 298, 299, 1187, 300, 301, 1188, 302, 303, 1189,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 1190, 240, 1191, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	1192, 321, 1193, 1194, 1031, 322, 323, 531, 532, 324,
	325, 1195, 326, 533, 1196, 534, 327, 1197, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 1033, 333, 334,
	1198, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 1199, 1032, 341, 538, 539, 1200, 540, 1201,
	343, 1034, 541, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 1202, 354,
	356, 355, 1203, 357, 542, 1037, 358, 359, 1038, 1204,
	360, 361, 362, 1205, 1206, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 1207, 242, 1041, 386, 1208, 543, 387, 544,
	389, 390, 1209, 0, 391, 0, 1210, 1211, 393, 394,
	395, 1212, 1213, 396, 397, 545, 1042, 398, 1043, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 1214, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 1215, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 1216, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 1217, 434, 435, 436, 1044, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 1218, 457, 458, 456, 459, 460,
	461, 1219, 462, 446, 447, 463, 464, 1045, 465, 466,
	553, 0, 467, 1220, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 1221, 479, 480,
	0, 478, 1222, 481, 482, 483, 484, 485, 486, 311,
	487, 1223, 488, 556, 557, 558, 559, 1224, 495, 1225,
	489, 490, 560, 491, 561, 1226, 492, 493, 494, 0,
	496, 497, 1227, 1228, 498, 499, 500, 502, 503, 501,
	504, 1229, 505, 1230, 0, 506, 507, 508, 562, 563,
	564, 1231, 510, 509, 565, 1232, 1233, 1234, 1235, 511,
	512, 566, 513, 514, 515, 1151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 1157, 249,
	250, 1158, 1159, 1160, 0, 1161, 516, 1162, 1163, 1164,
	1165, 251, 252, 254, 253, 255, 256, 257, 517, 518,
	0, 519, 258, 520, 1166, 259, 260, 261, 262, 263,
	1167, 1168, 0, 264, 521, 522, 523, 1169, 265, 266,
	524, 1170, 1237, 1171, 267, 268, 269, 270, 271, 272,
	273, 0, 1172, 275, 276, 277, 274, 1173, 278, 0,
	279, 280, 281, 1174, 282, 1030, 283, 284, 1175, 1176,
	1178, 1177, 1179, 1180, 1181, 285, 286, 287, 288, 0,
	289, 525, 526, 1182, 293, 290, 291, 1183, 294, 292,
	1184, 295, 296, 1185, 1186, 297, 298, 299, 1187, 300,
	301, 1188, 302, 303, 1189, 304, 305, 527, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 528, 529,
	1190, 240, 1191, 0, 0, 0, 0, 317, 318, 319,
	530, 0, 0, 0, 320, 1192, 321, 1193, 1194, 1031,
	322, 323, 531, 532, 324, 325, 1195, 326, 533, 1196,
	534, 327, 1197, 328, 329, 330, 331, 332, 535, 536,
	537, 388, 1033, 333, 334, 1198, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 1199, 1032, 341,
	538, 539, 1200, 540, 1201, 343, 1034, 541, 1035, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 1202, 354, 356, 355, 1203, 357, 542,
	1037, 358, 359, 1038, 1204, 360, 361, 362, 1205, 1206,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 1207, 242, 1041,
	386, 1208, 543, 387, 544, 389, 390, 1209, 0, 391,
	0, 1210, 1211, 393, 394, 395, 1212, 1213, 396, 397,
	545, 1042, 398, 1043, 546, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 1214, 409, 410, 547,
	548, 549, 411, 550, 412, 413, 1215, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 551, 423, 422, 424,
	1216, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 1217, 434, 435, 436,
	1044, 437, 438, 439, 440, 552, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 1218,
	457, 458, 456, 459, 460, 461, 1219, 462, 446, 447,
	463, 464, 1045, 465, 466, 553, 0, 467, 1220, 468,
	469, 470, 471, 448, 472, 477, 554, 473, 474, 475,
	476, 555, 1221, 479, 480, 0, 478, 1222, 481, 482,
	483, 484, 485, 486, 311, 487, 1223, 488, 556, 557,
	558, 559, 1224, 495, 1225, 489, 490, 560, 491, 561,
	1226, 492, 493, 494, 0, 496, 497, 1227, 1228, 498,
	499, 500, 502, 503, 501, 504, 1229, 505, 1230, 0,
	506, 507, 508, 562, 563, 564, 1231, 510, 509, 565,
	1232, 1233, 1234, 1235, 511, 512, 566, 513, 514, 515,
	2226, 0, 967, 939, 940, 941, 937, 938, 950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 2223, 249, 250, 0, 0,
	0, 0, 0, 991, 955, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 1004, 0, 1011, 258,
	1010, 0, 259, 260, 261, 262, 263, 957, 990, 924,
	264, 1049, 1050, 523, 0, 265, 266, 997, 0, 978,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1030, 283, 284, 981, 979, 980, 987, 983,
	982, 986, 285, 286, 287, 288, 1014, 289, 1008, 1007,
	928, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	2224, 0, 297, 999, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 934, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1021, 1022, 946, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1006, 0, 0,
	0, 320, 0, 321, 0, 0, 1031, 322, 323, 1019,
	1020, 324, 325, 0, 326, 1028, 0, 956, 327, 0,
	328, 329, 330, 331, 332, 992, 993, 996, 388, 1033,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1032, 341, 1001, 1002, 0,
	962, 0, 343, 1034, 994, 1035, 344, 345, 346, 1036,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 1029, 1037, 358, 359,
	1038, 0, 360, 361, 362, 985, 984, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 1039, 379, 380, 381, 384,
	385, 383, 1040, 382, 925, 242, 1041, 386, 947, 995,
	387, 1009, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 1042, 398,
	1043, 1023, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 1024, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1005, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 1044, 437, 438,
	439, 440, 935, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 988, 462, 446, 447, 463, 464, 1045,
	465, 466, 1003, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 1048, 473, 474, 475, 476, 1025, 0,
	479, 480, 923, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 1015, 1016, 1017, 1018, 0,
	495, 0, 489, 490, 1026, 491, 1027, 945, 492, 493,
	494, 0, 496, 497, 0, 929, 498, 499, 500, 502,
	503, 501, 504, 989, 505, 0, 0, 506, 507, 508,
	562, 1012, 1047, 2222, 510, 509, 565, 0, 0, 0,
	0, 511, 512, 566, 513, 514, 515, 926, 0, 0,
	0, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	0, 920, 921, 2225, 0, 0, 0, 0, 0, 0,
	951, 2221, 0, 913, 949, 967, 939, 940, 941, 937,
	938, 950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 991, 955, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 1004,
	0, 1011, 258, 1010, 0, 259, 260, 261, 262, 263,
	957, 990, 924, 264, 1049, 1050, 523, 0, 265, 266,
	997, 0, 978, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1030, 283, 284, 981, 979,
	980, 987, 983, 982, 986, 285, 286, 287, 288, 1014,
	289, 1008, 1007, 928, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 999, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 934, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1021, 1022,
	946, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1006, 0, 0, 0, 320, 0, 321, 0, 0, 1031,
	322, 323, 1019, 1020, 324, 325, 0, 326, 1028, 0,
	956, 327, 0, 328, 329, 330, 331, 332, 992, 993,
	996, 388, 1033, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1032, 341,
	1001, 1002, 0, 962, 0, 343, 1034, 994, 1035, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 1029,
	1037, 358, 359, 1038, 0, 360, 361, 362, 985, 984,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 925, 242, 1041,
	386, 947, 995, 387, 1009, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 1042, 398, 1043, 1023, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 1024, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1005, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	1044, 437, 438, 439, 440, 935, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 205,
	457, 458, 456, 459, 460, 461, 988, 462, 446, 447,
	463, 464, 1045, 465, 466, 1003, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 1048, 473, 474, 475,
	476, 1025, 0, 479, 480, 923, 478, 207, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 1015, 1016,
	1017, 1018, 0, 495, 0, 489, 490, 1026, 491, 1027,
	945, 492, 493, 494, 0, 496, 497, 0, 929, 498,
	499, 500, 502, 503, 501, 504, 989, 505, 0, 0,
	506, 507, 508, 1420, 1012, 1047, 0, 510, 509, 565,
	0, 0, 0, 199, 511, 512, 566, 513, 514, 515,
	926, 200, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 0, 920, 921, 967, 939, 940, 941,
	937, 938, 950, 1653, 1651, 0, 0, 949, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 991, 955, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	1004, 0, 1011, 258, 1010, 0, 259, 260, 261, 262,
	263, 957, 990, 924, 264, 1049, 1050, 523, 0, 265,
	266, 997, 0, 978, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1030, 283, 284, 981,
	979, 980, 987, 983, 982, 986, 285, 286, 287, 288,
	1014, 289, 1008, 1007, 928, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 999, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 934, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1021,
	1022, 946, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1006, 0, 0, 0, 320, 0, 321, 0, 0,
	1031, 322, 323, 1019, 1020, 324, 325, 0, 326, 1028,
	0, 956, 327, 0, 328, 329, 330, 331, 332, 992,
	993, 996, 388, 1033, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1032,
	341, 1001, 1002, 0, 962, 0, 343, 1034, 994, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	1029, 1037, 358, 359, 1038, 0, 360, 361, 362, 985,
	984, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 925, 242,
	1041, 386, 947, 995, 387, 1009, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 1042, 398, 1043, 1023, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 1024, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1005, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 1044, 437, 438, 439, 440, 935, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	205, 457, 458, 456, 459, 460, 461, 988, 462, 446,
	447, 463, 464, 1045, 465, 466, 1003, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 1048, 473, 474,
	475, 476, 1025, 0, 479, 480, 923, 478, 207, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 1015,
	1016, 1017, 1018, 0, 495, 0, 489, 490, 1026, 491,
	1027, 945, 492, 493, 494, 0, 496, 497, 0, 929,
	498, 499, 500, 502, 503, 501, 504, 989, 505, 0,
	0, 506, 507, 508, 1420, 1012, 1047, 0, 510, 509,
	565, 0, 0, 0, 199, 511, 512, 566, 513, 514,
	515, 926, 200, 0, 0, 0, 0, 0, 922, 0,
	0, 0, 0, 0, 0, 920, 921, 967, 939, 940,
	941, 937, 938, 950, 1653, 2737, 0, 0, 949, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 991, 955,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 1004, 0, 1011, 258, 1010, 0, 259, 260, 261,
	262, 263, 957, 990, 924, 264, 1049, 1050, 523, 0,
	265, 266, 997, 0, 978, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1030, 283, 284,
	981, 979, 980, 987, 983, 982, 986, 285, 286, 287,
	288, 1014, 289, 1008, 1007, 928, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 999, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 934,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1021, 1022, 946, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 1006, 0, 0, 0, 320, 0, 321, 0,
	0, 1031, 322, 323, 1019, 1020, 324, 325, 0, 326,
	1028, 0, 956, 327, 0, 328, 329, 330, 331, 332,
	992, 993, 996, 388, 1033, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1032, 341, 1001, 1002, 0, 962, 0, 343, 1034, 994,
	1035, 344, 345, 346, 1036, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 1029, 1037, 358, 359, 1038, 0, 360, 361, 362,
	985, 984, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	1039, 379, 380, 381, 384, 385, 383, 1040, 382, 925,
	242, 1041, 386, 947, 995, 387, 1009, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 1042, 398, 1043, 1023, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 1024, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1005, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 1044, 437, 438, 439, 440, 935, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 205, 457, 458, 456, 459, 460, 461, 988, 462,
	446, 447, 463, 464, 1045, 465, 466, 1003, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 1048, 473,
	474, 475, 476, 1025, 0, 479, 480, 923, 478, 207,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	1015, 1016, 1017, 1018, 0, 495, 0, 489, 490, 1026,
	491, 1027, 945, 492, 493, 494, 0, 496, 497, 0,
	929, 498, 499, 500, 502, 503, 501, 504, 989, 505,
	0, 0, 506, 507, 508, 1420, 1012, 1047, 0, 510,
	509, 565, 0, 0, 0, 199, 511, 512, 566, 513,
	514, 515, 926, 200, 0, 0, 0, 0, 0, 922,
	0, 0, 0, 0, 0, 0, 920, 921, 967, 939,
	940, 941, 937, 938, 950, 1653, 1651, 0, 0, 949,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 991,
	955, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 1004, 0, 1011, 258, 1010, 2330, 259, 260,
	261, 262, 263, 957, 990, 924, 264, 1049, 1050, 523,
	0, 265, 266, 997, 0, 978, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 981, 979, 980, 987, 983, 982, 986, 285, 286,
	287, 288, 1014, 289, 1008, 1007, 928, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 999,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	934, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1021, 1022, 946, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1006, 0, 0, 0, 320, 0, 321,
	0, 2335, 1031, 322, 323, 1019, 1020, 324, 325, 0,
	326, 1028, 0, 956, 327, 0, 328, 329, 330, 331,
	332, 992, 993, 996, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1032, 341, 1001, 1002, 0, 962, 0, 343, 1034,
	994, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	2331, 357, 1029, 1037, 358, 359, 1038, 0, 360, 361,
	362, 985, 984, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	925, 242, 1041, 386, 947, 995, 387, 1009, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 1023, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 1024, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1005,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 935, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 988,
	462, 446, 447, 463, 464, 1045, 465, 466, 1003, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 1048,
	473, 474, 475, 476, 1025, 0, 479, 480, 923, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 1015, 1016, 1017, 1018, 0, 495, 2332, 489, 490,
	1026, 491, 1027, 945, 492, 493, 494, 0, 496, 497,
	0, 929, 498, 499, 500, 502, 503, 501, 504, 989,
	505, 0, 0, 506, 507, 508, 562, 1012, 1047, 0,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 926, 0, 0, 0, 0, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 920, 921, 0,
	0, 0, 0, 0, 0, 0, 951, 0, 0, 2271,
	949, 967, 939, 940, 941, 937, 938, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 991, 955, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 1004, 0, 1011, 258, 1010,
	0, 259, 260, 261, 262, 263, 957, 990, 924, 264,
	1049, 1050, 523, 0, 265, 266, 997, 0, 978, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1030, 283, 284, 981, 979, 980, 987, 983, 982,
	986, 285, 286, 287, 288, 1014, 289, 1008, 1007, 928,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 999, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 934, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1021, 1022, 946, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1006, 0, 0, 0,
	320, 0, 321, 0, 0, 1031, 322, 323, 1019, 1020,
	324, 325, 0, 326, 1028, 0, 956, 327, 0, 328,
	329, 330, 331, 332, 992, 993, 996, 388, 1033, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1032, 341, 1001, 1002, 0, 962,
	0, 343, 1034, 994, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 1029, 1037, 358, 359, 1038,
	0, 360, 361, 362, 985, 984, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 925, 242, 1041, 386, 947, 995, 387,
	1009, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 1042, 398, 1043,
	1023, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 1024, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1005, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 1044, 437, 438, 439,
	440, 935, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 988, 462, 446, 447, 463, 464, 1045, 465,
	466, 1003, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 1048, 473, 474, 475, 476, 1025, 0, 479,
	480, 923, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 1015, 1016, 1017, 1018, 0, 495,
	0, 489, 490, 1026, 491, 1027, 945, 492, 493, 494,
	0, 496, 497, 0, 929, 498, 499, 500, 502, 503,
	501, 504, 989, 505, 0, 0, 506, 507, 508, 562,
	1012, 1047, 0, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 926, 0, 0, 0,
	0, 0, 0, 922, 0, 0, 0, 0, 0, 0,
	920, 921, 0, 0, 0, 0, 0, 0, 0, 951,
	2269, 0, 2268, 949, 967, 939, 940, 941, 937, 938,
	950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 991, 955, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 1004, 0,
	1011, 258, 1010, 0, 259, 260, 261, 262, 263, 957,
	990, 924, 264, 1049, 1050, 523, 0, 265, 266, 997,
	0, 978, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 981, 979, 980,
	987, 983, 982, 986, 285, 286, 287, 288, 1014, 289,
	1008, 1007, 928, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 999, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 934, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1021, 1022, 946,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1006,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 1019, 1020, 324, 325, 0, 326, 1028, 0, 956,
	327, 0, 328, 329, 330, 331, 332, 992, 993, 996,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1032, 341, 1001,
	1002, 0, 962, 0, 343, 1034, 994, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 1029, 1037,
	358, 359, 1038, 0, 360, 361, 362, 985, 984, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 925, 242, 1041, 386,
	947, 995, 387, 1009, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 1023, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	1024, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1005, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 935, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 988, 462, 446, 447, 463,
	464, 1045, 465, 466, 1003, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 1048, 473, 474, 475, 476,
	1025, 0, 479, 480, 923, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 1015, 1016, 1017,
	1018, 0, 495, 0, 489, 490, 1026, 491, 1027, 945,
	492, 493, 494, 0, 496, 497, 0, 929, 498, 499,
	500, 502, 503, 501, 504, 989, 505, 0, 0, 506,
	507, 508, 562, 1012, 1047, 0, 510, 509, 565, 0,
	0, 0, 0, 511, 512, 566, 513, 514, 515, 926,
	0, 0, 0, 0, 0, 0, 922, 0, 0, 0,
	0, 0, 0, 920, 921, 0, 0, 0, 0, 0,
	0, 0, 951, 2266, 0, 2265, 949, 967, 939, 940,
	941, 937, 938, 950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 991, 955,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 1004, 0, 1011, 258, 1010, 0, 259, 260, 261,
	262, 263, 957, 990, 924, 264, 1049, 1050, 523, 0,
	265, 266, 997, 0, 978, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1030, 283, 284,
	981, 979, 980, 987, 983, 982, 986, 285, 286, 287,
	288, 1014, 289, 1008, 1007, 928, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 999, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 934,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1021, 1022, 946, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 1006, 0, 0, 0, 320, 0, 321, 0,
	0, 1031, 322, 323, 1019, 1020, 324, 325, 0, 326,
	1028, 0, 956, 327, 0, 328, 329, 330, 331, 332,
	992, 993, 996, 388, 1033, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1032, 341, 1001, 1002, 0, 962, 0, 343, 1034, 994,
	1035, 344, 345, 346, 1036, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 1029, 1037, 358, 359, 1038, 0, 360, 361, 362,
	985, 984, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	1039, 379, 380, 381, 384, 385, 383, 1040, 382, 925,
	242, 1041, 386, 947, 995, 387, 1009, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 1042, 398, 1043, 1023, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 1024, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1005, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 1044, 437, 438, 439, 440, 935, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 988, 462,
	446, 447, 463, 464, 1045, 465, 466, 1003, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 1048, 473,
	474, 475, 476, 1025, 0, 479, 480, 923, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	1015, 1016, 1017, 1018, 0, 495, 0, 489, 490, 1026,
	491, 1027, 945, 492, 493, 494, 0, 496, 497, 0,
	929, 498, 499, 500, 502, 503, 501, 504, 989, 505,
	0, 0, 506, 507, 508, 562, 1012, 1047, 0, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 926, 0, 0, 0, 0, 0, 0, 922,
	0, 0, 0, 0, 0, 0, 920, 921, 0, 0,
	0, 0, 0, 0, 0, 951, 2263, 0, 2262, 949,
	967, 939, 940, 941, 937, 938, 950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 991, 955, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 1004, 0, 1011, 258, 1010, 0,
	259, 260, 261, 262, 263, 957, 990, 924, 264, 1049,
	1050, 523, 0, 265, 266, 997, 0, 978, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 981, 979, 980, 987, 983, 982, 986,
	285, 286, 287, 288, 1014, 289, 1008, 1007, 928, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 999, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 934, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1021, 1022, 946, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1006, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 1019, 1020, 324,
	325, 0, 326, 1028, 0, 956, 327, 0, 328, 329,
	330, 331, 332, 992, 993, 996, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1032, 341, 1001, 1002, 0, 962, 0,
	343, 1034, 994, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 1029, 1037, 358, 359, 1038, 0,
	360, 361, 362, 985, 984, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 925, 242, 1041, 386, 947, 995, 387, 1009,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 1023,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 1024, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1005, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	935, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 988, 462, 446, 447, 463, 464, 1045, 465, 466,
	1003, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 1048, 473, 474, 475, 476, 1025, 0, 479, 480,
	923, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 1015, 1016, 1017, 1018, 0, 495, 0,
	489, 490, 1026, 491, 1027, 945, 492, 493, 494, 0,
	496, 497, 0, 929, 498, 499, 500, 502, 503, 501,
	504, 989, 505, 0, 0, 506, 507, 508, 562, 1012,
	1047, 0, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 926, 0, 0, 0, 0,
	0, 0, 922, 0, 0, 0, 0, 0, 0, 920,
	921, 0, 0, 0, 0, 0, 0, 0, 951, 2260,
	0, 1506, 949, 967, 939, 940, 941, 937, 938, 950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 991, 955, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 1004, 0, 1011,
	258, 1010, 0, 259, 260, 261, 262, 263, 957, 990,
	924, 264, 1049, 1050, 523, 0, 265, 266, 997, 0,
	978, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1030, 283, 284, 981, 979, 980, 987,
	983, 982, 986, 285, 286, 287, 288, 1014, 289, 1008,
	1007, 928, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 999, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 934, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1021, 1022, 946, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1006, 0,
	0, 0, 320, 0, 321, 0, 0, 1031, 322, 323,
	1019, 1020, 324, 325, 0, 326, 1028, 0, 956, 327,
	0, 328, 329, 330, 331, 332, 992, 993, 996, 388,
	1033, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1032, 341, 1001, 1002,
	0, 962, 0, 343, 1034, 994, 1035, 344, 345, 346,
	1036, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 1029, 1037, 358,
	359, 1038, 0, 360, 361, 362, 985, 984, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 1039, 379, 380, 381,
	384, 385, 383, 1040, 382, 925, 242, 1041, 386, 947,
	995, 387, 1009, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 1042,
	398, 1043, 1023, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 1024,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1005, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 1044, 437,
	438, 439, 440, 935, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 988, 462, 446, 447, 463, 464,
	1045, 465, 466, 1003, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 1048, 473, 474, 475, 476, 1025,
	0, 479, 480, 923, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 1015, 1016, 1017, 1018,
	0, 495, 0, 489, 490, 1026, 491, 1027, 945, 492,
	493, 494, 0, 496, 497, 0, 929, 498, 499, 500,
	502, 503, 501, 504, 989, 505, 0, 0, 506, 507,
	508, 562, 1012, 1047, 0, 510, 509, 565, 1505, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 926, 0,
	0, 0, 0, 0, 0, 922, 0, 0, 0, 0,
	0, 0, 920, 921, 0, 0, 0, 0, 0, 0,
	0, 951, 0, 0, 916, 949, 967, 939, 940, 941,
	937, 938, 950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 991, 955, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	1004, 0, 1011, 258, 1010, 0, 259, 260, 261, 262,
	263, 957, 990, 924, 264, 1049, 1050, 523, 0, 265,
	266, 997, 0, 978, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1030, 283, 284, 981,
	979, 980, 987, 983, 982, 986, 285, 286, 287, 288,
	1014, 289, 1008, 1007, 928, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 999, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 934, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1021,
	1022, 946, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1006, 0, 0, 0, 320, 0, 321, 0, 0,
	1031, 322, 323, 1019, 1020, 324, 325, 0, 326, 1028,
	0, 956, 327, 0, 328, 329, 330, 331, 332, 992,
	993, 996, 388, 1033, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1032,
	341, 1001, 1002, 0, 962, 0, 343, 1034, 994, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	1029, 1037, 358, 359, 1038, 0, 360, 361, 362, 985,
	984, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 925, 242,
	1041, 386, 947, 995, 387, 1009, 389, 390, 0, 0,
	391, 0, 930, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 1042, 398, 1043, 1023, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 1024, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1005, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 1044, 437, 438, 439, 440, 935, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 988, 462, 446,
	447, 463, 464, 1045, 465, 466, 1003, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 1048, 473, 474,
	475, 476, 1025, 0, 479, 480, 923, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 1015,
	1016, 1017, 1018, 0, 495, 0, 489, 490, 1026, 491,
	1027, 945, 492, 493, 494, 0, 496, 497, 0, 929,
	498, 499, 500, 502, 503, 501, 504, 989, 505, 0,
	0, 506, 507, 508, 562, 1012, 1047, 0, 510, 509,
	565, 0, 0, 0, 0, 511, 512, 566, 513, 514,
	515, 926, 0, 0, 0, 0, 0, 0, 922, 0,
	0, 0, 0, 0, 0, 920, 921, 967, 939, 940,
	941, 937, 938, 950, 951, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 991, 955,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 1004, 0, 1011, 258, 1010, 0, 259, 260, 261,
	262, 263, 957, 990, 924, 264, 1049, 1050, 523, 0,
	265, 266, 997, 0, 978, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 3909, 281, 0, 282, 1030, 283, 284,
	981, 979, 980, 987, 983, 982, 986, 285, 286, 287,
	288, 1014, 289, 1008, 1007, 928, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 999, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 934,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1021, 1022, 946, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 1006, 0, 0, 0, 320, 0, 321, 0,
	0, 1031, 322, 323, 1019, 1020, 324, 325, 0, 326,
	1028, 0, 956, 327, 0, 328, 329, 330, 331, 332,
	992, 993, 996, 388, 1033, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1032, 341, 1001, 1002, 0, 962, 0, 343, 1034, 994,
	1035, 344, 345, 346, 1036, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 1029, 1037, 358, 359, 1038, 0, 360, 361, 362,
	985, 984, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	1039, 379, 380, 381, 384, 385, 383, 1040, 382, 925,
	242, 1041, 386, 947, 995, 387, 1009, 389, 390, 0,
	0, 391, 0, 930, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 1042, 398, 1043, 1023, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 1024, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1005, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 1044, 437, 438, 439, 440, 935, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 988, 462,
	446, 447, 463, 464, 1045, 465, 466, 1003, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 1048, 473,
	474, 475, 476, 1025, 0, 479, 480, 923, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	1015, 1016, 1017, 1018, 0, 495, 0, 489, 490, 1026,
	491, 1027, 945, 492, 493, 494, 0, 496, 497, 0,
	929, 498, 499, 500, 502, 503, 501, 504, 989, 505,
	0, 0, 506, 507, 508, 562, 1012, 1047, 0, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 926, 0, 0, 0, 0, 0, 0, 922,
	0, 0, 0, 0, 0, 0, 920, 921, 967, 939,
	940, 941, 937, 938, 950, 951, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 991,
	955, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 1004, 0, 1011, 258, 1010, 0, 259, 260,
	261, 262, 263, 957, 990, 924, 264, 1049, 1050, 523,
	0, 265, 266, 997, 0, 978, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 981, 979, 980, 987, 983, 982, 986, 285, 286,
	287, 288, 1014, 289, 1008, 1007, 928, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 999,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	934, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1021, 1022, 946, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1006, 0, 0, 0, 320, 0, 321,
	0, 0, 1031, 322, 323, 1019, 1020, 324, 325, 0,
	326, 1028, 0, 956, 327, 0, 328, 329, 330, 331,
	332, 992, 993, 996, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 2140, 339, 340, 342,
	0, 1032, 341, 1001, 1002, 0, 962, 0, 343, 1034,
	994, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 1029, 1037, 358, 359, 1038, 0, 360, 361,
	362, 985, 984, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	925, 242, 1041, 386, 947, 995, 387, 1009, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 1023, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 1024, 411, 550, 412, 413, 2139,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1005,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 935, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 988,
	462, 446, 447, 463, 464, 1045, 465, 466, 1003, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 1048,
	473, 474, 475, 476, 1025, 0, 479, 480, 923, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 1015, 1016, 1017, 1018, 0, 495, 0, 489, 490,
	1026, 491, 1027, 945, 492, 493, 494, 0, 496, 497,
	0, 929, 498, 499, 500, 502, 503, 501, 504, 989,
	505, 0, 0, 506, 507, 508, 562, 1012, 1047, 0,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 926, 0, 0, 0, 0, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 920, 921, 967,
	939, 940, 941, 937, 938, 950, 951, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	991, 955, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 1004, 0, 1011, 258, 1010, 0, 259,
	260, 261, 262, 263, 957, 990, 924, 264, 1049, 1050,
	523, 0, 265, 266, 997, 0, 978, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 3709, 281, 0, 282, 1030,
	283, 284, 981, 979, 980, 987, 983, 982, 986, 285,
	286, 287, 288, 1014, 289, 1008, 1007, 928, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	999, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 934, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 1021, 1022, 946, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 1006, 0, 0, 0, 320, 0,
	321, 0, 0, 1031, 322, 323, 1019, 1020, 324, 325,
	0, 326, 1028, 0, 956, 327, 0, 328, 329, 330,
	331, 332, 992, 993, 996, 388, 1033, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 1032, 341, 1001, 1002, 0, 962, 0, 343,
	1034, 994, 1035, 344, 345, 346, 1036, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 1029, 1037, 358, 359, 1038, 0, 360,
	361, 362, 985, 984, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 1039, 379, 380, 381, 384, 385, 383, 1040,
	382, 925, 242, 1041, 386, 947, 995, 387, 1009, 389,
	390, 0, 0, 391, 0, 930, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 1042, 398, 1043, 1023, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 1024, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1005, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 1044, 437, 438, 439, 440, 935,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	988, 462, 446, 447, 463, 464, 1045, 465, 466, 1003,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	1048, 473, 474, 475, 476, 1025, 0, 479, 480, 923,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 1015, 1016, 1017, 1018, 0, 495, 0, 489,
	490, 1026, 491, 1027, 945, 492, 493, 494, 0, 496,
	497, 0, 929, 498, 499, 500, 502, 503, 501, 504,
	989, 505, 0, 0, 506, 507, 508, 562, 1012, 1047,
	0, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 926, 0, 0, 0, 0, 0,
	0, 922, 0, 0, 0, 0, 0, 0, 920, 921,
	967, 939, 940, 941, 937, 938, 950, 951, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 991, 955, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 1004, 0, 1011, 258, 1010, 0,
	259, 260, 261, 262, 263, 957, 990, 924, 264, 1049,
	1050, 523, 0, 265, 266, 997, 0, 978, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 981, 979, 980, 987, 983, 982, 986,
	285, 286, 287, 288, 1014, 289, 1008, 1007, 928, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 999, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 934, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1021, 1022, 946, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1006, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 1019, 1020, 324,
	325, 0, 326, 1028, 0, 956, 327, 0, 328, 329,
	330, 331, 332, 992, 993, 996, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1032, 341, 1001, 1002, 0, 962, 0,
	343, 1034, 994, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 1029, 1037, 358, 359, 1038, 0,
	360, 361, 362, 985, 984, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 925, 3388, 1041, 386, 947, 995, 387, 1009,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 1023,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 1024, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1005, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	935, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 988, 462, 446, 447, 463, 464, 1045, 465, 466,
	1003, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 1048, 473, 474, 475, 476, 1025, 0, 479, 480,
	923, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 1015, 1016, 1017, 1018, 0, 495, 0,
	489, 490, 1026, 491, 1027, 945, 492, 493, 494, 0,
	496, 497, 0, 929, 498, 499, 500, 502, 503, 501,
	504, 989, 505, 0, 0, 506, 507, 508, 562, 1012,
	1047, 0, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 926, 0, 0, 0, 0,
	0, 0, 922, 0, 0, 0, 0, 0, 0, 920,
	921, 1721, 0, 0, 0, 0, 0, 0, 951, 0,
	0, 0, 949, 967, 939, 940, 941, 937, 938, 950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 991, 955, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 1004, 0, 1011,
	258, 1010, 0, 259, 260, 261, 262, 263, 957, 990,
	924, 264, 1049, 1050, 523, 0, 265, 266, 997, 0,
	978, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1030, 283, 284, 981, 979, 980, 987,
	983, 982, 986, 285, 286, 287, 288, 1014, 289, 1008,
	1007, 928, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 999, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 934, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1021, 1022, 946, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1006, 0,
	0, 0, 320, 0, 321, 0, 0, 1031, 322, 323,
	1019, 1020, 324, 325, 0, 326, 1028, 0, 956, 327,
	0, 328, 329, 330, 331, 332, 992, 993, 996, 388,
	1033, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1032, 341, 1001, 1002,
	0, 962, 0, 343, 1034, 994, 1035, 344, 345, 346,
	1036, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 1029, 1037, 358,
	359, 1038, 0, 360, 361, 362, 985, 984, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 1039, 379, 380, 381,
	384, 385, 383, 1040, 382, 925, 242, 1041, 386, 947,
	995, 387, 1009, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 1042,
	398, 1043, 1023, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 1024,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1005, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 1044, 437,
	438, 439, 440, 935, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 988, 462, 446, 447, 463, 464,
	1045, 465, 466, 1003, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 1048, 473, 474, 475, 476, 1025,
	0, 479, 480, 923, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 1015, 1016, 1017, 1018,
	0, 495, 0, 489, 490, 1026, 491, 1027, 945, 492,
	493, 494, 0, 496, 497, 0, 929, 498, 499, 500,
	502, 503, 501, 504, 989, 505, 0, 0, 506, 507,
	508, 562, 1012, 1047, 3157, 510, 509, 565, 0, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 926, 0,
	0, 0, 0, 0, 0, 922, 0, 0, 0, 0,
	0, 0, 920, 921, 967, 939, 940, 941, 937, 938,
	950, 951, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 991, 955, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 1004, 0,
	1011, 258, 1010, 0, 259, 260, 261, 262, 263, 957,
	990, 924, 264, 1049, 1050, 523, 0, 265, 266, 997,
	0, 978, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 981, 979, 980,
	987, 983, 982, 986, 285, 286, 287, 288, 1014, 289,
	1008, 1007, 928, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 999, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 934, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1021, 1022, 946,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1006,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 1019, 1020, 324, 325, 0, 326, 1028, 0, 956,
	327, 0, 328, 329, 330, 331, 332, 992, 993, 996,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1032, 341, 1001,
	1002, 0, 962, 0, 343, 1034, 994, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 1029, 1037,
	358, 359, 1038, 0, 360, 361, 362, 985, 984, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 925, 242, 1041, 386,
	947, 995, 387, 1009, 389, 390, 0, 0, 391, 0,
	930, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 1023, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	1024, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1005, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 935, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 988, 462, 446, 447, 463,
	464, 1045, 465, 466, 1003, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 1048, 473, 474, 475, 476,
	1025, 0, 479, 480, 923, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 1015, 1016, 1017,
	1018, 0, 495, 0, 489, 490, 1026, 491, 1027, 945,
	492, 493, 494, 0, 496, 497, 0, 929, 498, 499,
	500, 502, 503, 501, 504, 989, 505, 0, 0, 506,
	507, 508, 562, 1012, 1047, 0, 510, 509, 565, 0,
	0, 0, 0, 511, 512, 566, 513, 514, 515, 926,
	0, 0, 0, 0, 0, 0, 922, 0, 0, 0,
	0, 0, 0, 920, 921, 967, 939, 940, 941, 937,
	938, 950, 951, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 991, 955, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 1004,
	0, 1011, 258, 1010, 0, 259, 260, 261, 262, 263,
	957, 990, 924, 264, 1049, 1050, 523, 0, 265, 266,
	997, 0, 978, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1030, 283, 284, 981, 979,
	980, 987, 983, 982, 986, 285, 286, 287, 288, 1014,
	289, 1008, 1007, 928, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 999, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 934, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1021, 1022,
	946, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1006, 0, 0, 0, 320, 0, 321, 0, 0, 1031,
	322, 323, 1019, 1020, 324, 325, 0, 326, 1028, 0,
	956, 327, 0, 328, 329, 330, 331, 332, 992, 993,
	996, 388, 1033, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1032, 341,
	1001, 1002, 0, 962, 0, 343, 1034, 994, 1035, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 1029,
	1037, 358, 359, 1038, 0, 360, 361, 362, 985, 984,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 925, 242, 1041,
	386, 947, 995, 387, 1009, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 1042, 398, 1043, 1023, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 1024, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1005, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	1044, 437, 438, 439, 440, 935, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 988, 462, 446, 447,
	463, 464, 1045, 465, 466, 1003, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 1048, 473, 474, 475,
	476, 1025, 0, 479, 480, 923, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 1015, 1016,
	1017, 1018, 0, 495, 0, 489, 490, 1026, 491, 1027,
	945, 492, 493, 494, 0, 496, 497, 0, 929, 498,
	499, 500, 502, 503, 501, 504, 989, 505, 0, 0,
	506, 507, 508, 562, 1012, 1047, 0, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	926, 0, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 0, 920, 921, 1721, 0, 0, 0,
	0, 0, 0, 951, 0, 0, 0, 949, 967, 939,
	940, 941, 937, 938, 950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 991,
	955, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 1004, 0, 1011, 258, 1010, 0, 259, 260,
	261, 262, 263, 957, 990, 924, 264, 1049, 1050, 523,
	0, 265, 266, 997, 0, 978, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 981, 979, 980, 987, 983, 982, 986, 285, 286,
	287, 288, 1014, 289, 1008, 1007, 928, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 999,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	934, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1021, 1022, 946, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1006, 0, 0, 0, 320, 0, 321,
	0, 2335, 1031, 322, 323, 1019, 1020, 324, 325, 0,
	326, 1028, 0, 956, 327, 0, 328, 329, 330, 331,
	332, 992, 993, 996, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1032, 341, 1001, 1002, 0, 962, 0, 343, 1034,
	994, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 1029, 1037, 358, 359, 1038, 0, 360, 361,
	362, 985, 984, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	925, 242, 1041, 386, 947, 995, 387, 1009, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 1023, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 1024, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1005,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 935, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 988,
	462, 446, 447, 463, 464, 1045, 465, 466, 1003, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 1048,
	473, 474, 475, 476, 1025, 0, 479, 480, 923, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 1015, 1016, 1017, 1018, 0, 495, 0, 489, 490,
	1026, 491, 1027, 945, 492, 493, 494, 0, 496, 497,
	0, 929, 498, 499, 500, 502, 503, 501, 504, 989,
	505, 0, 0, 506, 507, 508, 562, 1012, 1047, 0,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 926, 0, 0, 0, 0, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 920, 921, 967,
	939, 940, 941, 937, 938, 950, 951, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	991, 955, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 1004, 0, 1011, 258, 1010, 0, 259,
	260, 261, 262, 263, 957, 990, 924, 264, 1049, 1050,
	523, 0, 265, 266, 997, 0, 978, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1030,
	283, 284, 981, 979, 980, 987, 983, 982, 986, 285,
	286, 287, 288, 1014, 289, 1008, 1007, 928, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	999, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 934, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 1021, 1022, 946, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 1006, 0, 0, 0, 320, 0,
	321, 0, 0, 1031, 322, 323, 1019, 1020, 324, 325,
	0, 326, 1028, 0, 956, 327, 0, 328, 329, 330,
	331, 332, 992, 993, 996, 388, 1033, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 1032, 341, 1001, 1002, 0, 962, 0, 343,
	1034, 994, 1035, 344, 345, 346, 1036, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 1029, 1037, 358, 359, 1038, 0, 360,
	361, 362, 985, 984, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 1039, 379, 380, 381, 384, 385, 383, 1040,
	382, 925, 242, 1041, 386, 947, 995, 387, 1009, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 1042, 398, 1043, 1023, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 1024, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1005, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 1044, 437, 438, 439, 440, 935,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	988, 462, 446, 447, 463, 464, 1045, 465, 466, 1003,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	1048, 473, 474, 475, 476, 1025, 0, 479, 480, 923,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 1015, 1016, 1017, 1018, 0, 495, 0, 489,
	490, 1026, 491, 1027, 945, 492, 493, 494, 0, 496,
	497, 0, 929, 498, 499, 500, 502, 503, 501, 504,
	989, 505, 0, 0, 506, 507, 508, 562, 1012, 1047,
	0, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 926, 0, 0, 0, 0, 0,
	0, 922, 0, 0, 0, 0, 0, 0, 920, 921,
	0, 0, 0, 0, 0, 0, 0, 951, 1651, 0,
	2340, 949, 967, 939, 940, 941, 937, 938, 950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 991, 955, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 1004, 0, 1011, 258,
	1010, 0, 259, 260, 261, 262, 263, 957, 990, 924,
	264, 1049, 1050, 523, 0, 265, 266, 997, 0, 978,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1030, 283, 284, 981, 979, 980, 987, 983,
	982, 986, 285, 286, 287, 288, 1014, 289, 1008, 1007,
	928, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 999, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 934, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1021, 1022, 946, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1006, 0, 0,
	0, 320, 0, 321, 0, 0, 1031, 322, 323, 1019,
	1020, 324, 325, 0, 326, 1028, 0, 956, 327, 0,
	328, 329, 330, 331, 332, 992, 993, 996, 388, 1033,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1032, 341, 1001, 1002, 0,
	962, 0, 343, 1034, 994, 1035, 344, 345, 346, 1036,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 1029, 1037, 358, 359,
	1038, 0, 360, 361, 362, 985, 984, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 1039, 379, 380, 381, 384,
	385, 383, 1040, 382, 925, 242, 1041, 386, 947, 995,
	387, 1009, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 1042, 398,
	1043, 1023, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 1024, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1005, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 1044, 437, 438,
	439, 440, 935, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 988, 462, 446, 447, 463, 464, 1045,
	465, 466, 1003, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 1048, 473, 474, 475, 476, 1025, 0,
	479, 480, 923, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 1015, 1016, 1017, 1018, 0,
	495, 0, 489, 490, 1026, 491, 1027, 945, 492, 493,
	494, 0, 496, 497, 0, 929, 498, 499, 500, 502,
	503, 501, 504, 989, 505, 0, 0, 506, 507, 508,
	562, 1012, 1047, 0, 510, 509, 565, 0, 0, 0,
	0, 511, 512, 566, 513, 514, 515, 926, 0, 0,
	0, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	0, 920, 921, 0, 0, 0, 0, 0, 0, 0,
	951, 0, 0, 2338, 949, 967, 939, 940, 941, 937,
	938, 950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 991, 955, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 1004,
	0, 1011, 258, 1010, 0, 259, 260, 261, 262, 263,
	957, 990, 924, 264, 1049, 1050, 523, 0, 265, 266,
	997, 0, 978, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1030, 283, 284, 981, 979,
	980, 987, 983, 982, 986, 285, 286, 287, 288, 1014,
	289, 1008, 1007, 928, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 999, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 934, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1021, 1022,
	946, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1006, 0, 0, 0, 320, 0, 321, 0, 0, 1031,
	322, 323, 1019, 1020, 324, 325, 0, 326, 1028, 0,
	956, 327, 0, 328, 329, 330, 331, 332, 992, 993,
	996, 388, 1033, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1032, 341,
	1001, 1002, 0, 962, 0, 343, 1034, 994, 1035, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 1029,
	1037, 358, 359, 1038, 0, 360, 361, 362, 985, 984,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 925, 242, 1041,
	386, 947, 995, 387, 1009, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 1042, 398, 1043, 1023, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 1024, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1005, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	1044, 437, 438, 439, 440, 935, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 988, 462, 446, 447,
	463, 464, 1045, 465, 466, 1003, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 1048, 473, 474, 475,
	476, 1025, 0, 479, 480, 923, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 1015, 1016,
	1017, 1018, 0, 495, 0, 489, 490, 1026, 491, 1027,
	945, 492, 493, 494, 0, 496, 497, 0, 929, 498,
	499, 500, 502, 503, 501, 504, 989, 505, 0, 0,
	506, 507, 508, 562, 1012, 1047, 0, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	926, 0, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 0, 920, 921, 0, 0, 0, 0,
	0, 0, 0, 951, 0, 0, 2326, 949, 967, 939,
	940, 941, 937, 938, 950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 991,
	955, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 1004, 0, 1011, 258, 1010, 0, 259, 260,
	261, 262, 263, 957, 990, 924, 264, 1049, 1050, 523,
	0, 265, 266, 997, 0, 978, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 981, 979, 980, 987, 983, 982, 986, 285, 286,
	287, 288, 1014, 289, 1008, 1007, 928, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 999,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	934, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1021, 1022, 946, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1006, 0, 0, 0, 320, 0, 321,
	0, 0, 1031, 322, 323, 1019, 1020, 324, 325, 0,
	326, 1028, 0, 956, 327, 0, 328, 329, 330, 331,
	332, 992, 993, 996, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1032, 341, 1001, 1002, 0, 962, 0, 343, 1034,
	994, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 1029, 1037, 358, 359, 1038, 0, 360, 361,
	362, 985, 984, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	925, 242, 1041, 386, 947, 995, 387, 1009, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 1023, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 1024, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1005,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 935, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 988,
	462, 446, 447, 463, 464, 1045, 465, 466, 1003, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 1048,
	473, 474, 475, 476, 1025, 0, 479, 480, 923, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 1015, 1016, 1017, 1018, 0, 495, 0, 489, 490,
	1026, 491, 1027, 945, 492, 493, 494, 0, 496, 497,
	0, 929, 498, 499, 500, 502, 503, 501, 504, 989,
	505, 0, 0, 506, 507, 508, 562, 1012, 1047, 0,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 926, 0, 0, 0, 0, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 920, 921, 0,
	0, 0, 0, 0, 0, 0, 951, 0, 0, 2315,
	949, 967, 939, 940, 941, 937, 938, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 991, 955, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 1004, 0, 1011, 258, 1010,
	0, 259, 260, 261, 262, 263, 957, 990, 924, 264,
	1049, 1050, 523, 0, 265, 266, 997, 0, 978, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1030, 283, 284, 981, 979, 980, 987, 983, 982,
	986, 285, 286, 287, 288, 1014, 289, 1008, 1007, 928,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 999, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 934, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1021, 1022, 946, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1006, 0, 0, 0,
	320, 0, 321, 0, 0, 1031, 322, 323, 1019, 1020,
	324, 325, 0, 326, 1028, 0, 956, 327, 0, 328,
	329, 330, 331, 332, 992, 993, 996, 388, 1033, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1032, 341, 1001, 1002, 0, 962,
	0, 343, 1034, 994, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 1029, 1037, 358, 359, 1038,
	0, 360, 361, 362, 985, 984, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 925, 242, 1041, 386, 947, 995, 387,
	1009, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 1042, 398, 1043,
	1023, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 1024, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1005, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 1044, 437, 438, 439,
	440, 935, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 988, 462, 446, 447, 463, 464, 1045, 465,
	466, 1003, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 1048, 473, 474, 475, 476, 1025, 0, 479,
	480, 923, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 1015, 1016, 1017, 1018, 0, 495,
	0, 489, 490, 1026, 491, 1027, 945, 492, 493, 494,
	0, 496, 497, 0, 929, 498, 499, 500, 502, 503,
	501, 504, 989, 505, 0, 0, 506, 507, 508, 562,
	1012, 1047, 0, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 926, 0, 0, 0,
	0, 0, 0, 922, 0, 0, 0, 0, 0, 0,
	920, 921, 0, 0, 0, 0, 0, 0, 0, 951,
	0, 0, 2313, 949, 2304, 2311, 940, 941, 937, 938,
	950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 991, 955, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 1004, 0,
	1011, 258, 1010, 0, 259, 260, 261, 262, 263, 957,
	990, 924, 264, 1049, 1050, 523, 0, 265, 266, 997,
	0, 978, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 981, 979, 980,
	987, 983, 982, 986, 285, 286, 287, 288, 1014, 2307,
	1008, 1007, 928, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 999, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 934, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1021, 1022, 946,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1006,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 1019, 1020, 324, 325, 0, 326, 1028, 0, 956,
	327, 0, 328, 329, 330, 2308, 332, 992, 993, 996,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1032, 341, 1001,
	1002, 0, 962, 0, 343, 1034, 994, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 1029, 1037,
	358, 359, 1038, 0, 360, 361, 362, 985, 984, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 2309,
	2306, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 925, 242, 1041, 386,
	947, 995, 387, 1009, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 1023, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	1024, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1005, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 935, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 2310, 0, 457,
	458, 456, 459, 460, 461, 988, 462, 446, 447, 463,
	464, 1045, 465, 466, 1003, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 1048, 473, 474, 475, 476,
	1025, 0, 479, 480, 923, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 1015, 1016, 1017,
	1018, 0, 495, 0, 489, 490, 1026, 491, 1027, 945,
	492, 493, 494, 0, 496, 497, 0, 929, 498, 499,
	500, 502, 503, 501, 504, 989, 505, 0, 0, 506,
	507, 508, 562, 1012, 1047, 0, 510, 509, 565, 0,
	0, 0, 0, 511, 512, 566, 513, 2305, 515, 926,
	0, 0, 0, 0, 0, 0, 922, 0, 0, 0,
	0, 0, 0, 920, 921, 0, 0, 0, 0, 0,
	0, 0, 951, 0, 0, 2301, 949, 2304, 2311, 940,
	941, 937, 938, 950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 991, 955,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 1004, 0, 1011, 258, 1010, 0, 259, 260, 261,
	262, 263, 957, 990, 924, 264, 1049, 1050, 523, 0,
	265, 266, 997, 0, 978, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1030, 283, 284,
	981, 979, 980, 987, 983, 982, 986, 285, 286, 287,
	288, 1014, 2307, 1008, 1007, 928, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 999, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 934,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1021, 1022, 946, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 1006, 0, 0, 0, 320, 0, 321, 0,
	0, 1031, 322, 323, 1019, 1020, 324, 325, 0, 326,
	1028, 0, 956, 327, 0, 328, 329, 330, 2308, 332,
	992, 993, 996, 388, 1033, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1032, 341, 1001, 1002, 0, 962, 0, 343, 1034, 994,
	1035, 344, 345, 346, 1036, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 1029, 1037, 358, 359, 1038, 0, 360, 361, 362,
	985, 984, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 2309, 2306, 373, 374, 375, 378, 0, 377,
	1039, 379, 380, 381, 384, 385, 383, 1040, 382, 925,
	242, 1041, 386, 947, 995, 387, 1009, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 1042, 398, 1043, 1023, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 1024, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1005, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 1044, 437, 438, 439, 440, 935, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	2310, 0, 457, 458, 456, 459, 460, 461, 988, 462,
	446, 447, 463, 464, 1045, 465, 466, 1003, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 1048, 473,
	474, 475, 476, 1025, 0, 479, 480, 923, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	1015, 1016, 1017, 1018, 0, 495, 0, 489, 490, 1026,
	491, 1027, 945, 492, 493, 494, 0, 496, 497, 0,
	929, 498, 499, 500, 502, 503, 501, 504, 989, 505,
	0, 0, 506, 507, 508, 562, 1012, 1047, 0, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	2305, 515, 926, 0, 0, 0, 0, 0, 0, 922,
	0, 0, 0, 0, 0, 0, 920, 921, 967, 939,
	940, 941, 937, 938, 950, 951, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 991,
	955, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 1004, 0, 1011, 258, 1010, 0, 259, 260,
	261, 262, 263, 957, 990, 924, 264, 1049, 1050, 523,
	0, 265, 266, 997, 0, 978, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 981, 979, 980, 987, 983, 982, 986, 285, 286,
	287, 288, 1014, 289, 1008, 1007, 928, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 999,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	934, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1021, 1022, 946, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1006, 0, 0, 0, 320, 0, 321,
	0, 0, 1031, 322, 323, 1019, 1020, 324, 325, 0,
	326, 1028, 0, 956, 327, 0, 328, 329, 330, 331,
	332, 992, 993, 996, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1032, 341, 1001, 1002, 0, 962, 0, 343, 1034,
	994, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 1029, 1037, 358, 359, 1038, 0, 360, 361,
	362, 985, 984, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	925, 242, 1041, 386, 947, 995, 387, 1009, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 1023, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 1024, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1005,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 935, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 988,
	462, 446, 447, 463, 464, 1045, 465, 466, 1003, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 1048,
	473, 474, 475, 476, 1025, 0, 479, 480, 923, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 1015, 1016, 1017, 1018, 0, 495, 0, 489, 490,
	1026, 491, 1027, 945, 492, 493, 494, 0, 496, 497,
	0, 929, 498, 499, 500, 502, 503, 501, 504, 989,
	505, 0, 0, 506, 507, 508, 562, 1012, 1047, 0,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 926, 0, 0, 0, 0, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 920, 921, 0,
	0, 0, 0, 0, 1659, 0, 951, 0, 0, 0,
	949, 967, 939, 940, 941, 937, 938, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 2119, 249, 250, 0, 0, 0,
	0, 0, 991, 955, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 1004, 0, 1011, 258, 1010,
	0, 259, 260, 261, 262, 263, 957, 990, 924, 264,
	1049, 1050, 523, 0, 265, 266, 997, 0, 978, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1030, 283, 284, 981, 979, 980, 987, 983, 982,
	986, 285, 286, 287, 288, 1014, 289, 1008, 1007, 928,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 999, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 934, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1021, 1022, 946, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1006, 0, 0, 0,
	320, 0, 321, 0, 0, 1031, 322, 323, 1019, 1020,
	324, 325, 0, 326, 1028, 0, 956, 327, 0, 328,
	329, 330, 331, 332, 992, 993, 996, 388, 1033, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1032, 341, 1001, 1002, 0, 962,
	0, 343, 1034, 994, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 1029, 1037, 358, 359, 1038,
	0, 360, 361, 362, 985, 984, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 925, 242, 1041, 386, 947, 995, 387,
	1009, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 1042, 398, 1043,
	1023, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 1024, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1005, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 1044, 437, 438, 439,
	440, 935, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 988, 462, 446, 447, 463, 464, 1045, 465,
	466, 1003, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 1048, 473, 474, 475, 476, 1025, 0, 479,
	480, 923, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 1015, 1016, 1017, 1018, 0, 495,
	0, 489, 490, 1026, 491, 1027, 945, 492, 493, 494,
	0, 496, 497, 0, 929, 498, 499, 500, 502, 503,
	501, 504, 989, 505, 0, 0, 506, 507, 508, 562,
	1012, 1047, 0, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 926, 0, 0, 0,
	0, 0, 0, 922, 0, 0, 0, 0, 0, 0,
	920, 921, 0, 0, 0, 0, 0, 0, 0, 951,
	0, 0, 1511, 949, 967, 939, 940, 941, 937, 938,
	950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 991, 955, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 1004, 0,
	1011, 258, 1010, 0, 259, 260, 261, 262, 263, 957,
	990, 924, 264, 1049, 1050, 523, 0, 265, 266, 997,
	0, 978, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 981, 979, 980,
	987, 983, 982, 986, 285, 286, 287, 288, 1014, 289,
	1008, 1007, 928, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 999, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 934, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1021, 1022, 946,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1006,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 1019, 1020, 324, 325, 0, 326, 1028, 0, 956,
	327, 0, 328, 329, 330, 331, 332, 992, 993, 996,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1032, 341, 1001,
	1002, 0, 962, 0, 343, 1034, 994, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 1029, 1037,
	358, 359, 1038, 0, 360, 361, 362, 985, 984, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 925, 242, 1041, 386,
	947, 995, 387, 1009, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 1023, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	1024, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1005, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 935, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 988, 462, 446, 447, 463,
	464, 1045, 465, 466, 1003, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 1048, 473, 474, 475, 476,
	1025, 0, 479, 480, 923, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 1015, 1016, 1017,
	1018, 0, 495, 0, 489, 490, 1026, 491, 1027, 945,
	492, 493, 494, 0, 496, 497, 0, 929, 498, 499,
	500, 502, 503, 501, 504, 989, 505, 0, 0, 506,
	507, 508, 562, 1012, 1047, 0, 510, 509, 565, 0,
	0, 0, 0, 511, 512, 566, 513, 514, 515, 926,
	0, 0, 0, 0, 0, 0, 922, 0, 0, 0,
	0, 0, 0, 920, 921, 0, 0, 0, 0, 0,
	0, 0, 951, 0, 0, 1450, 949, 967, 939, 940,
	941, 937, 938, 950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 991, 955,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 1004, 0, 1011, 258, 1010, 0, 259, 260, 261,
	262, 263, 957, 990, 924, 264, 1049, 1050, 523, 0,
	265, 266, 997, 0, 978, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1030, 283, 284,
	981, 979, 980, 987, 983, 982, 986, 285, 286, 287,
	288, 1014, 289, 1008, 1007, 928, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 999, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 934,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1021, 1022, 946, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 1006, 0, 0, 0, 320, 0, 321, 0,
	0, 1031, 322, 323, 1019, 1020, 324, 325, 0, 326,
	1028, 0, 956, 327, 0, 328, 329, 330, 331, 332,
	992, 993, 996, 388, 1033, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1032, 341, 1001, 1002, 0, 962, 0, 343, 1034, 994,
	1035, 344, 345, 346, 1036, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 1029, 1037, 358, 359, 1038, 0, 360, 361, 362,
	985, 984, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	1039, 379, 380, 381, 384, 385, 383, 1040, 382, 925,
	242, 1041, 386, 947, 995, 387, 1009, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 1042, 398, 1043, 1023, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 1024, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1005, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 1044, 437, 438, 439, 440, 935, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 988, 462,
	446, 447, 463, 464, 1045, 465, 466, 1003, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 1048, 473,
	474, 475, 476, 1025, 0, 479, 480, 923, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	1015, 1016, 1017, 1018, 0, 495, 0, 489, 490, 1026,
	491, 1027, 945, 492, 493, 494, 0, 496, 497, 0,
	929, 498, 499, 500, 502, 503, 501, 504, 989, 505,
	0, 0, 506, 507, 508, 562, 1012, 1047, 0, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 926, 0, 0, 0, 0, 0, 0, 922,
	0, 0, 0, 0, 0, 0, 920, 921, 0, 0,
	0, 0, 0, 0, 0, 951, 0, 0, 1445, 949,
	967, 939, 940, 941, 937, 938, 950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 991, 955, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 1004, 0, 1011, 258, 1010, 0,
	259, 260, 261, 262, 263, 957, 990, 924, 264, 1049,
	1050, 523, 0, 265, 266, 997, 0, 978, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 981, 979, 980, 987, 983, 982, 986,
	285, 286, 287, 288, 1014, 289, 1008, 1007, 928, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 999, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 934, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1021, 1022, 946, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1006, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 1019, 1020, 324,
	325, 0, 326, 1028, 0, 956, 327, 0, 328, 329,
	330, 331, 332, 992, 993, 996, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1032, 341, 1001, 1002, 0, 962, 0,
	343, 1034, 994, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 1029, 1037, 358, 359, 1038, 0,
	360, 361, 362, 985, 984, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 925, 242, 1041, 386, 947, 995, 387, 1009,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 1023,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 1024, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1005, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	935, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 988, 462, 446, 447, 463, 464, 1045, 465, 466,
	1003, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 1048, 473, 474, 475, 476, 1025, 0, 479, 480,
	923, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 1015, 1016, 1017, 1018, 0, 495, 0,
	489, 490, 1026, 491, 1027, 945, 492, 493, 494, 0,
	496, 497, 0, 929, 498, 499, 500, 502, 503, 501,
	504, 989, 505, 0, 0, 506, 507, 508, 562, 1012,
	1047, 0, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 926, 0, 0, 0, 0,
	0, 0, 922, 0, 0, 0, 0, 0, 0, 920,
	921, 0, 0, 0, 0, 0, 0, 0, 951, 0,
	0, 1436, 949, 967, 939, 940, 941, 937, 938, 950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 991, 955, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 1004, 0, 1011,
	258, 1010, 0, 259, 260, 261, 262, 263, 957, 990,
	924, 264, 1049, 1050, 523, 0, 265, 266, 997, 0,
	978, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1030, 283, 284, 981, 979, 980, 987,
	983, 982, 986, 285, 286, 287, 288, 1014, 289, 1008,
	1007, 928, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 999, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 934, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1021, 1022, 946, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1006, 0,
	0, 0, 320, 0, 321, 0, 0, 1031, 322, 323,
	1019, 1020, 324, 325, 0, 326, 1028, 0, 956, 327,
	0, 328, 329, 330, 331, 332, 992, 993, 996, 388,
	1033, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1032, 341, 1001, 1002,
	0, 962, 0, 343, 1034, 994, 1035, 344, 345, 346,
	1036, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 1029, 1037, 358,
	359, 1038, 0, 360, 361, 362, 985, 984, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 1039, 379, 380, 381,
	384, 385, 383, 1040, 382, 925, 242, 1041, 386, 947,
	995, 387, 1009, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 1042,
	398, 1043, 1023, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 1024,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1005, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 1044, 437,
	438, 439, 440, 935, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 988, 462, 446, 447, 463, 464,
	1045, 465, 466, 1003, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 1048, 473, 474, 475, 476, 1025,
	0, 479, 480, 923, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 1015, 1016, 1017, 1018,
	0, 495, 0, 489, 490, 1026, 491, 1027, 945, 492,
	493, 494, 0, 496, 497, 0, 929, 498, 499, 500,
	502, 503, 501, 504, 989, 505, 0, 0, 506, 507,
	508, 562, 1012, 1047, 0, 510, 509, 565, 0, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 926, 0,
	0, 0, 0, 0, 0, 922, 0, 0, 0, 0,
	0, 0, 920, 921, 0, 0, 0, 0, 0, 0,
	0, 951, 0, 0, 1431, 949, 967, 939, 940, 941,
	937, 938, 950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 991, 955, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	1004, 0, 1011, 258, 1010, 0, 259, 260, 261, 262,
	263, 957, 990, 924, 264, 1049, 1050, 523, 0, 265,
	266, 997, 0, 978, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1030, 283, 284, 981,
	979, 980, 987, 983, 982, 986, 285, 286, 287, 288,
	1014, 289, 1008, 1007, 928, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 999, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 934, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1021,
	1022, 946, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1006, 0, 0, 0, 320, 0, 321, 0, 0,
	1031, 322, 323, 1019, 1020, 324, 325, 0, 326, 1028,
	0, 956, 327, 0, 328, 329, 330, 331, 332, 992,
	993, 996, 388, 1033, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1032,
	341, 1001, 1002, 0, 962, 0, 343, 1034, 994, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	1029, 1037, 358, 359, 1038, 0, 360, 361, 362, 985,
	984, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 925, 242,
	1041, 386, 947, 995, 387, 1009, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 1042, 398, 1043, 1023, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 1024, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1005, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 1044, 437, 438, 439, 440, 935, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 988, 462, 446,
	447, 463, 464, 1045, 465, 466, 1003, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 1048, 473, 474,
	475, 476, 1025, 0, 479, 480, 923, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 1015,
	1016, 1017, 1018, 0, 495, 0, 489, 490, 1026, 491,
	1027, 945, 492, 493, 494, 0, 496, 497, 0, 929,
	498, 499, 500, 502, 503, 501, 504, 989, 505, 0,
	0, 506, 507, 508, 562, 1012, 1047, 0, 510, 509,
	565, 0, 0, 0, 0, 511, 512, 566, 513, 514,
	515, 926, 0, 0, 0, 0, 0, 0, 922, 0,
	0, 0, 0, 0, 0, 920, 921, 0, 0, 0,
	0, 0, 0, 0, 951, 0, 0, 1413, 949, 967,
	939, 940, 941, 937, 938, 950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	991, 955, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 1004, 0, 1011, 258, 1010, 0, 259,
	260, 261, 262, 263, 957, 990, 924, 264, 1049, 1050,
	523, 0, 265, 266, 997, 0, 978, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1030,
	283, 284, 981, 979, 980, 987, 983, 982, 986, 285,
	286, 287, 288, 1014, 289, 1008, 1007, 928, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	999, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 934, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 1021, 1022, 946, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 1006, 0, 0, 0, 320, 0,
	321, 0, 0, 1031, 322, 323, 1019, 1020, 324, 325,
	0, 326, 1028, 0, 956, 327, 0, 328, 329, 330,
	331, 332, 992, 993, 996, 388, 1033, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 1032, 341, 1001, 1002, 0, 962, 0, 343,
	1034, 994, 1035, 344, 345, 346, 1036, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 1029, 1037, 358, 359, 1038, 0, 360,
	361, 362, 985, 984, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 1039, 379, 380, 381, 384, 385, 383, 1040,
	382, 925, 242, 1041, 386, 947, 995, 387, 1009, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 1042, 398, 1043, 1023, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 1024, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1005, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 1044, 437, 438, 439, 440, 935,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	988, 462, 446, 447, 463, 464, 1045, 465, 466, 1003,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	1048, 473, 474, 475, 476, 1025, 0, 479, 480, 923,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 1015, 1016, 1017, 1018, 0, 495, 0, 489,
	490, 1026, 491, 1027, 945, 492, 493, 494, 0, 496,
	497, 0, 929, 498, 499, 500, 502, 503, 501, 504,
	989, 505, 0, 0, 506, 507, 508, 562, 1012, 1047,
	0, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 926, 0, 0, 0, 0, 0,
	0, 922, 0, 0, 0, 0, 0, 0, 920, 921,
	0, 0, 0, 0, 0, 0, 0, 951, 0, 0,
	1300, 949, 967, 939, 940, 941, 937, 938, 950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 991, 955, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 1004, 0, 1011, 258,
	1010, 0, 259, 260, 261, 262, 263, 957, 990, 924,
	264, 1049, 1050, 523, 0, 265, 266, 997, 0, 978,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1030, 283, 284, 981, 979, 980, 987, 983,
	982, 986, 285, 286, 287, 288, 1014, 289, 1008, 1007,
	928, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 999, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 934, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1021, 1022, 946, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1006, 0, 0,
	0, 320, 0, 321, 0, 0, 1031, 322, 323, 1019,
	1020, 324, 325, 0, 326, 1028, 0, 956, 327, 0,
	328, 329, 330, 331, 332, 1299, 993, 996, 388, 1033,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1032, 341, 1001, 1002, 0,
	962, 0, 343, 1034, 994, 1035, 344, 345, 346, 1036,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 1029, 1037, 358, 359,
	1038, 0, 360, 361, 362, 985, 984, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 1039, 379, 380, 381, 384,
	385, 383, 1040, 382, 925, 242, 1041, 386, 947, 995,
	387, 1009, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 1042, 398,
	1043, 1023, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 1024, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1005, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 1044, 437, 438,
	439, 440, 935, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 988, 462, 446, 447, 463, 464, 1045,
	465, 466, 1003, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 1048, 473, 474, 475, 476, 1025, 0,
	479, 480, 923, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 1015, 1016, 1017, 1018, 0,
	495, 0, 489, 490, 1026, 491, 1027, 945, 492, 493,
	494, 0, 496, 497, 0, 929, 498, 499, 500, 502,
	503, 501, 504, 989, 505, 0, 0, 506, 507, 508,
	562, 1012, 1047, 0, 510, 509, 565, 0, 0, 0,
	0, 511, 512, 566, 513, 514, 515, 926, 0, 0,
	0, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	0, 920, 921, 0, 0, 0, 0, 0, 0, 0,
	951, 0, 0, 1294, 949, 967, 939, 940, 941, 937,
	938, 950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 991, 955, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 1004,
	0, 1011, 258, 1010, 0, 259, 260, 261, 262, 263,
	957, 990, 924, 264, 1049, 1050, 523, 0, 265, 266,
	997, 0, 978, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1030, 283, 284, 981, 979,
	980, 987, 983, 982, 986, 285, 286, 287, 288, 1014,
	289, 1008, 1007, 928, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 999, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 934, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1021, 1022,
	946, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1006, 0, 0, 0, 320, 0, 321, 0, 0, 1031,
	322, 323, 1019, 1020, 324, 325, 0, 326, 1028, 0,
	956, 327, 0, 328, 329, 330, 331, 332, 1293, 993,
	996, 388, 1033, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1032, 341,
	1001, 1002, 0, 962, 0, 343, 1034, 994, 1035, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 1029,
	1037, 358, 359, 1038, 0, 360, 361, 362, 985, 984,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 925, 242, 1041,
	386, 947, 995, 387, 1009, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 1042, 398, 1043, 1023, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 1024, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1005, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	1044, 437, 438, 439, 440, 935, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 988, 462, 446, 447,
	463, 464, 1045, 465, 466, 1003, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 1048, 473, 474, 475,
	476, 1025, 0, 479, 480, 923, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 1015, 1016,
	1017, 1018, 0, 495, 0, 489, 490, 1026, 491, 1027,
	945, 492, 493, 494, 0, 496, 497, 0, 929, 498,
	499, 500, 502, 503, 501, 504, 989, 505, 0, 0,
	506, 507, 508, 562, 1012, 1047, 0, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	926, 0, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 0, 920, 921, 0, 0, 0, 0,
	0, 0, 0, 951, 0, 0, 1287, 949, 967, 939,
	940, 941, 937, 938, 950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 991,
	955, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 1004, 0, 1011, 258, 1010, 0, 259, 260,
	261, 262, 263, 957, 990, 924, 264, 1049, 1050, 523,
	0, 265, 266, 997, 0, 978, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 981, 979, 980, 987, 983, 982, 986, 285, 286,
	287, 288, 1014, 289, 1008, 1007, 928, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 999,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	934, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1021, 1022, 946, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1006, 0, 0, 0, 320, 0, 321,
	0, 0, 1031, 322, 323, 1019, 1020, 324, 325, 0,
	326, 1028, 0, 956, 327, 0, 328, 329, 330, 331,
	332, 992, 993, 996, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1032, 341, 1001, 1002, 0, 962, 0, 343, 1034,
	994, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 1029, 1037, 358, 359, 1038, 0, 360, 361,
	362, 985, 984, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	925, 242, 1041, 386, 947, 995, 387, 1009, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 1023, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 1024, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1005,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 935, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 988,
	462, 446, 447, 463, 464, 1045, 465, 466, 1003, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 1048,
	473, 474, 475, 476, 1025, 0, 479, 480, 923, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 1015, 1016, 1017, 1018, 0, 495, 0, 489, 490,
	1026, 491, 1027, 945, 492, 493, 494, 0, 496, 497,
	0, 929, 498, 499, 500, 502, 503, 501, 504, 989,
	505, 0, 0, 506, 507, 508, 562, 1012, 1047, 0,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 926, 0, 0, 0, 0, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 920, 921, 967,
	939, 940, 941, 937, 938, 950, 951, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	991, 955, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 1004, 0, 1011, 258, 1010, 0, 259,
	260, 261, 262, 263, 957, 990, 924, 264, 1049, 1050,
	523, 0, 265, 266, 997, 0, 978, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1030,
	283, 284, 981, 979, 980, 987, 983, 982, 986, 285,
	286, 287, 288, 1014, 289, 1008, 1007, 928, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	999, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 934, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 1021, 1022, 946, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 1006, 0, 0, 0, 320, 0,
	321, 0, 0, 1031, 322, 323, 1019, 1020, 324, 325,
	0, 326, 1028, 0, 956, 327, 0, 328, 329, 330,
	331, 332, 992, 993, 996, 388, 1033, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 1032, 341, 1001, 1002, 0, 962, 0, 343,
	1034, 994, 1035, 344, 345, 346, 1036, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 1029, 1037, 358, 359, 1038, 0, 360,
	361, 362, 985, 984, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 1039, 379, 380, 381, 384, 385, 383, 1040,
	382, 925, 242, 1041, 386, 947, 995, 387, 1009, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 1042, 398, 1043, 1023, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 1024, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1005, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 1044, 437, 438, 439, 440, 935,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	988, 462, 446, 447, 463, 464, 1045, 465, 466, 1003,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	1048, 473, 474, 475, 476, 1025, 0, 479, 480, 923,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 1015, 1016, 1017, 1018, 0, 495, 0, 489,
	490, 1026, 491, 1027, 945, 492, 493, 494, 0, 496,
	497, 0, 929, 498, 499, 500, 502, 503, 501, 504,
	989, 505, 0, 0, 506, 507, 508, 562, 1012, 1047,
	0, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 926, 0, 0, 0, 0, 0,
	0, 922, 0, 0, 0, 0, 0, 0, 920, 921,
	967, 939, 940, 941, 937, 938, 950, 951, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 991, 955, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 1004, 0, 1011, 258, 1010, 0,
	259, 260, 261, 262, 263, 957, 990, 924, 264, 1049,
	1050, 523, 0, 265, 266, 997, 0, 978, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 3949, 981, 979, 980, 987, 983, 982, 986,
	285, 286, 287, 288, 1014, 289, 1008, 1007, 928, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 999, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 934, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1021, 1022, 946, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1006, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 1019, 1020, 324,
	325, 0, 326, 1028, 0, 956, 327, 0, 328, 329,
	330, 331, 332, 992, 993, 996, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1032, 341, 1001, 1002, 0, 962, 0,
	343, 1034, 994, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 1029, 1037, 358, 359, 1038, 0,
	360, 361, 362, 985, 984, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 925, 242, 1041, 386, 947, 995, 387, 1009,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 1023,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 1024, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1005, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	935, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 988, 462, 446, 447, 463, 464, 1045, 465, 466,
	1003, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 1048, 473, 474, 475, 476, 1025, 0, 479, 480,
	923, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 1015, 1016, 1017, 1018, 0, 495, 0,
	489, 490, 1026, 491, 1027, 945, 492, 493, 494, 0,
	3948, 497, 0, 929, 498, 499, 500, 502, 503, 501,
	504, 989, 505, 0, 0, 506, 507, 508, 562, 1012,
	1047, 0, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 926, 0, 0, 0, 0,
	0, 0, 922, 0, 0, 0, 0, 0, 0, 920,
	921, 967, 939, 940, 941, 937, 938, 950, 951, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 991, 955, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 3947, 1004, 0, 1011, 258, 1010,
	0, 259, 260, 261, 262, 263, 957, 990, 924, 264,
	1049, 1050, 523, 0, 265, 266, 997, 0, 978, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1030, 283, 3949, 981, 979, 980, 987, 983, 982,
	986, 285, 286, 287, 288, 1014, 289, 1008, 1007, 928,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 999, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 934, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1021, 1022, 946, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1006, 0, 0, 0,
	320, 0, 321, 0, 0, 1031, 322, 323, 1019, 1020,
	324, 325, 0, 326, 1028, 0, 956, 327, 0, 328,
	329, 330, 331, 332, 992, 993, 996, 388, 1033, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1032, 341, 1001, 1002, 0, 962,
	0, 343, 1034, 994, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 1029, 1037, 358, 359, 1038,
	0, 360, 361, 362, 985, 984, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 925, 242, 1041, 386, 947, 995, 387,
	1009, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 1042, 398, 1043,
	1023, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 1024, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1005, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 1044, 437, 438, 439,
	440, 935, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 988, 462, 446, 447, 463, 464, 1045, 465,
	466, 1003, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 1048, 473, 474, 475, 476, 1025, 0, 479,
	480, 923, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 1015, 1016, 1017, 1018, 0, 495,
	0, 489, 490, 1026, 491, 1027, 945, 492, 493, 494,
	0, 3948, 497, 0, 929, 498, 499, 500, 502, 503,
	501, 504, 989, 505, 0, 0, 506, 507, 508, 562,
	1012, 1047, 0, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 926, 0, 0, 0,
	0, 0, 0, 922, 0, 0, 0, 0, 0, 0,
	920, 921, 967, 939, 940, 941, 2704, 2705, 950, 951,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 991, 955, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 1004, 0, 1011, 258,
	1010, 0, 259, 260, 261, 262, 263, 957, 990, 924,
	264, 1049, 1050, 523, 0, 265, 266, 997, 0, 978,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1030, 283, 284, 981, 979, 980, 987, 983,
	982, 986, 285, 286, 287, 288, 1014, 289, 1008, 1007,
	928, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 999, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 934, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1021, 1022, 946, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1006, 0, 0,
	0, 320, 0, 321, 0, 0, 1031, 322, 323, 1019,
	1020, 324, 325, 0, 326, 1028, 0, 956, 327, 0,
	328, 329, 330, 331, 332, 992, 993, 996, 388, 1033,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1032, 341, 1001, 1002, 0,
	962, 0, 343, 1034, 994, 1035, 344, 345, 346, 1036,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 1029, 1037, 358, 359,
	1038, 0, 360, 361, 362, 985, 984, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 1039, 379, 380, 381, 384,
	385, 383, 1040, 382, 925, 242, 1041, 386, 947, 995,
	387, 1009, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 1042, 398,
	1043, 1023, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 1024, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1005, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 1044, 437, 438,
	439, 440, 935, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 988, 462, 446, 447, 463, 464, 1045,
	465, 466, 1003, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 1048, 473, 474, 475, 476, 1025, 0,
	479, 480, 923, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 1015, 1016, 1017, 1018, 0,
	495, 0, 489, 490, 1026, 491, 1027, 945, 492, 493,
	494, 0, 496, 497, 0, 929, 498, 499, 500, 502,
	503, 501, 504, 989, 505, 0, 0, 506, 507, 508,
	562, 1012, 1047, 0, 510, 509, 565, 0, 0, 0,
	0, 511, 512, 566, 513, 514, 515, 926, 0, 0,
	0, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	0, 920, 921, 967, 939, 940, 941, 2702, 2703, 950,
	951, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 991, 955, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 1004, 0, 1011,
	258, 1010, 0, 259, 260, 261, 262, 263, 957, 990,
	924, 264, 1049, 1050, 523, 0, 265, 266, 997, 0,
	978, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1030, 283, 284, 981, 979, 980, 987,
	983, 982, 986, 285, 286, 287, 288, 1014, 289, 1008,
	1007, 928, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 999, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 934, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1021, 1022, 946, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1006, 0,
	0, 0, 320, 0, 321, 0, 0, 1031, 322, 323,
	1019, 1020, 324, 325, 0, 326, 1028, 0, 956, 327,
	0, 328, 329, 330, 331, 332, 992, 993, 996, 388,
	1033, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1032, 341, 1001, 1002,
	0, 962, 0, 343, 1034, 994, 1035, 344, 345, 346,
	1036, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 1029, 1037, 358,
	359, 1038, 0, 360, 361, 362, 985, 984, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 1039, 379, 380, 381,
	384, 385, 383, 1040, 382, 925, 242, 1041, 386, 947,
	995, 387, 1009, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 1042,
	398, 1043, 1023, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 1024,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1005, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 1044, 437,
	438, 439, 440, 935, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 988, 462, 446, 447, 463, 464,
	1045, 465, 466, 1003, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 1048, 473, 474, 475, 476, 1025,
	0, 479, 480, 923, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 1015, 1016, 1017, 1018,
	0, 495, 0, 489, 490, 1026, 491, 1027, 945, 492,
	493, 494, 0, 496, 497, 0, 929, 498, 499, 500,
	502, 503, 501, 504, 989, 505, 0, 0, 506, 507,
	508, 562, 1012, 1047, 0, 510, 509, 565, 0, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 926, 0,
	0, 0, 0, 0, 0, 922, 0, 0, 0, 0,
	0, 0, 920, 921, 967, 939, 940, 941, 937, 938,
	950, 951, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 991, 955, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 1004, 0,
	1011, 258, 1010, 0, 259, 260, 261, 262, 263, 957,
	990, 924, 264, 1049, 1050, 523, 0, 265, 266, 997,
	0, 978, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 981, 979, 980,
	987, 983, 982, 986, 285, 286, 287, 288, 1014, 289,
	1008, 1007, 928, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 999, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 934, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1021, 1022, 946,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1006,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 1019, 1020, 324, 325, 0, 326, 1028, 0, 956,
	327, 0, 328, 329, 330, 331, 332, 992, 993, 996,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1032, 341, 1001,
	1002, 0, 962, 0, 343, 1034, 994, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 1029, 1037,
	358, 359, 1038, 0, 360, 361, 362, 985, 984, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 925, 242, 1041, 386,
	947, 995, 387, 1009, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 1023, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	1024, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1005, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 935, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 988, 462, 446, 447, 463,
	464, 1045, 465, 466, 1003, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 1048, 473, 474, 475, 476,
	1025, 0, 479, 480, 923, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 1015, 1016, 1017,
	1018, 0, 495, 0, 489, 490, 1026, 491, 1027, 945,
	492, 493, 494, 0, 496, 497, 0, 929, 498, 499,
	500, 502, 503, 501, 504, 989, 505, 0, 0, 506,
	507, 508, 562, 1012, 1047, 0, 510, 509, 565, 0,
	0, 0, 0, 511, 512, 566, 513, 514, 515, 926,
	0, 0, 0, 0, 0, 0, 922, 0, 0, 0,
	0, 0, 0, 2127, 2128, 967, 939, 940, 941, 937,
	938, 950, 951, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 991, 955, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 1004,
	0, 1011, 258, 1010, 0, 259, 260, 261, 262, 263,
	957, 990, 0, 264, 1049, 1050, 523, 0, 265, 266,
	997, 0, 978, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1030, 283, 284, 981, 979,
	980, 987, 983, 982, 986, 285, 286, 287, 288, 1014,
	289, 1008, 1007, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 999, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 934, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1021, 1022,
	946, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1006, 0, 0, 0, 320, 0, 321, 0, 0, 1031,
	322, 323, 1019, 1020, 324, 325, 0, 326, 1028, 0,
	956, 327, 0, 328, 329, 330, 331, 332, 992, 993,
	996, 388, 1033, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1032, 341,
	1001, 1002, 0, 962, 0, 343, 1034, 994, 1035, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 1029,
	1037, 358, 359, 1038, 0, 360, 361, 362, 985, 984,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 0, 242, 1041,
	386, 947, 995, 387, 1009, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 1042, 398, 1043, 1023, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 1024, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1005, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	1044, 437, 438, 439, 440, 935, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 988, 462, 446, 447,
	463, 464, 1045, 465, 466, 1003, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 1048, 473, 474, 475,
	476, 1025, 0, 479, 480, 0, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 1015, 1016,
	1017, 1018, 0, 495, 0, 489, 490, 1026, 491, 1027,
	945, 492, 493, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 502, 503, 501, 504, 989, 505, 0, 0,
	506, 507, 508, 562, 1012, 1047, 0, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	967, 939, 940, 941, 937, 938, 950, 2323, 0, 0,
	0, 0, 0, 0, 2321, 2322, 0, 243, 244, 245,
	246, 247, 248, 951, 249, 250, 0, 949, 0, 0,
	0, 991, 955, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 1004, 0, 1011, 258, 1010, 0,
	259, 260, 261, 262, 263, 957, 990, 0, 264, 1049,
	1050, 523, 0, 265, 266, 997, 0, 978, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 981, 979, 980, 987, 983, 982, 986,
	285, 286, 287, 288, 1014, 289, 1008, 1007, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 999, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 934, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1021, 1022, 946, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1006, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 1019, 1020, 324,
	325, 0, 326, 1028, 0, 956, 327, 0, 328, 329,
	330, 331, 332, 992, 993, 996, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1032, 341, 1001, 1002, 0, 962, 0,
	343, 1034, 994, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 1029, 1037, 358, 359, 1038, 0,
	360, 361, 362, 985, 984, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 0, 242, 1041, 386, 947, 995, 387, 1009,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 1023,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 1024, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1005, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	2697, 2698, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 988, 462, 446, 447, 463, 464, 1045, 465, 466,
	1003, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 1048, 473, 474, 475, 476, 1025, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 1015, 1016, 1017, 1018, 0, 495, 0,
	489, 490, 1026, 491, 1027, 945, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 989, 505, 0, 0, 506, 507, 508, 562, 1012,
	1047, 0, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 967, 939, 940, 941, 937,
	938, 950, 0, 0, 0, 0, 0, 0, 0, 1852,
	1853, 0, 243, 244, 245, 246, 247, 248, 951, 249,
	250, 0, 949, 0, 0, 0, 991, 955, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 0, 1004,
	0, 1011, 258, 1010, 0, 259, 260, 261, 262, 263,
	957, 990, 924, 264, 1049, 1050, 523, 0, 265, 266,
	997, 0, 978, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1030, 283, 3949, 981, 979,
	980, 987, 983, 982, 986, 285, 286, 287, 288, 1014,
	289, 1008, 1007, 928, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 999, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 934, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1021, 1022,
	946, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1006, 0, 0, 0, 320, 0, 321, 0, 0, 1031,
	322, 323, 1019, 1020, 324, 325, 0, 326, 1028, 0,
	956, 327, 0, 328, 329, 330, 331, 332, 992, 993,
	996, 388, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1032, 341,
	1001, 1002, 0, 962, 0, 343, 0, 994, 0, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 1029,
	1037, 358, 359, 0, 0, 360, 361, 362, 985, 984,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 925, 242, 0,
	386, 947, 995, 387, 1009, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 1042, 398, 1043, 1023, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 1024, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1005, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	1044, 437, 438, 439, 440, 935, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 988, 462, 446, 447,
	463, 464, 0, 465, 466, 1003, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 1048, 473, 474, 475,
	476, 1025, 0, 479, 480, 923, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 1015, 1016,
	1017, 1018, 0, 495, 0, 489, 490, 1026, 491, 1027,
	945, 492, 493, 494, 0, 3948, 497, 0, 929, 498,
	499, 500, 502, 503, 501, 504, 989, 505, 0, 0,
	506, 507, 508, 562, 1012, 1047, 0, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	967, 939, 940, 941, 937, 938, 950, 0, 0, 0,
	0, 0, 0, 0, 920, 921, 0, 243, 244, 245,
	246, 247, 248, 951, 249, 250, 0, 949, 0, 0,
	0, 991, 955, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 1004, 0, 1011, 258, 1010, 0,
	259, 260, 261, 262, 263, 0, 990, 0, 264, 1049,
	1050, 523, 0, 265, 266, 997, 0, 978, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 981, 979, 980, 987, 983, 982, 986,
	285, 286, 287, 288, 1014, 289, 1008, 1007, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 999, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1021, 1022, 946, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1006, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 1019, 1020, 324,
	325, 0, 326, 1028, 0, 956, 327, 0, 328, 329,
	330, 331, 332, 992, 993, 996, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1032, 341, 1001, 1002, 0, 962, 0,
	343, 1034, 994, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 1029, 1037, 358, 359, 1038, 0,
	360, 361, 362, 985, 984, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 0, 242, 1041, 386, 947, 995, 387, 1009,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 1023,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 1024, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1005, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	935, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 988, 462, 446, 447, 463, 464, 1045, 465, 466,
	1003, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 1048, 473, 474, 475, 476, 1025, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 1015, 1016, 1017, 1018, 0, 495, 0,
	489, 490, 1026, 491, 1027, 945, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 989, 505, 0, 0, 506, 507, 508, 562, 1012,
	1047, 0, 510, 509, 565, 0, 913, 0, 1087, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 951, 991,
	0, 0, 949, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 990, 0, 264, 521, 522, 523,
	0, 265, 266, 997, 0, 978, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 981, 979, 980, 987, 983, 982, 986, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1021, 1022, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 1031, 322, 323, 531, 532, 324, 325, 0,
	326, 1028, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 992, 993, 996, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1032, 341, 538, 539, 0, 540, 0, 343, 1034,
	994, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 1073, 354, 356, 355,
	0, 357, 1029, 1037, 358, 359, 1038, 0, 360, 361,
	362, 985, 984, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	0, 242, 1041, 386, 0, 995, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 1079, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 1023, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 1024, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 552, 1081,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 205, 457, 458, 456, 459, 460, 461, 988,
	462, 446, 447, 463, 464, 1045, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 1025, 0, 479, 480, 0, 478,
	207, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	1026, 491, 1027, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 989,
	505, 0, 0, 506, 507, 508, 1420, 563, 564, 0,
	510, 509, 565, 0, 1087, 0, 199, 511, 512, 566,
	513, 514, 515, 0, 200, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 1077, 991, 1745, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	990, 0, 264, 521, 522, 523, 0, 265, 266, 997,
	0, 978, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 981, 979, 980,
	987, 983, 982, 986, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1021, 1022, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 531, 532, 324, 325, 0, 326, 1028, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 992, 993, 996,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1032, 341, 538,
	539, 0, 540, 0, 343, 1034, 994, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 1073, 354, 356, 355, 0, 357, 1029, 1037,
	358, 359, 1038, 0, 360, 361, 362, 985, 984, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 0, 242, 1041, 386,
	0, 995, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 1079, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 1023, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	1024, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 552, 1081, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 205, 457,
	458, 456, 459, 460, 461, 988, 462, 446, 447, 463,
	464, 1045, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	1025, 0, 479, 480, 0, 478, 207, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 1026, 491, 1027, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 989, 505, 0, 0, 506,
	507, 508, 1420, 563, 564, 0, 510, 509, 565, 0,
	0, 0, 199, 511, 512, 566, 513, 514, 515, 0,
	200, 0, 0, 0, 2857, 0, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1077, 0, 1745, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 991, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 990, 0, 264, 521, 522, 523, 0, 265,
	266, 997, 0, 978, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1030, 283, 284, 981,
	979, 980, 987, 983, 982, 986, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1021,
	1022, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	1031, 322, 323, 531, 532, 324, 325, 0, 326, 1028,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 992,
	993, 996, 388, 1033, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1032,
	341, 538, 539, 0, 540, 0, 343, 1034, 994, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 1073, 354, 356, 355, 0, 357,
	1029, 1037, 358, 359, 1038, 0, 360, 361, 362, 985,
	984, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 0, 242,
	1041, 386, 0, 995, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 1079, 393, 394, 395, 0, 0, 396,
	397, 545, 1042, 398, 1043, 1023, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 1024, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 1081, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 988, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 1025, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 1026, 491,
	1027, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 989, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 510, 509,
	565, 0, 1069, 0, 1087, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 1077, 0, 1075, 991, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	990, 0, 264, 521, 522, 523, 0, 265, 266, 997,
	0, 978, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 981, 979, 980,
	987, 983, 982, 986, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1021, 1022, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 531, 532, 324, 325, 0, 326, 1028, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 992, 993, 996,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1032, 341, 538,
	539, 0, 540, 0, 343, 1034, 994, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 1073, 354, 356, 355, 0, 357, 1029, 1037,
	358, 359, 1038, 0, 360, 361, 362, 985, 984, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 0, 242, 1041, 386,
	0, 995, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 1079, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 1023, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	1024, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 552, 1081, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 988, 462, 446, 447, 463,
	464, 1045, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	1025, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 1026, 491, 1027, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 989, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 0, 510, 509, 565, 0,
	1087, 0, 0, 511, 512, 566, 513, 514, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	1077, 991, 1075, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 990, 0, 264, 521,
	522, 523, 0, 265, 266, 997, 0, 978, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 981, 979, 980, 987, 983, 982, 986,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1021, 1022, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 531, 532, 324,
	325, 0, 326, 1028, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 992, 993, 996, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1032, 341, 538, 539, 0, 540, 0,
	343, 1034, 994, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 1073, 354,
	356, 355, 0, 357, 1029, 1037, 358, 359, 1038, 0,
	360, 361, 362, 985, 984, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 0, 242, 1041, 386, 0, 995, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 1079, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 1023,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 1024, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	552, 1081, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 988, 462, 446, 447, 463, 464, 1045, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 1025, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 1026, 491, 1027, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 989, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 0, 1087, 0, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 1077, 991, 1075, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 990, 0, 264, 521, 522, 523, 0, 265,
	266, 997, 0, 978, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1030, 283, 284, 981,
	979, 980, 987, 983, 982, 986, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1021,
	1022, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	1031, 322, 323, 531, 532, 324, 325, 0, 326, 1028,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 992,
	993, 996, 388, 1033, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1032,
	341, 538, 539, 0, 540, 0, 343, 1034, 994, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	1029, 1037, 358, 359, 1038, 0, 360, 361, 362, 985,
	984, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 0, 242,
	1041, 386, 0, 995, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 1042, 398, 1043, 1023, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 1024, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 1081, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 988, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 1025, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 1026, 491,
	1027, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 989, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 510, 509,
	565, 0, 913, 0, 1271, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 1644, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 1237, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 531, 532, 324, 325, 0, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 535, 536, 537,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 1032, 341, 538,
	539, 0, 540, 0, 343, 1034, 541, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 1037,
	358, 359, 1038, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 0, 0, 1041, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 205, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 1045, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 207, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 1420, 563, 564, 0, 510, 509, 565, 0,
	0, 0, 199, 511, 512, 566, 513, 514, 515, 0,
	200, 0, 0, 0, 1417, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 1237, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1030, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	1031, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 1033, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 1032,
	341, 538, 539, 0, 540, 0, 343, 1034, 541, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 1037, 358, 359, 1038, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 0, 0,
	1041, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 1042, 398, 1043, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	205, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 207, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 1420, 563, 564, 0, 510, 509,
	565, 0, 0, 0, 199, 511, 512, 566, 513, 514,
	515, 0, 200, 0, 0, 0, 0, 0, 1271, 1270,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 1237, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 1031, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 1032, 341, 538, 539, 0, 540, 0, 343, 1034,
	541, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 1037, 358, 359, 1038, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	0, 0, 1041, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 1045, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 0,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 1271, 1270, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 1442, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	1237, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1030, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 1031, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 535, 536, 537, 388,
	1033, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1032, 341, 538, 539,
	0, 540, 0, 343, 1034, 541, 1035, 344, 345, 346,
	1036, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 1037, 358,
	359, 1038, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 1039, 379, 380, 381,
	384, 385, 383, 1040, 382, 0, 0, 1041, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 1042,
	398, 1043, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 1044, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	1045, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 0, 510, 509, 565, 0, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 1271, 1270,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 3093, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 1237, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 1031, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 1032, 341, 538, 539, 0, 540, 0, 343, 1034,
	541, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 1928, 356, 355,
	0, 357, 542, 1037, 358, 359, 1038, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	0, 0, 1041, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 1045, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 0,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 1271, 1270, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 1442, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	1237, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1030, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 1031, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 535, 536, 537, 388,
	1033, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1032, 341, 538, 539,
	0, 540, 0, 343, 1034, 541, 1035, 344, 345, 346,
	1036, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 1037, 358,
	359, 1038, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 1039, 379, 380, 381,
	384, 385, 383, 1040, 382, 0, 0, 1041, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 1042,
	398, 1043, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 1044, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	1045, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 0, 510, 509, 565, 1087, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 991,
	0, 1426, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 990, 0, 264, 521, 522, 523,
	0, 265, 266, 997, 0, 978, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1030, 283,
	284, 981, 979, 980, 987, 983, 982, 986, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1021, 1022, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 1031, 322, 323, 531, 532, 324, 325, 0,
	326, 1028, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 992, 993, 996, 388, 1033, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1032, 341, 538, 539, 0, 540, 0, 343, 1034,
	994, 1035, 344, 345, 346, 1036, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 1029, 1037, 358, 359, 1038, 0, 360, 361,
	362, 985, 984, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 1039, 379, 380, 381, 384, 385, 383, 1040, 382,
	0, 242, 1041, 386, 0, 995, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 1042, 398, 1043, 1023, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 1024, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 1044, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 988,
	462, 446, 447, 463, 464, 1045, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 1025, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	1026, 491, 1027, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 989,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 0,
	510, 509, 565, 913, 0, 237, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 518,
	0, 519, 258, 520, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 521, 522, 523, 0, 265, 266,
	524, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 525, 526, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 527, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 528, 529,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	530, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 531, 532, 324, 325, 0, 326, 533, 0,
	534, 327, 0, 328, 329, 330, 331, 332, 535, 536,
	537, 388, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	538, 539, 0, 540, 0, 343, 0, 541, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 542,
	0, 358, 359, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 0, 379,
	380, 381, 384, 385, 383, 0, 382, 0, 0, 0,
	386, 0, 543, 387, 544, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 0, 398, 0, 546, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 549, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 551, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	0, 437, 438, 439, 440, 552, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 205,
	457, 458, 456, 459, 460, 461, 0, 462, 446, 447,
	463, 464, 0, 465, 466, 553, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 554, 473, 474, 475,
	476, 555, 0, 479, 480, 0, 478, 207, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 556, 557,
	558, 559, 0, 495, 0, 489, 490, 560, 491, 561,
	0, 492, 493, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 502, 503, 501, 504, 0, 505, 0, 0,
	506, 507, 508, 1420, 563, 564, 0, 510, 509, 565,
	237, 0, 0, 199, 511, 512, 566, 513, 514, 515,
	0, 200, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 171, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 242, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 0, 1361, 0, 237, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 1759, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 242, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 0,
	510, 509, 565, 0, 237, 2622, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 1365, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 531, 532, 324, 325, 0, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 535, 536, 537,
	388, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 538,
	539, 0, 540, 0, 343, 0, 541, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 0,
	358, 359, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 0, 379, 380,
	381, 384, 385, 383, 0, 382, 0, 0, 0, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	0, 398, 0, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 0,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 0, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 0, 510, 509, 565, 237,
	0, 0, 0, 511, 512, 566, 513, 514, 515, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	516, 0, 4097, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 535, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 242, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	237, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 3040, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 242, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 237, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 1365, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 237, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 2595,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 0,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 510, 509,
	565, 237, 0, 0, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 3182, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 0, 765, 0, 649,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 2025,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 656, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 763, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 535, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 242, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 654, 481, 482, 483, 484, 655, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	0, 510, 509, 565, 0, 647, 0, 649, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	659, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 656,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	242, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 654,
	481, 482, 483, 484, 655, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 649, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 659, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	656, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 242, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	654, 481, 482, 483, 484, 655, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 649,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 659,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 656, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 535, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 242, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 2062, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 654, 481, 482, 483, 484, 655, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	1794, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 0, 1800, 0, 1790, 258, 1806, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 1815,
	1816, 0, 0, 265, 266, 0, 0, 1237, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 1014, 289, 1804, 1803, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 999, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 0, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 1802, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 1811, 1812, 324,
	325, 0, 326, 0, 0, 0, 327, 0, 328, 329,
	330, 331, 332, 0, 0, 0, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 1032, 341, 1797, 1798, 0, 1793, 0,
	343, 1034, 0, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 0, 1037, 358, 359, 1038, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 0, 0, 1041, 386, 0, 0, 387, 1805,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 0, 1042, 398, 1043, 0,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 1787, 1788, 0, 411, 0, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1801, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	0, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 1045, 465, 466,
	1799, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 1814, 473, 474, 475, 476, 0, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 1807, 1808, 1809, 1810, 0, 495, 0,
	489, 490, 0, 491, 0, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 0, 1791,
	1813, 0, 510, 509, 0, 0, 0, 0, 0, 511,
	512, 0, 513, 514, 515, 1271, 1270, 0, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 1781, 0, 0, 0, 516, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 518,
	0, 519, 258, 520, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 521, 522, 523, 0, 265, 266,
	524, 0, 1237, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1030, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 525, 526, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 527, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 528, 529,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	530, 0, 0, 0, 320, 0, 321, 0, 0, 1031,
	322, 323, 531, 532, 324, 325, 0, 326, 533, 0,
	534, 327, 0, 328, 329, 330, 331, 332, 535, 536,
	537, 388, 1033, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 1032, 341,
	538, 539, 0, 540, 0, 343, 1034, 541, 1035, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 542,
	1037, 358, 359, 1038, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 0, 0, 1041,
	386, 3341, 543, 387, 544, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 1042, 398, 1043, 546, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 549, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 551, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	1044, 437, 438, 439, 440, 552, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 0, 462, 446, 447,
	463, 464, 1045, 465, 466, 553, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 554, 473, 474, 475,
	476, 555, 0, 479, 480, 0, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 556, 557,
	558, 559, 0, 495, 0, 489, 490, 560, 491, 561,
	0, 492, 493, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 502, 503, 501, 504, 0, 505, 0, 0,
	506, 507, 508, 562, 563, 564, 0, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	1271, 1270, 0, 0, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 1237, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 1032, 341, 538, 539, 0, 540, 0,
	343, 1034, 541, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 1037, 358, 359, 1038, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 0, 0, 1041, 386, 3017, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 1045, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 1271, 1270, 0, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 518,
	0, 519, 258, 520, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 521, 522, 523, 0, 265, 266,
	524, 0, 1237, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1030, 283, 284, 0, 0,
	0, 0, 0, 0, 3006, 285, 286, 287, 288, 0,
	289, 525, 526, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 527, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 528, 529,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	530, 0, 0, 0, 320, 0, 321, 0, 0, 1031,
	322, 323, 531, 532, 324, 325, 0, 326, 533, 0,
	534, 327, 0, 328, 329, 330, 331, 332, 535, 536,
	537, 388, 1033, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 1032, 341,
	538, 539, 0, 540, 0, 343, 1034, 541, 1035, 344,
	345, 346, 1036, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 542,
	1037, 358, 359, 1038, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 1039, 379,
	380, 381, 384, 385, 383, 1040, 382, 0, 0, 1041,
	386, 0, 543, 387, 544, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 1042, 398, 1043, 546, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 549, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 551, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	1044, 437, 438, 439, 440, 552, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 3007, 462, 446, 447,
	463, 464, 1045, 465, 466, 553, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 554, 473, 474, 475,
	476, 555, 0, 479, 480, 0, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 556, 557,
	558, 559, 0, 495, 0, 489, 490, 560, 491, 561,
	0, 492, 493, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 502, 503, 501, 504, 0, 505, 0, 0,
	506, 507, 508, 562, 563, 564, 237, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 242,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 510, 509,
	565, 0, 0, 0, 0, 511, 512, 566, 513, 514,
	515, 1469, 0, 1271, 1270, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 659, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	1237, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1030, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 240,
	0, 0, 0, 0, 0, 1468, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 1031, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 535, 536, 537, 388,
	1033, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1032, 341, 538, 539,
	0, 540, 0, 343, 1034, 541, 1035, 344, 345, 346,
	1036, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 1037, 358,
	359, 1038, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 1039, 379, 380, 381,
	384, 385, 383, 1040, 382, 0, 0, 1041, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 1042,
	398, 1043, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 1467, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 1044, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 1466, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	1045, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 0, 510, 509, 565, 0, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 1410, 0,
	1271, 1270, 0, 0, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 1237, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1030, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 1031, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 1409, 536, 537, 388, 1033, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 1032, 341, 538, 539, 0, 540, 0,
	343, 1034, 541, 1035, 344, 345, 346, 1036, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 1037, 358, 359, 1038, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 1039, 379, 380, 381, 384, 385, 383,
	1040, 382, 0, 0, 1041, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 1042, 398, 1043, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 1044, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 1045, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 1341, 0, 1271, 1270, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 1237, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1030, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 1031, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	1340, 536, 537, 388, 1033, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	1032, 341, 538, 539, 0, 540, 0, 343, 1034, 541,
	1035, 344, 345, 346, 1036, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 1037, 358, 359, 1038, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	1039, 379, 380, 381, 384, 385, 383, 1040, 382, 0,
	0, 1041, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 1042, 398, 1043, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 1044, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 1045, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 0, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 1305, 0, 1271, 1270, 0, 0, 0, 0,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 1237, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1030, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 1031, 322,
	323, 531, 532, 324, 325, 0, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 535, 536, 537,
	388, 1033, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 1032, 341, 538,
	539, 0, 540, 0, 343, 1034, 541, 1035, 344, 345,
	346, 1036, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 1037,
	358, 359, 1038, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 1039, 379, 380,
	381, 384, 385, 383, 1040, 382, 0, 0, 1041, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	1042, 398, 1043, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 1044,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 1045, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 0, 510, 509, 565, 0,
	0, 0, 0, 511, 512, 566, 513, 514, 515, 1266,
	0, 1271, 1270, 0, 0, 0, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 1237, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1030, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 1031, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 1265, 536, 537, 388, 1033, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 1032, 341, 538, 539, 0, 540,
	0, 343, 1034, 541, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 1037, 358, 359, 1038,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 0, 0, 1041, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 1042, 398, 1043,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 1044, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 1045, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 1271, 1270, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 1237, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1030, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	1031, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 1033, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 1032,
	341, 538, 539, 0, 540, 0, 343, 1034, 541, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 1037, 358, 359, 1038, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 0, 0,
	1041, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 1042, 398, 1043, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 510, 509,
	565, 1271, 1270, 0, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 1237, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1030, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 1825,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 1031, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 1033, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 1032, 341, 538, 539, 0, 540,
	0, 343, 1034, 541, 1035, 344, 345, 346, 1036, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 1037, 358, 359, 1038,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 1039, 379, 380, 381, 384, 385,
	383, 1040, 382, 0, 0, 1041, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 1042, 398, 1043,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 1044, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 1045, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 1271, 1270, 0, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 1237, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1030, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	1031, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 1033, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 1032,
	341, 538, 539, 0, 540, 0, 343, 1034, 541, 1035,
	344, 345, 346, 1036, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 1037, 358, 359, 1038, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 1039,
	379, 380, 381, 384, 385, 383, 1040, 382, 0, 0,
	1041, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 1042, 398, 1043, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 1044, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 1045, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 1271, 510, 509,
	565, 0, 0, 0, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 1237, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1030, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 1031, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 1033, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	1032, 341, 538, 539, 0, 540, 0, 343, 1034, 541,
	1035, 344, 345, 346, 1036, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 1037, 358, 359, 1038, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	1039, 379, 380, 381, 384, 385, 383, 1040, 382, 0,
	0, 1041, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 1042, 398, 1043, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 1044, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 1045, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 237, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	2454, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	2451, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 2458, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 2635, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	2457, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 2632, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 2634, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 2631, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 0, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 2456,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 2633, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 237,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 2454, 265, 266, 524, 0, 0, 2448, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 2451, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 2458,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 2457, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 2447, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 0, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	2456, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 2455, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	0, 510, 509, 565, 1533, 0, 237, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 242,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 1536, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 1534, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 1535, 509,
	565, 1241, 0, 237, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 1243, 536, 537, 388,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 538, 539,
	0, 540, 0, 343, 0, 541, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 0, 358,
	359, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 0, 379, 380, 381,
	384, 385, 383, 0, 382, 0, 242, 0, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	1079, 393, 394, 395, 0, 0, 396, 397, 545, 0,
	398, 0, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 0, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	0, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 0, 510, 509, 565, 1238, 0,
	237, 0, 511, 512, 566, 513, 514, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 1240, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 242, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 1079, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 1144, 0, 237, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	1146, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	242, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 1079, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 0, 510,
	509, 565, 598, 0, 237, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 597, 247, 248, 587, 249, 250,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 590, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 531, 532, 324, 325, 591, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 535, 536, 537,
	388, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 538,
	539, 0, 540, 0, 343, 0, 541, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 0,
	358, 359, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 0, 379, 380,
	381, 384, 385, 383, 0, 382, 0, 0, 0, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	0, 398, 0, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 0,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 592, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 0, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 0, 510, 509, 565, 586,
	0, 237, 0, 511, 512, 566, 513, 514, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 587, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 590,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 591, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 592, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 237, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 518, 0, 519, 258,
	520, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 521, 522, 523, 0, 265, 266, 524, 0, 0,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 288, 0, 289, 525, 526,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 527, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 528, 529, 0, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 530, 0, 0,
	0, 320, 0, 321, 0, 0, 0, 322, 323, 531,
	532, 324, 325, 0, 326, 533, 0, 534, 327, 0,
	328, 329, 330, 331, 332, 535, 536, 537, 388, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 0, 341, 538, 539, 0,
	540, 0, 343, 0, 541, 0, 344, 345, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 542, 0, 358, 359,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 0, 379, 380, 381, 384,
	385, 383, 2979, 382, 0, 242, 0, 386, 0, 543,
	387, 544, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 0, 398,
	0, 546, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 549, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 551, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 0, 437, 438,
	439, 440, 552, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 0, 462, 446, 447, 463, 464, 0,
	465, 466, 553, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 554, 473, 474, 475, 476, 555, 0,
	479, 480, 0, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 556, 557, 558, 559, 0,
	495, 0, 489, 490, 560, 491, 561, 0, 492, 493,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 502,
	503, 501, 504, 0, 505, 0, 0, 506, 507, 508,
	562, 563, 564, 237, 510, 509, 565, 0, 0, 0,
	0, 511, 512, 566, 513, 514, 515, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 535, 536, 537, 388,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 538, 539,
	0, 540, 0, 343, 0, 541, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 0, 358,
	359, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 0, 379, 380, 381,
	384, 385, 383, 0, 382, 0, 242, 0, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	1079, 393, 394, 395, 0, 0, 396, 397, 545, 0,
	398, 0, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 0, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	0, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 0, 510, 509, 565, 2567, 0,
	237, 0, 511, 512, 566, 513, 514, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 2566, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 242, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 2038, 0, 237, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	242, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 237, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 242, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	1960, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 0,
	510, 509, 565, 1965, 0, 237, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 518,
	0, 519, 258, 520, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 521, 522, 523, 0, 265, 266,
	524, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 525, 526, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 527, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 528, 529,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	530, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 531, 532, 324, 325, 0, 326, 533, 0,
	534, 327, 0, 328, 329, 330, 331, 332, 1964, 536,
	537, 388, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	538, 539, 0, 540, 0, 343, 0, 541, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 542,
	0, 358, 359, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 0, 379,
	380, 381, 384, 385, 383, 0, 382, 0, 242, 0,
	386, 0, 543, 387, 544, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 0, 398, 0, 546, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 549, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 551, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	0, 437, 438, 439, 440, 552, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 0, 462, 446, 447,
	463, 464, 0, 465, 466, 553, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 554, 473, 474, 475,
	476, 555, 0, 479, 480, 0, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 556, 557,
	558, 559, 0, 495, 0, 489, 490, 560, 491, 561,
	0, 492, 493, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 502, 503, 501, 504, 0, 505, 0, 0,
	506, 507, 508, 562, 563, 564, 0, 510, 509, 565,
	1953, 0, 237, 0, 511, 512, 566, 513, 514, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 518, 0, 519, 258,
	520, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 521, 522, 523, 0, 265, 266, 524, 0, 0,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 288, 0, 289, 525, 526,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 527, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 528, 529, 0, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 530, 0, 0,
	0, 320, 0, 321, 0, 0, 0, 322, 323, 531,
	532, 324, 325, 0, 326, 533, 0, 534, 327, 0,
	328, 329, 330, 331, 332, 1955, 536, 537, 388, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 0, 341, 538, 539, 0,
	540, 0, 343, 0, 541, 0, 344, 345, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 542, 0, 358, 359,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 0, 379, 380, 381, 384,
	385, 383, 0, 382, 0, 242, 0, 386, 0, 543,
	387, 544, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 0, 398,
	0, 546, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 549, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 551, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 0, 437, 438,
	439, 440, 552, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 0, 462, 446, 447, 463, 464, 0,
	465, 466, 553, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 554, 473, 474, 475, 476, 555, 0,
	479, 480, 0, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 556, 557, 558, 559, 0,
	495, 0, 489, 490, 560, 491, 561, 0, 492, 493,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 502,
	503, 501, 504, 0, 505, 0, 0, 506, 507, 508,
	562, 563, 564, 0, 510, 509, 565, 1402, 0, 237,
	0, 511, 512, 566, 513, 514, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 1401, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 242, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	0, 510, 509, 565, 1393, 0, 237, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 1392,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 242,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 510, 509,
	565, 1390, 0, 237, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 1389, 536, 537, 388,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 538, 539,
	0, 540, 0, 343, 0, 541, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 0, 358,
	359, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 0, 379, 380, 381,
	384, 385, 383, 0, 382, 0, 242, 0, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 0,
	398, 0, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 0, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	0, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 0, 510, 509, 565, 1386, 0,
	237, 0, 511, 512, 566, 513, 514, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 1385, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 242, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 1343, 0, 237, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	242, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 0, 510,
	509, 565, 1259, 0, 237, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 531, 532, 324, 325, 0, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 535, 536, 537,
	388, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 0, 341, 538,
	539, 0, 540, 0, 343, 0, 541, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 0,
	358, 359, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 0, 379, 380,
	381, 384, 385, 383, 0, 382, 0, 242, 0, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	0, 398, 0, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 0,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 0, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 0, 510, 509, 565, 1252,
	0, 237, 0, 511, 512, 566, 513, 514, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 1254, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 242, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 568, 0, 237, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 242, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 0,
	510, 509, 565, 228, 0, 237, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 518,
	0, 519, 258, 520, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 521, 522, 523, 0, 265, 266,
	524, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 525, 526, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 527, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 528, 529,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	530, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 531, 532, 324, 325, 0, 326, 533, 0,
	534, 327, 0, 328, 329, 330, 331, 332, 535, 536,
	537, 388, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	538, 539, 0, 540, 0, 343, 0, 541, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 542,
	0, 358, 359, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 0, 379,
	380, 381, 384, 385, 383, 0, 382, 0, 242, 0,
	386, 0, 543, 387, 544, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 0, 398, 0, 546, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 549, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 551, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	0, 437, 438, 439, 440, 552, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 0, 462, 446, 447,
	463, 464, 0, 465, 466, 553, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 554, 473, 474, 475,
	476, 555, 0, 479, 480, 0, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 556, 557,
	558, 559, 0, 495, 0, 489, 490, 560, 491, 561,
	0, 492, 493, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 502, 503, 501, 504, 0, 505, 0, 0,
	506, 507, 508, 562, 563, 564, 237, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 242,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 237, 510, 509,
	565, 0, 0, 0, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 590, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 591, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	0, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 592, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 237, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	2069, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 242, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 237,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 2067, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 535, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 242, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	237, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 2065, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 242, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 237, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 2003, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 242, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 752, 0, 237, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 751, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 0, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	750, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 237,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 2635, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 535, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 0, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	3579, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	0, 510, 509, 565, 577, 0, 237, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 576,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 0,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 575, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 510, 509,
	565, 237, 2622, 0, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 237, 3588, 0, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 0,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 237, 510, 509,
	565, 0, 0, 0, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 3316, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	0, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 237, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 2374, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 0, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 0,
	510, 509, 565, 237, 2622, 0, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 535, 536, 537, 388,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 538, 539,
	0, 540, 0, 343, 0, 541, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 0, 358,
	359, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 0, 379, 380, 381,
	384, 385, 383, 0, 382, 0, 0, 0, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 2619, 0, 0, 396, 397, 545, 0,
	398, 0, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 0, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	0, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 237, 510, 509, 565, 0, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 2046, 249, 250,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 531, 532, 324, 325, 0, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 535, 536, 537,
	388, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 538,
	539, 0, 540, 0, 343, 0, 541, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 0,
	358, 359, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 0, 379, 380,
	381, 384, 385, 383, 0, 382, 0, 0, 0, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	0, 398, 0, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 0,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 0, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 0, 510, 509, 565, 2036,
	0, 237, 0, 511, 512, 566, 513, 514, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 618, 0, 237, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 1118, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 1116,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	619, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 0, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 615, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 1119, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 614, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 0,
	510, 509, 565, 618, 0, 237, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 518,
	0, 519, 258, 520, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 521, 522, 523, 0, 265, 608,
	524, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 525, 526, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 527, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 528, 529,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	530, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 531, 532, 324, 325, 0, 326, 533, 0,
	534, 327, 0, 328, 329, 330, 331, 332, 535, 536,
	537, 388, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	538, 539, 0, 540, 0, 343, 0, 541, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 542,
	0, 358, 359, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 619, 0, 379,
	380, 381, 384, 385, 383, 0, 382, 0, 0, 0,
	386, 0, 543, 387, 544, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 0, 398, 0, 546, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 549, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 551, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	0, 437, 438, 439, 440, 552, 441, 0, 442, 443,
	449, 450, 444, 445, 615, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 1425, 461, 0, 462, 446, 447,
	463, 464, 0, 465, 466, 553, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 554, 473, 474, 475,
	476, 555, 0, 479, 480, 0, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 614, 557,
	558, 559, 0, 495, 0, 489, 490, 560, 491, 561,
	0, 492, 493, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 502, 503, 501, 504, 0, 505, 0, 0,
	506, 507, 508, 562, 563, 564, 0, 510, 509, 565,
	1406, 0, 237, 0, 511, 512, 566, 513, 514, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 518, 0, 519, 258,
	520, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 521, 522, 523, 0, 265, 266, 524, 0, 0,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 288, 0, 289, 525, 526,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 527, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 530, 0, 0,
	0, 320, 0, 321, 0, 0, 0, 322, 323, 531,
	532, 324, 325, 0, 326, 533, 0, 534, 327, 0,
	328, 329, 330, 331, 332, 1405, 536, 537, 388, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	0, 339, 340, 342, 0, 0, 341, 538, 539, 0,
	540, 0, 343, 0, 541, 0, 344, 345, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 542, 0, 358, 359,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 0, 379, 380, 381, 384,
	385, 383, 0, 382, 0, 0, 0, 386, 0, 543,
	387, 544, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 0, 398,
	0, 546, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 549, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 551, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 0, 437, 438,
	439, 440, 552, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 0, 462, 446, 447, 463, 464, 0,
	465, 466, 553, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 554, 473, 474, 475, 476, 555, 0,
	479, 480, 0, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 556, 557, 558, 559, 0,
	495, 0, 489, 490, 560, 491, 561, 0, 492, 493,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 502,
	503, 501, 504, 0, 505, 0, 0, 506, 507, 508,
	562, 563, 564, 0, 510, 509, 565, 1399, 0, 237,
	0, 511, 512, 566, 513, 514, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 1398, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 0, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	0, 510, 509, 565, 1349, 0, 237, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 1348,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 0,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 449, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 0, 510, 509,
	565, 1335, 0, 237, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 1334, 536, 537, 388,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 538, 539,
	0, 540, 0, 343, 0, 541, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 0, 358,
	359, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 0, 379, 380, 381,
	384, 385, 383, 0, 382, 0, 0, 0, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 0,
	398, 0, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 0, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	0, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 0, 510, 509, 565, 1330, 0,
	237, 0, 511, 512, 566, 513, 514, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 0, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 1262, 0, 237, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	0, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 0, 510,
	509, 565, 1246, 0, 237, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 531, 532, 324, 325, 0, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 535, 536, 537,
	388, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 538,
	539, 0, 540, 0, 343, 0, 541, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 0,
	358, 359, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 0, 379, 380,
	381, 384, 385, 383, 0, 382, 0, 0, 0, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	0, 398, 0, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 0,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 0, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 0, 510, 509, 565, 618,
	0, 237, 0, 511, 512, 566, 513, 514, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 1118,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 1116, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 619, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	615, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	1119, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 614, 557, 558, 559, 0, 495,
	0, 489, 1117, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 237, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 1100, 249, 250, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 518, 0, 519, 258,
	520, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 521, 522, 523, 0, 265, 266, 524, 0, 0,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 288, 0, 289, 525, 526,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 527, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 530, 0, 0,
	0, 320, 0, 321, 0, 0, 0, 322, 323, 531,
	532, 324, 325, 0, 326, 533, 0, 534, 327, 0,
	328, 329, 330, 331, 332, 535, 536, 537, 388, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	0, 339, 340, 342, 0, 0, 341, 538, 539, 0,
	540, 0, 343, 0, 541, 0, 344, 345, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 542, 0, 358, 359,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 0, 379, 380, 381, 384,
	385, 383, 0, 382, 0, 0, 0, 386, 0, 543,
	387, 544, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 0, 398,
	0, 546, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 549, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 551, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 0, 437, 438,
	439, 440, 552, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 0, 462, 446, 447, 463, 464, 0,
	465, 466, 553, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 554, 473, 474, 475, 476, 555, 0,
	479, 480, 0, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 556, 557, 558, 559, 0,
	495, 0, 489, 490, 560, 491, 561, 0, 492, 493,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 502,
	503, 501, 504, 0, 505, 0, 0, 506, 507, 508,
	562, 563, 564, 237, 510, 509, 565, 0, 0, 0,
	0, 511, 512, 566, 513, 514, 515, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 624, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 535, 536, 537, 388,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 538, 539,
	0, 540, 0, 343, 0, 541, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 0, 358,
	359, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 0, 379, 380, 381,
	384, 385, 383, 0, 382, 0, 0, 0, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 0,
	398, 0, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 0, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	0, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 0, 510, 509, 565, 618, 0,
	237, 0, 511, 512, 566, 513, 514, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 608, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 606, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 607, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 619, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 0, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	609, 441, 0, 442, 443, 449, 450, 444, 445, 615,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 610,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 614, 557, 558, 559, 0, 495, 0,
	489, 612, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 0, 510, 509, 565, 602, 0, 237, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	0, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 603, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 462,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 0, 510,
	509, 565, 600, 0, 237, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 531, 532, 324, 325, 0, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 535, 536, 537,
	388, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 538,
	539, 0, 540, 0, 343, 0, 541, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 0,
	358, 359, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 0, 379, 380,
	381, 384, 385, 383, 0, 382, 0, 0, 0, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	0, 398, 0, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 0,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 0, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 0, 510, 509, 565, 594,
	0, 237, 0, 511, 512, 566, 513, 514, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 572, 0, 237, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 535, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 0, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 237,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 535, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 0, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	237, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 3055, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 0, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 423, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 237, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 327, 0, 328,
	329, 330, 331, 332, 3011, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 441, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 237, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 517, 518, 0, 519, 258,
	520, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 521, 522, 523, 0, 265, 266, 524, 0, 0,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 288, 0, 289, 525, 526,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 527, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 530, 0, 0,
	0, 320, 0, 321, 0, 0, 0, 322, 323, 531,
	532, 324, 325, 0, 326, 533, 0, 534, 327, 0,
	328, 329, 330, 331, 332, 2952, 536, 537, 388, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	0, 339, 340, 342, 0, 0, 341, 538, 539, 0,
	540, 0, 343, 0, 541, 0, 344, 345, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 354, 356, 355, 0, 357, 542, 0, 358, 359,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 365,
	366, 0, 367, 368, 370, 372, 369, 371, 376, 373,
	374, 375, 378, 0, 377, 0, 379, 380, 381, 384,
	385, 383, 0, 382, 0, 0, 0, 386, 0, 543,
	387, 544, 389, 390, 0, 0, 391, 0, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 545, 0, 398,
	0, 546, 399, 400, 392, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 547, 548, 549, 411,
	550, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 551, 423, 422, 424, 0, 0, 0,
	0, 0, 0, 425, 0, 427, 428, 429, 426, 430,
	431, 432, 433, 0, 434, 435, 436, 0, 437, 438,
	439, 440, 552, 441, 0, 442, 443, 449, 450, 444,
	445, 451, 452, 453, 454, 455, 0, 457, 458, 456,
	459, 460, 461, 0, 462, 446, 447, 463, 464, 0,
	465, 466, 553, 0, 467, 0, 468, 469, 470, 471,
	448, 472, 477, 554, 473, 474, 475, 476, 555, 0,
	479, 480, 0, 478, 0, 481, 482, 483, 484, 485,
	486, 311, 487, 0, 488, 556, 557, 558, 559, 0,
	495, 0, 489, 490, 560, 491, 561, 0, 492, 493,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 502,
	503, 501, 504, 0, 505, 0, 0, 506, 507, 508,
	562, 563, 564, 237, 510, 509, 565, 0, 0, 0,
	0, 511, 512, 566, 513, 514, 515, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 517, 518, 0, 519,
	258, 520, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 521, 522, 523, 0, 265, 266, 524, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 525,
	526, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 527, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 528, 529, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 530, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	531, 532, 324, 325, 0, 326, 533, 0, 534, 327,
	0, 328, 329, 330, 331, 332, 2950, 536, 537, 388,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 538, 539,
	0, 540, 0, 343, 0, 541, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 354, 356, 355, 0, 357, 542, 0, 358,
	359, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 366, 0, 367, 368, 370, 372, 369, 371, 376,
	373, 374, 375, 378, 0, 377, 0, 379, 380, 381,
	384, 385, 383, 0, 382, 0, 0, 0, 386, 0,
	543, 387, 544, 389, 390, 0, 0, 391, 0, 0,
	0, 393, 394, 395, 0, 0, 396, 397, 545, 0,
	398, 0, 546, 399, 400, 392, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 547, 548, 549,
	411, 550, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 551, 423, 422, 424, 0, 0,
	0, 0, 0, 0, 425, 0, 427, 428, 429, 426,
	430, 431, 432, 433, 0, 434, 435, 436, 0, 437,
	438, 439, 440, 552, 441, 0, 442, 443, 449, 450,
	444, 445, 451, 452, 453, 454, 455, 0, 457, 458,
	456, 459, 460, 461, 0, 462, 446, 447, 463, 464,
	0, 465, 466, 553, 0, 467, 0, 468, 469, 470,
	471, 448, 472, 477, 554, 473, 474, 475, 476, 555,
	0, 479, 480, 0, 478, 0, 481, 482, 483, 484,
	485, 486, 311, 487, 0, 488, 556, 557, 558, 559,
	0, 495, 0, 489, 490, 560, 491, 561, 0, 492,
	493, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	502, 503, 501, 504, 0, 505, 0, 0, 506, 507,
	508, 562, 563, 564, 237, 510, 509, 565, 0, 0,
	0, 0, 511, 512, 566, 513, 514, 515, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 517, 518, 0,
	519, 258, 520, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 521, 522, 523, 0, 265, 266, 524,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	525, 526, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 527, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 530,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 531, 532, 324, 325, 0, 326, 533, 0, 534,
	327, 0, 328, 329, 330, 331, 332, 2936, 536, 537,
	388, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 538,
	539, 0, 540, 0, 343, 0, 541, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 354, 356, 355, 0, 357, 542, 0,
	358, 359, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 366, 0, 367, 368, 370, 372, 369, 371,
	376, 373, 374, 375, 378, 0, 377, 0, 379, 380,
	381, 384, 385, 383, 0, 382, 0, 0, 0, 386,
	0, 543, 387, 544, 389, 390, 0, 0, 391, 0,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 545,
	0, 398, 0, 546, 399, 400, 392, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 547, 548,
	549, 411, 550, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 551, 423, 422, 424, 0,
	0, 0, 0, 0, 0, 425, 0, 427, 428, 429,
	426, 430, 431, 432, 433, 0, 434, 435, 436, 0,
	437, 438, 439, 440, 552, 441, 0, 442, 443, 449,
	450, 444, 445, 451, 452, 453, 454, 455, 0, 457,
	458, 456, 459, 460, 461, 0, 462, 446, 447, 463,
	464, 0, 465, 466, 553, 0, 467, 0, 468, 469,
	470, 471, 448, 472, 477, 554, 473, 474, 475, 476,
	555, 0, 479, 480, 0, 478, 0, 481, 482, 483,
	484, 485, 486, 311, 487, 0, 488, 556, 557, 558,
	559, 0, 495, 0, 489, 490, 560, 491, 561, 0,
	492, 493, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 502, 503, 501, 504, 0, 505, 0, 0, 506,
	507, 508, 562, 563, 564, 237, 510, 509, 565, 0,
	0, 0, 0, 511, 512, 566, 513, 514, 515, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 517, 518,
	0, 519, 258, 520, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 521, 522, 523, 0, 265, 266,
	524, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 525, 526, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 527, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 528, 529,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	530, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 531, 532, 324, 325, 0, 326, 533, 0,
	534, 327, 0, 328, 329, 330, 331, 332, 2575, 536,
	537, 388, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	538, 539, 0, 540, 0, 343, 0, 541, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 354, 356, 355, 0, 357, 542,
	0, 358, 359, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 366, 0, 367, 368, 370, 372, 369,
	371, 376, 373, 374, 375, 378, 0, 377, 0, 379,
	380, 381, 384, 385, 383, 0, 382, 0, 0, 0,
	386, 0, 543, 387, 544, 389, 390, 0, 0, 391,
	0, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	545, 0, 398, 0, 546, 399, 400, 392, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 547,
	548, 549, 411, 550, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 551, 423, 422, 424,
	0, 0, 0, 0, 0, 0, 425, 0, 427, 428,
	429, 426, 430, 431, 432, 433, 0, 434, 435, 436,
	0, 437, 438, 439, 440, 552, 441, 0, 442, 443,
	449, 450, 444, 445, 451, 452, 453, 454, 455, 0,
	457, 458, 456, 459, 460, 461, 0, 462, 446, 447,
	463, 464, 0, 465, 466, 553, 0, 467, 0, 468,
	469, 470, 471, 448, 472, 477, 554, 473, 474, 475,
	476, 555, 0, 479, 480, 0, 478, 0, 481, 482,
	483, 484, 485, 486, 311, 487, 0, 488, 556, 557,
	558, 559, 0, 495, 0, 489, 490, 560, 491, 561,
	0, 492, 493, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 502, 503, 501, 504, 0, 505, 0, 0,
	506, 507, 508, 562, 563, 564, 237, 510, 509, 565,
	0, 0, 0, 0, 511, 512, 566, 513, 514, 515,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 517,
	518, 0, 519, 258, 520, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 521, 522, 523, 0, 265,
	266, 524, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 525, 526, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 527, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 530, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 531, 532, 324, 325, 0, 326, 533,
	0, 534, 327, 0, 328, 329, 330, 331, 332, 535,
	536, 537, 388, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 0,
	341, 538, 539, 0, 540, 0, 343, 0, 541, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 354, 356, 355, 0, 357,
	542, 0, 358, 359, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 366, 0, 367, 368, 370, 372,
	369, 371, 376, 373, 374, 375, 378, 0, 377, 0,
	379, 380, 381, 384, 385, 383, 0, 382, 0, 0,
	0, 386, 0, 543, 387, 544, 389, 390, 0, 0,
	391, 0, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 545, 0, 398, 0, 546, 399, 400, 392, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	547, 548, 549, 411, 550, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 551, 423, 422,
	424, 0, 0, 0, 0, 0, 0, 425, 0, 427,
	428, 429, 426, 430, 431, 432, 433, 0, 434, 435,
	436, 0, 437, 438, 439, 440, 552, 441, 0, 442,
	443, 603, 450, 444, 445, 451, 452, 453, 454, 455,
	0, 457, 458, 456, 459, 460, 461, 0, 462, 446,
	447, 463, 464, 0, 465, 466, 553, 0, 467, 0,
	468, 469, 470, 471, 448, 472, 477, 554, 473, 474,
	475, 476, 555, 0, 479, 480, 0, 478, 0, 481,
	482, 483, 484, 485, 486, 311, 487, 0, 488, 556,
	557, 558, 559, 0, 495, 0, 489, 490, 560, 491,
	561, 0, 492, 493, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 502, 503, 501, 504, 0, 505, 0,
	0, 506, 507, 508, 562, 563, 564, 237, 510, 509,
	565, 0, 0, 0, 0, 511, 512, 566, 513, 514,
	515, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 516, 0,
	1985, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	517, 518, 0, 519, 258, 520, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 521, 522, 523, 0,
	265, 266, 524, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 525, 526, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 527,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	528, 529, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 530, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 531, 532, 324, 325, 0, 326,
	533, 0, 534, 327, 0, 328, 329, 330, 331, 332,
	535, 536, 537, 388, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 538, 539, 0, 540, 0, 343, 0, 541,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 354, 356, 355, 0,
	357, 542, 0, 358, 359, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 366, 0, 367, 368, 370,
	372, 369, 371, 376, 373, 374, 375, 378, 0, 377,
	0, 379, 380, 381, 384, 385, 383, 0, 382, 0,
	0, 0, 386, 0, 543, 387, 544, 389, 390, 0,
	0, 391, 0, 0, 0, 393, 394, 395, 0, 0,
	396, 397, 545, 0, 398, 0, 546, 399, 400, 392,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 547, 548, 549, 411, 550, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 551, 423,
	422, 424, 0, 0, 0, 0, 0, 0, 425, 0,
	427, 428, 429, 426, 430, 431, 432, 433, 0, 434,
	435, 436, 0, 437, 438, 439, 440, 552, 441, 0,
	442, 443, 449, 450, 444, 445, 451, 452, 453, 454,
	455, 0, 457, 458, 456, 459, 460, 461, 0, 0,
	446, 447, 463, 464, 0, 465, 466, 553, 0, 467,
	0, 468, 469, 470, 471, 448, 472, 477, 554, 473,
	474, 475, 476, 555, 0, 479, 480, 0, 478, 0,
	481, 482, 483, 484, 485, 486, 311, 487, 0, 488,
	556, 557, 558, 559, 0, 495, 0, 489, 490, 560,
	491, 561, 0, 492, 493, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 502, 503, 501, 504, 0, 505,
	0, 0, 506, 507, 508, 562, 563, 564, 237, 510,
	509, 565, 0, 0, 0, 0, 511, 512, 566, 513,
	514, 515, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 517, 518, 0, 519, 258, 520, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 521, 522, 523,
	0, 265, 266, 524, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 525, 526, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	527, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 530, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 531, 532, 324, 325, 0,
	326, 533, 0, 534, 327, 0, 328, 329, 330, 331,
	332, 1371, 536, 537, 388, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 538, 539, 0, 540, 0, 343, 0,
	541, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 354, 356, 355,
	0, 357, 542, 0, 358, 359, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 366, 0, 367, 368,
	370, 372, 369, 371, 376, 373, 374, 375, 378, 0,
	377, 0, 379, 380, 381, 384, 385, 383, 0, 382,
	0, 0, 0, 386, 0, 543, 387, 544, 389, 390,
	0, 0, 391, 0, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 545, 0, 398, 0, 546, 399, 400,
	392, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 547, 548, 549, 411, 550, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 551,
	423, 422, 424, 0, 0, 0, 0, 0, 0, 425,
	0, 427, 428, 429, 426, 430, 431, 432, 433, 0,
	434, 435, 436, 0, 437, 438, 439, 440, 552, 441,
	0, 442, 443, 449, 450, 444, 445, 451, 452, 453,
	454, 455, 0, 457, 458, 456, 459, 460, 461, 0,
	462, 446, 447, 463, 464, 0, 465, 466, 553, 0,
	467, 0, 468, 469, 470, 471, 448, 472, 477, 554,
	473, 474, 475, 476, 555, 0, 479, 480, 0, 478,
	0, 481, 482, 483, 484, 485, 486, 311, 487, 0,
	488, 556, 557, 558, 559, 0, 495, 0, 489, 490,
	560, 491, 561, 0, 492, 493, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 502, 503, 501, 504, 0,
	505, 0, 0, 506, 507, 508, 562, 563, 564, 237,
	510, 509, 565, 0, 0, 0, 0, 511, 512, 566,
	513, 514, 515, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 517, 518, 0, 519, 258, 520, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 521, 522,
	523, 0, 265, 266, 524, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 525, 526, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 527, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 528, 529, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 530, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 531, 532, 324, 325,
	0, 326, 533, 0, 534, 327, 0, 328, 329, 330,
	331, 332, 1312, 536, 537, 388, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 538, 539, 0, 540, 0, 343,
	0, 541, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 354, 356,
	355, 0, 357, 542, 0, 358, 359, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 366, 0, 367,
	368, 370, 372, 369, 371, 376, 373, 374, 375, 378,
	0, 377, 0, 379, 380, 381, 384, 385, 383, 0,
	382, 0, 0, 0, 386, 0, 543, 387, 544, 389,
	390, 0, 0, 391, 0, 0, 0, 393, 394, 395,
	0, 0, 396, 397, 545, 0, 398, 0, 546, 399,
	400, 392, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 547, 548, 549, 411, 550, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	551, 423, 422, 424, 0, 0, 0, 0, 0, 0,
	425, 0, 427, 428, 429, 426, 430, 431, 432, 433,
	0, 434, 435, 436, 0, 437, 438, 439, 440, 552,
	441, 0, 442, 443, 449, 450, 444, 445, 451, 452,
	453, 454, 455, 0, 457, 458, 456, 459, 460, 461,
	0, 462, 446, 447, 463, 464, 0, 465, 466, 553,
	0, 467, 0, 468, 469, 470, 471, 448, 472, 477,
	554, 473, 474, 475, 476, 555, 0, 479, 480, 0,
	478, 0, 481, 482, 483, 484, 485, 486, 311, 487,
	0, 488, 556, 557, 558, 559, 0, 495, 0, 489,
	490, 560, 491, 561, 0, 492, 493, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 502, 503, 501, 504,
	0, 505, 0, 0, 506, 507, 508, 562, 563, 564,
	237, 510, 509, 565, 0, 0, 0, 0, 511, 512,
	566, 513, 514, 515, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 517, 518, 0, 519, 258, 520, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 521,
	522, 523, 0, 265, 266, 524, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 525, 526, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 527, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 530, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 531, 532, 324,
	325, 0, 326, 533, 0, 534, 327, 0, 328, 329,
	330, 331, 332, 535, 536, 537, 388, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 538, 539, 0, 540, 0,
	343, 0, 541, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 354,
	356, 355, 0, 357, 542, 0, 358, 359, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 366, 0,
	367, 368, 370, 372, 369, 371, 376, 373, 374, 375,
	378, 0, 377, 0, 379, 380, 381, 384, 385, 383,
	0, 382, 0, 0, 0, 386, 0, 543, 387, 544,
	389, 390, 0, 0, 391, 0, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 545, 0, 398, 0, 546,
	399, 400, 392, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 547, 548, 549, 411, 550, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 551, 1052, 422, 424, 0, 0, 0, 0, 0,
	0, 425, 0, 427, 428, 429, 426, 430, 431, 432,
	433, 0, 434, 435, 436, 0, 437, 438, 439, 440,
	552, 441, 0, 442, 443, 449, 450, 444, 445, 451,
	452, 453, 454, 455, 0, 457, 458, 456, 459, 460,
	461, 0, 462, 446, 447, 463, 464, 0, 465, 466,
	553, 0, 467, 0, 468, 469, 470, 471, 448, 472,
	477, 554, 473, 474, 475, 476, 555, 0, 479, 480,
	0, 478, 0, 481, 482, 483, 484, 485, 486, 311,
	487, 0, 488, 556, 557, 558, 559, 0, 495, 0,
	489, 490, 560, 491, 561, 0, 492, 493, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 502, 503, 501,
	504, 0, 505, 0, 0, 506, 507, 508, 562, 563,
	564, 237, 510, 509, 565, 0, 0, 0, 0, 511,
	512, 566, 513, 514, 515, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 517, 518, 0, 519, 258, 520,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	521, 522, 523, 0, 265, 266, 524, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 525, 526, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 527, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 530, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 531, 532,
	324, 325, 0, 326, 533, 0, 534, 0, 0, 328,
	329, 330, 331, 332, 535, 536, 537, 388, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 538, 539, 0, 540,
	0, 343, 0, 541, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	354, 356, 355, 0, 357, 542, 0, 358, 359, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 366,
	0, 367, 368, 370, 372, 369, 371, 376, 373, 374,
	375, 378, 0, 377, 0, 379, 380, 381, 384, 385,
	383, 0, 382, 0, 0, 0, 386, 0, 543, 387,
	544, 389, 390, 0, 0, 391, 0, 0, 0, 393,
	394, 395, 0, 0, 396, 397, 545, 0, 398, 0,
	546, 399, 400, 392, 401, 402, 0, 404, 405, 406,
	407, 408, 0, 409, 410, 547, 548, 549, 411, 550,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 0,
	420, 421, 551, 423, 422, 424, 0, 0, 0, 0,
	0, 0, 425, 0, 427, 428, 429, 426, 430, 431,
	432, 433, 0, 434, 435, 436, 0, 437, 438, 439,
	440, 552, 0, 0, 442, 443, 449, 450, 444, 445,
	451, 452, 453, 454, 455, 0, 457, 458, 456, 459,
	460, 461, 0, 462, 446, 447, 463, 464, 0, 465,
	466, 553, 0, 467, 0, 468, 469, 470, 471, 448,
	472, 477, 554, 473, 474, 475, 476, 555, 0, 479,
	480, 0, 478, 0, 481, 482, 483, 484, 485, 486,
	311, 487, 0, 488, 556, 557, 558, 559, 0, 495,
	0, 489, 490, 560, 491, 561, 0, 492, 493, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 502, 503,
	501, 504, 0, 505, 0, 0, 506, 507, 508, 562,
	563, 564, 0, 510, 509, 565, 0, 0, 0, 0,
	511, 512, 566, 513, 514, 515, 1578, 1579, 0, 1611,
	1612, 1613, 1621, 1622, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 1609, 0,
	0, 0, 0, 0, 0, 1581, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 1578,
	1579, 0, 1611, 1612, 1613, 1621, 1622, 1623, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	1614, 1609, 0, 0, 0, 1600, 0, 0, 1581, 0,
	0, 0, 0, 1597, 0, 1627, 0, 0, 0, 0,
	0, 0, 1578, 1579, 0, 1611, 1612, 1613, 1621, 1622,
	1623, 0, 0, 0, 0, 0, 0, 0, 1580, 0,
	0, 0, 0, 1614, 1609, 0, 0, 0, 1600, 0,
	0, 1581, 0, 0, 0, 0, 1597, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 1604, 1605,
	1606, 1580, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 1600, 0, 0, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 1628,
	1603, 1604, 1605, 1606, 0, 1608, 1610, 0, 0, 0,
	1586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 0, 1625, 0, 0, 0, 0, 0, 0, 1595,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 1628, 1603, 1604, 1605, 1606, 1616, 1608, 1610,
	0, 0, 0, 1586, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 1624, 0, 1625, 0, 0, 0, 0,
	0, 0, 1595, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 1618, 1626, 0, 1628, 0, 0, 0, 0,
	1616, 1608, 1610, 0, 0, 0, 0, 0, 0, 0,
	1615, 1601, 0, 0, 0, 0, 1624, 0, 1625, 0,
	0, 0, 0, 0, 0, 1595, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 1616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1601, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 1617, 0, 0, 0, 1592, 1593,
	1599, 1620, 1598, 1594, 0, 1591, 1589, 1590, 1582, 1583,
	1584, 1585, 1587, 1588, 0, 0, 0, 0, 3886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591, 1589,
	1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 0, 0,
	0, 3797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1617, 0, 0, 0, 1592, 1593, 1599, 1620, 1598, 1594,
	0, 1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588,
	0, 0, 1578, 1579, 3796, 1611, 1612, 1613, 1621, 1622,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 1609, 0, 0, 0, 0, 0,
	0, 1581, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 1578, 1579, 0, 1611, 1612,
	1613, 1621, 1622, 1623, 0, 0, 0, 0, 0, 0,
	0, 1580, 0, 0, 0, 0, 1614, 1609, 0, 0,
	0, 1600, 0, 0, 1581, 0, 0, 0, 0, 1597,
	0, 1627, 0, 0, 0, 0, 0, 0, 1578, 1579,
	0, 1611, 1612, 1613, 1621, 1622, 1623, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 1614,
	1609, 0, 0, 0, 1600, 0, 0, 1581, 0, 0,
	0, 0, 1597, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1603, 1604, 1605, 1606, 1580, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 1600, 0, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1618, 0, 0, 1628, 1603, 1604, 1605, 1606,
	0, 1608, 1610, 0, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 0, 1625, 0,
	0, 0, 0, 0, 0, 1595, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 1628, 1603,
	1604, 1605, 1606, 1616, 1608, 1610, 0, 0, 0, 1586,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 1624,
	0, 1625, 0, 0, 0, 0, 0, 0, 1595, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 1618, 1626,
	0, 1628, 0, 0, 0, 0, 1616, 1608, 1610, 0,
	0, 0, 0, 0, 0, 0, 1615, 1601, 0, 0,
	0, 0, 1624, 0, 1625, 0, 0, 0, 0, 0,
	0, 1595, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 0, 0, 0, 0, 0, 0, 1616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	1601, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 1602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1615, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	1617, 0, 0, 0, 1592, 1593, 1599, 1620, 1598, 1594,
	0, 1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588,
	0, 0, 0, 0, 3650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 1592, 1593, 1599,
	1620, 1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584,
	1585, 1587, 1588, 0, 0, 0, 0, 3521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	1592, 1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 0, 0, 1578, 1579,
	3467, 1611, 1612, 1613, 1621, 1622, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	1609, 0, 0, 0, 0, 0, 0, 1581, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623,
	0, 0, 0, 0, 0, 0, 0, 1580, 0, 0,
	0, 0, 1614, 1609, 0, 0, 0, 1600, 0, 0,
	1581, 0, 0, 0, 0, 1597, 0, 1627, 0, 0,
	0, 0, 0, 0, 1578, 1579, 0, 1611, 1612, 1613,
	1621, 1622, 1623, 0, 0, 0, 0, 0, 0, 0,
	1580, 0, 0, 0, 0, 1614, 1609, 0, 0, 0,
	1600, 0, 0, 1581, 0, 0, 0, 0, 1597, 0,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	1604, 1605, 1606, 1580, 0, 0, 0, 0, 0, 1586,
	0, 0, 0, 1600, 0, 0, 0, 0, 0, 0,
	0, 1597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 1628, 1603, 1604, 1605, 1606, 0, 1608, 1610, 0,
	0, 0, 1586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 0, 1625, 0, 0, 0, 0, 0,
	0, 1595, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 1628, 1603, 1604, 1605, 1606, 1616,
	1608, 1610, 0, 0, 0, 1586, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 1624, 0, 1625, 0, 0,
	0, 0, 0, 0, 1595, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 1618, 1626, 0, 1628, 0, 0,
	0, 0, 1616, 1608, 1610, 0, 0, 0, 0, 0,
	0, 0, 1615, 1601, 0, 0, 0, 0, 1624, 0,
	1625, 0, 0, 0, 0, 0, 0, 1595, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 1616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 1601, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1615, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1607,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 1617, 0, 0, 0,
	1592, 1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590,
	1582, 1583, 1584, 1585, 1587, 1588, 0, 0, 0, 0,
	3466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0,
	1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0,
	0, 0, 0, 3465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1617, 0, 0, 0, 1592, 1593, 1599, 1620,
	1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585,
	1587, 1588, 0, 0, 1578, 1579, 3187, 1611, 1612, 1613,
	1621, 1622, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1614, 1609, 0, 0, 0,
	0, 0, 0, 1581, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 1578, 1579, 0,
	1611, 1612, 1613, 1621, 1622, 1623, 0, 0, 0, 0,
	0, 0, 0, 1580, 0, 0, 0, 0, 1614, 1609,
	0, 0, 0, 1600, 0, 0, 1581, 0, 0, 0,
	0, 1597, 0, 1627, 0, 0, 0, 0, 0, 0,
	1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 0,
	0, 1614, 1609, 0, 0, 0, 1600, 0, 0, 1581,
	0, 0, 0, 0, 1597, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1604, 1605, 1606, 1580,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 1600,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1618, 0, 0, 1628, 1603, 1604,
	1605, 1606, 0, 1608, 1610, 0, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 0,
	1625, 0, 0, 0, 0, 0, 0, 1595, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	1628, 1603, 1604, 1605, 1606, 1616, 1608, 1610, 0, 0,
	0, 1586, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 1624, 0, 1625, 0, 0, 0, 0, 0, 0,
	1595, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	1618, 1626, 0, 1628, 0, 0, 0, 0, 1616, 1608,
	1610, 0, 0, 0, 0, 0, 0, 0, 1615, 1601,
	0, 0, 0, 0, 1624, 0, 1625, 0, 0, 0,
	0, 0, 0, 1595, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 1601, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1619, 0, 1617, 0, 0, 0, 1592, 1593, 1599, 1620,
	1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585,
	1587, 1588, 0, 0, 0, 0, 2777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 0, 1592,
	1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590, 1582,
	1583, 1584, 1585, 1587, 1588, 0, 0, 0, 0, 2776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1617, 0,
	0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591,
	1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 0,
	1578, 1579, 2775, 1611, 1612, 1613, 1621, 1622, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 1609, 0, 0, 0, 0, 0, 0, 1581,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 1578, 1579, 0, 1611, 1612, 1613, 1621,
	1622, 1623, 0, 0, 0, 0, 0, 0, 0, 1580,
	0, 0, 0, 0, 1614, 1609, 0, 0, 0, 1600,
	0, 0, 1581, 0, 0, 0, 0, 1597, 0, 1627,
	0, 0, 0, 0, 0, 0, 1578, 1579, 0, 1611,
	1612, 1613, 1621, 1622, 1623, 0, 0, 0, 0, 0,
	0, 0, 1580, 0, 0, 0, 0, 1614, 1609, 0,
	0, 0, 1600, 0, 0, 1581, 0, 0, 0, 0,
	1597, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 1605, 1606, 1580, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 1600, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 1628, 1603, 1604, 1605, 1606, 0, 1608,
	1610, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 0, 1625, 0, 0, 0,
	0, 0, 0, 1595, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 1628, 1603, 1604, 1605,
	1606, 1616, 1608, 1610, 0, 0, 0, 1586, 4011, 0,
	0, 0, 1601, 0, 0, 0, 0, 1624, 0, 1625,
	0, 0, 0, 0, 0, 0, 1595, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 1626, 0, 1628,
	0, 0, 0, 0, 1616, 1608, 1610, 0, 0, 0,
	0, 0, 0, 0, 1615, 1601, 0, 0, 0, 0,
	1624, 0, 1625, 0, 0, 0, 0, 0, 0, 1595,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 1601, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 1602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1615, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4010, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 0, 1617, 0,
	0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591,
	1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 0,
	0, 0, 2774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 1592, 1593, 1599, 1620, 1598,
	1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587,
	1588, 0, 0, 2741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 1592, 1593,
	1599, 1620, 1598, 1594, 0, 1591, 1589, 1590, 1582, 1583,
	1584, 1585, 1587, 1588, 1578, 1579, 0, 1611, 1612, 1613,
	1621, 1622, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1614, 1609, 0, 0, 0,
	0, 2712, 0, 1581, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 1578, 1579, 0,
	1611, 1612, 1613, 1621, 1622, 1623, 0, 0, 0, 0,
	0, 0, 0, 1580, 0, 0, 0, 0, 1614, 1609,
	0, 0, 0, 1600, 0, 0, 1581, 0, 0, 0,
	0, 1597, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 0,
	0, 0, 2713, 0, 0, 0, 1600, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1604, 1605, 1606, 0,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1618, 0, 0, 1628, 1603, 1604,
	1605, 1606, 0, 1608, 1610, 0, 0, 0, 1586, 0,
	2837, 0, 0, 2836, 0, 0, 0, 0, 1624, 0,
	1625, 0, 0, 0, 0, 0, 0, 1595, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	1628, 0, 0, 0, 0, 1616, 1608, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 1624, 0, 1625, 0, 0, 0, 0, 0, 0,
	1595, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 0, 0, 0, 1616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1615, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 0, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2348, 0, 0, 0, 0, 0, 0, 1578, 1579, 1602,
	1611, 1612, 1613, 1621, 1622, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 1609,
	0, 0, 1607, 2347, 1619, 0, 1581, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1600, 1619, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1617, 0, 0, 0, 1592, 1593, 1599, 1620,
	1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585,
	1587, 1588, 0, 0, 0, 0, 0, 0, 1603, 1604,
	1605, 1606, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 0, 1592,
	1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590, 1582,
	1583, 1584, 1585, 1587, 1588, 0, 0, 1618, 0, 0,
	1628, 0, 0, 0, 0, 0, 1608, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 0, 1625, 0, 0, 0, 0, 0, 0,
	1595, 1596, 0, 0, 0, 0, 0, 0, 0, 1578,
	1579, 0, 1611, 1612, 1613, 1621, 1622, 1623, 1616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	1614, 1609, 0, 0, 0, 0, 0, 0, 1581, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1580, 0,
	0, 1615, 0, 0, 0, 0, 0, 0, 1600, 0,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 0, 1578, 1579, 0, 1611, 1612,
	1613, 1621, 1622, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 1609, 0, 0,
	0, 0, 1607, 0, 1581, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	1603, 1604, 1605, 1606, 1580, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 1600, 0, 0, 1619, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 1628, 0, 0, 0, 0, 0, 1608, 1610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1624, 0, 1625, 0, 0, 0, 0,
	0, 0, 1595, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 1604, 1605, 1606,
	1616, 0, 0, 0, 0, 0, 1586, 0, 0, 0,
	0, 1601, 0, 0, 0, 1617, 0, 0, 0, 1592,
	1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590, 1582,
	1583, 1584, 1585, 1587, 1588, 1618, 1626, 0, 1628, 0,
	0, 0, 0, 0, 1608, 1610, 0, 0, 0, 0,
	0, 0, 0, 1615, 910, 0, 0, 0, 0, 1624,
	0, 1625, 0, 0, 0, 0, 0, 0, 1595, 1596,
	0, 0, 0, 0, 0, 0, 0, 1578, 1579, 0,
	1611, 1612, 1613, 1621, 1622, 1623, 1616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 1614, 1609,
	0, 0, 0, 0, 1607, 0, 1581, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 1615,
	0, 0, 0, 0, 0, 0, 1600, 0, 0, 1619,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 1579, 0, 1611, 1612, 1613, 1621,
	1622, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 1609, 0, 0, 0, 2838,
	1607, 0, 1581, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 1603, 1604,
	1605, 1606, 1580, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 1600, 2843, 0, 1619, 0, 1617, 0, 0,
	1597, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591, 1589,
	1590, 1582, 1583, 1584, 1585, 1587, 1588, 1618, 0, 0,
	1628, 0, 0, 0, 0, 0, 1608, 1610, 0, 3168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 0, 1625, 0, 0, 0, 0, 0, 0,
	1595, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 1604, 1605, 1606, 1616, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 1601,
	0, 0, 0, 1617, 0, 0, 0, 1592, 1593, 1599,
	1620, 1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584,
	1585, 1587, 1588, 1618, 1626, 0, 1628, 0, 0, 0,
	0, 0, 1608, 1610, 0, 0, 0, 0, 0, 0,
	0, 1615, 0, 0, 0, 0, 0, 1624, 0, 1625,
	0, 0, 0, 0, 0, 0, 1595, 1596, 0, 0,
	0, 0, 0, 0, 0, 1578, 1579, 0, 1611, 1612,
	1613, 1621, 1622, 1623, 1616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 1614, 1609, 0, 0,
	0, 0, 1607, 0, 1581, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 1615, 0, 0,
	0, 0, 0, 0, 1600, 0, 0, 1619, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 1609, 0, 0, 0, 2778, 1607, 0,
	1581, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 1603, 1604, 1605, 1606,
	1580, 0, 0, 0, 0, 0, 1586, 0, 0, 0,
	1600, 0, 0, 1619, 0, 1617, 0, 0, 1597, 1592,
	1593, 1599, 1620, 1598, 1594, 0, 1591, 1589, 1590, 1582,
	1583, 1584, 1585, 1587, 1588, 1618, 0, 0, 1628, 0,
	0, 0, 0, 0, 1608, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1624,
	0, 1625, 0, 0, 0, 0, 0, 0, 1595, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 1604, 1605, 1606, 1616, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 0, 1601, 0, 0,
	0, 1617, 0, 0, 0, 1592, 1593, 1599, 1620, 1598,
	1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587,
	1588, 1618, 1626, 0, 1628, 0, 0, 0, 0, 0,
	1608, 1610, 0, 0, 0, 0, 0, 0, 0, 1615,
	0, 0, 0, 0, 0, 1624, 0, 1625, 0, 0,
	0, 0, 0, 0, 1595, 1596, 0, 0, 0, 2805,
	0, 0, 0, 1578, 1579, 0, 1611, 1612, 1613, 1621,
	1622, 1623, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 1614, 1609, 0, 0, 0, 0,
	1607, 0, 1581, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1580, 0, 0, 1615, 0, 0, 0, 0,
	0, 0, 1600, 0, 0, 1619, 0, 0, 0, 0,
	1597, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	1579, 0, 1611, 1612, 1613, 1621, 1622, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 1609, 0, 0, 0, 0, 1607, 0, 1581, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 1603, 1604, 1605, 1606, 1580, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 1600, 0,
	0, 1619, 0, 1617, 0, 0, 1597, 1592, 1593, 1599,
	1620, 1598, 1594, 0, 1591, 1589, 1590, 1582, 1583, 1584,
	1585, 1587, 1588, 1618, 0, 0, 1628, 0, 0, 0,
	0, 0, 1608, 1610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1624, 0, 1625,
	0, 0, 0, 0, 0, 0, 1595, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 1604, 1605, 1606, 1616, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 1601, 0, 0, 0, 1617,
	0, 0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0,
	1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 1618,
	1626, 0, 1628, 0, 0, 0, 0, 0, 1608, 1610,
	0, 0, 0, 0, 0, 0, 0, 1615, 0, 0,
	0, 0, 0, 1624, 0, 1625, 0, 0, 0, 0,
	0, 0, 1595, 1596, 0, 0, 0, 0, 0, 0,
	0, 1578, 1579, 0, 1611, 1612, 1613, 1621, 1622, 1623,
	1616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 0, 1609, 0, 0, 0, 0, 1607, 0,
	1581, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1600, 0, 0, 1619, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 1603, 1604, 1605, 1606, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 0, 0, 0, 1619,
	0, 1617, 0, 0, 0, 1592, 1593, 1599, 1620, 1598,
	1594, 0, 1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587,
	1588, 1618, 0, 0, 1628, 0, 0, 0, 0, 0,
	1608, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 1624, 846, 1625, 0, 0,
	0, 0, 0, 0, 1595, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 813,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 825, 811, 1617, 0, 0,
	0, 1592, 1593, 1599, 1620, 1598, 1594, 0, 1591, 1589,
	1590, 1582, 1583, 1584, 1585, 1587, 1588, 0, 1626, 0,
	812, 0, 0, 0, 0, 815, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 0, 822, 823,
	0, 0, 0, 0, 839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 847, 817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 818, 0,
	0, 1619, 0, 0, 0, 0, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 819, 820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 827, 826, 0, 0, 0, 0, 0, 0, 821,
	0, 0, 0, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 848, 1617,
	0, 0, 0, 1592, 1593, 1599, 1620, 1598, 1594, 0,
	1591, 1589, 1590, 1582, 1583, 1584, 1585, 1587, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 816, 0, 0, 853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 0, 843, 844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 841, 0, 0, 0, 0, 0, 0,
	852, 837, 0, 830, 828, 0, 833, 0, 0, 0,
	0, 0, 834, 0, 0, 808, 0, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 0, 0, 0, 832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 850,
	0, 0, 0, 0, 0, 0, 0, 838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	842,
}
var sqlPact = [...]int{

	11341, -1000, -1000, -1000, -1000, 201, -1000, -1000, 188, 186,
	183, 181, 178, 177, 176, 175, -1000, -1000, -1000, -1000,
	-1000, -1000, 174, -1000, -1000, 173, -1000, 172, 171, 168,
	-1000, -1000, 167, -1000, 160, -1000, -1000, -1000, -1000, 159,
	155, 154, 72401, 71934, 72862, 2110, 87734, 76562, 2103, 64947,
	87267, 64480, 86800, 86333, 153, -1000, 85866, 152, 150, 149,
	-1000, 85399, -1000, 1750, -1000, 147, 2008, 53713, 137, 136,
	132, 2225, 131, -1000, 129, 128, -1000, 9699, 1353, -1000,
	125, 123, -1000, 11982, 333, 75634, 122, 121, 2469, 120,
	119, 53245, 118, 117, 2373, 2634, -1000, -1000, 1856, -1000,
	-1000, 114, 113, 110, 109, 108, 105, 104, 100, 97,
	-1000, 96, 95, 94, 93, 90, 89, 88, 86, -1000,
	85, 84, 80, 79, 78, 77, 75, 72, 71, 70,
	69, 67, -1000, 99092, 65, 1774, 1556, 1551, 1550, 1544,
	1538, 924, 63, 62, 61, 60, 59, 57, 56, 55,
	54, -1000, 52, 51, 48, 47, 32, 31, 30, 29,
	142, 28, 27, 25, 24, 23, 22, 20, 3023, -1000,
	1523, 1401, 24612, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 93266,
	88195, 19, -148, 18, -1000, 3013, 946, 44340, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 262, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 470,
	1849, 714, -1000, -1000, -1000, 84938, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2108, -64, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 713, -1000, 2107, 182, 2014, -1000, -1000,
	-1000, -1000, -1000, 88195, -1000, -1000, 3397, 3396, 1859, 710,
	84477, -1000, 1486, -1000, 879, 27570, -1000, 1097, -1000, 27570,
	255, -1000, -1000, -1000, -1000, -1000, -1000, 3395, 3394, 3393,
	3391, -1000, -1000, 64013, 18666, 63546, 63079, 84010, 18189, 71467,
	71000, 83543, 59357, -1000, -1000, -1000, 1335, -1000, -1000, -1000,
	-1000, -1000, -1000, -8, 56972, 3238, 88195, -1000, 250, -1000,
	-1000, -1000, -1000, -1000, -1000, 37594, 1057, 37091, 858, 36588,
	487, -1000, -1000, -1000, 58880, -1000, 3390, 3389, 1081, 3387,
	2932, 92805, 1645, 3385, 1717, 1108, 976, 3383, 3382, 3379,
	3375, 3374, 3373, 1359, 83076, 2672, 82609, 1533, 58403, 70533,
	72862, 2419, 82142, 1320, 1311, -1000, -1000, -1000, -1000, 2846,
	2632, 2616, 49994, -1000, -1000, 3372, 3371, 3370, 3368, 3367,
	92344, 1636, 3366, 2288, 3365, 3363, 3362, 3361, 3360, 3359,
	3358, -1000, 70066, 69599, 69132, 3053, 81675, 68665, 81208, 57926,
	36085, 1323, -1000, -1000, -1000, 46222, 5446, 5126, 80741, 48129,
	72862, 72862, -1000, -1000, -1000, -1000, -1000, 35582, 636, 35079,
	1271, -1000, -1000, 46704, 2598, -1000, -1000, -1000, -1000, 34576,
	584, 34073, 1018, 88195, -1000, 2668, 1790, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1974, 1505,
	3242, 57449, 1887, 1286, 3014, 2844, 2841, 1362, 2327, 2840,
	2833, 2832, 2831, 2793, 1618, 2349, 484, 24109, 2637, 1623,
	33570, 1410, 1378, 2781, 2775, 3256, 1766, 1847, 2001, 62612,
	3357, 3345, 2978, 2774, 2706, 2597, -1000, -1000, -1000, -1000,
	1343, -1000, -1000, -1000, -1000, -1000, 65869, -1000, -1000, 1076,
	-1000, -1000, 1076, -1000, -1000, -1000, -1000, -1000, 1267, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1523, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2285, -1000, 1812, -1000, -1000, 2257, 2949, 2949, 2949,
	3041, 440, 437, -1000, 142, -1000, -1000, 98572, -1000, -1000,
	38085, 38085, 38085, 38085, 38085, 38085, 38085, 1905, -1000, 709,
	-1000, -1000, 747, -1000, 708, 558, -1000, -1000, -1000, -1000,
	-1000, -1000, 706, -1000, -1000, -1000, -1000, -1000, -1000, 3238,
	-1000, 21103, -1000, -1000, -1000, 265, 705, 38085, -1000, -1000,
	3268, 3267, 927, -1000, 243, 874, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2643, 703,
	702, -1000, 686, 675, 674, 671, 663, -1000, -1000, -1000,
	661, 660, 658, 657, 656, 654, 652, 650, -1000, 1781,
	-1000, -1000, -1000, -1000, -1000, -1000, 603, 601, 601, 601,
	-1000, 964, -1000, -1000, -1000, 289, 599, 282, 595, 590,
	588, 648, 645, 643, 642, 641, 631, 629, 624, 622,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 961, -1000, -1000, -1000,
	-1000, -9, 88195, -1000, 470, -9, -1000, -1000, 620, -1000,
	28061, 28061, 28061, -1000, -1000, 2106, 38085, -1000, 2809, -1000,
	-1, -1, 863, 45272, -1000, 43390, 863, 523, 760, 49526,
	-1000, 2595, -1000, -1000, 618, 235, -1000, -1000, -1000, -1000,
	19141, 2592, 88195, 88195, 72862, 72862, 72862, 2872, 38085, -1000,
	-1000, 54174, 88195, 73323, 3177, 55096, 54174, 88195, 2641, -1000,
	-1000, -1000, 88195, -1000, 38085, -1000, 3152, 1482, 60297, 3080,
	-16, -1000, -1000, -1000, -1000, -1000, -1000, 2274, 2251, 1067,
	2128, 1432, -1000, 27570, 2924, -1000, -1000, -1000, 234, 19141,
	-1000, -1000, -1000, -1000, -1000, 3136, 2854, 1424, -1000, 2126,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1627,
	2853, -1000, 1867, 2852, 1613, -1000, -1000, 1995, -1000, -1000,
	2953, -1000, -1000, 1888, 2849, 4, -1000, -1000, 2267, -1000,
	-1000, 1998, -1000, -1000, 929, 2848, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 47654, 46704, 56972, -12, -1000,
	-1000, -1000, -1000, -22, -1000, 17712, 98572, -1000, -1000, -1000,
	-1000, 1622, 98572, 809, -1000, -1000, 2845, -1000, 98572, 754,
	-1000, -1000, 2842, -1000, 2640, -1000, -1000, -1000, -1000, 3340,
	-1000, 3335, 2197, 3330, 3329, 3328, -1000, 1598, 1762, 3323,
	-1000, 3322, -1000, -1000, -1000, -1000, -1000, -1000, 68198, 2104,
	-1000, -1000, 67264, -1000, 2190, -1000, 67731, 972, -1000, 929,
	2188, -1000, 751, -1000, 3321, 3051, 2436, 929, 2186, -1000,
	-1000, -1000, -1000, -1000, 51386, -1000, 51386, -1000, 51386, -1000,
	1468, -1000, 91883, -1, -1, 3238, -1000, -1000, -1000, -1000,
	-1000, 2839, 3319, 3317, 3316, -1000, 88195, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 197, 2838, -1000, -1000, 197, 2835,
	-1000, 197, 2825, -1000, 75167, -1000, -1000, 2005, 2818, -1000,
	194, 2813, -1000, -1000, 191, 2811, -1000, -1000, -39, 2810,
	-1000, -1000, 98572, -1000, -1000, -1000, -33, -1000, -1000, -1000,
	946, -1000, 45740, -1000, 45740, 80274, 59832, 890, 651, 52777,
	98572, -1000, -1000, -1000, -1000, 98572, -1000, -1000, -1000, -214,
	-1000, -1000, 59832, 46704, 98572, -1000, -1000, -1000, -1000, 98572,
	-1000, -1000, -1000, 59832, 67264, -1000, 79807, 66803, -1000, -1000,
	1336, 2305, -1000, -1000, -1000, 890, 59832, 59832, 59832, -1000,
	79340, -1000, -1000, 1860, 1561, 2960, 1853, 72862, -1000, 1729,
	-1000, -1000, -1000, 2999, 2639, -1000, 54635, 74706, -1000, 74245,
	-1000, 73784, -1000, 72862, -1000, 72862, -1000, 3315, 3314, 3313,
	-1000, 3312, 2989, -1000, 98572, 2988, -1000, 3310, 3065, 2637,
	98572, -1000, 2776, 1534, 1531, 88195, -1000, -1000, 88195, -1000,
	88195, -1000, -1000, -1000, 1412, -1000, -1000, 2253, -1000, -1000,
	-1000, -1000, 72862, -1000, -1000, -1000, -1000, -1000, -1000, 2633,
	-1000, 1634, -1000, 1665, -1000, 1304, -1000, -1000, 198, -1000,
	-1000, -16, -1000, 91422, -1000, 2257, -1000, 88195, -1000, 2263,
	2610, 2629, 1713, 2083, 2348, -1000, 33067, 2330, 40540, 2122,
	142, -1000, -1000, 142, 142, 25594, -1000, -1000, 55096, 55096,
	19141, 1276, 38085, 38085, 38085, 38085, 38085, 38085, 38085, 38085,
	38085, 38085, 38085, 38085, 38085, 38085, 38085, 38085, 38085, 38085,
	38085, 38085, 38085, 38085, 38085, 38085, 38085, 38085, 38085, 38085,
	38085, 38085, 38085, 38085, 38085, 38085, 38085, 2079, 38085, 1265,
	38085, 38085, 38085, 38085, 1937, -1000, -1000, 1800, 499, 1848,
	-1000, 3226, 3226, 3226, 1169, 1169, 98880, 98880, 472, 3309,
	747, -1000, 38085, -1000, 101, 38085, 19618, -1000, 437, 6913,
	2183, -1000, 435, 20121, -1000, -1000, -1000, 21103, 558, 32564,
	38085, 955, 98572, -1000, -1000, 1721, 3240, 17237, 2692, 2520,
	616, 740, 728, 23606, 23103, 22600, 22097, 700, 38085, 38085,
	38085, 38085, 38085, 38085, 38085, 38085, -1000, -1000, 3247, -1000,
	3240, -1000, -1000, -1000, -1000, 3240, 1275, 1128, 3240, -1000,
	3240, 3240, 2795, 2795, 32073, 31570, 31067, 41031, 30564, 38085,
	21594, 30061, 29558, -1000, 88195, -9, 3147, 38085, 164, -1000,
	97426, -1000, 164, 164, 612, -34, 98572, 2372, 2372, 44806,
	2087, 1930, 1930, 1930, -1000, 863, 13408, 863, 78414, 1954,
	863, 863, 218, 252, 434, 42924, 2809, 78414, 733, 611,
	13, 10, 8, -1000, -1000, 7, 6, -1000, -1000, 72862,
	610, 19618, 19141, 217, 1393, -41, 2391, 2389, 2366, -1000,
	2364, 1657, -42, 1264, -44, -1000, 564, -43, -1000, 1197,
	213, 3240, -1000, -1000, -1000, -1000, -1000, 3308, 3306, -1000,
	959, 609, 608, 1032, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 603, 601, 601, 601, -1000, 289, 599, 282,
	595, 590, 588, -1000, -1000, -1000, -1000, 2589, -22, 73323,
	834, -49, 1095, -16, -1000, -1000, -1000, 60297, 1076, -1000,
	1518, -1000, -1000, -1000, -1000, -1000, -1000, 1364, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 927, -1000, -1000, -1000, -1000,
	-1000, -1000, 3234, 3232, -10, -1000, -1000, 19141, -1000, -17,
	1565, 1580, -1000, 62145, 2156, 2952, 2945, 1454, -1000, 1408,
	3035, 65869, 3105, 3139, 835, -1000, 2587, -1000, -1000, 878,
	1609, 1578, 1263, 65869, 1867, -1000, 55096, -1000, 2397, 3034,
	1251, 1261, 1251, 1251, 1254, -1000, 65869, 1570, 1260, -1000,
	1258, -1000, -19, 3093, 3133, 768, -1000, 2586, 1242, -1000,
	-1000, 72862, 19141, 1425, 1392, 1569, 1239, -11, -1000, 3087,
	3086, 1228, 1226, -1000, 1884, -1000, 59832, 848, 2475, 848,
	-12, 56972, 88195, 210, -1000, 101, 38085, 38085, 101, 38085,
	101, 3062, -1000, -1000, 2797, -1000, -1000, -1000, 3305, 1736,
	2287, -1000, -1000, -1000, 586, 2181, 2584, 88195, 2402, -13,
	72862, -1000, 2784, 1867, 2177, -1000, -1000, 66336, -1000, 2765,
	587, 3304, -1000, 90961, -1000, 2982, 1273, 2764, 1046, 677,
	3145, -1000, 677, 51847, -1000, 88195, -1000, -1000, 88195, -1000,
	-1000, -1000, 3303, -1000, 72862, -1000, -1000, 72862, -1000, 72862,
	-1000, 72862, 190, 2762, -1000, -1000, 88195, -1000, 72862, 72862,
	-1000, 88195, 88195, 59832, 59832, 4960, 61223, -51, -52, 428,
	-1000, 78879, 88195, 1028, 61684, 88195, 2913, 890, 46704, -1000,
	-54, -214, 2474, 890, 890, 848, -1000, 848, -1000, 72862,
	2628, -1000, 890, 890, 890, -1000, -1000, -1000, -1000, 3302,
	3300, -1000, -1000, -1000, 928, 72862, 88195, 72862, -1000, -1000,
	88195, -1000, 88195, -1000, 928, 88195, 928, 88195, 928, 88195,
	-1000, -1000, -1000, -1000, -1000, -1000, 101, 38085, -1000, -1000,
	3299, 1489, -1000, 2627, -1000, 2626, -1000, 42, -1000, -1000,
	-1000, -1000, -1000, 1822, 72862, 72862, 72862, 72862, 88195, 72862,
	-1000, 65869, -1000, 2263, 2610, -1000, -1000, -1000, -1000, -1000,
	-1000, 1575, 2028, -1000, 2334, -1000, 1440, -1000, -1000, -1000,
	98572, 41506, -1000, -1000, 98572, 1642, -1000, 40049, 39558, -1000,
	-1000, 1591, 72862, 2399, -1000, 2399, -125, -1000, 97073, 2331,
	72862, -1000, -1000, -1000, -1000, -1000, 873, 1787, 1787, 1174,
	1174, 1174, 1174, 3113, 895, 231, 704, 7782, 7782, 4125,
	4125, 4125, 4125, 4125, 7782, 5037, 1169, 1169, 5037, 5037,
	5037, 5037, 5037, 1169, 1169, 1169, 7782, 7782, 7782, 98880,
	98658, 10159, 38085, 38085, 1224, 1768, 499, 10003, 38085, 10808,
	10808, 10808, 10808, -1000, 2013, -1000, -1000, -1000, -1000, 2583,
	585, 41031, 41031, -1000, -1000, -1000, -1000, 20612, 38085, -1000,
	-1000, -1000, -1000, 29055, -1000, -1000, 96542, -270, 426, -110,
	-4, -1000, 38085, 38085, 38085, 417, -1000, 208, 38085, 88195,
	-1000, 12909, 731, -118, -1000, -57, 1284, -1000, 38085, -1000,
	-1000, 1222, -1000, 1211, 1210, 1202, -1000, 583, 414, -1000,
	206, -1000, 1921, 581, 580, 38085, -1000, -1000, -1000, -1000,
	-1000, 96499, -1000, -1000, 96009, -1000, -1000, 95966, -1000, -1000,
	95923, -1000, -1000, -1000, 98350, 12799, 12369, 11980, 5859, 11481,
	10777, -59, 399, -62, 396, 871, 866, 394, 392, 391,
	-67, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -68,
	388, -1000, 2582, -110, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 386, -1000, 385, -1000, 98264, -110, 369, 5762,
	-1000, 41031, 41031, 41031, -1000, 367, -1000, 97116, -1000, 98042,
	28564, 28564, 28564, 365, 97956, 38085, -110, -74, -1000, -81,
	-1000, -1000, 458, -84, 937, 28061, 43872, 19141, -1000, 937,
	937, 38085, -1000, 38085, 2357, -1000, -1000, -1000, 2353, 1997,
	2372, 44806, -1000, -1000, -1000, -1000, 78414, -1000, 3238, 2484,
	-1000, 78414, -1000, -1000, 88195, 470, -1000, 78414, 78414, 19141,
	863, -1000, 863, 78414, 514, -1000, -1000, -1000, -1000, -1000,
	364, 48594, -4, 203, 19141, 890, -1000, 2421, 2421, 2421,
	2421, -1000, -1000, 88195, 3202, -1000, 1803, -1000, 55096, -1000,
	742, 1073, 19141, -1000, -1000, -1000, 578, -1000, 3240, 3240,
	-1000, 3240, 88195, 156, 27570, -1000, 1076, -1000, -1000, 1438,
	-1000, 1739, -1000, 1112, -1000, -1000, -1000, -1000, 27570, -1000,
	1906, 88195, 88195, 72862, -1000, 88195, -1000, 2172, 90500, 2166,
	55096, 88195, -1000, -1000, 577, 576, 2318, 2316, 1024, 88195,
	88195, 2313, 90039, 89578, 88195, 1789, 38085, 2051, 1969, 101,
	101, -1000, -1000, 101, 575, 1214, 72862, 72862, 88195, 72862,
	1612, -1000, -1000, -1000, -1000, -1000, 65408, -1000, -1000, 3246,
	3243, -1000, 1251, -1000, -1000, -1000, 1251, 1867, 1504, 88195,
	72862, 88195, 1840, 101, 101, -1000, -1000, 101, 573, 19141,
	1773, -1000, 2666, 88195, 3266, 88195, 88195, 88195, 56511, 3000,
	89117, 88195, 88195, 56511, 1884, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 56046, 1033, 929, 926, 46704, 2446, -1000, -1000,
	16762, -1000, 98572, 98572, -1000, 98572, -1000, 54174, 88195, -1000,
	966, 88195, 61684, 889, 2761, 50925, -22, 890, 59832, 72862,
	-13, 88195, -1000, 1867, 2738, 470, 2165, -1000, -1000, 59832,
	571, 3298, 3296, -1000, 2096, 2164, -1000, -1000, 88656, 2864,
	798, 88195, 937, 44806, 1804, -1000, 49061, 994, 88195, 1698,
	124, -1000, -1000, -1000, 17, 88195, -1000, 3295, -1000, -1000,
	197, 197, 197, -1000, 72862, 72862, 2005, -1000, 194, -1000,
	191, -1000, -39, -1000, -1000, 4960, 4960, 890, -147, 569,
	-1000, 843, 838, 47179, 59832, -86, -1000, -1000, -1000, -1000,
	-1000, 72862, 88195, 566, 2435, 88195, -89, -1000, 192, 567,
	-1000, -1000, -1000, 890, 46704, 2580, -1000, -1000, 934, -1000,
	1301, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-2, -22, -22, -1000, 928, -1000, 928, -1000, 928, -1000,
	98572, -1000, -1000, 1488, 1481, 88195, -1000, 19141, 88195, 72862,
	19141, 72862, 2609, 2603, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1055, -1000, 1642, 2027, -1000, 558, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2233, -1000, -14,
	25594, 2125, -1000, -1000, 72862, -5, 38085, 38085, 9767, 8585,
	38085, 41031, 41031, -1000, 38085, 6824, -1000, -1000, -1000, -1000,
	-1000, 2574, 556, 38085, 55096, 5117, 4684, -1000, 352, 10727,
	5037, -1000, 38085, -1000, 351, 27079, -1000, 97648, -36, -92,
	-1000, 13896, -110, -94, -1000, -1000, 738, -1000, 2780, -1000,
	38085, 97734, 2199, 1776, 1691, 1507, 3240, 3265, 16287, -1000,
	52312, 938, 2002, 95433, -1000, -1000, -1000, -1000, 55096, 55096,
	38085, 38085, -1000, 38085, 38085, 38085, -1000, -1000, -1000, 3240,
	868, -1000, -1000, -1000, 868, -1000, -1000, 1251, -1000, 1251,
	-1000, 38085, -1000, -1000, 2573, 38085, -1000, 55096, 55096, 41031,
	41031, 41031, 41031, 41031, 41031, 41031, 41031, 41031, 41031, 41031,
	41031, 41031, 41031, 41031, 41031, 41031, 41031, 41031, 2301, 41031,
	3224, 3224, 3224, -1000, 2602, 2573, 38085, 38085, 55096, 350,
	340, 331, -1000, 38085, -110, -1000, -1000, 4960, 552, -1000,
	2223, -1000, 2518, -1000, 38085, -1000, -207, -1000, 2809, -1000,
	-1000, 2518, 2518, -95, 98572, 44806, 44806, -1000, 549, 38085,
	2342, -1000, -1000, 726, -263, -1000, 837, -1000, -1000, -1000,
	-1000, -1000, 470, -1000, -1000, -1000, 165, 78414, 78414, 725,
	-1000, -97, -1000, -1000, -100, -1000, 3144, 327, 19141, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -22, 2009, 3264,
	-1000, 3241, 737, 723, 157, 3240, 326, 324, 323, -22,
	88195, -1000, -16, -1000, -1000, -1000, 38085, -1000, -1000, 2950,
	1196, 1195, -1000, -1000, 2735, -1000, 2161, -1000, 1011, -1000,
	1758, -1000, 38085, 38085, 548, 547, 3294, 1807, 3291, 1026,
	2733, 2005, 2732, 2005, -1000, -1000, 870, -1000, 98572, 546,
	537, -1000, -17, 1470, 1559, 933, -1000, -1000, 38085, 38085,
	77953, -1000, 408, 2953, -6, -1000, -1000, 1527, 1187, -1000,
	-1000, -1000, -1000, 1867, 1512, 1142, -1000, -1000, -1000, -1000,
	932, -1000, -1000, 38085, -1000, -19, 1137, 3098, 2160, 72862,
	1132, -1000, 1131, -1000, -1000, -1000, -1000, -1000, -1000, 3069,
	2005, 2729, 1124, -1000, -1000, -1000, -1000, -1000, 55571, -1000,
	-1000, 2123, 848, 926, 2570, -1000, 1129, 3289, 72862, 3288,
	322, -103, -20, 55096, 3143, 2053, 536, 72862, 869, -1000,
	3238, -1000, -1000, -1000, -1000, 72862, 3140, 2726, 929, 3263,
	-1000, -1000, 72862, 2725, 2088, 2159, 2273, 798, 60762, -1000,
	929, 1961, -31, -1000, 1698, 26576, 2947, -111, -1000, -1000,
	-1000, 937, 51847, 44806, 38085, 3286, -112, -1000, -1000, -1000,
	-1000, -1000, 190, -1000, -1000, -1000, -1000, -1000, -1000, 77027,
	77027, 59832, 59832, 59832, 890, 88195, 88195, 61684, -1000, 533,
	88195, 88195, 532, -1000, 88195, 88195, 3285, 59832, -1000, -214,
	101, -1000, 2011, 72862, 15812, -1000, -1000, -1000, -1000, -1000,
	928, -1000, -1000, 1842, 2121, 1842, 1682, 1680, -1000, 2000,
	-1000, -1000, -1000, -1000, 2367, 2958, 19141, 3068, 10808, 38085,
	38085, 387, 4570, 967, 10808, 38085, 38085, 55096, 4627, -119,
	38085, 38085, -1000, 38085, 722, 98572, 3262, 38085, 320, 318,
	-1000, -1000, -1000, 3239, -1000, -1000, -1000, 98572, 38085, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 317, -1000, 143, -1000,
	-1000, -1000, 93727, -1000, 38085, 316, 3032, -1000, 314, 312,
	9400, 354, 95390, 95347, 94857, 311, -1000, -1000, 308, 306,
	98572, 2602, 98572, -1000, -1000, 1004, 1004, 1302, 1302, 1302,
	1302, 3224, 1029, 999, 875, 922, 922, 922, 285, 881,
	881, 922, 922, 922, 2564, 2280, 531, 6022, -1000, -1000,
	98572, 98572, 305, -1000, -1000, -1000, -110, 300, 4960, -1000,
	2505, 3029, 98572, -1000, 44806, 2505, 2505, -1000, -1000, 1997,
	88195, 98572, 44806, -1000, 2484, -1000, 14382, -1000, 19141, -1000,
	-1000, -1000, -1000, 3238, -1000, 48594, -1000, 530, -1000, 102,
	-1000, -1000, 721, 3284, 735, 19141, 299, -1000, -1000, -1000,
	-22, 98572, 88195, 88195, 88195, 2724, -1000, 3835, -1000, 1024,
	94814, -122, -1000, 97073, 38085, 88195, -1000, -1000, 1808, 2326,
	1071, -1000, 3005, 88195, -1000, 88195, -1000, -1000, 88195, 88195,
	72862, 88195, 2709, -128, 98572, -24, -1000, 827, -1000, 1247,
	-1000, 15337, 88195, 72862, 88195, 72862, 2708, -129, 19141, -1000,
	3260, 3259, 2723, 3011, 3258, 88195, -1000, 88195, 72862, 2909,
	-1000, -1000, -25, 529, -1000, 815, -1000, -1000, 813, 926,
	-1000, 59832, 46704, -1000, 470, -1000, 2415, -1000, 76095, 2019,
	101, -1000, 77492, 3283, 526, -1000, 2007, -1000, 718, 1867,
	101, 72862, -1000, 296, -26, -1000, 1019, 19141, 72862, 2722,
	2282, 798, 60762, -1000, 1273, 2348, -1000, -27, -1000, 511,
	101, 1961, -1000, -31, 98572, -1000, 810, -1000, -1000, -145,
	-1000, -1000, 294, -1000, 2905, 2904, -1000, 2523, 38085, 522,
	521, 88195, 2901, -1000, -1000, -151, 890, -1000, 2035, -1000,
	-1000, -1000, -1000, -1000, 19141, 1589, -1000, 520, 519, -1000,
	-1000, -1000, -1000, 2958, 10808, 10808, 38085, 38085, 38085, 10808,
	4627, -156, -1000, 10808, 10808, -110, -1000, -1000, 97648, -1000,
	-1000, -1000, 98572, -1000, 14862, 1851, -1000, 94771, -1000, 25594,
	-1000, -1000, 38085, 38085, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 41031, 2563, 517, 55096, -1000, -1000, 293, 923,
	38085, 38085, 2809, 923, 923, -1000, -157, -1000, -1000, -1000,
	3238, 102, -1000, -1000, 3282, 19141, 729, -1000, 3281, -1000,
	-1000, -1000, -1000, -1000, 88195, -1000, 88195, -1000, 19141, 88195,
	2513, 2139, -1000, -1000, 2312, 510, 41031, 72862, 783, -1000,
	3196, 2532, 1727, 38085, 2125, -159, -162, 2138, -1000, -1000,
	2136, 38085, -1000, 55096, 506, 2005, 2005, -164, -165, -1000,
	-1000, 38085, 1123, 88195, 26085, -1000, 3280, 2953, -1000, -1000,
	-1000, -1000, 38085, 1119, -1000, -1000, -1000, 3255, 2005, 19141,
	-1000, 2005, 2005, 3011, 1070, 2205, 2205, 59832, 46704, -1000,
	-39, 926, 3138, 1840, 2468, -1000, -1000, -1000, -1000, 2308,
	-1000, -1000, 88195, 2304, 909, -167, -1000, 808, 805, -1000,
	61684, 889, 902, -1000, -1000, -1000, 470, -1000, 3251, 505,
	88195, 2077, 504, 19141, -1000, 798, 60762, -1000, 2864, 1698,
	-1000, 2859, 88195, 2943, -1000, 2348, 499, -1000, 890, 496,
	494, 2286, 2286, -170, 38085, 38085, -173, 491, 890, -1000,
	-69, -1000, 765, 668, -1000, -1000, 72862, 72862, 38085, 38085,
	-1000, 10808, 10808, 10808, -1000, 291, -1000, -1000, 1961, 3028,
	-1000, -77, 94281, 94238, 6650, 41031, 55096, -175, -1000, -1000,
	88195, 98572, -110, -1000, -1000, -1000, 717, -1000, 3278, -1000,
	-1000, 1765, -1000, -1000, -1000, 88195, 2154, -1000, 1022, 38085,
	6022, 490, 38085, -1000, 3134, -1000, 2413, 2568, 2415, 489,
	-1000, -1000, -1000, -1000, -1000, 1017, 1730, -1000, -1000, 98572,
	3011, 38085, -1000, -1000, 488, 486, 98572, 485, 796, 2557,
	-1000, -1000, -1000, 98572, 482, 3098, -1000, -1000, -1000, -1000,
	2005, 72862, -1000, -178, -1000, -1000, 1734, 101, 889, -1000,
	1889, 2019, 475, -1000, -1000, 2030, 2387, -1000, 77492, 42456,
	42456, 290, 3128, 902, -1000, 3225, -1000, 3118, -1000, 38085,
	-1000, 72862, 38085, 2075, 60762, -1000, 2273, -1000, 1237, -181,
	88195, 1698, -1000, -1000, 59832, 59832, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1017, -187, -188,
	-1000, 59832, -1000, 2035, -1000, 88195, -1000, 88195, -1000, -1000,
	-189, -190, -1000, 1829, 38085, 25594, -1000, -1000, 6650, -195,
	-1000, -91, -1000, 3112, -1000, -1000, -1000, -1000, 2720, 2500,
	94195, 2178, 88195, 8337, -1000, 2566, -1000, -1000, 1840, 88195,
	2415, 2498, 72862, 1021, -196, 1842, 1842, 38085, 25103, 1880,
	38085, -1000, -1000, 3011, -1000, 2531, 2526, -1000, 2030, 72862,
	88195, -1000, 2994, -1000, 2900, -1000, -1000, -1000, 2415, 101,
	-1000, -1000, 101, -197, 1019, -198, 72862, -1000, 2282, 1447,
	-1000, 937, -1000, -1000, -204, -205, 1727, 1017, 937, -213,
	-1000, -218, -219, -1000, -1000, 287, 39067, 39067, 39067, -110,
	-125, -1000, 88195, 474, 2700, 925, -1000, 2049, 1788, 268,
	1014, -1000, -1000, 2532, -220, -1000, 913, 470, -1000, 38085,
	1017, -221, -1000, 991, -227, -1000, 984, -228, -1000, 2547,
	-1000, -230, 2005, 910, 3057, -1000, -1000, -1000, -1000, -1000,
	469, -235, -1000, -1000, 2256, -1000, 1840, 909, -1000, 1017,
	468, 1727, 467, -1000, 51847, -1000, 890, 890, 2415, 1727,
	-1000, 890, -1000, -1000, -1000, 2857, -1000, 41981, 1985, 1673,
	96585, 2857, 2857, -1000, -1000, 88195, 3049, -1000, 2063, 2060,
	1387, -1000, -1000, -1000, -1000, -1000, -1000, 937, -1000, 3048,
	2178, 98572, 2415, -1000, 1842, 2467, -1000, 1842, 2538, -1000,
	1868, -1000, -1000, -1000, 2715, 3223, 88195, -1000, 88195, 1655,
	1646, 3275, 889, 2030, 1727, 38085, 2415, 38085, -229, -1000,
	-1000, 1840, 2415, -1000, -1000, 1687, 3185, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 790, -1000, 2877, -1000, 1038,
	2018, 2018, -1000, 787, 2049, -1000, -1000, 466, -1000, 464,
	-1000, 1633, -1000, -1000, -237, -1000, -1000, 3272, -1000, 2030,
	-1000, 2415, -238, 1840, -244, -1000, 937, 1840, 1669, -1000,
	-1000, 1946, 38576, 38085, -1000, 3210, -1000, -1000, 2310, -1000,
	38085, 2532, 38085, 38085, 1987, 2004, -1000, -1000, 1840, 1017,
	937, 1727, -1000, 937, -1000, -1000, -1000, 98572, -1000, -1000,
	-1000, 98572, -1000, -245, -246, 50460, -1000, -1000, -1000, 937,
	1727, -1000, 2415, -1000, 1840, 1116, -147, 77027, -1000, 2415,
	1840, -1000, 449, -253, 1840, 937, 38085, -1000, 937, -1000,
	-256, -1000, 1840, -1000,
}
var sqlPgo = [...]int{

	0, 4038, 4037, 4035, 4034, 4032, 4029, 4028, 4027, 4026,
	4025, 4024, 4023, 4022, 4020, 4018, 4008, 4002, 4000, 3994,
	3992, 3988, 3987, 3984, 3982, 3976, 3973, 3970, 3969, 3965,
	3964, 3962, 3954, 3953, 3952, 3950, 3949, 3946, 3945, 3941,
	3939, 3936, 3935, 3932, 3931, 3926, 3925, 3924, 3923, 3922,
	3920, 3919, 35, 3918, 3916, 3915, 3914, 3913, 3908, 3907,
	3902, 3899, 3894, 3893, 3884, 3881, 3876, 3874, 3873, 3868,
	3867, 40, 3866, 231, 3862, 3861, 3860, 3858, 3857, 3856,
	3855, 3854, 3852, 3851, 3850, 3849, 230, 3848, 111, 3847,
	3845, 3843, 3840, 3839, 228, 3838, 3836, 3834, 3833, 238,
	3832, 3830, 3826, 3825, 3824, 3823, 3822, 3821, 3818, 63,
	126, 3817, 202, 3808, 3806, 3805, 3803, 3802, 3798, 3797,
	3792, 3791, 3790, 199, 3789, 226, 3788, 3787, 3786, 3783,
	3780, 3777, 3776, 3775, 3774, 3772, 3771, 3770, 3768, 3767,
	3764, 3763, 3762, 3760, 3757, 3756, 3754, 3752, 3751, 3749,
	3748, 3747, 3746, 3745, 3744, 3739, 233, 146, 3738, 3737,
	224, 223, 3736, 3735, 3734, 3733, 3732, 98, 6, 72,
	3731, 3730, 74, 64, 60, 134, 46, 3729, 14, 152,
	215, 7563, 194, 3728, 3727, 3726, 216, 155, 3725, 198,
	3724, 3723, 3720, 3719, 77, 59, 145, 142, 138, 135,
	327, 3716, 3713, 81, 57, 37, 33, 3711, 3709, 3708,
	2864, 119, 3707, 222, 195, 125, 3706, 3700, 3698, 1303,
	3697, 41, 3696, 193, 78, 115, 44, 105, 3694, 124,
	27, 3690, 153, 48, 3686, 122, 82, 69, 6964, 6804,
	3685, 93, 51, 87, 617, 161, 143, 157, 89, 164,
	177, 167, 129, 947, 3684, 219, 3681, 3119, 54, 120,
	3679, 3677, 3675, 58, 156, 83, 3673, 3669, 53, 7,
	16, 1, 132, 15, 94, 11, 3667, 17, 3662, 3661,
	3660, 3655, 39, 133, 3653, 234, 3651, 50, 31, 8,
	3648, 24, 180, 3647, 185, 100, 3645, 3644, 213, 172,
	176, 3631, 75, 188, 3628, 3624, 3623, 3622, 3620, 106,
	28, 97, 3619, 3618, 110, 214, 162, 3612, 42, 3611,
	141, 79, 102, 227, 103, 182, 86, 186, 150, 189,
	3609, 3608, 3600, 165, 3595, 3594, 181, 140, 3592, 3590,
	171, 239, 36, 55, 192, 56, 154, 136, 3589, 159,
	3588, 3587, 3586, 237, 148, 179, 3, 2, 71, 121,
	26, 13, 191, 114, 207, 88, 3582, 4085, 1693, 66,
	38, 3581, 130, 90, 47, 99, 118, 221, 61, 3572,
	3570, 380, 3566, 3562, 3558, 3556, 147, 3554, 3552, 3551,
	109, 112, 169, 3550, 76, 67, 10, 96, 281, 225,
	91, 184, 170, 210, 3549, 149, 3548, 49, 108, 3547,
	175, 206, 3541, 3540, 144, 3538, 123, 735, 43, 160,
	3535, 183, 3533, 3530, 3529, 3528, 3527, 3526, 3525, 653,
	190, 3523, 3520, 3518, 139, 158, 3516, 220, 245, 163,
	80, 30, 3513, 70, 3176, 3512, 178, 209, 52, 3510,
	3929, 34, 0, 9659, 8507, 5999, 9237, 3508, 3054, 3503,
	3497, 3495, 166, 104, 3494, 3493, 3491, 84, 3490, 65,
	3488, 3487, 45, 3486, 20, 5, 9, 21, 18, 1296,
	113, 3485, 3484, 85, 101, 116, 3480, 236, 187, 3479,
	3478, 3477, 3474, 95, 3472, 29, 3471, 25, 3469, 3467,
	32, 12, 22, 3465, 3458, 203, 3457, 197, 3454, 131,
	3453, 3105, 107, 3452, 3451, 218, 73, 3447, 217, 3446,
	3052, 3431, 3430, 19, 3429, 3428, 205, 137, 174, 3427,
	128, 3426, 127, 3423, 3422, 3421, 212, 3420, 3418, 23,
	3415, 4, 3413, 3405, 168, 2863, 3404, 3402, 62, 3400,
	151,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 8, 8, 8,
	8, 39, 39, 9, 9, 9, 10, 10, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 16, 16, 28,
	28, 17, 17, 30, 30, 18, 18, 31, 31, 515,
	515, 21, 33, 22, 34, 15, 516, 516, 516, 516,
	27, 23, 35, 25, 25, 25, 25, 25, 170, 170,
	170, 170, 20, 20, 29, 29, 197, 197, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	514, 514, 199, 199, 198, 193, 193, 517, 517, 200,
	200, 200, 202, 202, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 418, 418, 418, 530, 530, 530, 531,
	531, 532, 532, 532, 532, 532, 41, 41, 41, 41,
	509, 509, 172, 172, 172, 174, 174, 173, 173, 173,
	173, 62, 62, 522, 522, 523, 523, 521, 521, 524,
	524, 524, 171, 171, 171, 108, 108, 108, 108, 109,
	109, 110, 110, 175, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 90, 90, 450, 450, 451, 451, 166,
	166, 167, 167, 167, 167, 168, 168, 169, 169, 169,
	55, 43, 43, 43, 43, 43, 43, 43, 44, 44,
	44, 44, 44, 45, 45, 45, 45, 45, 45, 46,
	46, 46, 46, 46, 46, 53, 53, 53, 53, 157,
	157, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	534, 534, 535, 535, 536, 536, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 68, 68, 284, 284, 256, 256, 69, 69,
	69, 70, 70, 71, 71, 57, 57, 507, 507, 299,
	299, 409, 409, 73, 73, 319, 319, 74, 74, 74,
	74, 74, 74, 75, 75, 75, 75, 75, 75, 75,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 83, 83, 83, 84, 84, 84,
	81, 81, 81, 78, 78, 78, 77, 77, 77, 82,
	82, 82, 247, 247, 80, 80, 80, 249, 249, 79,
	79, 79, 300, 300, 85, 85, 85, 85, 257, 86,
	86, 86, 86, 86, 86, 86, 86, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	411, 411, 87, 87, 87, 379, 379, 91, 91, 91,
	334, 334, 92, 92, 92, 92, 92, 93, 93, 93,
	93, 111, 111, 111, 111, 511, 511, 292, 292, 213,
	213, 213, 213, 101, 101, 101, 101, 102, 102, 102,
	103, 103, 162, 162, 117, 117, 117, 117, 117, 116,
	116, 116, 116, 116, 116, 47, 47, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 52, 52,
	52, 119, 119, 527, 527, 121, 118, 118, 118, 120,
	120, 120, 120, 122, 123, 123, 123, 123, 123, 123,
	123, 123, 124, 124, 443, 443, 308, 308, 441, 441,
	459, 459, 442, 442, 261, 261, 261, 261, 261, 262,
	262, 262, 449, 449, 449, 449, 449, 449, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 163, 163, 164, 165,
	165, 165, 165, 144, 144, 144, 156, 156, 156, 156,
	156, 156, 156, 147, 147, 147, 134, 134, 126, 126,
	126, 126, 126, 130, 130, 130, 130, 130, 130, 130,
	130, 127, 127, 136, 136, 136, 136, 136, 131, 131,
	133, 133, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 128, 128, 128, 128, 138, 138, 138, 138, 341,
	341, 341, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 155, 155, 155, 155, 155, 155, 525,
	525, 526, 526, 151, 151, 151, 151, 151, 151, 393,
	393, 145, 145, 145, 145, 150, 150, 150, 150, 324,
	324, 142, 142, 142, 143, 143, 143, 148, 148, 149,
	146, 146, 152, 152, 152, 152, 129, 129, 129, 538,
	538, 538, 153, 153, 141, 141, 154, 154, 154, 154,
	154, 154, 154, 154, 140, 140, 140, 139, 139, 139,
	139, 132, 508, 508, 505, 505, 505, 505, 505, 505,
	505, 505, 506, 506, 510, 510, 96, 96, 96, 96,
	96, 104, 104, 104, 104, 104, 97, 97, 97, 97,
	97, 99, 99, 98, 98, 98, 98, 63, 63, 63,
	14, 14, 14, 64, 64, 178, 178, 178, 178, 269,
	269, 269, 269, 176, 176, 177, 177, 65, 65, 539,
	539, 539, 518, 518, 518, 519, 519, 519, 519, 519,
	519, 263, 263, 264, 264, 359, 359, 359, 359, 359,
	267, 267, 267, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 270, 270, 201, 201, 201, 273, 274, 274,
	271, 271, 272, 272, 272, 276, 276, 275, 278, 278,
	277, 358, 468, 468, 470, 470, 470, 470, 470, 470,
	470, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 540, 540, 466, 466, 466, 467, 462, 462,
	463, 463, 463, 463, 463, 265, 265, 266, 266, 266,
	266, 464, 465, 290, 290, 396, 469, 469, 471, 471,
	473, 541, 541, 541, 541, 541, 541, 542, 542, 542,
	357, 357, 356, 356, 282, 282, 474, 474, 474, 474,
	475, 475, 475, 475, 475, 478, 477, 476, 476, 476,
	476, 476, 67, 67, 67, 321, 321, 320, 320, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 159, 159, 216, 216, 61, 61,
	61, 12, 12, 12, 520, 520, 520, 66, 66, 66,
	66, 215, 215, 215, 215, 215, 215, 513, 513, 512,
	512, 217, 217, 544, 544, 72, 72, 72, 72, 72,
	72, 72, 412, 412, 413, 413, 60, 60, 60, 60,
	60, 342, 342, 340, 340, 339, 339, 289, 289, 395,
	221, 221, 194, 194, 194, 26, 19, 19, 24, 24,
	37, 37, 40, 40, 36, 36, 38, 38, 32, 32,
	528, 528, 529, 529, 100, 100, 105, 105, 105, 105,
	105, 106, 106, 106, 106, 107, 107, 107, 107, 115,
	115, 158, 158, 158, 158, 158, 158, 158, 42, 42,
	42, 42, 54, 54, 54, 54, 113, 546, 546, 546,
	114, 114, 114, 545, 545, 214, 214, 353, 353, 354,
	354, 547, 547, 355, 355, 355, 355, 208, 207, 209,
	209, 59, 59, 59, 203, 203, 204, 204, 205, 205,
	206, 206, 548, 548, 94, 94, 94, 161, 161, 255,
	255, 255, 349, 349, 349, 283, 283, 227, 227, 352,
	352, 350, 350, 350, 350, 318, 318, 318, 160, 160,
	297, 297, 310, 310, 311, 311, 406, 406, 312, 112,
	112, 181, 181, 179, 179, 179, 179, 179, 179, 179,
	179, 186, 186, 187, 187, 188, 188, 189, 190, 190,
	190, 190, 301, 301, 191, 191, 191, 180, 180, 180,
	182, 182, 182, 182, 182, 182, 182, 185, 185, 185,
	185, 192, 192, 192, 184, 184, 485, 485, 485, 487,
	487, 489, 489, 488, 488, 484, 484, 486, 486, 543,
	543, 323, 323, 323, 280, 281, 279, 279, 287, 287,
	285, 286, 286, 288, 288, 394, 394, 394, 195, 195,
	195, 315, 315, 315, 315, 316, 316, 345, 345, 343,
	343, 343, 343, 344, 344, 346, 346, 346, 347, 347,
	348, 348, 314, 314, 375, 375, 183, 183, 183, 294,
	294, 294, 295, 295, 365, 365, 365, 365, 365, 365,
	366, 366, 364, 364, 364, 364, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 398, 399, 399, 296, 296,
	400, 351, 351, 503, 503, 503, 504, 504, 392, 392,
	401, 401, 401, 401, 401, 401, 390, 390, 391, 391,
	407, 408, 408, 327, 327, 327, 327, 325, 325, 328,
	328, 328, 328, 326, 326, 402, 402, 402, 402, 317,
	317, 403, 403, 403, 403, 404, 360, 361, 361, 414,
	414, 414, 414, 416, 293, 293, 293, 293, 293, 461,
	460, 460, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 430, 430, 430, 430, 430, 430, 430, 430, 431,
	431, 431, 431, 431, 431, 417, 417, 417, 417, 417,
	421, 421, 421, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 422, 422, 427, 427, 428, 428,
	428, 423, 424, 429, 429, 429, 429, 549, 549, 433,
	433, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	419, 419, 419, 426, 426, 426, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 335,
	335, 337, 337, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	369, 369, 369, 369, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 479,
	479, 479, 479, 479, 479, 479, 479, 371, 371, 482,
	482, 483, 483, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 490, 490, 491, 491, 493, 493, 494, 494,
	495, 496, 496, 496, 497, 498, 498, 492, 492, 499,
	499, 499, 499, 500, 500, 501, 501, 501, 501, 501,
	502, 502, 502, 502, 502, 381, 381, 382, 382, 388,
	388, 388, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 218, 218,
	218, 218, 218, 306, 306, 304, 304, 304, 307, 307,
	305, 305, 303, 303, 302, 302, 378, 378, 376, 376,
	380, 380, 329, 329, 432, 432, 432, 432, 432, 432,
	432, 432, 330, 330, 330, 338, 331, 331, 332, 332,
	332, 332, 332, 372, 373, 333, 333, 333, 374, 374,
	383, 387, 387, 386, 385, 385, 384, 384, 362, 362,
	363, 363, 313, 313, 550, 550, 309, 309, 405, 405,
	405, 405, 259, 259, 298, 298, 258, 258, 250, 250,
	251, 251, 251, 251, 291, 291, 389, 389, 434, 434,
	435, 435, 436, 436, 437, 437, 438, 439, 440, 377,
	377, 237, 236, 224, 225, 235, 234, 233, 223, 226,
	230, 231, 232, 228, 229, 243, 242, 241, 248, 239,
	240, 410, 222, 252, 252, 253, 253, 253, 254, 254,
	254, 254, 219, 219, 220, 220, 244, 244, 245, 246,
	246, 238, 238, 238, 210, 210, 210, 211, 211, 212,
	212, 448, 448, 445, 445, 445, 446, 446, 446, 447,
	447, 447, 447, 444, 444, 444, 444, 444, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 453, 453, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 455, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 458, 458,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 3, 1, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 12, 3, 1, 0, 1, 1, 2, 2, 3,
	3, 0, 5, 7, 0, 5, 6, 8, 2, 1,
	3, 1, 3, 1, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	6, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 6, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 3, 4, 6, 3, 1, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	2, 6, 4, 7, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 3, 2, 4, 3, 3, 5, 3, 4,
	3, 5, 3, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 4, 3, 1,
	1, 1, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 3, 4, 10, 10, 3, 5, 5, 5,
	3, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 3,
	6, 6, 3, 11, 14, 0, 2, 4, 3, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 1, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 9, 9, 3, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 1, 2, 8, 4, 2, 5, 5,
	5, 2, 1, 3, 10, 11, 7, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 6, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 2, 2, 4, 7,
	3, 4, 6, 3, 1, 1, 1, 8, 10, 11,
	5, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 16, 19, 15, 18,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 3,
	2, 0, 1, 1, 0, 6, 6, 8, 6, 8,
	6, 8, 6, 8, 6, 8, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 2, 3, 2,
	2, 8, 11, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 8,
	5, 3, 4, 3, 0, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 2, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 505, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -115, -100, -117, -158, -163, -164,
	-165, -3, -41, -43, -56, -73, -75, -86, -95, -94,
	-96, -101, -108, -104, -90, -47, -112, -116, -125, -159,
	-160, -161, 31, 30, 90, 74, 137, 114, 121, 175,
	323, 358, 369, 350, -120, -121, 386, -42, -54, -114,
	-113, 67, 115, 345, -4, -12, 28, 44, -44, -45,
	-46, 57, -61, -58, -68, -62, -533, 92, -486, -76,
	-79, -107, -537, 126, 144, 193, -97, -98, 312, -102,
	-103, 352, -105, -106, 354, 145, -49, -48, 139, -179,
	-181, -118, -119, -162, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -155, -138, -139, -140,
	-141, -146, -142, -143, -144, -145, -147, -148, -150, -151,
	-152, -153, -154, 390, -149, 440, 46, 400, 76, 130,
	362, 21, -5, -6, -7, -8, -9, -10, -11, -14,
	-13, -57, -59, -60, -63, -64, -65, -72, -66, -67,
	-485, -77, -78, -81, -83, -84, -80, -82, 351, -182,
	-180, 502, 454, -16, -21, -22, -17, -18, -20, -23,
	-19, -24, -28, -33, -34, -30, -31, -29, -32, -35,
	-36, -37, -38, -39, -40, -26, -27, -15, -25, 472,
	480, -185, -183, -184, -192, 378, 462, 416, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, -257, 2, -239,
	-244, -245, -246, -238, -210, -455, -458, 4, -452, -456,
	150, 202, 277, 21, 22, 23, 24, 25, 26, 28,
	29, 40, 41, 43, 42, 44, 45, 46, 51, 54,
	55, 56, 57, 58, 62, 67, 68, 73, 74, 75,
	76, 77, 78, 79, 85, 82, 83, 84, 87, 89,
	90, 91, 93, 95, 96, 104, 105, 106, 107, 109,
	114, 115, 118, 113, 117, 120, 121, 124, 125, 126,
	128, 129, 131, 132, 134, 135, 137, 138, 139, 142,
	140, 423, 141, 143, 144, 145, 146, 156, 157, 158,
	163, 165, 169, 170, 173, 174, 176, 180, 182, 183,
	184, 185, 186, 192, 193, 195, 196, 197, 198, 203,
	204, 208, 205, 214, 218, 219, 220, 222, 226, 227,
	228, 229, 230, 231, 233, 235, 234, 237, 240, 241,
	244, 245, 246, 249, 250, 251, 252, 254, 255, 258,
	256, 259, 257, 261, 262, 263, 260, 266, 264, 268,
	269, 270, 275, 273, 271, 272, 279, 282, 190, 284,
	285, 288, 306, 292, 293, 294, 297, 298, 301, 304,
	305, 307, 308, 309, 310, 311, 312, 313, 314, 316,
	317, 321, 323, 324, 326, 328, 329, 330, 331, 332,
	333, 334, 337, 336, 338, 345, 350, 347, 348, 349,
	351, 352, 353, 354, 356, 357, 358, 360, 361, 362,
	363, 365, 367, 368, 371, 372, 387, 388, 402, 369,
	370, 373, 374, 375, 376, 377, 381, 379, 380, 382,
	383, 384, 386, 389, 390, 392, 393, 396, 398, 399,
	400, 401, 403, 406, 407, 408, 409, 404, 415, 412,
	413, 417, 418, 419, 420, 421, 422, 424, 426, 434,
	435, 437, 440, 441, 442, 432, 444, 445, 448, 449,
	450, 453, 451, 452, 454, 456, 459, 460, 461, 467,
	466, 473, 474, 476, 477, 478, 35, 47, 48, 50,
	52, 63, 64, 65, 69, 110, 111, 136, 147, 148,
	159, 171, 172, 177, 179, 187, 188, 189, 209, 210,
	212, 216, 238, 281, 283, 299, 303, 318, 319, 320,
	322, 335, 364, 394, 405, 410, 427, 428, 429, 430,
	436, 438, 462, 463, 464, 468, 475, -257, 2, -239,
	290, -232, 2, -210, -210, 323, 27, 2, 27, 317,
	380, 418, 420, 2, -511, -292, 2, 27, -213, -210,
	92, 175, 378, -232, 2, -511, -292, 24, 2, -210,
	2, -214, 2, 369, -210, 505, 87, 246, 68, 364,
	383, -123, 435, -122, 427, 373, -124, -443, 2, 266,
	-210, 505, 505, 505, 27, -222, -210, 416, 202, 106,
	413, 505, 2, 416, 309, 466, 379, 106, 332, 202,
	442, 373, -520, 360, 178, 455, -509, 2, -505, 4,
	-456, -452, -251, -250, 416, 421, 106, -246, -238, 495,
	-245, 505, 505, 505, 2, 219, 220, 331, 330, 383,
	384, 505, 505, 505, 371, 2, 26, 60, 86, 89,
	112, 146, 166, 169, 295, -534, 255, 306, 329, 382,
	415, 424, 437, -519, 401, 62, 373, -518, -520, 442,
	124, -339, 106, 246, 174, 449, 420, 418, 447, 118,
	208, 452, 451, 505, 505, 26, 60, 71, 89, 124,
	146, 166, 169, -536, 306, 329, 367, 382, 415, 424,
	437, 2, 466, 379, 416, 202, 106, 442, 373, -520,
	371, 372, 327, -88, 2, 502, 31, 30, 386, -175,
	416, 213, 2, -210, 505, 505, 2, 219, 220, 371,
	372, 505, 505, 167, -505, 2, 505, 505, 2, 219,
	220, 371, 372, 213, 2, 62, 375, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 2, -156, 383, 401,
	184, 44, 68, 27, 328, 73, 310, 107, 176, 202,
	203, 227, 86, 87, -341, 43, 220, 219, 372, -525,
	371, -393, 417, 374, 380, 412, 231, 369, 435, 92,
	456, 361, 478, 332, 333, 140, 4, 106, 266, 385,
	427, 246, 368, 313, 78, 505, -543, 2, 416, -545,
	2, 435, 435, 2, -545, 2, -545, 2, -545, 2,
	-546, 435, 475, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	-180, -182, -181, 505, 505, 505, 505, 505, 505, 505,
	-156, 383, 2, 68, 27, -285, -287, 446, 211, 133,
	296, -179, -181, 2, -485, -441, 2, -367, -459, -369,
	493, 494, 486, 414, 61, 276, 479, -381, 112, 447,
	290, -458, -370, -383, 136, 364, -307, 8, 9, 5,
	6, 7, -219, -371, -377, 439, 149, 280, -254, 506,
	10, 502, -482, -181, -382, 36, 179, 59, -445, -253,
	-220, -417, 212, -252, -238, -479, -480, 4, -452, -453,
	-446, -420, -428, -424, -425, -431, -210, -455, 71, 98,
	99, 97, 102, 101, 248, 247, 103, 100, 385, 455,
	60, 35, 187, 188, 216, 281, 189, 69, -481, 125,
	-454, 209, 210, 394, 48, 335, 159, 111, 110, 283,
	52, 50, 463, -429, 108, 427, 428, 429, 430, 171,
	172, 147, 148, 303, 320, 410, 436, 438, 177, 238,
	94, 168, 207, 191, 215, 217, 221, 239, 242, 267,
	274, 278, 300, 302, 359, 391, -549, 464, 405, 63,
	64, -487, 336, -488, -232, -487, 505, 505, 507, 505,
	-279, -280, -281, 2, 27, 122, 502, 2, -397, 2,
	-398, -402, -181, 232, -401, 502, -399, 500, -239, 291,
	-483, 365, -479, -480, -219, -238, -253, 4, -452, -454,
	504, -282, 502, 106, 416, 72, 202, -334, 502, -210,
	27, 290, 431, 507, -379, 502, 290, 167, 293, -210,
	2, 2, 387, 2, 502, -123, 65, 435, 42, 383,
	-354, 2, -355, -207, -208, -209, -407, 218, 326, 334,
	481, 478, -441, -527, 167, 485, 431, -441, -308, 504,
	2, 2, 2, 2, 2, -402, 187, -239, 2, -236,
	-444, 4, -452, -456, -453, -457, -455, 27, 30, 31,
	32, 34, 36, 37, 38, 39, 53, 59, 60, 66,
	70, 72, 81, 86, 92, 97, 98, 100, 99, 101,
	102, 103, 112, 116, 119, 122, 123, 127, 130, 133,
	149, 151, 164, 166, 167, 175, 178, 181, 194, 206,
	211, 213, 232, 236, 243, 247, 248, 276, 280, 286,
	290, 291, 295, 296, 315, 325, 339, 355, 378, 385,
	397, 411, 416, 425, 431, 433, 439, 446, 447, 455,
	457, 465, 469, 470, 471, 472, -458, 71, 2, -402,
	187, 2, -241, 187, -402, -244, 2, -223, -210, 2,
	-235, -444, 2, -258, 187, -239, -240, -244, -242, 2,
	-244, -248, 2, -210, -450, 187, 2, -448, 10, -447,
	5, 4, -452, -456, -453, 213, 431, 507, -298, -250,
	-251, -440, 8, -291, -210, 504, -367, 2, -112, -99,
	2, 164, -367, 187, 2, -112, 187, 2, -367, 187,
	2, -112, 187, 2, -522, 2, -450, 2, 2, 437,
	2, 89, 187, -210, 416, 105, 2, 349, -535, 367,
	441, 466, 2, 2, 2, 2, 2, 2, 416, -228,
	2, -210, 164, -248, 187, 2, 379, -544, 336, -450,
	187, 2, -242, 2, -242, 202, 214, -223, 187, 2,
	420, 418, 420, 418, 167, 2, 213, 2, 213, 2,
	-403, 2, -404, -398, -239, 500, 2, 2, 2, 2,
	2, 187, -210, 416, 105, 2, 230, 2, 2, 2,
	2, 2, 2, 2, -300, 187, 2, -239, -300, 187,
	2, -300, 187, 2, -340, 2, 81, -223, 187, 2,
	-247, 187, 2, -242, -249, 187, 2, -248, -451, 187,
	2, -450, -367, 2, -112, 2, -411, 2, -410, -447,
	462, -88, 502, -88, 502, 383, 502, -450, -239, -239,
	-367, 2, -112, -99, 2, -367, 2, -112, 2, -110,
	-109, -450, 502, 167, -367, 2, -112, -99, 2, -367,
	2, -112, 2, -175, 164, 2, 106, 416, -156, 2,
	164, 457, 2, 8, 2, -450, 374, 333, 156, 2,
	387, 2, 388, 68, -341, 478, 68, 167, 2, 167,
	2, -324, 2, 472, -508, 2, 290, 167, 2, 167,
	2, 167, 2, 167, 2, 167, 2, 330, 384, 220,
	2, -112, 469, -99, -367, 469, 2, -526, 164, 372,
	-367, 2, 434, 229, 141, 167, -324, 2, 167, 2,
	167, 2, 5, 2, 331, 402, 2, 218, 326, 402,
	2, -239, -538, 2, 416, 466, 379, 2, 2, 82,
	83, 167, 2, 167, 2, 167, 478, 2, -317, -402,
	-353, -354, -353, 431, -285, -287, -156, 387, 2, -186,
	-315, -188, 164, -343, -344, -189, 243, 151, 286, -190,
	-323, 27, 122, -323, -323, 55, 503, 503, 11, 12,
	70, 40, 493, 494, 495, 496, 162, 497, 498, 491,
	492, 490, 483, 484, 488, 224, 225, 88, 487, 485,
	80, 253, 366, 152, 153, 154, 155, 346, 200, 33,
	201, 14, 15, 16, 32, 295, 242, 479, 191, 391,
	486, 17, 18, 19, 215, 217, 278, 47, 194, -218,
	-260, -367, -367, -367, -367, -367, -367, -367, 302, 502,
	-313, -362, 500, -181, 502, 502, 502, -440, -181, -367,
	-381, 503, -305, 502, -181, -381, -376, 502, 364, 500,
	502, -384, -367, 5, 5, 5, 502, 504, -490, 473,
	164, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 322, -422, 502, -421,
	502, -421, -421, 467, -419, 502, 480, 474, 502, -419,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 467, 507, -487, -282, 502, -309, -405,
	-367, 495, -309, -309, 290, -302, -367, 94, -327, 221,
	267, 168, 239, 359, 207, -364, 506, -364, -392, 480,
	-181, -399, -238, -181, -401, 502, -397, -392, -89, -440,
	-73, -86, -94, -112, -125, -160, -161, 495, -239, 502,
	167, 502, 504, -444, 167, -291, -223, -239, -252, -253,
	-258, 121, -302, -505, -291, -213, 37, -378, -414, -415,
	-461, 506, -460, -417, -427, -423, -426, 318, 319, -446,
	50, 463, -429, 212, 4, -452, -454, 209, 210, 394,
	48, 335, 159, 111, 110, 283, 52, 427, 428, 429,
	430, 171, 172, 464, 405, 63, 64, -505, -291, 164,
	-443, -302, 37, -354, 2, 112, -448, 42, -547, 507,
	241, -262, 252, 275, 183, 291, 476, 284, -449, 5,
	4, -377, -389, 112, 246, 212, -434, -436, 8, -435,
	9, -437, 493, 494, -442, -441, 96, 504, -444, -197,
	347, 386, -196, 23, 28, 126, 460, 142, -272, 204,
	309, 136, 398, 450, -515, -516, 370, 422, 423, 84,
	284, 386, 347, 136, -320, -322, 37, 104, 270, 304,
	56, 197, 257, 258, 400, 468, 136, 386, 347, -516,
	347, -516, -199, 398, 450, -515, -516, 370, 347, -198,
	-272, 136, 506, 23, 347, 386, 305, -531, -532, 126,
	28, 347, 305, -512, -484, 472, 136, -109, 233, -109,
	-298, 507, 507, -444, 495, 372, 371, 136, 136, 136,
	136, 164, 2, 2, 276, 2, 2, 2, 169, -518,
	-536, 2, 2, 2, -239, 187, -284, 290, -507, -299,
	416, -239, 276, -241, 187, 2, -244, 466, -512, 276,
	37, 502, 2, -340, 2, 202, -484, 276, -403, -255,
	-239, -398, -255, 386, -232, 37, -364, -364, 136, 2,
	2, 2, -210, -200, 507, 58, 353, 136, -200, 136,
	-200, 136, -259, 187, -258, -200, 136, -200, 507, 136,
	-200, 507, 136, 507, 136, 503, 507, -411, -411, -450,
	-169, 472, 167, 92, 502, 502, -175, -408, 507, -407,
	-451, -110, -450, -450, -507, -223, 2, -239, 2, 416,
	222, -169, -450, -450, -450, -443, 27, 388, 2, 330,
	384, 83, 388, 2, -239, 416, 106, 202, 74, -510,
	164, -506, 360, -505, -239, 106, -239, 106, -239, 106,
	-239, -239, 2, 2, 2, 2, 79, 79, 2, 44,
	-526, 164, 2, 434, 2, 434, 2, -210, -210, -210,
	401, 241, -239, 164, 416, 202, 416, 202, 106, 416,
	-200, 507, -214, -186, -315, -443, -316, -315, -187, -186,
	-189, 164, 334, 451, 270, 389, 226, -344, -343, 27,
	-367, -348, 158, 269, -367, -346, -369, 493, 494, -435,
	-437, -301, 284, -180, -180, -180, -288, -394, -367, 325,
	202, -416, -414, -414, -237, -444, 427, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, 242, 191, 391, 47, 194, -367, 431, -367,
	-367, -367, -367, 264, 276, 280, 439, 149, 448, 122,
	284, -550, 411, 39, -374, -181, -306, 502, -388, 34,
	397, 27, -381, 502, 2, -362, -367, -363, -303, -302,
	-302, 503, 465, 27, 122, 495, 2, 503, 507, 37,
	503, -367, -303, -380, -376, -302, -387, -386, 469, -335,
	-336, 477, 260, 109, 185, 259, -337, 377, -438, 8,
	-444, 495, -491, 157, 178, 502, 503, 2, 503, 2,
	503, -367, 2, 503, -367, 2, 503, -367, 2, 503,
	-367, 2, 503, 2, -367, -367, -367, -367, -367, -367,
	-367, -302, 8, -438, -438, 427, 427, -438, -438, -438,
	-430, 318, 244, 319, 173, 263, 261, 262, 172, -430,
	-329, 2, -432, -302, 4, 477, 260, 109, 185, 259,
	377, 5, -329, 2, -330, 2, -367, -302, -331, -368,
	-369, 493, 494, 486, -381, -332, 2, -367, -303, -367,
	53, 236, 433, -333, -367, 167, -302, -302, 2, -302,
	2, -488, 37, -302, -294, 507, 167, 37, 4, -294,
	-294, 502, 503, 507, -328, 182, 256, 251, -328, -397,
	-327, 221, -325, 300, -325, -325, -392, -224, 500, 508,
	-444, -392, -391, -390, 37, -232, 297, -392, -392, 504,
	503, -391, 501, -503, 502, 505, 505, 505, 505, 505,
	-239, 502, -302, -444, 504, 403, 503, 215, 215, 215,
	215, 365, 503, 431, 472, -88, 292, 503, 507, -293,
	36, 500, 504, -438, 2, 2, -433, 467, 502, 502,
	-336, 502, 167, -292, -527, 503, 435, -355, -261, 334,
	396, 348, 381, 413, 8, 9, 8, 9, 507, -444,
	507, -528, 86, 431, 72, 373, -358, 187, 72, -462,
	-226, 86, -463, -210, 66, 447, 325, 166, 134, -528,
	86, 325, -528, 86, 86, 386, 401, 55, -402, 40,
	40, 27, -112, 237, 167, 478, 416, 202, 373, 431,
	-402, -322, -414, 104, 257, 258, 55, -439, -434, 493,
	494, -439, 55, -439, -439, -439, 472, -241, -402, 373,
	431, 431, 507, 40, 40, 27, -112, 237, 167, 431,
	-258, -224, 461, 41, 461, 431, 41, 373, 431, 507,
	41, 41, 431, 431, -513, -215, 93, 271, 250, 272,
	-216, -217, 311, 459, -450, -408, 194, -408, -250, -210,
	504, -112, -367, -367, -112, -367, -112, 44, 136, 2,
	-544, 230, 502, -265, 276, 167, -291, -409, 213, 507,
	-299, 136, -321, -320, 276, -243, 187, 2, -239, 136,
	131, 502, 332, 2, -225, 187, -211, -210, -340, -203,
	419, 136, -319, 457, -349, -112, 502, 112, 37, -349,
	-310, -311, -406, -312, -226, 502, -232, -210, 2, -239,
	-300, -300, -300, -200, 507, 136, -223, -242, -247, -248,
	-249, -450, -451, -88, -410, 503, 503, 503, -168, 294,
	-167, -210, 5, -175, 457, -264, -359, -358, -466, -467,
	-462, 242, 202, 447, 214, 150, -283, -227, -226, 105,
	-169, -109, 503, -408, 194, -169, -169, -408, -408, -239,
	164, -169, -169, -169, 2, 2, -324, -239, -223, -258,
	-239, -291, -291, -324, -223, -324, -223, -324, -223, -112,
	-367, 2, 383, 164, 164, 504, -324, 332, 106, 416,
	309, 202, -239, -258, -239, -258, -223, -239, -402, -316,
	-187, 291, 226, 389, -346, -347, -369, 364, 365, -347,
	364, 365, 8, 9, 8, 9, -191, 393, 279, -300,
	507, -194, 38, 119, 226, -239, 478, 132, -367, -367,
	431, -550, 411, -374, 132, -367, 264, 280, 439, 149,
	448, 122, 284, 167, 502, -368, -368, 503, -304, -367,
	-367, 501, 510, 503, -287, 507, -285, -367, -302, -302,
	503, 504, -302, -291, 501, 501, 507, 503, -385, -386,
	127, -367, 431, 431, 431, 431, 502, 503, 504, -496,
	301, 502, 502, -367, 503, 503, 503, 503, 37, 507,
	507, 507, 503, 507, 507, 507, 503, 503, 503, 507,
	503, 478, 478, 503, 503, 503, 503, 507, 503, 507,
	503, 167, 503, 503, -338, 315, 503, 11, 12, 493,
	494, 495, 496, 162, 497, 498, 491, 492, 490, 483,
	484, 485, 80, 253, 366, 14, 15, 16, 215, 194,
	-368, -368, -368, 503, -372, -373, 167, 164, 37, -333,
	-333, -333, 503, 167, -302, 503, 503, 502, -489, 255,
	276, 503, -361, -360, 470, -405, -295, 2, -397, -234,
	-444, -361, -361, -302, -367, 221, 221, -326, 457, 290,
	-328, -397, -391, -440, -366, -365, 165, 38, 119, 273,
	190, -391, -232, -282, -391, -391, -444, -392, -392, -390,
	503, -504, -440, 503, -296, -400, -483, -287, 504, -444,
	-169, -157, 5, 280, -157, -157, -157, -291, 24, 316,
	-414, 500, 501, 8, -444, 502, -438, -438, -438, -291,
	167, -441, -354, 445, 77, 334, 427, -441, -196, 347,
	-226, -226, -239, -248, 276, -358, 187, -202, 276, -414,
	-233, -210, 502, 502, 226, 226, 457, -226, -233, 226,
	187, -226, 187, -233, -233, -514, 334, 285, -367, 245,
	332, 277, -197, 347, 386, -112, -112, -112, 502, -527,
	457, 121, -239, -258, -239, -248, -243, 386, 347, 274,
	-252, -439, -439, -320, 386, 347, -248, -241, -223, -198,
	-112, -112, -112, 502, -224, -199, 347, 5, 187, -226,
	5, -210, -226, -248, -530, -448, 103, 385, -532, 23,
	-226, 187, -226, -248, -530, -215, -450, 280, 453, -512,
	-172, 472, -109, -166, 198, 495, -509, -210, 466, -210,
	-263, -266, -264, -226, -178, 474, 472, 136, -256, -239,
	500, -169, -450, -239, -248, 136, -282, 276, -450, 502,
	2, 2, 290, 276, -225, 187, -204, 128, -548, 485,
	-223, -361, -295, -318, -352, 355, 290, -283, 462, -232,
	-318, -297, 507, 167, 485, 504, -283, 2, -200, -200,
	-200, -258, -259, -200, -200, -200, -88, -88, -169, 507,
	502, 485, 485, 502, -450, -450, 503, 507, -239, -225,
	202, 202, -231, -211, 503, 507, 504, 502, -169, -110,
	167, -50, 472, 416, 506, -324, -324, -324, 383, 383,
	-210, -235, -223, -239, -236, -258, 164, 164, 451, -347,
	291, 249, -394, -195, 282, -239, 506, -367, -367, 132,
	132, -367, -368, -368, -367, 132, 167, 502, -367, -378,
	32, 32, 503, 507, -363, -367, 503, 465, -287, -287,
	503, 495, -444, 506, 503, -376, 130, -367, 425, 260,
	185, 259, -337, 259, -337, -337, -438, 5, -444, 495,
	-497, -229, 502, -210, 470, -286, 296, 503, -416, -414,
	-367, -367, -367, -367, -367, -438, -419, -419, -434, -434,
	-367, -372, -367, -416, -414, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, 122, 276, 284, -368, -373, -372,
	-367, -367, -414, 503, 503, 503, -302, -88, 502, 255,
	-314, 178, -367, -408, 507, -314, -314, 503, -397, -397,
	502, -367, 221, 501, 507, 509, 485, -282, 504, -390,
	-391, 501, 503, 507, 503, 507, -351, 37, 503, -444,
	293, 5, 8, 500, 501, 504, -438, 503, 503, 503,
	-291, -367, 431, 431, 136, 276, 459, -468, -463, 134,
	-367, -289, -395, -367, 502, 502, 2, -193, 126, 386,
	-529, 2, 457, 136, -200, 136, -200, 476, 502, 502,
	431, 373, 472, -302, -367, -170, 112, -443, -516, 506,
	-516, 506, 373, 431, 373, 431, 472, -302, 431, -418,
	45, 25, 276, -242, 431, 431, -200, 136, 442, 386,
	-450, 280, -174, 294, -173, 129, 357, 120, 228, -408,
	-172, 167, 431, 2, -243, 2, 503, 503, 507, -469,
	37, 288, 502, 288, -239, -69, 472, -407, -440, -241,
	37, 136, -512, -412, -413, 5, -239, 136, 290, 276,
	-205, 235, -548, -448, -484, -287, -318, -309, 277, 85,
	503, -361, -311, -295, -367, 2, 503, -200, -167, -168,
	-450, -450, -450, -169, -175, -175, -359, -267, 502, -225,
	-211, 502, -175, -227, 2, -451, -408, -112, 294, -239,
	495, -324, -274, -273, 309, 284, -274, 364, 364, 291,
	158, 231, -194, -224, -367, -367, 132, 32, 32, -367,
	-367, -378, 503, -367, -367, -302, 501, 5, -367, 503,
	503, 8, -367, 503, 504, -498, -210, -367, 503, 55,
	503, 503, 507, 507, 503, 503, 503, 503, 503, 503,
	503, -373, 167, 122, 284, 502, 503, 503, -88, -375,
	181, 55, -397, -375, -375, -326, -291, -397, -365, -224,
	500, -444, -440, -400, 502, 504, 501, 2, 500, -444,
	503, -226, -226, -358, 136, -470, 86, -472, 70, 150,
	92, 276, 280, 447, 325, 66, 112, 339, -540, 37,
	482, 503, 503, 507, -194, -289, -291, 276, 408, 112,
	276, 112, 105, 442, 73, -226, -233, -291, -291, -239,
	-248, 143, 503, 507, 485, 2, 495, 495, -248, -243,
	-248, -241, 143, 503, -224, 5, 5, 136, -221, 70,
	5, -226, -226, -242, 105, 507, 502, 485, 485, -172,
	-451, -109, -282, -270, 205, -226, -467, -464, -465, 325,
	-471, -473, 150, 325, -112, -177, -176, -210, 5, 2,
	502, -265, 294, 501, -321, -112, -243, 503, 507, -342,
	457, -224, -239, 136, -206, 234, -548, -448, -203, -345,
	-343, -350, 502, 290, -112, -287, 485, 503, 503, 105,
	105, 196, 135, -289, 502, 502, -291, 105, 503, -169,
	-51, -52, 202, 86, 314, -236, 416, 202, 502, 502,
	-194, -367, -367, -367, 503, -287, -444, 495, -492, 309,
	503, -394, -367, -367, -368, 167, 502, -378, 503, -493,
	471, -367, -302, -493, -493, 503, -440, 2, 500, 2,
	-358, -233, -237, -230, -210, 150, 187, 280, 226, 502,
	-368, -239, 502, 2, 29, -541, 116, 206, -357, -542,
	91, 409, 195, -395, -195, 503, 503, 280, 280, -367,
	-414, 502, -200, -200, 503, 503, -367, 431, -443, 90,
	-441, 2, -516, -367, 431, 5, -200, -237, -200, -200,
	-221, 442, -173, -174, -450, -109, -172, 37, -271, -272,
	194, -469, 226, -230, 226, -539, 472, 503, 507, 485,
	485, -263, -178, -70, -71, 432, -407, -282, 5, 502,
	-210, 290, 502, -224, -548, -448, -204, -318, 123, -291,
	86, -345, -374, -169, 502, 502, -268, 75, 87, 113,
	186, 170, 203, 401, 406, 27, -268, 503, -289, -289,
	503, 502, -169, 507, 27, 502, 27, 502, -239, -258,
	-302, -302, 503, -287, 55, 507, 503, 503, -368, -378,
	503, -494, -495, -229, 501, 2, -472, -230, 276, 457,
	-367, -212, 502, -367, 37, 206, 117, 192, -270, 502,
	-356, 457, 339, -221, -289, 502, 502, 502, 485, 167,
	502, -418, -200, -242, 503, -521, 337, -112, -178, 307,
	502, -269, 290, 105, 270, -176, -370, -370, 503, 37,
	-71, 9, 37, -289, -239, -289, 290, -448, -205, 451,
	277, 503, -233, -318, -451, -451, -356, 503, 503, -451,
	-52, -291, -291, 503, 503, -499, 332, 365, 180, -302,
	-288, 503, 507, 37, 136, 182, 503, -474, 254, -210,
	503, 117, 192, -271, -291, -270, 182, -239, -517, 457,
	503, -276, -275, -273, -278, -277, -273, -302, -441, 90,
	307, -302, -221, -524, 168, 268, -523, 5, 10, -269,
	-239, -290, -396, -226, 76, 105, -270, -112, -112, 503,
	-342, 503, -239, -206, 386, -360, 503, 503, -357, -356,
	-361, 503, 503, 503, 503, -500, -501, 47, 444, 96,
	-367, -500, -500, -495, -497, 150, 472, -475, -478, -477,
	290, 392, 168, 308, 503, 408, 468, -541, 503, 472,
	-282, -367, -356, 503, 507, 462, 503, 507, 462, 503,
	167, 503, -200, -171, 472, 44, 502, 503, 507, 324,
	118, 126, -271, -539, -356, 502, -357, 502, -310, -169,
	-169, -270, -357, -169, -502, 134, -501, 321, 163, 364,
	321, 163, -502, -502, -230, 51, -477, 290, -478, 290,
	451, 118, -361, 51, -474, -270, -275, 194, -277, 167,
	307, 139, -523, 29, -291, -396, 365, 365, 2, -178,
	-269, -357, -289, -270, -289, -361, -271, -270, 96, 178,
	426, 270, 32, 485, -476, 270, 353, 58, 386, -476,
	485, -475, 502, 502, 371, 503, 2, -269, -270, 503,
	-271, 503, -361, -271, 364, 298, -501, -367, 22, 280,
	112, -367, -541, -302, -302, 294, -201, 58, 353, -271,
	-356, -361, -357, -361, 503, 503, -168, 502, -361, -357,
	-270, -271, 431, -168, -270, -271, 502, 503, -271, -361,
	-302, -361, 503, -271,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 447, 448, 450, 451, 452, 454, 455, 457, 459,
	461, 462, 463, 465, 466, 468, 469, 470, 471, 472,
	474, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 536, 0, 1121, 1123, 1125,
	1127, 0, 668, 0, 30, 31, 0, -2, 251, 253,
	255, 0, 281, 283, 284, 286, 288, -2, 0, 383,
	384, 386, 388, -2, -2, 0, 826, 828, 0, 523,
	525, 0, 831, 833, 0, 0, 545, 546, 0, 1209,
	-2, 539, 541, 543, 608, 610, 612, 614, 616, 618,
	620, 621, 623, 625, 627, 629, 631, 633, 635, 637,
	638, 640, 642, 644, 646, 648, 650, 652, 654, 656,
	658, 660, 662, -2, 664, -2, -2, 0, -2, -2,
	-2, 1139, 34, 36, 38, 40, 42, 44, 46, 48,
	50, 334, 335, 337, 339, 341, 343, 346, 348, 350,
	1267, 390, 392, 394, 396, 398, 400, 402, 0, -2,
	1279, 0, 0, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 78, 79, 80, 81, 82, 83, 84, 85,
	64, 65, 67, 68, 69, 73, 74, 76, 62, 0,
	0, 1240, 1242, 1244, 1246, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 449, 453, 456,
	458, 460, 464, 467, 473, 475, 477, 434, 435, 438,
	1899, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926,
	2291, 2372, 2373, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 436, 437, 985,
	0, 501, 499, 1892, 502, 2117, 504, 506, 377, 378,
	379, 380, 381, 382, 0, 516, 510, 515, 517, 519,
	520, 521, 522, 496, 494, 0, 516, 1951, 514, 1119,
	1120, 1104, 1105, 2154, 1146, 535, -2, -2, -2, 2257,
	-2, 567, -2, 574, 2261, 2156, 579, 0, 581, -2,
	584, 1122, 1124, 1126, 666, 667, 1902, 0, 0, 0,
	0, 32, 33, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1034, 1035, 1036, 0, 189, 191, -2,
	-2, -2, -2, 0, 0, 2190, 1992, 1860, 1918, 1863,
	1858, 252, 254, 256, 257, 0, 0, 0, 0, 0,
	0, 282, 285, 287, -2, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 880, 872, 873, 1075, 0,
	0, 0, 0, 385, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 314, 439, 440, 0, 1268, 1268, 0, 0,
	0, 0, 232, 223, 827, 829, 830, 0, 0, 0,
	0, 524, 526, 0, 0, 218, 832, 834, 835, 0,
	0, 0, 0, 0, 234, 0, 0, 540, 542, 544,
	609, 611, 613, 615, 617, 619, 622, 624, 626, 628,
	630, 632, 634, 636, 639, 641, 643, 645, 647, 649,
	651, 653, 655, 657, 659, 661, 663, 673, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 751, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 676, 678, 679, 680,
	0, 731, 749, 750, 759, 665, 0, 1025, 1269, 1148,
	1129, 1143, 1148, 1131, 1132, 1133, 1134, 1135, 1140, 1142,
	1136, 1137, 1138, 35, 37, 39, 41, 43, 45, 47,
	49, 51, 336, 338, 340, 342, 344, 347, 349, 351,
	-2, 1238, 1239, 391, 393, 395, 397, 399, 401, 403,
	527, 0, 529, 0, 677, -2, 0, 1273, 1273, 1273,
	0, 0, 1239, 1237, 0, 532, 533, 588, 589, 1503,
	0, 0, 0, 0, 0, 0, 0, 1757, 1589, 0,
	590, -2, 1620, 1622, 2232, 2257, 1756, 1624, 1625, 1626,
	1627, 1628, 0, 1630, 1631, 1632, 1633, 1634, 1635, 0,
	1637, 0, 1642, 1643, 1644, 0, 2239, 1837, 1912, -2,
	0, 0, 2245, 1908, 0, 1723, 1660, -2, -2, 1935,
	1914, 1435, 1436, 1437, 1438, 1439, -2, -2, 2274, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	0, 2221, 2240, 2241, 2246, 2248, 2242, 2229, 1685, 2003,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1462, 1471, -2, -2, -2, -2, -2,
	-2, 2233, 2234, 2251, 2254, 2260, 2265, 2266, 2238, 2247,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 1463, -2, -2, -2,
	-2, 1256, 2128, 1259, 985, 1257, 1241, 1243, 0, 1245,
	0, 0, 0, 1250, 1276, 1274, 0, 1317, 1254, 1255,
	1335, 1335, 1359, 0, 1340, 0, 1359, 1268, 1385, 0,
	1346, 2146, 1661, 1662, 0, 1918, 1913, -2, -2, 2272,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 503,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 1145,
	537, 538, 0, 562, 0, 566, 2228, -2, 1959, 2165,
	-2, 570, 1149, 1153, 1154, 1155, 1156, 0, 0, 0,
	0, 0, 576, 0, 0, 563, 564, 582, 585, 0,
	669, 670, 671, 672, 61, 0, 2240, 1385, 63, 0,
	1882, 1943, 1944, 1945, 1946, 1947, 2273, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2274, 66, 0,
	2240, 70, 0, 2240, 0, -2, 75, 0, 1888, 77,
	0, 1885, 86, 0, 2240, 0, 1857, -2, 0, 172,
	1896, 0, 852, 1898, -2, 2240, 1033, 235, 236, 1931,
	1932, 1939, 1940, 1941, 1942, 0, 0, 0, 819, 1854,
	1859, 820, 1878, 821, 1864, 0, 258, 259, 260, 261,
	262, 0, 263, 2240, 265, 266, 0, 268, 269, 2240,
	271, 272, 0, 274, 0, 202, 203, 290, 291, 0,
	293, 0, 2240, 0, 0, 0, 299, -2, 315, 0,
	312, 0, 303, 304, 306, 307, 308, 309, 0, 355,
	353, 1893, 0, 847, 2240, 849, 0, 0, 1054, -2,
	2240, 1030, 1060, 1056, 0, -2, 0, 1266, 2240, 1163,
	876, 877, 878, 879, 0, 374, 0, 1176, 0, 1178,
	0, 1199, 1391, 1335, 1335, 0, 316, 317, 318, 319,
	320, 2240, 0, 0, 0, 325, 0, 327, 328, 329,
	330, 331, 332, 333, 161, 2240, 406, 432, 161, 2240,
	409, 161, 2240, 412, 0, 415, 1073, 161, 2240, 418,
	161, 2240, 421, 422, 161, 2240, 426, 427, 429, 2240,
	431, 237, 1115, 1116, 1117, 1118, 0, -2, 490, 1901,
	-2, 442, 0, 443, 0, -2, 0, 249, 0, 0,
	836, 837, 838, 839, 840, 843, 844, 845, 846, 1372,
	221, 219, 0, 0, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 0, 0, 547, 0, 0, 674, 675,
	0, 0, 685, 686, 687, 249, 2157, 2125, 2022, 692,
	0, 695, 698, -2, 0, 0, 0, 0, 702, 0,
	707, 708, 709, 0, 825, 711, 0, 0, 713, 0,
	717, 0, 720, 0, 722, 0, 724, -2, -2, -2,
	735, -2, 0, 738, 740, 0, 742, -2, 0, 751,
	747, 748, 0, 0, 0, 0, 767, 768, 0, 773,
	0, 776, 777, 778, 0, 780, 781, 0, 783, 784,
	785, 786, 0, 788, 789, -2, -2, 793, 795, 0,
	802, 0, 806, 0, 810, 0, 681, 682, 161, 1389,
	1128, -2, 1130, 0, -2, 0, 528, 0, 531, 1296,
	1224, 1221, 0, 1293, 1294, 1225, 0, 0, 0, 1232,
	0, 1271, 1272, 0, 0, 0, 1211, 1212, 0, 0,
	0, 0, 1762, 1763, 1764, 1765, 1766, 1767, 1770, 1771,
	1768, 1769, 1772, 1773, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 1776, 1777, 0, 0, 1779, 0, 1781, 0,
	0, 0, 0, 0, 0, 1568, 1570, 1845, 0, 0,
	1778, 1508, 1509, 1510, 1511, 1512, 1547, 1548, 0, 0,
	1621, 1842, 1841, 1623, 0, 1793, 0, 1636, -2, 0,
	1757, 1788, 0, 0, 1645, 1646, 1647, 0, 0, 1793,
	0, 0, 1836, 1657, 1658, 1500, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1449, 1448, 0, 1450,
	0, 1451, 1452, 1459, 1472, 0, 0, 0, 0, 1476,
	0, 0, 0, 0, 0, 0, 0, 1817, -2, 0,
	0, 0, 0, 1464, 0, 1258, 0, 0, 1321, 1846,
	1850, 1851, 1321, 1321, 0, 0, 1794, 1382, 1382, 0,
	0, 1378, 1378, 1378, 1376, 1359, 0, 1359, 1369, 0,
	1359, 1359, 0, -2, 1340, 0, 0, 1369, 0, 1353,
	478, 480, 482, 484, 485, 486, 488, 1386, 1387, 0,
	0, 0, 0, 1919, 0, 0, 0, 0, 0, 1904,
	0, 0, 0, 0, 508, 518, 1268, 0, 1796, 1408,
	1412, 0, 1414, 1415, 1416, 1417, 1418, 0, 0, 1409,
	-2, 1460, 1462, 1483, 1936, 1937, 1938, 1443, 1444, 1445,
	1446, 1447, 1455, 1442, 1442, 1442, 1453, 1482, 1474, 1482,
	1478, 1429, 1430, 1465, 1466, 1467, 1468, 0, 512, 0,
	0, 0, 0, -2, 572, 577, 578, 0, 0, 1151,
	0, 1157, 599, 600, 601, 1159, 1160, 0, 575, 602,
	603, 604, 605, 606, 607, 0, 1866, 1867, 1868, 1869,
	1872, 1873, 0, 0, 573, 592, 580, 0, 586, 87,
	1101, 0, 126, 0, 1101, 1101, 0, 0, 148, 0,
	0, 0, 0, 0, 0, 111, 122, 99, 100, 0,
	0, 0, 0, 0, 71, 1007, 0, 1010, 0, 0,
	0, 0, 0, 0, 0, 1023, 0, 0, 0, 110,
	0, 105, 89, 0, 0, 0, 112, 124, 0, 152,
	154, 0, 0, 0, 0, 0, 0, 171, 179, 0,
	0, 0, 0, 1031, 0, 1265, 0, 1372, 2059, 1372,
	818, 0, 0, 1919, 1862, 0, 0, 0, 0, 0,
	0, 0, 292, 294, 0, 296, 297, 298, 0, 1053,
	0, 305, 302, 345, 956, 2240, 0, 0, 372, 367,
	0, 369, 0, 1006, 2240, 1004, 1897, 0, 1028, 0,
	0, 0, 1061, 1928, 1070, 1074, 1165, 0, 376, 0,
	1179, 1181, 0, 0, 1392, 0, 1394, 1395, 0, 322,
	323, 324, 0, 404, 0, 159, 160, 0, 407, 0,
	410, 0, 161, 2240, 1852, 416, 0, 419, 0, 0,
	424, 0, 0, 0, 0, 1268, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 249, 0, 1371,
	0, 1372, 219, 249, 249, 1372, 549, 1372, 551, 0,
	0, 688, 249, 249, 249, 693, 694, 696, 697, -2,
	-2, 803, 699, 700, 770, 0, 0, 0, 769, 710,
	0, 812, 2142, 823, 770, 1992, 770, 1992, 770, 1992,
	721, 723, 726, 762, 734, 739, 0, 0, 744, 752,
	-2, 0, 754, 0, 756, 0, 758, 770, 771, 774,
	779, 782, 787, 0, 0, 0, 0, 0, 0, 0,
	1024, 0, 1141, 1296, 1224, 530, 1215, 1295, 1216, 1223,
	1226, 0, 0, 1228, 0, 1230, 0, 1291, 1292, 1299,
	1300, 0, 1310, 1311, 1303, 0, -2, 0, 0, 1306,
	1307, 1234, 0, 1251, 1252, 1253, 1280, 1283, 1084, 0,
	2372, 1504, 1403, 1505, 1506, 1881, 0, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, -2, -2, -2,
	-2, -2, -2, -2, -2, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, -2, -2, -2, 1545,
	1546, -2, 1780, 1782, 0, 1845, 0, -2, 0, -2,
	-2, -2, -2, 1565, 0, 1567, 1572, 1574, 1576, 0,
	0, 0, 0, 1844, 1586, 1828, 1829, 0, 0, 1759,
	1760, 1761, 1571, 0, 1590, 1843, 1840, 0, 0, 1792,
	1279, 1649, 0, 0, 0, 0, 1656, 1641, 1790, 0,
	1789, 0, 0, 0, 1800, 0, 1835, 1831, 0, 1879,
	1499, 1486, 1487, 1488, 1489, 1490, 1491, 1501, 0, 1876,
	1905, 1911, 1733, 0, 0, 0, 1686, 1687, 1688, 1689,
	1690, 0, 1692, 1693, 0, 1695, 1696, 0, 1698, 1699,
	0, 1701, 1702, 1703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 0,
	0, 1705, 0, 1803, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 1707, 0, 1709, 1794, 1814, 0, 0,
	1591, 0, 0, 0, 1757, 0, 1712, 1794, 1822, 0,
	0, 0, 0, 0, 1794, 0, 1827, 0, 1719, 0,
	1721, 1260, 0, 0, 1398, 0, 0, 0, 1849, 1398,
	1398, 0, 1316, 0, 0, 1379, 1380, 1381, 0, 0,
	1382, 0, 1373, 1377, 1374, 1375, 1369, 1332, 0, 0,
	1883, 1369, 1338, 1368, 0, 985, 1358, 1369, 1369, 0,
	-2, 1342, 1359, 0, 0, 479, 481, 483, 487, 489,
	0, 0, 1279, -2, 0, 249, 984, 0, 0, 0,
	0, 498, 500, 0, 0, 492, 0, 495, 0, 1399,
	1402, 0, 0, 1413, 1419, 1420, 0, -2, 0, 0,
	1484, 0, 0, 0, 0, 565, 0, 1150, 1158, 0,
	596, 0, 598, 0, 1870, 1874, 1871, 1875, 0, 587,
	0, 0, 0, 0, 1100, 0, 130, 2240, 0, 163,
	0, 0, 949, 1889, 0, 0, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 101, 0, 0, 0, 0, 0, 0, 0,
	0, 1008, 1009, 1011, 1018, 1020, 0, 1014, 1877, 0,
	0, 1015, 0, 1017, 1019, 1021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 102, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1049, 1047, 1041, 1042, 1043, 1044,
	1045, 1046, 0, 0, -2, 194, 0, 240, 1855, 1865,
	0, 841, 842, 264, 267, 270, 273, 190, 0, 300,
	0, 0, 882, 855, 0, 0, 354, 249, 0, 0,
	368, 0, 1002, 1005, 0, 985, 2240, 1040, 1895, 0,
	0, 0, 0, 1059, 0, 2240, 1884, 1927, 1928, 1167,
	1173, 0, 1398, 0, 1197, 1182, 0, 0, 0, 1197,
	1201, 1202, 1204, 1205, 0, 0, 1393, 0, 326, 433,
	161, 161, 161, 413, 0, 0, 161, 423, 161, 428,
	161, 238, 430, 441, 491, 1268, 1268, 249, 247, 2100,
	245, 242, 244, 0, 0, 0, 883, 885, 886, 887,
	888, 0, 1928, 0, 2048, 1928, 0, 1185, 1187, 0,
	215, 222, 220, 249, 0, 0, 366, 548, 553, 683,
	0, 689, 690, 691, 728, 764, 701, 703, 704, 705,
	0, 824, 822, 712, 770, 715, 770, 718, 770, 737,
	741, 746, 753, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 807, 808, 809, 811, 1390, 1219,
	1220, 1222, 0, 1231, 0, 0, 1305, -2, -2, 1304,
	1308, 1309, -2, -2, -2, -2, 1227, 0, 1236, 1233,
	0, 1290, 1082, 1083, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1587, 0, -2, 1566, 1569, 1573, 1575,
	1577, 0, 0, 0, 0, 0, 0, 1783, 0, 1785,
	1588, 1838, 1841, 1755, 0, 0, 1278, 1279, 1279, 0,
	1655, 0, 1791, 0, 1798, 1799, 0, 1648, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 1691, 1694, 1697, 1700, 0, 0,
	0, 0, 1680, 0, 0, 0, 1684, 1454, 1440, 0,
	1482, 1480, 1481, 1475, 1482, 1479, 1432, 0, 1431, 0,
	1704, 0, 1706, 1708, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1594, 1595, 1596, 1711, 1820, 1821, 0, 0, 0, 0,
	0, 0, 1717, 0, 1826, 1718, 1720, 1268, 0, 1261,
	0, 1318, 1313, 1397, 0, 1847, 1372, 1320, 1322, 1848,
	1886, 1313, 1313, 0, 1795, 0, 0, 1363, 0, 0,
	0, 1365, 1336, 0, 0, 1330, 0, 1326, 1327, 1328,
	1329, 1337, 985, 1367, 1339, 1343, 1905, 0, 1369, 0,
	1354, 0, 1356, 1388, 0, 1348, 1351, 0, 0, 1920,
	250, 275, 279, 280, 276, 277, 278, 507, 0, 0,
	1797, 0, 1404, 0, 1410, 0, 0, 0, 0, 511,
	0, 561, -2, 594, 595, 597, 0, 593, 127, 1101,
	0, 0, 1086, 1088, 0, 132, 2240, 141, 0, 923,
	0, 1887, 0, 0, 0, 0, 0, 1103, 0, 0,
	2240, 161, 2240, 161, 144, 147, 0, 151, 149, 0,
	0, 914, 88, 1101, 0, 91, 95, 103, 0, 0,
	0, 109, 0, 0, 0, 1090, 1094, 0, 0, 1012,
	1013, 1016, 1022, 72, 0, 0, 1092, 1096, 1085, 153,
	93, 97, 104, 0, 1098, 90, 0, 175, 0, 0,
	0, 167, 0, 168, 169, 176, 177, 178, 180, 0,
	161, 2240, 0, 850, 851, 1048, 1026, 1027, 0, 1032,
	186, 0, 1372, 194, 0, 1861, 0, 0, 0, 0,
	0, 0, 881, 967, 0, 0, 0, 0, 360, 356,
	0, 365, 371, 370, 848, 0, 0, 0, -2, 1063,
	1057, 1058, 0, 0, 0, 2240, 1169, 1173, 0, 1172,
	1266, 1279, 375, 1174, 1197, 0, 0, 0, 1184, 1180,
	1177, 1398, 0, 0, 0, 0, 0, 321, 405, 408,
	411, 1853, 161, 417, 420, 425, 444, 445, 224, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 892, 0,
	1928, 1928, 0, 1891, 0, 0, 0, 0, 216, 1372,
	0, 550, 0, 0, 0, 714, 716, 719, 755, 757,
	770, 796, 797, 909, 0, 909, 0, 0, 1229, 0,
	1302, 1235, 1284, 1285, 0, 1084, 0, 1507, 1550, 0,
	0, -2, 0, 0, 1554, 0, 0, 0, -2, 0,
	0, 0, 1784, 1786, 0, 1840, 1650, 0, 0, 0,
	1654, 1638, 1639, 0, 1758, 1801, 1830, 1834, 0, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 0, 1880, 1906, 1910,
	1731, 1732, 1736, 1894, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 0, 1473, 1477, 0, 0,
	1802, 1813, 1815, 1592, 1593, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, -2, -2, -2, 1610, 1611,
	1612, -2, -2, -2, 0, 0, 0, 1816, 1818, 1819,
	1823, 1824, 0, 1714, 1715, 1716, 1825, 0, 1268, 1262,
	1315, 0, 1396, 1319, 0, 1315, 1315, 1275, 1361, 0,
	0, 1384, 0, 1333, 0, 1334, 0, 1366, 0, 1341,
	1344, 1345, 1355, 0, 1347, 0, 1350, 0, 1650, -2,
	509, 493, 0, 0, 1406, 0, 0, 1457, 1461, 1485,
	513, 1370, 0, 0, 0, 0, 162, 921, 948, 0,
	0, 0, 1077, 1084, 0, 0, 954, 134, 0, 0,
	0, 142, 0, 0, 139, 0, 146, 150, 0, 0,
	0, 0, 0, 0, 106, 107, 108, 0, 113, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 1081, 0, 0, 182, 0, 0, 0,
	1051, 1052, 192, 0, 195, 0, 198, 199, 0, 194,
	188, 0, 0, 295, 985, 301, 903, 955, 0, 957,
	0, 856, 0, 0, 956, 352, 0, 359, 0, 1006,
	0, 0, 1029, 0, 1062, 1064, 1072, 0, 0, 0,
	1171, 1173, 0, 1164, 1165, 1298, 1175, 1195, -2, 1194,
	0, 1279, 1203, 1200, 1206, 1207, 0, 414, 246, 0,
	241, 243, 0, 227, 0, 0, 884, 889, 0, 0,
	0, 0, 0, 1186, 1188, 0, 249, 233, 0, 684,
	706, 765, 798, 908, 0, 0, 800, 0, 0, 1301,
	1288, 1289, 1286, 1084, 1552, 1556, 0, 0, 0, 1558,
	-2, 0, 1580, -2, -2, 1787, 1839, 1629, 1279, 1651,
	1653, 1640, 1833, 1502, 0, 1738, 1735, 0, 1722, 0,
	1675, 1676, 0, 0, 1679, 1681, 1682, 1683, 1441, 1434,
	1433, 1812, 0, 0, 0, 0, 1713, 1263, 0, 1727,
	0, 0, 1323, 1727, 1727, 1362, 0, 1364, 1331, 1324,
	0, 1906, 1357, 1349, 0, 0, 1400, 1405, 0, 1411,
	1456, 128, 129, 131, 0, 922, 0, 925, 0, 0,
	0, 0, 932, 933, 0, 0, 0, 0, 0, 942,
	0, 971, 981, 0, 1290, 0, 0, 0, 136, 156,
	0, 0, 1102, 0, 0, 161, 161, 0, 0, 1087,
	1089, 0, 0, 0, 0, 116, 0, 0, 1091, 1095,
	1093, 1097, 0, 0, 1099, 173, 174, 0, 161, 0,
	166, 161, 161, 1081, 0, 0, 0, 0, 0, 187,
	239, 194, 0, 911, 0, 967, 959, 960, 961, 0,
	966, 968, 0, 0, 869, 0, 865, 0, 0, 858,
	882, 855, 0, 357, 1003, 1037, 985, 1055, 0, 0,
	0, 0, 0, 0, 1161, 1173, 0, 1166, 1167, 1197,
	1297, 0, 0, 0, 1183, 1298, 0, 248, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	552, 554, 0, 0, 560, 907, 0, 0, 0, 0,
	1287, 1560, -2, -2, 1581, 0, 1907, 1909, 1279, 0,
	1724, 1281, 0, 0, -2, 0, 0, 0, 1264, 1247,
	0, 1314, 1312, 1248, 1249, 1383, 0, 1352, 0, 1407,
	133, 0, 926, 927, 1890, 929, 0, 931, 934, 0,
	937, 1930, 0, 941, 0, 950, 972, 0, 903, 0,
	977, 978, 979, 1078, 1079, 983, 0, 135, 137, 155,
	1081, 0, 138, 145, 0, 0, 92, 0, 0, 1985,
	119, 117, 115, 94, 0, 175, 181, 1080, 170, 183,
	161, 0, 196, 0, 197, 200, 0, 0, 855, 910,
	0, 958, 0, 969, 970, 859, 0, 857, 0, 0,
	0, 0, 0, 358, 361, 0, 364, 0, 1065, 0,
	1071, 0, 0, 0, 0, 1168, 1169, 373, 0, 0,
	0, 1197, 1208, 226, 0, 0, 890, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 891, 983, 0, 0,
	947, 0, 231, 0, 556, 0, 558, 0, 799, 801,
	0, 0, 1652, 1742, 0, 0, 1677, 1678, -2, 0,
	1618, 1726, 1728, 0, 1325, 1401, 924, 928, 0, 0,
	0, 989, 0, 0, 943, 0, 975, 976, 911, 0,
	903, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 165, 184, 1081, 193, 211, 0, 1038, 859, 0,
	0, 867, 0, 870, 0, 866, 863, 864, 903, 0,
	362, 363, 0, 0, 1072, 0, 0, 1170, 1171, 0,
	1190, 1191, 1193, 1198, 0, 0, 981, 983, 1398, 0,
	555, 0, 0, 804, 805, 0, 0, 0, 0, 1737,
	1282, 1619, 0, 0, 0, 0, 936, 994, 0, 0,
	0, 973, 974, 971, 0, 952, 0, 985, 140, 0,
	983, 0, 915, 0, 0, 918, 0, 0, 120, 1985,
	118, 0, 161, 214, 0, 207, 208, 205, 206, 853,
	0, 0, 963, 965, 0, 871, 911, 869, 1039, 983,
	0, 981, 0, 1162, 0, 1192, 249, 249, 903, 981,
	946, 249, 557, 559, 1734, 1754, 1743, -2, 2201, 1989,
	0, 1754, 1754, 1729, 1730, 0, 0, 938, 990, 991,
	0, 986, 987, 988, 1929, 939, 940, 1398, 980, 0,
	989, 157, 903, 912, 0, 0, 913, 0, 0, 123,
	0, 125, 185, 201, 0, 0, 0, 962, 0, 0,
	0, 0, 855, 859, 981, 0, 903, 0, 1398, 228,
	229, 911, 903, 230, 1739, 0, 0, 1745, 1746, 1747,
	1748, 1749, 1740, 1741, 930, 0, 992, 0, 993, 0,
	0, 0, 951, 0, 994, 143, 916, 0, 919, 0,
	121, 0, 209, 210, 0, 964, 860, 0, 862, 859,
	868, 903, 0, 911, 0, 1189, 1398, 911, 0, 1751,
	1752, 0, 0, 0, 995, 0, 998, 999, 0, 996,
	0, 971, 0, 0, 0, 906, 861, 854, 911, 983,
	1398, 981, 944, 1398, 1750, 1753, 1744, 935, 997, 1000,
	1001, 982, 953, 0, 0, 0, 902, 904, 905, 1398,
	981, 1068, 903, 945, 911, 0, 212, 0, 1066, 903,
	911, 917, 0, 0, 911, 1398, 0, 213, 1398, 1069,
	0, 1067, 911, 920,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 491, 3, 497, 492, 3,
	502, 503, 495, 493, 507, 494, 504, 496, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 510, 3,
	483, 485, 484, 488, 506, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 500, 3, 501, 498, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 508, 490, 509, 486,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 487, 57826, 489, 57827, 499, 57828, 505, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1196
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1201
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1203
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1206
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1207
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1208
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1211
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1220
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1233
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1238
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1357
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 72:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1361
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1375
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1430
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1434
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1440
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1444
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1450
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1459
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1480
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1488
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1498
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1502
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1512
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1523
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1530
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1542
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1549
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1557
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1566
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1585
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1596
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1606
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1616
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1625
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1636
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1642
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1668
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1673
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1735
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1793
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 143:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1812
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1842
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = nil
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1987
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1991
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1995
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2091
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2099
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2239
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = nil
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(), Subdir: sqlDollar[4].union.expr(), From: sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[7].union.asOfClause(), Options: sqlDollar[8].union.kvOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2346
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2407
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2416
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2422
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2427
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2432
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2437
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2442
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2446
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2465
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2473
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2543
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2557
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2558
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2559
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2578
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2614
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2623
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2671
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2695
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2710
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2711
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			return helpWith(sqllex, "CREATE")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2715
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2716
		{
			return unimplemented(sqllex, "create cast")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2717
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2719
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2720
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2721
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2722
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2723
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2724
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2725
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2726
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2727
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			return unimplemented(sqllex, "create operator")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2729
		{
			return unimplemented(sqllex, "create publication")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2730
		{
			return unimplemented(sqllex, "create rule")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2731
		{
			return unimplemented(sqllex, "create server")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2733
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2737
		{
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2738
		{
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2741
		{
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2742
		{
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2745
		{
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2746
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2749
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2753
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2754
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2755
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2756
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2757
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2758
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2759
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2760
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2761
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2763
		{
			return unimplemented(sqllex, "drop server")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2770
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2776
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2797
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2815
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2824
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2847
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2858
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2886
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2921
		{

			sqlVAL.union.val = nil
		}
	case 373:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "DELETE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2949
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2964
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			return helpWith(sqllex, "DROP")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3055
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3161
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3191
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3224
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3226
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3250
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3258
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3273
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "DELETE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "INSERT")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "DELETE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "INSERT")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3308
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3335
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3368
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "GRANT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3480
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "RESET")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "RESET")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "USE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3555
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "USE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "set from current")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = tree.Low
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = tree.Normal
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = tree.High
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3946
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "SHOW")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3962
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3965
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3974
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3979
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.str = "client_encoding"
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.str = "timezone"
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4025
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4029
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4033
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4077
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4086
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4183
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = true
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = true
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = false
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4283
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4296
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4346
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4385
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = true
		}
	case 760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = false
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4406
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = true
		}
	case 770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = false
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4479
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4490
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4511
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4537
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4580
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4588
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4625
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4648
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4664
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4671
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4847
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4856
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "RESUME")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4929
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4970
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4978
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5018
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5060
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5075
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = nil
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5096
		{

			sqlVAL.union.val = nil
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5117
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5122
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5127
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 867:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5154
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5167
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5181
		{
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = true
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = true
		}
	case 874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = false
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = true
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = true
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = true
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5211
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5266
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5272
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5273
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5279
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5295
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.str = ""
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 917:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 920:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5395
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5489
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5503
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5514
		{
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{
		}
	case 944:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5610
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5621
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5638
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5648
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5728
		{
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5729
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5732
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5889
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5898
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5906
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5917
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5922
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5932
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5935
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5939
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5942
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5945
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5947
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5985
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6000
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = true
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6010
		{

			sqlVAL.union.val = true
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = false
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6025
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6039
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6051
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = nil
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6115
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6116
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6132
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6134
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6136
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6138
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6142
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6178
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6195
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6213
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6229
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6249
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = false
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = true
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = false
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = true
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = false
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6303
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.str = ""
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6350
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6356
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6406
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6412
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6420
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6426
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6444
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6447
		{
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6448
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6459
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6477
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6486
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6544
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6555
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6559
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6561
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6580
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6598
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6603
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6612
		{
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6613
		{
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6614
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6631
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6634
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6635
		{
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6663
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6676
		{
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6678
		{
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.str = ""
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.str = ""
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.str = ""
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.str = ""
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6790
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6791
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6835
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6839
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6848
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6914
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6915
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6923
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6961
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7178
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7179
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7285
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = true
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = false
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7355
		{
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = nil
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7368
		{
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7369
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = true
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = false
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = false
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = true
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7399
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7440
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7461
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7466
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7495
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7528
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7583
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7587
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7641
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7643
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7658
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7680
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7685
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7690
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7701
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7713
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7732
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7771
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7781
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7827
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7857
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7890
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = nil
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = true
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = false
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.str = tree.AstFull
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.str = tree.AstRight
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.str = tree.AstInner
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8009
		{
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8010
		{
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.str = tree.AstHash
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.str = ""
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8072
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8077
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8095
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8101
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8107
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8117
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8146
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8159
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8167
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8168
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8186
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8188
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8196
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8216
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8225
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8265
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8277
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8278
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = types.Geography
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8302
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8310
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8336
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8344
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = nil
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = types.Int2
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = types.Int
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = types.Float4
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = types.Float
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8387
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8403
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = types.Bool
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8417
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = types.Float
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8436
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8442
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8464
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = types.String
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = true
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = false
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = types.Date
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8513
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8521
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8535
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8552
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8569
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = true
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = false
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = false
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = types.Interval
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8593
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8677
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = nil
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8722
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8782
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9100
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9321
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9347
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9356
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9371
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9401
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9412
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9413
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9428
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9437
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9503
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9669
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9679
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9689
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9699
		{
			return unimplemented(sqllex, "treat")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9725
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9772
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.str = ""
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9874
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9942
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9971
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = tree.Any
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = tree.Some
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = tree.All
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = tree.Div
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.LT
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = tree.GT
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = tree.LE
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = tree.GE
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = tree.NE
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = tree.Like
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10333
		{
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10502
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10522
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10551
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10729
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10749
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.str = ""
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
