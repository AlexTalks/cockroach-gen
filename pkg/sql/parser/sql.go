// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:882
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13886

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1613,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 419,
	-2, 0,
	-1, 74,
	245, 248,
	523, 248,
	-2, 0,
	-1, 88,
	234, 1346,
	247, 1346,
	263, 415,
	396, 415,
	407, 1097,
	447, 415,
	460, 1097,
	508, 1097,
	534, 415,
	560, 1097,
	-2, 0,
	-1, 94,
	133, 1613,
	240, 1613,
	545, 1613,
	546, 1613,
	-2, 0,
	-1, 112,
	152, 1584,
	172, 1584,
	185, 1584,
	243, 1584,
	276, 1584,
	347, 1584,
	357, 1584,
	540, 1584,
	-2, 1555,
	-1, 153,
	160, 936,
	262, 936,
	399, 897,
	465, 897,
	507, 897,
	526, 936,
	528, 897,
	-2, 0,
	-1, 157,
	4, 1615,
	21, 1615,
	22, 1615,
	23, 1615,
	24, 1615,
	25, 1615,
	26, 1615,
	27, 1615,
	29, 1615,
	30, 1615,
	36, 1615,
	41, 1615,
	42, 1615,
	44, 1615,
	45, 1615,
	46, 1615,
	47, 1615,
	48, 1615,
	49, 1615,
	50, 1615,
	51, 1615,
	53, 1615,
	54, 1615,
	55, 1615,
	56, 1615,
	58, 1615,
	59, 1615,
	60, 1615,
	61, 1615,
	62, 1615,
	63, 1615,
	64, 1615,
	68, 1615,
	69, 1615,
	70, 1615,
	71, 1615,
	73, 1615,
	74, 1615,
	75, 1615,
	79, 1615,
	80, 1615,
	81, 1615,
	82, 1615,
	83, 1615,
	84, 1615,
	85, 1615,
	88, 1615,
	89, 1615,
	90, 1615,
	91, 1615,
	92, 1615,
	94, 1615,
	96, 1615,
	97, 1615,
	98, 1615,
	99, 1615,
	100, 1615,
	101, 1615,
	103, 1615,
	104, 1615,
	105, 1615,
	107, 1615,
	108, 1615,
	109, 1615,
	117, 1615,
	118, 1615,
	119, 1615,
	120, 1615,
	121, 1615,
	123, 1615,
	124, 1615,
	125, 1615,
	126, 1615,
	128, 1615,
	129, 1615,
	130, 1615,
	132, 1615,
	133, 1615,
	134, 1615,
	136, 1615,
	137, 1615,
	138, 1615,
	141, 1615,
	142, 1615,
	143, 1615,
	145, 1615,
	146, 1615,
	147, 1615,
	149, 1615,
	150, 1615,
	151, 1615,
	153, 1615,
	154, 1615,
	155, 1615,
	156, 1615,
	157, 1615,
	158, 1615,
	159, 1615,
	160, 1615,
	161, 1615,
	162, 1615,
	163, 1615,
	164, 1615,
	165, 1615,
	166, 1615,
	167, 1615,
	168, 1615,
	169, 1615,
	171, 1615,
	177, 1615,
	178, 1615,
	179, 1615,
	180, 1615,
	184, 1615,
	186, 1615,
	187, 1615,
	188, 1615,
	192, 1615,
	193, 1615,
	194, 1615,
	195, 1615,
	196, 1615,
	197, 1615,
	198, 1615,
	199, 1615,
	200, 1615,
	201, 1615,
	202, 1615,
	203, 1615,
	204, 1615,
	205, 1615,
	207, 1615,
	208, 1615,
	210, 1615,
	211, 1615,
	213, 1615,
	214, 1615,
	215, 1615,
	216, 1615,
	217, 1615,
	218, 1615,
	219, 1615,
	220, 1615,
	221, 1615,
	223, 1615,
	224, 1615,
	226, 1615,
	227, 1615,
	228, 1615,
	229, 1615,
	230, 1615,
	234, 1615,
	235, 1615,
	236, 1615,
	237, 1615,
	240, 1615,
	241, 1615,
	242, 1615,
	244, 1615,
	246, 1615,
	247, 1615,
	249, 1615,
	251, 1615,
	252, 1615,
	253, 1615,
	255, 1615,
	259, 1615,
	260, 1615,
	261, 1615,
	262, 1615,
	263, 1615,
	264, 1615,
	266, 1615,
	267, 1615,
	268, 1615,
	270, 1615,
	271, 1615,
	273, 1615,
	274, 1615,
	277, 1615,
	278, 1615,
	279, 1615,
	280, 1615,
	281, 1615,
	282, 1615,
	283, 1615,
	286, 1615,
	287, 1615,
	288, 1615,
	289, 1615,
	291, 1615,
	292, 1615,
	293, 1615,
	294, 1615,
	295, 1615,
	296, 1615,
	297, 1615,
	298, 1615,
	299, 1615,
	300, 1615,
	301, 1615,
	302, 1615,
	303, 1615,
	304, 1615,
	305, 1615,
	306, 1615,
	307, 1615,
	308, 1615,
	309, 1615,
	310, 1615,
	311, 1615,
	312, 1615,
	314, 1615,
	316, 1615,
	317, 1615,
	318, 1615,
	319, 1615,
	320, 1615,
	321, 1615,
	322, 1615,
	323, 1615,
	324, 1615,
	325, 1615,
	326, 1615,
	327, 1615,
	328, 1615,
	329, 1615,
	330, 1615,
	331, 1615,
	333, 1615,
	334, 1615,
	336, 1615,
	338, 1615,
	339, 1615,
	340, 1615,
	342, 1615,
	343, 1615,
	344, 1615,
	345, 1615,
	346, 1615,
	349, 1615,
	352, 1615,
	353, 1615,
	354, 1615,
	355, 1615,
	358, 1615,
	359, 1615,
	360, 1615,
	362, 1615,
	364, 1615,
	365, 1615,
	366, 1615,
	367, 1615,
	368, 1615,
	369, 1615,
	370, 1615,
	371, 1615,
	372, 1615,
	373, 1615,
	374, 1615,
	375, 1615,
	376, 1615,
	378, 1615,
	379, 1615,
	380, 1615,
	381, 1615,
	382, 1615,
	383, 1615,
	384, 1615,
	385, 1615,
	386, 1615,
	387, 1615,
	388, 1615,
	389, 1615,
	390, 1615,
	391, 1615,
	392, 1615,
	394, 1615,
	395, 1615,
	397, 1615,
	398, 1615,
	399, 1615,
	400, 1615,
	401, 1615,
	402, 1615,
	403, 1615,
	404, 1615,
	405, 1615,
	406, 1615,
	407, 1615,
	408, 1615,
	409, 1615,
	411, 1615,
	413, 1615,
	414, 1615,
	415, 1615,
	421, 1615,
	422, 1615,
	424, 1615,
	425, 1615,
	426, 1615,
	427, 1615,
	428, 1615,
	429, 1615,
	430, 1615,
	431, 1615,
	432, 1615,
	433, 1615,
	435, 1615,
	436, 1615,
	437, 1615,
	439, 1615,
	440, 1615,
	441, 1615,
	442, 1615,
	443, 1615,
	444, 1615,
	445, 1615,
	447, 1615,
	448, 1615,
	449, 1615,
	450, 1615,
	451, 1615,
	452, 1615,
	453, 1615,
	454, 1615,
	455, 1615,
	456, 1615,
	457, 1615,
	458, 1615,
	460, 1615,
	461, 1615,
	462, 1615,
	463, 1615,
	464, 1615,
	465, 1615,
	467, 1615,
	468, 1615,
	469, 1615,
	470, 1615,
	471, 1615,
	472, 1615,
	474, 1615,
	475, 1615,
	476, 1615,
	477, 1615,
	478, 1615,
	479, 1615,
	480, 1615,
	481, 1615,
	483, 1615,
	485, 1615,
	486, 1615,
	487, 1615,
	488, 1615,
	489, 1615,
	490, 1615,
	491, 1615,
	492, 1615,
	493, 1615,
	494, 1615,
	495, 1615,
	496, 1615,
	497, 1615,
	498, 1615,
	499, 1615,
	500, 1615,
	501, 1615,
	503, 1615,
	504, 1615,
	506, 1615,
	507, 1615,
	509, 1615,
	510, 1615,
	511, 1615,
	512, 1615,
	513, 1615,
	514, 1615,
	515, 1615,
	516, 1615,
	518, 1615,
	519, 1615,
	520, 1615,
	521, 1615,
	522, 1615,
	524, 1615,
	526, 1615,
	527, 1615,
	528, 1615,
	529, 1615,
	530, 1615,
	531, 1615,
	533, 1615,
	534, 1615,
	535, 1615,
	536, 1615,
	538, 1615,
	539, 1615,
	542, 1615,
	543, 1615,
	544, 1615,
	545, 1615,
	546, 1615,
	547, 1615,
	548, 1615,
	550, 1615,
	553, 1615,
	554, 1615,
	555, 1615,
	556, 1615,
	557, 1615,
	558, 1615,
	560, 1615,
	561, 1615,
	562, 1615,
	563, 1615,
	564, 1615,
	565, 1615,
	566, 1615,
	571, 1615,
	572, 1615,
	573, 1615,
	574, 1615,
	575, 1615,
	576, 1615,
	-2, 0,
	-1, 158,
	1, 1463,
	131, 1463,
	251, 1463,
	335, 1463,
	394, 1463,
	403, 1463,
	580, 1463,
	610, 1463,
	-2, 0,
	-1, 160,
	1, 1463,
	610, 1463,
	-2, 0,
	-1, 161,
	1, 1463,
	610, 1463,
	-2, 0,
	-1, 162,
	1, 1463,
	523, 1463,
	610, 1463,
	-2, 0,
	-1, 191,
	152, 1583,
	172, 1583,
	185, 1583,
	243, 1583,
	276, 1583,
	347, 1583,
	357, 1583,
	540, 1583,
	-2, 1558,
	-1, 238,
	4, 1622,
	5, 1622,
	6, 1622,
	7, 1622,
	8, 1622,
	9, 1622,
	10, 1622,
	21, 1622,
	22, 1622,
	23, 1622,
	24, 1622,
	25, 1622,
	26, 1622,
	27, 1622,
	29, 1622,
	30, 1622,
	36, 1622,
	37, 1622,
	41, 1622,
	42, 1622,
	43, 1622,
	44, 1622,
	45, 1622,
	46, 1622,
	47, 1622,
	48, 1622,
	49, 1622,
	50, 1622,
	51, 1622,
	53, 1622,
	54, 1622,
	55, 1622,
	56, 1622,
	58, 1622,
	59, 1622,
	60, 1622,
	61, 1622,
	62, 1622,
	63, 1622,
	64, 1622,
	65, 1622,
	66, 1622,
	67, 1622,
	68, 1622,
	69, 1622,
	70, 1622,
	71, 1622,
	73, 1622,
	74, 1622,
	75, 1622,
	77, 1622,
	79, 1622,
	80, 1622,
	81, 1622,
	82, 1622,
	83, 1622,
	84, 1622,
	85, 1622,
	88, 1622,
	89, 1622,
	90, 1622,
	91, 1622,
	92, 1622,
	94, 1622,
	96, 1622,
	97, 1622,
	98, 1622,
	99, 1622,
	100, 1622,
	101, 1622,
	103, 1622,
	104, 1622,
	105, 1622,
	106, 1622,
	107, 1622,
	108, 1622,
	109, 1622,
	110, 1622,
	111, 1622,
	112, 1622,
	113, 1622,
	114, 1622,
	115, 1622,
	116, 1622,
	117, 1622,
	118, 1622,
	119, 1622,
	120, 1622,
	121, 1622,
	122, 1622,
	123, 1622,
	124, 1622,
	125, 1622,
	126, 1622,
	127, 1622,
	128, 1622,
	129, 1622,
	130, 1622,
	132, 1622,
	133, 1622,
	134, 1622,
	136, 1622,
	137, 1622,
	138, 1622,
	141, 1622,
	142, 1622,
	143, 1622,
	145, 1622,
	146, 1622,
	147, 1622,
	149, 1622,
	150, 1622,
	151, 1622,
	153, 1622,
	154, 1622,
	155, 1622,
	156, 1622,
	157, 1622,
	158, 1622,
	159, 1622,
	160, 1622,
	161, 1622,
	162, 1622,
	163, 1622,
	164, 1622,
	165, 1622,
	166, 1622,
	167, 1622,
	168, 1622,
	169, 1622,
	170, 1622,
	171, 1622,
	177, 1622,
	178, 1622,
	179, 1622,
	180, 1622,
	184, 1622,
	186, 1622,
	187, 1622,
	188, 1622,
	191, 1622,
	192, 1622,
	193, 1622,
	194, 1622,
	195, 1622,
	196, 1622,
	197, 1622,
	198, 1622,
	199, 1622,
	200, 1622,
	201, 1622,
	202, 1622,
	203, 1622,
	204, 1622,
	205, 1622,
	207, 1622,
	208, 1622,
	210, 1622,
	211, 1622,
	213, 1622,
	214, 1622,
	215, 1622,
	216, 1622,
	217, 1622,
	218, 1622,
	219, 1622,
	220, 1622,
	221, 1622,
	222, 1622,
	223, 1622,
	224, 1622,
	226, 1622,
	227, 1622,
	228, 1622,
	229, 1622,
	230, 1622,
	234, 1622,
	235, 1622,
	236, 1622,
	237, 1622,
	239, 1622,
	240, 1622,
	241, 1622,
	242, 1622,
	244, 1622,
	246, 1622,
	247, 1622,
	248, 1622,
	249, 1622,
	250, 1622,
	251, 1622,
	252, 1622,
	253, 1622,
	254, 1622,
	255, 1622,
	259, 1622,
	260, 1622,
	261, 1622,
	262, 1622,
	263, 1622,
	264, 1622,
	266, 1622,
	267, 1622,
	268, 1622,
	270, 1622,
	271, 1622,
	272, 1622,
	273, 1622,
	274, 1622,
	275, 1622,
	277, 1622,
	278, 1622,
	279, 1622,
	280, 1622,
	281, 1622,
	282, 1622,
	283, 1622,
	284, 1622,
	285, 1622,
	286, 1622,
	287, 1622,
	288, 1622,
	289, 1622,
	291, 1622,
	292, 1622,
	293, 1622,
	294, 1622,
	295, 1622,
	296, 1622,
	297, 1622,
	298, 1622,
	299, 1622,
	300, 1622,
	301, 1622,
	302, 1622,
	303, 1622,
	304, 1622,
	305, 1622,
	306, 1622,
	307, 1622,
	308, 1622,
	309, 1622,
	310, 1622,
	311, 1622,
	312, 1622,
	314, 1622,
	315, 1622,
	316, 1622,
	317, 1622,
	318, 1622,
	319, 1622,
	320, 1622,
	321, 1622,
	322, 1622,
	323, 1622,
	324, 1622,
	325, 1622,
	326, 1622,
	327, 1622,
	328, 1622,
	329, 1622,
	330, 1622,
	331, 1622,
	332, 1622,
	333, 1622,
	334, 1622,
	335, 1622,
	336, 1622,
	337, 1622,
	338, 1622,
	339, 1622,
	340, 1622,
	341, 1622,
	342, 1622,
	343, 1622,
	344, 1622,
	345, 1622,
	346, 1622,
	349, 1622,
	353, 1622,
	354, 1622,
	355, 1622,
	358, 1622,
	359, 1622,
	360, 1622,
	361, 1622,
	362, 1622,
	363, 1622,
	364, 1622,
	365, 1622,
	366, 1622,
	367, 1622,
	368, 1622,
	369, 1622,
	370, 1622,
	371, 1622,
	372, 1622,
	373, 1622,
	374, 1622,
	375, 1622,
	376, 1622,
	378, 1622,
	379, 1622,
	380, 1622,
	381, 1622,
	382, 1622,
	383, 1622,
	384, 1622,
	385, 1622,
	386, 1622,
	387, 1622,
	388, 1622,
	389, 1622,
	390, 1622,
	391, 1622,
	392, 1622,
	394, 1622,
	395, 1622,
	397, 1622,
	398, 1622,
	399, 1622,
	400, 1622,
	401, 1622,
	402, 1622,
	403, 1622,
	404, 1622,
	405, 1622,
	406, 1622,
	407, 1622,
	408, 1622,
	409, 1622,
	411, 1622,
	413, 1622,
	414, 1622,
	415, 1622,
	421, 1622,
	422, 1622,
	424, 1622,
	425, 1622,
	426, 1622,
	427, 1622,
	428, 1622,
	429, 1622,
	430, 1622,
	431, 1622,
	432, 1622,
	433, 1622,
	435, 1622,
	436, 1622,
	437, 1622,
	438, 1622,
	439, 1622,
	440, 1622,
	441, 1622,
	442, 1622,
	443, 1622,
	444, 1622,
	445, 1622,
	447, 1622,
	448, 1622,
	449, 1622,
	450, 1622,
	451, 1622,
	452, 1622,
	453, 1622,
	454, 1622,
	455, 1622,
	456, 1622,
	457, 1622,
	458, 1622,
	460, 1622,
	461, 1622,
	462, 1622,
	463, 1622,
	464, 1622,
	465, 1622,
	466, 1622,
	467, 1622,
	468, 1622,
	469, 1622,
	470, 1622,
	471, 1622,
	472, 1622,
	473, 1622,
	474, 1622,
	475, 1622,
	476, 1622,
	477, 1622,
	478, 1622,
	479, 1622,
	480, 1622,
	481, 1622,
	483, 1622,
	485, 1622,
	486, 1622,
	487, 1622,
	488, 1622,
	489, 1622,
	490, 1622,
	491, 1622,
	492, 1622,
	493, 1622,
	494, 1622,
	495, 1622,
	496, 1622,
	497, 1622,
	498, 1622,
	499, 1622,
	500, 1622,
	501, 1622,
	503, 1622,
	504, 1622,
	505, 1622,
	506, 1622,
	507, 1622,
	509, 1622,
	510, 1622,
	511, 1622,
	512, 1622,
	513, 1622,
	514, 1622,
	515, 1622,
	516, 1622,
	518, 1622,
	519, 1622,
	520, 1622,
	521, 1622,
	522, 1622,
	524, 1622,
	526, 1622,
	527, 1622,
	528, 1622,
	529, 1622,
	530, 1622,
	531, 1622,
	532, 1622,
	533, 1622,
	534, 1622,
	535, 1622,
	536, 1622,
	538, 1622,
	539, 1622,
	541, 1622,
	542, 1622,
	543, 1622,
	544, 1622,
	545, 1622,
	546, 1622,
	547, 1622,
	548, 1622,
	549, 1622,
	550, 1622,
	553, 1622,
	554, 1622,
	555, 1622,
	556, 1622,
	557, 1622,
	558, 1622,
	560, 1622,
	561, 1622,
	562, 1622,
	563, 1622,
	564, 1622,
	565, 1622,
	566, 1622,
	571, 1622,
	572, 1622,
	573, 1622,
	574, 1622,
	575, 1622,
	576, 1622,
	577, 1622,
	590, 1622,
	597, 1622,
	598, 1622,
	599, 1622,
	607, 1622,
	611, 1622,
	-2, 0,
	-1, 757,
	4, 1344,
	21, 1344,
	22, 1344,
	23, 1344,
	24, 1344,
	25, 1344,
	26, 1344,
	27, 1344,
	29, 1344,
	30, 1344,
	36, 1344,
	41, 1344,
	42, 1344,
	44, 1344,
	45, 1344,
	46, 1344,
	47, 1344,
	48, 1344,
	49, 1344,
	50, 1344,
	51, 1344,
	53, 1344,
	54, 1344,
	55, 1344,
	56, 1344,
	58, 1344,
	59, 1344,
	60, 1344,
	61, 1344,
	62, 1344,
	63, 1344,
	64, 1344,
	68, 1344,
	69, 1344,
	70, 1344,
	71, 1344,
	73, 1344,
	74, 1344,
	75, 1344,
	79, 1344,
	80, 1344,
	81, 1344,
	82, 1344,
	83, 1344,
	84, 1344,
	85, 1344,
	88, 1344,
	89, 1344,
	90, 1344,
	91, 1344,
	92, 1344,
	94, 1344,
	96, 1344,
	97, 1344,
	98, 1344,
	99, 1344,
	100, 1344,
	101, 1344,
	103, 1344,
	104, 1344,
	105, 1344,
	107, 1344,
	108, 1344,
	109, 1344,
	117, 1344,
	118, 1344,
	119, 1344,
	120, 1344,
	121, 1344,
	123, 1344,
	124, 1344,
	125, 1344,
	126, 1344,
	128, 1344,
	129, 1344,
	130, 1344,
	132, 1344,
	133, 1344,
	134, 1344,
	136, 1344,
	137, 1344,
	138, 1344,
	141, 1344,
	142, 1344,
	143, 1344,
	145, 1344,
	146, 1344,
	147, 1344,
	149, 1344,
	150, 1344,
	151, 1344,
	153, 1344,
	154, 1344,
	155, 1344,
	156, 1344,
	157, 1344,
	158, 1344,
	159, 1344,
	160, 1344,
	161, 1344,
	162, 1344,
	163, 1344,
	164, 1344,
	165, 1344,
	166, 1344,
	167, 1344,
	168, 1344,
	169, 1344,
	171, 1344,
	177, 1344,
	178, 1344,
	179, 1344,
	180, 1344,
	184, 1344,
	186, 1344,
	187, 1344,
	188, 1344,
	192, 1344,
	193, 1344,
	194, 1344,
	195, 1344,
	196, 1344,
	197, 1344,
	198, 1344,
	199, 1344,
	200, 1344,
	201, 1344,
	202, 1344,
	203, 1344,
	204, 1344,
	205, 1344,
	207, 1344,
	208, 1344,
	210, 1344,
	211, 1344,
	213, 1344,
	214, 1344,
	215, 1344,
	216, 1344,
	217, 1344,
	218, 1344,
	219, 1344,
	220, 1344,
	221, 1344,
	223, 1344,
	224, 1344,
	226, 1344,
	227, 1344,
	228, 1344,
	229, 1344,
	230, 1344,
	234, 1344,
	235, 1344,
	236, 1344,
	237, 1344,
	240, 1344,
	241, 1344,
	242, 1344,
	244, 1344,
	246, 1344,
	247, 1344,
	249, 1344,
	251, 1344,
	252, 1344,
	253, 1344,
	255, 1344,
	259, 1344,
	260, 1344,
	261, 1344,
	262, 1344,
	263, 1344,
	264, 1344,
	266, 1344,
	267, 1344,
	268, 1344,
	270, 1344,
	271, 1344,
	273, 1344,
	274, 1344,
	277, 1344,
	278, 1344,
	279, 1344,
	280, 1344,
	281, 1344,
	282, 1344,
	283, 1344,
	286, 1344,
	287, 1344,
	288, 1344,
	289, 1344,
	291, 1344,
	292, 1344,
	293, 1344,
	294, 1344,
	295, 1344,
	296, 1344,
	297, 1344,
	298, 1344,
	299, 1344,
	300, 1344,
	301, 1344,
	302, 1344,
	303, 1344,
	304, 1344,
	305, 1344,
	306, 1344,
	307, 1344,
	308, 1344,
	309, 1344,
	310, 1344,
	311, 1344,
	312, 1344,
	314, 1344,
	316, 1344,
	317, 1344,
	318, 1344,
	319, 1344,
	320, 1344,
	321, 1344,
	322, 1344,
	323, 1344,
	324, 1344,
	325, 1344,
	326, 1344,
	327, 1344,
	328, 1344,
	329, 1344,
	330, 1344,
	331, 1344,
	333, 1344,
	334, 1344,
	336, 1344,
	338, 1344,
	339, 1344,
	340, 1344,
	342, 1344,
	343, 1344,
	344, 1344,
	345, 1344,
	346, 1344,
	349, 1344,
	353, 1344,
	354, 1344,
	355, 1344,
	358, 1344,
	359, 1344,
	360, 1344,
	362, 1344,
	364, 1344,
	365, 1344,
	366, 1344,
	367, 1344,
	368, 1344,
	369, 1344,
	370, 1344,
	371, 1344,
	372, 1344,
	373, 1344,
	374, 1344,
	375, 1344,
	376, 1344,
	378, 1344,
	379, 1344,
	380, 1344,
	381, 1344,
	382, 1344,
	383, 1344,
	384, 1344,
	385, 1344,
	386, 1344,
	387, 1344,
	388, 1344,
	389, 1344,
	390, 1344,
	391, 1344,
	392, 1344,
	394, 1344,
	395, 1344,
	397, 1344,
	398, 1344,
	399, 1344,
	400, 1344,
	401, 1344,
	402, 1344,
	403, 1344,
	404, 1344,
	405, 1344,
	406, 1344,
	407, 1344,
	408, 1344,
	409, 1344,
	411, 1344,
	413, 1344,
	414, 1344,
	415, 1344,
	421, 1344,
	422, 1344,
	424, 1344,
	425, 1344,
	426, 1344,
	427, 1344,
	428, 1344,
	429, 1344,
	430, 1344,
	431, 1344,
	432, 1344,
	433, 1344,
	435, 1344,
	436, 1344,
	437, 1344,
	439, 1344,
	440, 1344,
	441, 1344,
	442, 1344,
	443, 1344,
	444, 1344,
	445, 1344,
	447, 1344,
	448, 1344,
	449, 1344,
	450, 1344,
	451, 1344,
	452, 1344,
	453, 1344,
	454, 1344,
	455, 1344,
	456, 1344,
	457, 1344,
	458, 1344,
	460, 1344,
	461, 1344,
	462, 1344,
	463, 1344,
	464, 1344,
	465, 1344,
	467, 1344,
	468, 1344,
	469, 1344,
	470, 1344,
	471, 1344,
	472, 1344,
	474, 1344,
	475, 1344,
	476, 1344,
	477, 1344,
	478, 1344,
	479, 1344,
	480, 1344,
	481, 1344,
	483, 1344,
	485, 1344,
	486, 1344,
	487, 1344,
	488, 1344,
	489, 1344,
	490, 1344,
	491, 1344,
	492, 1344,
	493, 1344,
	494, 1344,
	495, 1344,
	496, 1344,
	497, 1344,
	498, 1344,
	499, 1344,
	500, 1344,
	501, 1344,
	503, 1344,
	504, 1344,
	506, 1344,
	507, 1344,
	509, 1344,
	510, 1344,
	511, 1344,
	512, 1344,
	513, 1344,
	514, 1344,
	515, 1344,
	516, 1344,
	518, 1344,
	519, 1344,
	520, 1344,
	521, 1344,
	522, 1344,
	524, 1344,
	526, 1344,
	527, 1344,
	528, 1344,
	529, 1344,
	530, 1344,
	531, 1344,
	533, 1344,
	534, 1344,
	535, 1344,
	536, 1344,
	538, 1344,
	539, 1344,
	542, 1344,
	543, 1344,
	544, 1344,
	545, 1344,
	546, 1344,
	547, 1344,
	548, 1344,
	550, 1344,
	553, 1344,
	554, 1344,
	555, 1344,
	556, 1344,
	557, 1344,
	558, 1344,
	560, 1344,
	561, 1344,
	562, 1344,
	563, 1344,
	564, 1344,
	565, 1344,
	566, 1344,
	571, 1344,
	572, 1344,
	573, 1344,
	574, 1344,
	575, 1344,
	576, 1344,
	-2, 0,
	-1, 776,
	190, 2414,
	523, 2414,
	589, 2414,
	609, 2414,
	-2, 0,
	-1, 777,
	190, 2401,
	523, 2401,
	589, 2401,
	609, 2401,
	-2, 0,
	-1, 779,
	190, 2668,
	523, 2668,
	589, 2668,
	609, 2668,
	-2, 0,
	-1, 782,
	190, 2526,
	523, 2526,
	589, 2526,
	609, 2526,
	-2, 0,
	-1, 783,
	190, 2710,
	523, 2710,
	589, 2710,
	609, 2710,
	-2, 0,
	-1, 791,
	190, 2553,
	523, 2553,
	589, 2553,
	609, 2553,
	-2, 718,
	-1, 826,
	609, 2350,
	612, 2350,
	-2, 1018,
	-1, 827,
	609, 2352,
	612, 2352,
	-2, 1019,
	-1, 828,
	609, 2351,
	612, 2351,
	-2, 1020,
	-1, 829,
	612, 2276,
	-2, 1021,
	-1, 854,
	185, 267,
	-2, 0,
	-1, 878,
	43, 2323,
	-2, 0,
	-1, 879,
	560, 1322,
	-2, 1098,
	-1, 895,
	4, 1756,
	21, 1756,
	22, 1756,
	23, 1756,
	24, 1756,
	25, 1756,
	26, 1756,
	27, 1756,
	29, 1756,
	30, 1756,
	36, 1756,
	41, 1756,
	42, 1756,
	44, 1756,
	45, 1756,
	46, 1756,
	47, 1756,
	48, 1756,
	49, 1756,
	50, 1756,
	51, 1756,
	53, 1756,
	54, 1756,
	55, 1756,
	56, 1756,
	58, 1756,
	59, 1756,
	60, 1756,
	61, 1756,
	62, 1756,
	63, 1756,
	64, 1756,
	68, 1756,
	69, 1756,
	70, 1756,
	71, 1756,
	73, 1756,
	74, 1756,
	75, 1756,
	79, 1756,
	80, 1756,
	81, 1756,
	82, 1756,
	83, 1756,
	84, 1756,
	85, 1756,
	88, 1756,
	89, 1756,
	90, 1756,
	91, 1756,
	92, 1756,
	94, 1756,
	96, 1756,
	97, 1756,
	98, 1756,
	99, 1756,
	100, 1756,
	101, 1756,
	103, 1756,
	104, 1756,
	105, 1756,
	107, 1756,
	108, 1756,
	109, 1756,
	117, 1756,
	118, 1756,
	119, 1756,
	120, 1756,
	121, 1756,
	123, 1756,
	124, 1756,
	125, 1756,
	126, 1756,
	128, 1756,
	129, 1756,
	130, 1756,
	132, 1756,
	133, 1756,
	134, 1756,
	136, 1756,
	137, 1756,
	138, 1756,
	141, 1756,
	142, 1756,
	143, 1756,
	145, 1756,
	146, 1756,
	147, 1756,
	149, 1756,
	150, 1756,
	151, 1756,
	153, 1756,
	154, 1756,
	155, 1756,
	156, 1756,
	157, 1756,
	158, 1756,
	159, 1756,
	160, 1756,
	161, 1756,
	162, 1756,
	163, 1756,
	164, 1756,
	165, 1756,
	166, 1756,
	167, 1756,
	168, 1756,
	169, 1756,
	171, 1756,
	177, 1756,
	178, 1756,
	179, 1756,
	180, 1756,
	184, 1756,
	186, 1756,
	187, 1756,
	188, 1756,
	192, 1756,
	193, 1756,
	194, 1756,
	195, 1756,
	196, 1756,
	197, 1756,
	198, 1756,
	199, 1756,
	200, 1756,
	201, 1756,
	202, 1756,
	203, 1756,
	204, 1756,
	205, 1756,
	207, 1756,
	208, 1756,
	210, 1756,
	211, 1756,
	213, 1756,
	214, 1756,
	215, 1756,
	216, 1756,
	217, 1756,
	218, 1756,
	219, 1756,
	220, 1756,
	221, 1756,
	223, 1756,
	224, 1756,
	226, 1756,
	227, 1756,
	228, 1756,
	229, 1756,
	230, 1756,
	234, 1756,
	235, 1756,
	236, 1756,
	237, 1756,
	240, 1756,
	241, 1756,
	242, 1756,
	244, 1756,
	246, 1756,
	247, 1756,
	249, 1756,
	251, 1756,
	252, 1756,
	253, 1756,
	255, 1756,
	259, 1756,
	260, 1756,
	261, 1756,
	262, 1756,
	263, 1756,
	264, 1756,
	266, 1756,
	267, 1756,
	268, 1756,
	270, 1756,
	271, 1756,
	273, 1756,
	274, 1756,
	277, 1756,
	278, 1756,
	279, 1756,
	280, 1756,
	281, 1756,
	282, 1756,
	283, 1756,
	286, 1756,
	287, 1756,
	288, 1756,
	289, 1756,
	291, 1756,
	292, 1756,
	293, 1756,
	294, 1756,
	295, 1756,
	296, 1756,
	297, 1756,
	298, 1756,
	299, 1756,
	300, 1756,
	301, 1756,
	302, 1756,
	303, 1756,
	304, 1756,
	305, 1756,
	306, 1756,
	307, 1756,
	308, 1756,
	309, 1756,
	310, 1756,
	311, 1756,
	312, 1756,
	314, 1756,
	316, 1756,
	317, 1756,
	318, 1756,
	319, 1756,
	320, 1756,
	321, 1756,
	322, 1756,
	323, 1756,
	324, 1756,
	325, 1756,
	326, 1756,
	327, 1756,
	328, 1756,
	329, 1756,
	330, 1756,
	331, 1756,
	333, 1756,
	334, 1756,
	336, 1756,
	338, 1756,
	339, 1756,
	340, 1756,
	342, 1756,
	343, 1756,
	344, 1756,
	345, 1756,
	346, 1756,
	349, 1756,
	353, 1756,
	354, 1756,
	355, 1756,
	358, 1756,
	359, 1756,
	360, 1756,
	362, 1756,
	364, 1756,
	365, 1756,
	366, 1756,
	367, 1756,
	368, 1756,
	369, 1756,
	370, 1756,
	371, 1756,
	372, 1756,
	373, 1756,
	374, 1756,
	375, 1756,
	376, 1756,
	378, 1756,
	379, 1756,
	380, 1756,
	381, 1756,
	382, 1756,
	383, 1756,
	384, 1756,
	385, 1756,
	386, 1756,
	387, 1756,
	388, 1756,
	389, 1756,
	390, 1756,
	391, 1756,
	392, 1756,
	394, 1756,
	395, 1756,
	397, 1756,
	398, 1756,
	399, 1756,
	400, 1756,
	401, 1756,
	402, 1756,
	403, 1756,
	404, 1756,
	405, 1756,
	406, 1756,
	407, 1756,
	408, 1756,
	409, 1756,
	411, 1756,
	413, 1756,
	414, 1756,
	415, 1756,
	421, 1756,
	422, 1756,
	424, 1756,
	425, 1756,
	426, 1756,
	427, 1756,
	428, 1756,
	429, 1756,
	430, 1756,
	431, 1756,
	432, 1756,
	433, 1756,
	435, 1756,
	436, 1756,
	437, 1756,
	439, 1756,
	440, 1756,
	441, 1756,
	442, 1756,
	443, 1756,
	444, 1756,
	445, 1756,
	447, 1756,
	448, 1756,
	449, 1756,
	450, 1756,
	451, 1756,
	452, 1756,
	453, 1756,
	454, 1756,
	455, 1756,
	456, 1756,
	457, 1756,
	458, 1756,
	460, 1756,
	461, 1756,
	462, 1756,
	463, 1756,
	464, 1756,
	465, 1756,
	467, 1756,
	468, 1756,
	469, 1756,
	470, 1756,
	471, 1756,
	472, 1756,
	474, 1756,
	475, 1756,
	476, 1756,
	477, 1756,
	478, 1756,
	479, 1756,
	480, 1756,
	481, 1756,
	483, 1756,
	485, 1756,
	486, 1756,
	487, 1756,
	488, 1756,
	489, 1756,
	490, 1756,
	491, 1756,
	492, 1756,
	493, 1756,
	494, 1756,
	495, 1756,
	496, 1756,
	497, 1756,
	498, 1756,
	499, 1756,
	500, 1756,
	501, 1756,
	503, 1756,
	504, 1756,
	506, 1756,
	507, 1756,
	509, 1756,
	510, 1756,
	511, 1756,
	512, 1756,
	513, 1756,
	514, 1756,
	515, 1756,
	516, 1756,
	518, 1756,
	519, 1756,
	520, 1756,
	521, 1756,
	522, 1756,
	524, 1756,
	526, 1756,
	527, 1756,
	528, 1756,
	529, 1756,
	530, 1756,
	531, 1756,
	533, 1756,
	534, 1756,
	535, 1756,
	536, 1756,
	538, 1756,
	539, 1756,
	542, 1756,
	543, 1756,
	544, 1756,
	545, 1756,
	546, 1756,
	547, 1756,
	548, 1756,
	550, 1756,
	553, 1756,
	554, 1756,
	555, 1756,
	556, 1756,
	557, 1756,
	558, 1756,
	560, 1756,
	561, 1756,
	562, 1756,
	563, 1756,
	564, 1756,
	565, 1756,
	566, 1756,
	571, 1756,
	572, 1756,
	573, 1756,
	574, 1756,
	575, 1756,
	576, 1756,
	-2, 0,
	-1, 905,
	263, 419,
	-2, 0,
	-1, 982,
	399, 898,
	465, 898,
	507, 898,
	528, 898,
	-2, 0,
	-1, 983,
	399, 897,
	465, 897,
	507, 897,
	528, 897,
	-2, 829,
	-1, 987,
	1, 950,
	606, 950,
	608, 950,
	610, 950,
	-2, 0,
	-1, 989,
	1, 872,
	606, 872,
	608, 872,
	610, 872,
	-2, 0,
	-1, 990,
	1, 876,
	606, 876,
	608, 876,
	610, 876,
	-2, 0,
	-1, 991,
	1, 1017,
	185, 1017,
	606, 1017,
	608, 1017,
	610, 1017,
	-2, 0,
	-1, 999,
	1, 903,
	606, 903,
	608, 903,
	610, 903,
	-2, 0,
	-1, 1006,
	1, 950,
	606, 950,
	608, 950,
	610, 950,
	-2, 0,
	-1, 1007,
	1, 952,
	606, 952,
	608, 952,
	610, 952,
	-2, 0,
	-1, 1008,
	1, 955,
	606, 955,
	608, 955,
	610, 955,
	-2, 0,
	-1, 1014,
	1, 981,
	606, 981,
	608, 981,
	610, 981,
	-2, 0,
	-1, 1015,
	1, 983,
	606, 983,
	608, 983,
	610, 983,
	-2, 0,
	-1, 1020,
	1, 1011,
	606, 1011,
	608, 1011,
	610, 1011,
	-2, 0,
	-1, 1072,
	172, 1626,
	185, 1626,
	276, 1626,
	347, 1626,
	-2, 1562,
	-1, 1087,
	172, 1625,
	185, 1625,
	276, 1625,
	347, 1625,
	-2, 1559,
	-1, 1114,
	609, 2349,
	-2, 726,
	-1, 1143,
	5, 2341,
	607, 2339,
	-2, 2330,
	-1, 1151,
	5, 2362,
	607, 2359,
	-2, 2350,
	-1, 1152,
	5, 2363,
	607, 2360,
	-2, 2351,
	-1, 1160,
	609, 2347,
	-2, 2329,
	-1, 1161,
	607, 2795,
	-2, 2348,
	-1, 1184,
	607, 2794,
	-2, 2364,
	-1, 1185,
	5, 1831,
	-2, 2765,
	-1, 1186,
	5, 1832,
	-2, 2766,
	-1, 1187,
	5, 1833,
	-2, 2780,
	-1, 1188,
	5, 1834,
	-2, 2744,
	-1, 1189,
	5, 1835,
	-2, 2778,
	-1, 1190,
	5, 1843,
	-2, 2757,
	-1, 1191,
	5, 1830,
	-2, 2753,
	-1, 1192,
	5, 1830,
	-2, 2752,
	-1, 1193,
	5, 1830,
	-2, 2771,
	-1, 1194,
	5, 1841,
	-2, 2746,
	-1, 1195,
	5, 1846,
	-2, 2745,
	-1, 1196,
	5, 1848,
	-2, 2790,
	-1, 1199,
	5, 1870,
	-2, 2783,
	-1, 1200,
	5, 1862,
	-2, 2784,
	-1, 1201,
	5, 1870,
	-2, 2785,
	-1, 1202,
	5, 1866,
	-2, 2786,
	-1, 1203,
	5, 1816,
	-2, 2758,
	-1, 1204,
	5, 1817,
	-2, 2759,
	-1, 1205,
	5, 1818,
	-2, 2747,
	-1, 1233,
	5, 1853,
	-2, 2791,
	-1, 1234,
	5, 1854,
	-2, 2781,
	-1, 1235,
	5, 1855,
	561, 1855,
	-2, 2748,
	-1, 1236,
	5, 1856,
	561, 1856,
	-2, 2749,
	-1, 1273,
	607, 2359,
	-2, 2350,
	-1, 1274,
	607, 2360,
	-2, 2351,
	-1, 1372,
	190, 2710,
	523, 2710,
	589, 2710,
	609, 2710,
	-2, 0,
	-1, 1377,
	1, 702,
	610, 702,
	-2, 1471,
	-1, 1507,
	366, 2324,
	424, 2324,
	467, 2324,
	599, 2324,
	-2, 2314,
	-1, 1513,
	190, 129,
	270, 129,
	333, 129,
	566, 129,
	-2, 2706,
	-1, 1514,
	190, 130,
	270, 130,
	333, 130,
	566, 130,
	-2, 2459,
	-1, 1515,
	190, 131,
	270, 131,
	333, 131,
	566, 131,
	-2, 2630,
	-1, 1521,
	611, 2324,
	-2, 2326,
	-1, 1529,
	1, 1319,
	429, 1276,
	467, 1276,
	583, 1276,
	606, 1319,
	608, 1319,
	610, 1319,
	-2, 1611,
	-1, 1535,
	206, 1416,
	225, 1416,
	437, 1416,
	-2, 0,
	-1, 1591,
	407, 1097,
	560, 1097,
	-2, 414,
	-1, 1608,
	43, 2322,
	-2, 1063,
	-1, 1615,
	1, 1319,
	606, 1319,
	608, 1319,
	610, 1319,
	-2, 1611,
	-1, 1623,
	4, 1344,
	21, 1344,
	22, 1344,
	23, 1344,
	24, 1344,
	25, 1344,
	26, 1344,
	27, 1344,
	29, 1344,
	30, 1344,
	36, 1344,
	41, 1344,
	42, 1344,
	44, 1344,
	45, 1344,
	46, 1344,
	47, 1344,
	48, 1344,
	49, 1344,
	50, 1344,
	51, 1344,
	53, 1344,
	54, 1344,
	55, 1344,
	56, 1344,
	58, 1344,
	59, 1344,
	60, 1344,
	61, 1344,
	62, 1344,
	63, 1344,
	64, 1344,
	68, 1344,
	69, 1344,
	70, 1344,
	71, 1344,
	73, 1344,
	74, 1344,
	75, 1344,
	79, 1344,
	80, 1344,
	81, 1344,
	82, 1344,
	83, 1344,
	84, 1344,
	85, 1344,
	88, 1344,
	89, 1344,
	90, 1344,
	91, 1344,
	92, 1344,
	94, 1344,
	96, 1344,
	97, 1344,
	98, 1344,
	99, 1344,
	100, 1344,
	101, 1344,
	103, 1344,
	104, 1344,
	105, 1344,
	107, 1344,
	108, 1344,
	109, 1344,
	117, 1344,
	118, 1344,
	119, 1344,
	120, 1344,
	121, 1344,
	123, 1344,
	124, 1344,
	125, 1344,
	126, 1344,
	128, 1344,
	129, 1344,
	130, 1344,
	132, 1344,
	133, 1344,
	134, 1344,
	136, 1344,
	137, 1344,
	138, 1344,
	141, 1344,
	142, 1344,
	143, 1344,
	145, 1344,
	146, 1344,
	147, 1344,
	149, 1344,
	150, 1344,
	151, 1344,
	153, 1344,
	154, 1344,
	155, 1344,
	156, 1344,
	157, 1344,
	158, 1344,
	159, 1344,
	160, 1344,
	161, 1344,
	162, 1344,
	163, 1344,
	164, 1344,
	165, 1344,
	166, 1344,
	167, 1344,
	168, 1344,
	169, 1344,
	177, 1344,
	178, 1344,
	179, 1344,
	180, 1344,
	184, 1344,
	186, 1344,
	187, 1344,
	188, 1344,
	192, 1344,
	193, 1344,
	194, 1344,
	195, 1344,
	196, 1344,
	197, 1344,
	198, 1344,
	199, 1344,
	200, 1344,
	201, 1344,
	202, 1344,
	203, 1344,
	204, 1344,
	205, 1344,
	207, 1344,
	208, 1344,
	210, 1344,
	211, 1344,
	213, 1344,
	214, 1344,
	215, 1344,
	216, 1344,
	217, 1344,
	218, 1344,
	219, 1344,
	220, 1344,
	221, 1344,
	223, 1344,
	224, 1344,
	226, 1344,
	227, 1344,
	228, 1344,
	229, 1344,
	230, 1344,
	235, 1344,
	236, 1344,
	237, 1344,
	240, 1344,
	241, 1344,
	242, 1344,
	244, 1344,
	246, 1344,
	247, 1344,
	249, 1344,
	251, 1344,
	252, 1344,
	253, 1344,
	255, 1344,
	259, 1344,
	260, 1344,
	261, 1344,
	262, 1344,
	263, 1344,
	264, 1344,
	266, 1344,
	267, 1344,
	268, 1344,
	270, 1344,
	271, 1344,
	273, 1344,
	274, 1344,
	277, 1344,
	278, 1344,
	279, 1344,
	280, 1344,
	281, 1344,
	282, 1344,
	283, 1344,
	286, 1344,
	287, 1344,
	288, 1344,
	289, 1344,
	291, 1344,
	292, 1344,
	293, 1344,
	294, 1344,
	295, 1344,
	296, 1344,
	297, 1344,
	298, 1344,
	299, 1344,
	300, 1344,
	301, 1344,
	302, 1344,
	303, 1344,
	304, 1344,
	305, 1344,
	306, 1344,
	307, 1344,
	308, 1344,
	309, 1344,
	310, 1344,
	311, 1344,
	312, 1344,
	314, 1344,
	316, 1344,
	317, 1344,
	318, 1344,
	319, 1344,
	320, 1344,
	321, 1344,
	322, 1344,
	323, 1344,
	324, 1344,
	325, 1344,
	326, 1344,
	327, 1344,
	328, 1344,
	329, 1344,
	330, 1344,
	331, 1344,
	333, 1344,
	334, 1344,
	338, 1344,
	339, 1344,
	340, 1344,
	342, 1344,
	343, 1344,
	344, 1344,
	345, 1344,
	346, 1344,
	349, 1344,
	351, 1344,
	353, 1344,
	354, 1344,
	355, 1344,
	358, 1344,
	359, 1344,
	360, 1344,
	362, 1344,
	364, 1344,
	365, 1344,
	366, 1344,
	367, 1344,
	368, 1344,
	369, 1344,
	370, 1344,
	371, 1344,
	372, 1344,
	373, 1344,
	374, 1344,
	375, 1344,
	376, 1344,
	378, 1344,
	379, 1344,
	380, 1344,
	381, 1344,
	382, 1344,
	383, 1344,
	384, 1344,
	385, 1344,
	386, 1344,
	387, 1344,
	388, 1344,
	389, 1344,
	390, 1344,
	391, 1344,
	392, 1344,
	394, 1344,
	395, 1344,
	397, 1344,
	398, 1344,
	399, 1344,
	400, 1344,
	401, 1344,
	402, 1344,
	403, 1344,
	404, 1344,
	405, 1344,
	406, 1344,
	407, 1344,
	408, 1344,
	409, 1344,
	411, 1344,
	413, 1344,
	414, 1344,
	415, 1344,
	421, 1344,
	422, 1344,
	424, 1344,
	425, 1344,
	426, 1344,
	427, 1344,
	428, 1344,
	429, 1344,
	430, 1344,
	431, 1344,
	432, 1344,
	433, 1344,
	435, 1344,
	436, 1344,
	437, 1344,
	439, 1344,
	440, 1344,
	441, 1344,
	442, 1344,
	443, 1344,
	444, 1344,
	445, 1344,
	447, 1344,
	448, 1344,
	449, 1344,
	450, 1344,
	451, 1344,
	452, 1344,
	453, 1344,
	454, 1344,
	455, 1344,
	456, 1344,
	457, 1344,
	458, 1344,
	460, 1344,
	461, 1344,
	462, 1344,
	463, 1344,
	464, 1344,
	465, 1344,
	467, 1344,
	468, 1344,
	469, 1344,
	470, 1344,
	471, 1344,
	472, 1344,
	474, 1344,
	475, 1344,
	476, 1344,
	477, 1344,
	478, 1344,
	479, 1344,
	480, 1344,
	481, 1344,
	483, 1344,
	485, 1344,
	486, 1344,
	487, 1344,
	488, 1344,
	489, 1344,
	490, 1344,
	491, 1344,
	492, 1344,
	493, 1344,
	494, 1344,
	495, 1344,
	496, 1344,
	497, 1344,
	498, 1344,
	499, 1344,
	500, 1344,
	501, 1344,
	503, 1344,
	504, 1344,
	506, 1344,
	507, 1344,
	509, 1344,
	510, 1344,
	511, 1344,
	512, 1344,
	513, 1344,
	514, 1344,
	515, 1344,
	516, 1344,
	518, 1344,
	519, 1344,
	520, 1344,
	521, 1344,
	522, 1344,
	524, 1344,
	526, 1344,
	527, 1344,
	528, 1344,
	529, 1344,
	530, 1344,
	531, 1344,
	533, 1344,
	534, 1344,
	535, 1344,
	536, 1344,
	538, 1344,
	539, 1344,
	542, 1344,
	543, 1344,
	544, 1344,
	545, 1344,
	546, 1344,
	547, 1344,
	548, 1344,
	550, 1344,
	553, 1344,
	554, 1344,
	555, 1344,
	556, 1344,
	557, 1344,
	558, 1344,
	560, 1344,
	561, 1344,
	562, 1344,
	563, 1344,
	564, 1344,
	565, 1344,
	566, 1344,
	571, 1344,
	572, 1344,
	573, 1344,
	574, 1344,
	575, 1344,
	576, 1344,
	-2, 0,
	-1, 1646,
	1, 559,
	606, 559,
	608, 559,
	610, 559,
	-2, 1582,
	-1, 1649,
	4, 2789,
	11, 2789,
	12, 2789,
	14, 2789,
	15, 2789,
	16, 2789,
	17, 2789,
	18, 2789,
	19, 2789,
	21, 2789,
	22, 2789,
	23, 2789,
	24, 2789,
	25, 2789,
	26, 2789,
	27, 2789,
	29, 2789,
	30, 2789,
	33, 2789,
	34, 2789,
	36, 2789,
	38, 2789,
	41, 2789,
	42, 2789,
	44, 2789,
	45, 2789,
	46, 2789,
	47, 2789,
	48, 2789,
	49, 2789,
	50, 2789,
	51, 2789,
	53, 2789,
	54, 2789,
	55, 2789,
	56, 2789,
	58, 2789,
	59, 2789,
	60, 2789,
	61, 2789,
	62, 2789,
	63, 2789,
	64, 2789,
	67, 2789,
	68, 2789,
	69, 2789,
	70, 2789,
	71, 2789,
	73, 2789,
	74, 2789,
	75, 2789,
	76, 2789,
	79, 2789,
	80, 2789,
	81, 2789,
	82, 2789,
	83, 2789,
	84, 2789,
	85, 2789,
	86, 2789,
	88, 2789,
	89, 2789,
	90, 2789,
	91, 2789,
	92, 2789,
	94, 2789,
	95, 2789,
	96, 2789,
	97, 2789,
	98, 2789,
	99, 2789,
	100, 2789,
	101, 2789,
	103, 2789,
	104, 2789,
	105, 2789,
	106, 2789,
	107, 2789,
	108, 2789,
	109, 2789,
	117, 2789,
	118, 2789,
	119, 2789,
	120, 2789,
	121, 2789,
	123, 2789,
	124, 2789,
	125, 2789,
	126, 2789,
	128, 2789,
	129, 2789,
	130, 2789,
	132, 2789,
	133, 2789,
	134, 2789,
	136, 2789,
	137, 2789,
	138, 2789,
	141, 2789,
	142, 2789,
	143, 2789,
	145, 2789,
	146, 2789,
	147, 2789,
	149, 2789,
	150, 2789,
	151, 2789,
	153, 2789,
	154, 2789,
	155, 2789,
	156, 2789,
	157, 2789,
	158, 2789,
	159, 2789,
	160, 2789,
	161, 2789,
	162, 2789,
	163, 2789,
	164, 2789,
	165, 2789,
	166, 2789,
	167, 2789,
	168, 2789,
	169, 2789,
	173, 2789,
	174, 2789,
	175, 2789,
	176, 2789,
	177, 2789,
	178, 2789,
	179, 2789,
	180, 2789,
	183, 2789,
	184, 2789,
	186, 2789,
	187, 2789,
	188, 2789,
	191, 2789,
	192, 2789,
	193, 2789,
	194, 2789,
	195, 2789,
	196, 2789,
	197, 2789,
	198, 2789,
	199, 2789,
	200, 2789,
	201, 2789,
	202, 2789,
	203, 2789,
	204, 2789,
	205, 2789,
	207, 2789,
	208, 2789,
	210, 2789,
	211, 2789,
	213, 2789,
	214, 2789,
	215, 2789,
	216, 2789,
	217, 2789,
	218, 2789,
	219, 2789,
	220, 2789,
	221, 2789,
	222, 2789,
	223, 2789,
	224, 2789,
	225, 2789,
	226, 2789,
	227, 2789,
	228, 2789,
	229, 2789,
	230, 2789,
	232, 2789,
	233, 2789,
	235, 2789,
	236, 2789,
	237, 2789,
	239, 2789,
	240, 2789,
	241, 2789,
	242, 2789,
	244, 2789,
	246, 2789,
	247, 2789,
	248, 2789,
	249, 2789,
	250, 2789,
	251, 2789,
	252, 2789,
	253, 2789,
	254, 2789,
	255, 2789,
	257, 2789,
	258, 2789,
	259, 2789,
	260, 2789,
	261, 2789,
	262, 2789,
	263, 2789,
	264, 2789,
	266, 2789,
	267, 2789,
	268, 2789,
	270, 2789,
	271, 2789,
	272, 2789,
	273, 2789,
	274, 2789,
	275, 2789,
	277, 2789,
	278, 2789,
	279, 2789,
	280, 2789,
	281, 2789,
	282, 2789,
	283, 2789,
	286, 2789,
	287, 2789,
	288, 2789,
	289, 2789,
	290, 2789,
	291, 2789,
	292, 2789,
	293, 2789,
	294, 2789,
	295, 2789,
	296, 2789,
	297, 2789,
	298, 2789,
	299, 2789,
	300, 2789,
	301, 2789,
	302, 2789,
	303, 2789,
	304, 2789,
	305, 2789,
	306, 2789,
	307, 2789,
	308, 2789,
	309, 2789,
	310, 2789,
	311, 2789,
	312, 2789,
	314, 2789,
	315, 2789,
	316, 2789,
	317, 2789,
	318, 2789,
	319, 2789,
	320, 2789,
	321, 2789,
	322, 2789,
	323, 2789,
	324, 2789,
	325, 2789,
	326, 2789,
	327, 2789,
	328, 2789,
	329, 2789,
	330, 2789,
	331, 2789,
	333, 2789,
	334, 2789,
	337, 2789,
	338, 2789,
	339, 2789,
	340, 2789,
	342, 2789,
	343, 2789,
	344, 2789,
	345, 2789,
	346, 2789,
	349, 2789,
	353, 2789,
	354, 2789,
	355, 2789,
	356, 2789,
	358, 2789,
	359, 2789,
	360, 2789,
	362, 2789,
	364, 2789,
	365, 2789,
	366, 2789,
	367, 2789,
	368, 2789,
	369, 2789,
	370, 2789,
	371, 2789,
	372, 2789,
	373, 2789,
	374, 2789,
	375, 2789,
	376, 2789,
	378, 2789,
	379, 2789,
	380, 2789,
	381, 2789,
	382, 2789,
	383, 2789,
	384, 2789,
	385, 2789,
	386, 2789,
	387, 2789,
	388, 2789,
	389, 2789,
	390, 2789,
	391, 2789,
	392, 2789,
	394, 2789,
	395, 2789,
	397, 2789,
	398, 2789,
	399, 2789,
	400, 2789,
	401, 2789,
	402, 2789,
	403, 2789,
	404, 2789,
	405, 2789,
	406, 2789,
	407, 2789,
	408, 2789,
	409, 2789,
	411, 2789,
	413, 2789,
	414, 2789,
	415, 2789,
	421, 2789,
	422, 2789,
	423, 2789,
	424, 2789,
	425, 2789,
	426, 2789,
	427, 2789,
	428, 2789,
	429, 2789,
	430, 2789,
	431, 2789,
	432, 2789,
	433, 2789,
	435, 2789,
	436, 2789,
	437, 2789,
	438, 2789,
	439, 2789,
	440, 2789,
	441, 2789,
	442, 2789,
	443, 2789,
	444, 2789,
	445, 2789,
	446, 2789,
	447, 2789,
	448, 2789,
	449, 2789,
	450, 2789,
	451, 2789,
	452, 2789,
	453, 2789,
	454, 2789,
	455, 2789,
	456, 2789,
	457, 2789,
	458, 2789,
	460, 2789,
	461, 2789,
	462, 2789,
	463, 2789,
	464, 2789,
	465, 2789,
	467, 2789,
	468, 2789,
	469, 2789,
	470, 2789,
	471, 2789,
	472, 2789,
	473, 2789,
	474, 2789,
	475, 2789,
	476, 2789,
	477, 2789,
	478, 2789,
	479, 2789,
	480, 2789,
	481, 2789,
	483, 2789,
	485, 2789,
	486, 2789,
	487, 2789,
	488, 2789,
	489, 2789,
	490, 2789,
	491, 2789,
	492, 2789,
	493, 2789,
	494, 2789,
	495, 2789,
	496, 2789,
	497, 2789,
	498, 2789,
	499, 2789,
	500, 2789,
	501, 2789,
	503, 2789,
	504, 2789,
	505, 2789,
	506, 2789,
	507, 2789,
	509, 2789,
	510, 2789,
	511, 2789,
	512, 2789,
	513, 2789,
	514, 2789,
	515, 2789,
	516, 2789,
	518, 2789,
	519, 2789,
	520, 2789,
	521, 2789,
	522, 2789,
	524, 2789,
	526, 2789,
	527, 2789,
	528, 2789,
	529, 2789,
	530, 2789,
	531, 2789,
	533, 2789,
	534, 2789,
	535, 2789,
	536, 2789,
	538, 2789,
	539, 2789,
	542, 2789,
	543, 2789,
	544, 2789,
	545, 2789,
	546, 2789,
	547, 2789,
	548, 2789,
	550, 2789,
	553, 2789,
	554, 2789,
	555, 2789,
	556, 2789,
	557, 2789,
	558, 2789,
	560, 2789,
	561, 2789,
	562, 2789,
	563, 2789,
	564, 2789,
	565, 2789,
	566, 2789,
	571, 2789,
	572, 2789,
	573, 2789,
	574, 2789,
	575, 2789,
	576, 2789,
	577, 2789,
	579, 2789,
	587, 2789,
	588, 2789,
	589, 2789,
	590, 2789,
	591, 2789,
	592, 2789,
	594, 2789,
	595, 2789,
	596, 2789,
	597, 2789,
	598, 2789,
	599, 2789,
	600, 2789,
	601, 2789,
	602, 2789,
	605, 2789,
	608, 2789,
	609, 2789,
	611, 2789,
	612, 2789,
	-2, 0,
	-1, 1654,
	190, 2668,
	523, 2668,
	589, 2668,
	609, 2668,
	-2, 0,
	-1, 1707,
	399, 898,
	465, 898,
	507, 898,
	528, 898,
	-2, 0,
	-1, 1718,
	1, 1416,
	606, 1416,
	608, 1416,
	610, 1416,
	-2, 0,
	-1, 1735,
	1, 893,
	606, 893,
	608, 893,
	610, 893,
	-2, 0,
	-1, 1736,
	1, 937,
	606, 937,
	608, 937,
	610, 937,
	-2, 0,
	-1, 1737,
	1, 945,
	606, 945,
	608, 945,
	610, 945,
	-2, 0,
	-1, 1740,
	1, 902,
	606, 902,
	608, 902,
	610, 902,
	-2, 0,
	-1, 1742,
	1, 908,
	606, 908,
	608, 908,
	610, 908,
	-2, 0,
	-1, 1745,
	1, 904,
	606, 904,
	608, 904,
	610, 904,
	-2, 0,
	-1, 1750,
	1, 918,
	606, 918,
	608, 918,
	610, 918,
	-2, 0,
	-1, 1781,
	1, 2651,
	606, 2651,
	608, 2651,
	609, 2651,
	610, 2651,
	-2, 0,
	-1, 1785,
	1, 992,
	606, 992,
	608, 992,
	610, 992,
	-2, 0,
	-1, 1802,
	1, 1466,
	610, 1466,
	-2, 1471,
	-1, 1805,
	172, 1625,
	185, 1625,
	276, 1625,
	347, 1625,
	-2, 1563,
	-1, 1905,
	152, 1584,
	172, 1584,
	185, 1584,
	243, 1584,
	276, 1584,
	347, 1584,
	357, 1584,
	540, 1584,
	-2, 2035,
	-1, 1966,
	608, 2210,
	-2, 0,
	-1, 2001,
	152, 1584,
	172, 1584,
	185, 1584,
	243, 1584,
	276, 1584,
	347, 1584,
	357, 1584,
	540, 1584,
	-2, 1717,
	-1, 2041,
	523, 2665,
	609, 2665,
	612, 2665,
	-2, 0,
	-1, 2058,
	607, 1858,
	-2, 1846,
	-1, 2090,
	190, 2665,
	609, 2665,
	612, 2665,
	-2, 0,
	-1, 2133,
	1, 704,
	610, 704,
	-2, 1471,
	-1, 2278,
	225, 262,
	-2, 2358,
	-1, 2279,
	225, 263,
	-2, 315,
	-1, 2388,
	1, 895,
	606, 895,
	608, 895,
	610, 895,
	-2, 0,
	-1, 2389,
	1, 939,
	606, 939,
	608, 939,
	610, 939,
	-2, 0,
	-1, 2390,
	1, 947,
	606, 947,
	608, 947,
	610, 947,
	-2, 0,
	-1, 2391,
	1, 994,
	606, 994,
	608, 994,
	610, 994,
	-2, 0,
	-1, 2432,
	1, 920,
	606, 920,
	608, 920,
	610, 920,
	-2, 0,
	-1, 2452,
	1, 977,
	606, 977,
	608, 977,
	610, 977,
	-2, 0,
	-1, 2499,
	444, 1652,
	445, 1652,
	-2, 1891,
	-1, 2530,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1911,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1912,
	-1, 2532,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1913,
	-1, 2533,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1914,
	-1, 2534,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1915,
	-1, 2535,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1916,
	-1, 2536,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1917,
	-1, 2537,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1918,
	-1, 2549,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1930,
	-1, 2550,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1931,
	-1, 2551,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1932,
	-1, 2555,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1939,
	-1, 2561,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1943,
	-1, 2563,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1951,
	-1, 2564,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1952,
	-1, 2565,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1953,
	-1, 2566,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1954,
	-1, 2740,
	5, 2362,
	190, 2221,
	607, 2359,
	-2, 2350,
	-1, 2741,
	190, 2222,
	-2, 2740,
	-1, 2742,
	190, 2223,
	-2, 2552,
	-1, 2743,
	190, 2224,
	-2, 2432,
	-1, 2744,
	190, 2225,
	-2, 2490,
	-1, 2745,
	190, 2226,
	-2, 2537,
	-1, 2746,
	190, 2227,
	-2, 2663,
	-1, 2747,
	190, 2228,
	-2, 2018,
	-1, 2818,
	1, 1718,
	2, 1718,
	106, 1718,
	152, 1718,
	172, 1718,
	185, 1718,
	191, 1718,
	209, 1718,
	212, 1718,
	239, 1718,
	243, 1718,
	254, 1718,
	272, 1718,
	276, 1718,
	315, 1718,
	347, 1718,
	351, 1718,
	357, 1718,
	434, 1718,
	438, 1718,
	540, 1718,
	551, 1718,
	568, 1718,
	569, 1718,
	570, 1718,
	580, 1718,
	606, 1718,
	608, 1718,
	610, 1718,
	612, 1718,
	-2, 1717,
	-1, 2831,
	607, 2331,
	-2, 2345,
	-1, 2833,
	1, 332,
	568, 332,
	-2, 1611,
	-1, 2863,
	607, 1857,
	-2, 1847,
	-1, 3056,
	1, 1319,
	429, 1276,
	467, 1276,
	583, 1276,
	606, 1319,
	608, 1319,
	610, 1319,
	-2, 1611,
	-1, 3231,
	352, 1655,
	-2, 2779,
	-1, 3232,
	352, 1656,
	-2, 2648,
	-1, 3236,
	444, 2287,
	445, 2287,
	-2, 2016,
	-1, 3237,
	444, 2291,
	445, 2291,
	-2, 2017,
	-1, 3238,
	444, 2288,
	445, 2288,
	-2, 2016,
	-1, 3239,
	444, 2292,
	445, 2292,
	-2, 2017,
	-1, 3252,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1941,
	-1, 3253,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1945,
	-1, 3259,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1947,
	-1, 3486,
	1, 699,
	606, 699,
	608, 699,
	610, 699,
	-2, 1471,
	-1, 3663,
	43, 2322,
	-2, 1064,
	-1, 3668,
	1, 1319,
	606, 1319,
	608, 1319,
	610, 1319,
	-2, 1611,
	-1, 3773,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1949,
	-1, 3780,
	248, 0,
	250, 0,
	337, 0,
	-2, 1968,
	-1, 3848,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1997,
	-1, 3849,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1998,
	-1, 3850,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1999,
	-1, 3854,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2003,
	-1, 3855,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2004,
	-1, 3856,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2005,
	-1, 3904,
	607, 2332,
	-2, 2346,
	-1, 4098,
	609, 2896,
	-2, 1537,
	-1, 4153,
	248, 0,
	250, 0,
	337, 0,
	-2, 1969,
	-1, 4156,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1972,
	-1, 4157,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1974,
	-1, 4266,
	609, 2347,
	-2, 1354,
	-1, 4426,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1973,
	-1, 4427,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1975,
	-1, 4438,
	248, 0,
	-2, 2008,
	-1, 4626,
	248, 0,
	-2, 2009,
	-1, 4843,
	50, 0,
	222, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 2743,
}

const sqlPrivate = 57344

const sqlLast = 137772

var sqlAct = [...]int{
	274, 3652, 4780, 4959, 5034, 1353, 2995, 3390, 4888, 3128,
	4494, 4664, 4672, 4779, 4904, 4842, 4854, 2928, 3141, 4973,
	4736, 4829, 4811, 3651, 4714, 2102, 4793, 4790, 4770, 1544,
	2275, 4856, 4855, 4136, 4913, 2970, 4596, 4570, 4541, 3813,
	4841, 4476, 2182, 4387, 4557, 4262, 1277, 3914, 2352, 4630,
	4376, 4340, 4382, 4314, 4447, 4499, 2509, 3765, 3685, 1345,
	3504, 4415, 3098, 4367, 1571, 4090, 4082, 2364, 4369, 3507,
	2362, 4010, 4360, 1266, 4263, 828, 2929, 4579, 1097, 1343,
	4243, 2578, 4699, 3245, 1814, 4392, 1350, 4037, 4056, 4039,
	3010, 3565, 3636, 4443, 3679, 2773, 2517, 1154, 788, 3625,
	1672, 1411, 716, 828, 2045, 3641, 3153, 2115, 3510, 3718,
	1088, 3117, 3087, 2360, 2325, 3716, 2190, 3114, 3640, 3618,
	3643, 2046, 1336, 2510, 3112, 3617, 2025, 2845, 3436, 3413,
	3396, 3907, 3405, 1504, 4192, 1096, 182, 3148, 3373, 4135,
	3443, 2264, 907, 3394, 2262, 3143, 3129, 3063, 2202, 4889,
	903, 4, 2218, 825, 3372, 3529, 1150, 727, 2514, 1976,
	2811, 2007, 3874, 1913, 898, 1952, 1883, 3147, 268, 4631,
	2591, 3229, 823, 3027, 1348, 1610, 2263, 3091, 2656, 2246,
	2239, 784, 2813, 2258, 3099, 1147, 1392, 2170, 2174, 1322,
	2969, 1802, 2113, 2647, 2791, 1152, 1715, 1257, 267, 2160,
	2481, 2810, 2575, 2498, 1977, 2479, 2846, 1647, 3122, 1670,
	2312, 761, 1613, 2952, 829, 830, 2953, 4737, 976, 2915,
	1379, 2874, 2650, 1260, 2781, 1573, 2736, 3644, 1993, 2770,
	182, 1947, 703, 2800, 2628, 1239, 725, 1996, 2702, 1897,
	1815, 1274, 2480, 834, 1816, 1986, 2482, 769, 191, 1750,
	192, 1735, 1256, 2272, 780, 2338, 924, 1333, 2311, 1539,
	1645, 1638, 1512, 4905, 720, 4960, 2503, 111, 1128, 2658,
	44, 834, 43, 837, 717, 41, 729, 32, 30, 744,
	28, 1821, 1237, 1262, 3282, 818, 1801, 997, 879, 3888,
	1550, 3889, 2104, 3276, 2104, 2104, 3392, 2104, 4851, 2104,
	880, 837, 163, 5045, 2104, 5037, 3915, 2790, 4219, 3704,
	73, 5025, 46, 45, 5024, 2790, 1543, 1741, 2790, 4993,
	4991, 1681, 4933, 4498, 4498, 4890, 2284, 74, 4880, 4891,
	158, 4878, 2790, 4875, 4872, 2790, 4467, 4876, 4873, 4464,
	3694, 4839, 4838, 79, 1092, 2284, 2284, 4837, 2125, 4461,
	2125, 3158, 3343, 3344, 67, 4827, 4825, 3695, 4820, 4498,
	4498, 48, 4582, 160, 4815, 1092, 3704, 2284, 4498, 1829,
	1830, 1254, 4814, 4788, 4756, 4749, 4498, 4498, 2854, 2790,
	4748, 47, 4741, 88, 2790, 4713, 2284, 4710, 1388, 2284,
	4693, 4498, 1860, 3471, 4330, 3453, 4628, 1269, 4610, 1832,
	2854, 4572, 4119, 4517, 4516, 4573, 2125, 2284, 2284, 1082,
	50, 68, 3468, 4505, 4504, 1240, 1240, 2284, 4498, 51,
	2361, 3244, 4497, 4454, 57, 1885, 4498, 2284, 4428, 161,
	2876, 1073, 2854, 1072, 1831, 1388, 4403, 49, 2122, 110,
	3158, 1292, 2790, 4400, 1851, 94, 107, 3704, 4309, 4757,
	4289, 4155, 2790, 1848, 2790, 2854, 4106, 2783, 4100, 4053,
	3711, 1093, 3711, 4054, 3899, 3897, 3881, 3878, 3900, 3898,
	2790, 3797, 94, 1300, 1663, 2284, 3793, 1087, 3710, 3389,
	2790, 3384, 3711, 2790, 2122, 2790, 3383, 52, 3334, 3332,
	2790, 3324, 3335, 3333, 3322, 3325, 3291, 3293, 2790, 3157,
	1552, 2790, 3292, 3158, 1552, 95, 3139, 3138, 2899, 4149,
	2348, 2348, 2790, 2850, 2853, 2653, 1241, 1564, 2854, 2125,
	4632, 2843, 2835, 2789, 3349, 2790, 2284, 2790, 4623, 4611,
	1293, 1854, 1855, 1856, 1857, 2347, 1243, 4582, 1244, 2348,
	238, 1837, 3158, 3343, 3344, 3878, 2782, 4380, 4330, 2122,
	4290, 4119, 4055, 3002, 2195, 2125, 2914, 2139, 2103, 2119,
	3093, 1293, 2283, 3020, 2912, 1972, 1538, 3989, 3768, 3741,
	1994, 2251, 3696, 1717, 1829, 1830, 2827, 1862, 1863, 1864,
	1873, 1874, 1875, 2826, 2825, 2824, 2823, 1829, 1830, 240,
	1859, 1861, 3697, 238, 1245, 1242, 1866, 1860, 1081, 2790,
	1080, 1079, 1078, 1077, 1832, 1076, 1075, 1071, 2654, 1070,
	1069, 1068, 3202, 1879, 1067, 1846, 1847, 1832, 4865, 1066,
	3281, 1065, 1064, 1063, 1062, 1061, 1060, 3343, 3344, 1059,
	1885, 3359, 1058, 1057, 1056, 1055, 1054, 239, 1036, 1831,
	974, 973, 240, 972, 971, 970, 969, 968, 1852, 1851,
	967, 232, 1831, 966, 99, 965, 964, 1552, 1848, 2105,
	233, 2105, 2105, 963, 2105, 962, 2105, 961, 960, 3125,
	959, 2105, 53, 958, 957, 956, 955, 954, 953, 952,
	951, 950, 949, 948, 947, 946, 945, 56, 193, 2655,
	239, 2652, 59, 944, 943, 942, 941, 940, 939, 928,
	927, 926, 69, 922, 921, 914, 913, 912, 1882, 58,
	190, 102, 897, 896, 106, 3349, 853, 852, 54, 851,
	2122, 850, 162, 841, 840, 1882, 839, 838, 1558, 804,
	55, 795, 794, 1563, 793, 775, 1854, 1855, 1856, 1857,
	238, 193, 262, 1149, 3107, 261, 1837, 260, 62, 1143,
	259, 258, 257, 153, 256, 255, 4864, 254, 2122, 1837,
	253, 2122, 1355, 1152, 252, 251, 250, 238, 249, 159,
	248, 247, 246, 899, 238, 245, 244, 4210, 238, 3694,
	153, 1858, 243, 242, 241, 1870, 4167, 3360, 1880, 240,
	1152, 1152, 1152, 3924, 3893, 1859, 1861, 3712, 3439, 3349,
	73, 3304, 902, 901, 1853, 1543, 3287, 3278, 1414, 4394,
	3182, 1876, 1152, 1877, 157, 1293, 240, 74, 3073, 1355,
	1846, 1847, 3359, 240, 1529, 2858, 2832, 240, 1126, 194,
	1997, 3387, 1955, 79, 2122, 2817, 2685, 239, 1868, 1954,
	2125, 2683, 2886, 2103, 1152, 2122, 1152, 2119, 1152, 1955,
	2657, 232, 2474, 1852, 1383, 1576, 1954, 2471, 2424, 1828,
	233, 2168, 2124, 1884, 239, 2020, 2669, 1958, 1396, 1397,
	1398, 239, 1924, 88, 3388, 239, 4861, 2667, 232, 2782,
	1796, 1355, 1743, 1546, 1953, 232, 1615, 233, 193, 232,
	4840, 3, 4824, 1522, 233, 1293, 1400, 1276, 233, 1882,
	1878, 1576, 4721, 4620, 4635, 4489, 3359, 4442, 1576, 1915,
	4614, 4401, 4612, 4379, 905, 193, 1922, 1152, 4225, 1152,
	1517, 4190, 193, 1915, 1576, 1685, 193, 49, 1667, 110,
	1882, 238, 1152, 1509, 1152, 94, 107, 3353, 3345, 3346,
	3347, 3348, 3350, 3351, 1557, 1327, 1330, 4189, 4183, 1849,
	1845, 4182, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 4181, 1619, 1622, 1375, 4174, 1340, 2651, 4173, 4171,
	4166, 4163, 1361, 4162, 238, 1377, 4052, 3928, 3360, 4066,
	240, 3927, 1576, 1882, 1268, 3926, 1858, 3903, 3869, 3868,
	1272, 3867, 1527, 3789, 1542, 95, 3109, 3784, 3434, 2867,
	834, 238, 1152, 3380, 1407, 1152, 1501, 1506, 1625, 1853,
	3371, 3342, 2604, 2605, 2606, 2623, 2624, 2625, 1829, 1830,
	4396, 3339, 3338, 240, 3336, 1829, 1830, 3331, 239, 3330,
	837, 3329, 2626, 3326, 1369, 3323, 1871, 182, 182, 3303,
	3286, 1860, 232, 1917, 3460, 3279, 1541, 1540, 1832, 3277,
	240, 233, 3140, 1608, 2818, 1832, 2640, 1828, 1253, 1829,
	1830, 2328, 3360, 2291, 1827, 1885, 1650, 1652, 1884, 1270,
	1916, 239, 1914, 2289, 1885, 3987, 5040, 4067, 1686, 193,
	4982, 4981, 1860, 1831, 2616, 232, 2587, 4903, 4901, 1832,
	1831, 1278, 3815, 2612, 233, 4781, 4698, 4684, 239, 4680,
	4679, 4678, 4658, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1383, 232, 1095, 1383, 1885, 4657, 1551, 4655, 4634,
	4633, 233, 193, 4608, 1831, 2581, 1648, 3352, 3353, 3345,
	3346, 3347, 3348, 3350, 3351, 4594, 1152, 4591, 4590, 4637,
	1869, 4583, 1152, 4568, 99, 4567, 3385, 4513, 1641, 3124,
	1843, 1844, 1850, 1872, 1849, 1845, 4484, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 4440, 4423, 1093, 4422,
	4636, 2617, 2618, 2619, 2620, 1835, 1836, 1838, 1839, 4363,
	4356, 2611, 4353, 1806, 4331, 238, 4209, 4188, 3343, 3344,
	1837, 4120, 3975, 3974, 3957, 3956, 1691, 1837, 1829, 1830,
	190, 102, 3108, 1759, 106, 3343, 3344, 3954, 1662, 3884,
	3354, 3352, 3353, 3345, 3346, 3347, 3348, 3350, 3351, 3872,
	3779, 1860, 1902, 1680, 3713, 3705, 3671, 3584, 1832, 3540,
	238, 1837, 3509, 3462, 240, 1800, 3308, 4067, 906, 1859,
	1861, 3307, 3302, 153, 3268, 3086, 1961, 1152, 1152, 1152,
	1960, 1959, 1956, 1152, 1885, 2621, 2622, 1948, 1946, 2865,
	1274, 2864, 1274, 1831, 2829, 2822, 2788, 2665, 1901, 2019,
	1975, 1708, 1970, 1969, 1968, 1967, 4395, 1414, 1966, 240,
	1859, 1861, 239, 1965, 1964, 1963, 1962, 1974, 2614, 1152,
	1744, 1943, 828, 1355, 1942, 1904, 232, 1852, 2063, 828,
	1552, 1355, 1807, 1355, 157, 233, 1941, 1940, 2023, 1939,
	1938, 1937, 1936, 1935, 1934, 238, 1933, 1932, 1931, 194,
	1930, 1929, 1928, 1917, 1903, 1900, 1895, 239, 1368, 1297,
	1803, 1811, 1639, 193, 1288, 1810, 4366, 4221, 1852, 4159,
	3923, 232, 3896, 3887, 39, 1073, 3290, 1072, 1983, 2820,
	233, 4462, 2856, 2109, 2031, 4223, 2111, 1805, 1829, 1830,
	3349, 3922, 2116, 1355, 240, 1644, 2118, 1957, 1916, 1152,
	1837, 2121, 1824, 1825, 1882, 3458, 4292, 3349, 900, 2042,
	1898, 1882, 238, 3700, 2036, 238, 2015, 2092, 1832, 2094,
	2159, 2030, 2004, 1152, 2996, 2057, 3343, 3344, 1393, 182,
	2159, 1414, 2024, 1093, 2159, 3431, 4979, 1980, 1981, 1395,
	2184, 4972, 239, 4681, 4584, 1882, 1269, 4575, 1269, 1859,
	1861, 1240, 4574, 1831, 1949, 1950, 232, 2157, 4857, 238,
	4399, 240, 3343, 3344, 240, 233, 4334, 4333, 4332, 4291,
	4212, 4126, 2684, 1383, 2615, 2037, 4125, 2682, 4124, 2127,
	4123, 4122, 2086, 1853, 4121, 3891, 2974, 2151, 2150, 3890,
	834, 2159, 2161, 193, 2131, 2130, 3715, 834, 2028, 3714,
	3707, 2166, 2668, 4929, 3706, 1394, 4927, 1852, 240, 239,
	1388, 2229, 239, 2666, 3359, 2002, 1995, 3766, 1955, 4615,
	837, 4613, 4580, 232, 1853, 1954, 232, 837, 4070, 1997,
	2005, 4001, 233, 1884, 1707, 233, 3328, 1798, 1388, 3327,
	4488, 3250, 1884, 2956, 3574, 1938, 2107, 1391, 1923, 3025,
	2248, 1973, 2145, 3972, 3511, 1938, 239, 1052, 1760, 1093,
	193, 1926, 1716, 193, 2014, 4949, 2013, 1576, 1576, 2012,
	232, 2010, 2009, 1999, 2008, 3543, 2353, 1414, 1388, 233,
	3654, 2265, 3653, 1884, 1882, 4571, 2380, 4060, 2043, 4886,
	4868, 1882, 2653, 4853, 2133, 4377, 3626, 3154, 3349, 1717,
	238, 2266, 4074, 1053, 238, 4049, 4007, 193, 3998, 3980,
	2154, 3738, 3484, 2648, 4444, 2601, 2602, 2603, 2627, 2613,
	2607, 2358, 2609, 2610, 2608, 2595, 2596, 2597, 2598, 2599,
	2600, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	3392, 1833, 1834, 1835, 1836, 1838, 1839, 3817, 1643, 240,
	2954, 3296, 2129, 240, 4862, 2863, 2225, 1971, 2233, 1951,
	2329, 3634, 2322, 1853, 2243, 2228, 1618, 2276, 2281, 1534,
	3360, 2134, 3459, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 2998, 1576, 1364, 1576, 2654, 1576, 2235, 2162, 4508,
	2152, 1326, 3017, 1252, 4877, 4874, 3690, 239, 2195, 3948,
	4277, 239, 2189, 3014, 1576, 1576, 4673, 1378, 4274, 4383,
	4787, 232, 1644, 2238, 4480, 232, 4651, 1576, 3514, 2201,
	233, 4863, 1884, 3967, 233, 3121, 3609, 2156, 3012, 1576,
	4931, 1576, 1576, 1576, 4964, 1695, 4930, 834, 4511, 2268,
	2269, 4507, 1032, 4910, 2238, 3488, 1758, 892, 193, 4486,
	2238, 3760, 193, 4537, 3181, 828, 4279, 2223, 1593, 2236,
	1585, 1395, 2270, 1050, 1048, 2155, 2655, 837, 2652, 2900,
	2193, 4020, 2489, 2452, 2146, 2449, 2318, 1152, 2379, 1046,
	1044, 5036, 1882, 1541, 1540, 3065, 4688, 2918, 1041, 4530,
	2323, 2438, 2436, 4519, 4323, 4322, 4018, 2335, 4546, 1536,
	1389, 1389, 2916, 2222, 2234, 2219, 3347, 3348, 3350, 3351,
	2242, 4017, 1152, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	4009, 3345, 3346, 3347, 3348, 3350, 3351, 1394, 2282, 2450,
	3995, 2356, 2487, 2384, 2918, 3994, 1389, 266, 1757, 4019,
	3992, 3991, 2372, 3118, 3979, 1594, 3943, 3942, 1152, 2916,
	1152, 3615, 3614, 2343, 893, 2473, 2451, 1152, 3576, 3452,
	2063, 2063, 1414, 1091, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	2345, 1152, 2304, 1152, 1152, 1152, 1152, 1648, 2409, 1648,
	2303, 2332, 3572, 4509, 2366, 1641, 4273, 2340, 1693, 2340,
	1385, 1385, 2341, 834, 2337, 3511, 2266, 2657, 3301, 1152,
	2491, 2353, 4275, 1152, 1152, 767, 3300, 2478, 4481, 1369,
	1756, 1152, 2349, 4965, 2350, 1152, 2237, 1152, 1152, 1093,
	2857, 1093, 4911, 837, 1090, 1414, 1385, 2057, 2057, 3299,
	1395, 1152, 1152, 1152, 1152, 1643, 767, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 3298, 2371, 2237, 3254, 1839,
	2573, 2515, 2516, 2237, 2488, 3023, 3343, 3344, 3542, 3022,
	2388, 3019, 2978, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 2399, 4293, 1390, 1390, 1152, 3008, 3000, 2971,
	2972, 2571, 3345, 3346, 3347, 3348, 3350, 3351, 1274, 2971,
	2972, 2990, 3490, 2971, 2972, 1414, 1394, 2989, 2629, 2630,
	2194, 2984, 2432, 1268, 1274, 1268, 1709, 2983, 2982, 1272,
	1390, 1272, 2629, 2645, 2651, 2961, 1739, 2960, 4547, 2502,
	1152, 1414, 2922, 3351, 2844, 2931, 2562, 1804, 2486, 2191,
	4545, 3358, 2029, 1386, 1386, 2220, 4543, 1197, 1092, 2693,
	4967, 1739, 1387, 1387, 2648, 3573, 2698, 1537, 2697, 2477,
	2163, 2164, 2475, 2476, 2519, 2490, 4421, 2483, 2739, 2739,
	2753, 2302, 2629, 2187, 4230, 2774, 2776, 2958, 2593, 1386,
	1073, 2780, 2506, 1073, 1073, 2507, 2508, 1631, 1387, 1630,
	2644, 1797, 2389, 2871, 4542, 2805, 2848, 1629, 1270, 1628,
	1270, 2461, 1688, 2192, 1038, 715, 1717, 2489, 3739, 2847,
	1717, 2195, 2464, 4235, 2469, 2376, 3951, 1736, 1360, 1794,
	2226, 4544, 4930, 1602, 1589, 2830, 4276, 1312, 2797, 2907,
	2175, 710, 2188, 2567, 1738, 2176, 1355, 1355, 3349, 895,
	894, 2894, 3197, 2881, 2004, 766, 2589, 2231, 3161, 2885,
	4968, 2280, 2934, 3016, 1269, 2390, 2568, 802, 2870, 1738,
	1607, 2642, 2569, 2896, 2221, 1240, 2574, 2487, 4258, 1773,
	1269, 2945, 1692, 4666, 1024, 2577, 766, 4234, 1093, 1414,
	1737, 3487, 1769, 3208, 1755, 3015, 2577, 2015, 1093, 2442,
	182, 2796, 1093, 2892, 2834, 4859, 3013, 3227, 1086, 1549,
	2748, 1556, 4251, 1562, 2873, 2851, 1145, 2396, 1809, 2889,
	2735, 2765, 3976, 3242, 2063, 2786, 2787, 2819, 2778, 1383,
	1689, 3011, 2430, 2895, 2559, 2869, 2463, 1705, 2695, 1388,
	1388, 1089, 1367, 2696, 2802, 2803, 2699, 2002, 2700, 2701,
	4997, 2804, 4966, 2809, 2798, 3359, 2815, 2816, 2393, 2177,
	2888, 2485, 2387, 1957, 2897, 768, 2944, 4252, 2903, 2917,
	4970, 3265, 1414, 2342, 1694, 1388, 2585, 2181, 1042, 1042,
	3748, 800, 1661, 2583, 1666, 3747, 4029, 3199, 1355, 4643,
	2905, 1093, 2657, 3056, 1042, 1043, 768, 1679, 3559, 1684,
	1025, 2923, 3263, 1042, 2866, 2437, 2435, 3211, 4668, 1152,
	1152, 4321, 1152, 3964, 3993, 1614, 2880, 2891, 2195, 3806,
	2883, 2057, 2884, 3990, 1949, 1950, 3931, 2906, 1110, 2488,
	4976, 2397, 1882, 4271, 3918, 2875, 828, 2898, 1355, 2859,
	3621, 2921, 2920, 3097, 4030, 2964, 3613, 2890, 2904, 929,
	4420, 3570, 2178, 2183, 3018, 3551, 3560, 2921, 3241, 2981,
	3090, 2957, 1752, 2570, 1742, 937, 2933, 2979, 1612, 1576,
	2963, 2959, 842, 2572, 4258, 930, 2288, 2287, 3009, 2901,
	3132, 4942, 1576, 4860, 1576, 2460, 2470, 4028, 3234, 3235,
	2193, 4951, 3105, 3149, 4950, 3060, 4999, 2217, 849, 3558,
	890, 1576, 889, 2486, 2948, 2842, 2557, 2230, 4251, 2560,
	3068, 3360, 4244, 3552, 4918, 3070, 2936, 2939, 2962, 2973,
	2975, 2976, 2977, 2926, 2232, 1355, 2988, 1355, 1770, 4242,
	4141, 2980, 3962, 3742, 4140, 2179, 3024, 1024, 4246, 3162,
	3163, 3057, 3058, 3210, 3260, 3622, 3687, 1030, 1029, 1152,
	3169, 3170, 3171, 3061, 3688, 2227, 3550, 3101, 3205, 2556,
	2229, 1086, 2987, 4252, 3619, 2104, 2994, 1591, 2992, 4969,
	4765, 2999, 834, 3261, 3207, 4247, 3006, 3266, 4753, 4471,
	2657, 4248, 3155, 2997, 2249, 2252, 2185, 3185, 4858, 3095,
	2259, 4253, 711, 4831, 1026, 4832, 3059, 1985, 2224, 2986,
	3159, 801, 837, 182, 834, 3066, 3164, 4245, 3165, 3498,
	2462, 3183, 3977, 3184, 2932, 1152, 4674, 3146, 1541, 3071,
	2985, 1152, 1152, 1588, 2175, 3179, 1311, 4695, 2919, 2176,
	2261, 2231, 3136, 4250, 837, 3803, 3084, 3687, 3587, 3178,
	3493, 4269, 1614, 3152, 3094, 3489, 3151, 3134, 1767, 765,
	4254, 803, 1718, 1025, 3188, 799, 3190, 4272, 3192, 3354,
	3352, 3353, 3345, 3346, 3347, 3348, 3350, 3351, 3526, 2918,
	3127, 1771, 2232, 1535, 712, 4350, 3137, 1152, 1152, 1944,
	4667, 3209, 1989, 1152, 2937, 4974, 1295, 1344, 2260, 3213,
	4917, 3215, 3456, 3156, 1648, 3135, 1152, 1152, 2249, 931,
	932, 2230, 1152, 1152, 2253, 2395, 1282, 3216, 1152, 3606,
	3218, 3176, 3116, 2249, 2228, 2215, 3804, 4137, 1690, 1027,
	1039, 1284, 843, 844, 713, 3525, 714, 3187, 2011, 3189,
	1992, 3191, 3066, 3193, 3194, 3186, 4940, 1507, 2198, 2185,
	1521, 1344, 4995, 2177, 4433, 1987, 1028, 3256, 1279, 4798,
	2194, 4303, 2245, 1152, 1152, 1152, 3203, 2558, 2576, 1152,
	734, 2181, 3257, 1990, 3262, 2203, 1894, 1772, 4751, 1152,
	2180, 4247, 2431, 2216, 3264, 4417, 3530, 4248, 3306, 2244,
	1768, 4249, 2801, 5000, 2639, 1808, 1152, 4253, 2207, 3289,
	3233, 1985, 3222, 2833, 1285, 3620, 2199, 4975, 3224, 1031,
	1030, 1029, 3223, 4270, 1704, 1706, 1988, 2814, 915, 1366,
	1344, 1344, 4752, 2240, 2502, 3243, 2214, 1092, 3228, 3499,
	1286, 4259, 4260, 3819, 4370, 4896, 2392, 4984, 4365, 4250,
	2386, 3532, 2584, 4977, 920, 4897, 2178, 2183, 4131, 2197,
	4459, 4326, 3407, 2192, 4371, 2204, 4254, 1026, 2755, 3284,
	3285, 1268, 3919, 938, 3288, 4142, 3963, 1272, 1723, 1301,
	3762, 3280, 1283, 1299, 3225, 1989, 4715, 1268, 4803, 846,
	845, 2993, 2241, 1272, 4042, 4735, 1989, 2657, 1152, 1152,
	1152, 1152, 3255, 4593, 4040, 4325, 4324, 4088, 1152, 1152,
	1152, 1101, 1084, 1152, 1024, 4916, 3531, 4351, 3675, 933,
	934, 3470, 2841, 1152, 1274, 1414, 2310, 1982, 1298, 1152,
	1291, 1152, 1818, 1992, 3399, 3400, 4416, 702, 1086, 2179,
	1274, 4042, 4065, 1819, 1992, 1813, 4138, 2256, 2799, 1991,
	2505, 4040, 2105, 2196, 847, 848, 1270, 2147, 1414, 1987,
	3444, 4186, 5005, 4506, 4602, 2144, 1990, 3858, 3505, 4650,
	1274, 4089, 1270, 1414, 4013, 2208, 3996, 1990, 3909, 1818,
	3295, 3949, 3947, 4716, 1085, 1355, 3536, 4044, 3676, 1093,
	2185, 3667, 1027, 3501, 3106, 2063, 3100, 4249, 3088, 1414,
	3424, 2336, 2330, 2324, 2938, 2254, 2316, 2296, 3382, 1355,
	2295, 4587, 3802, 3939, 1582, 2965, 2495, 1355, 4043, 1028,
	1988, 1303, 3472, 774, 3401, 3873, 4771, 3763, 2921, 4738,
	1025, 4091, 3910, 2443, 4044, 2140, 1817, 4259, 4260, 1152,
	2142, 2209, 2210, 3437, 3534, 4388, 3474, 3085, 2255, 3476,
	3477, 1314, 4563, 1152, 3480, 4561, 3481, 2184, 3482, 3911,
	4483, 3908, 3406, 1355, 3517, 4043, 2205, 3513, 3500, 2063,
	3409, 3451, 1031, 3494, 3495, 3512, 1818, 4418, 916, 917,
	1269, 3438, 4368, 1817, 3248, 2143, 1152, 3535, 3415, 3226,
	3886, 2184, 2057, 2377, 3515, 3466, 1269, 3519, 3404, 3403,
	4143, 1355, 1280, 2369, 4895, 2359, 3548, 1819, 3411, 1746,
	1745, 1383, 2206, 2293, 2808, 3442, 3457, 3485, 3446, 3447,
	3448, 3449, 3430, 1355, 3433, 1355, 1269, 3393, 3562, 1894,
	3564, 3491, 1991, 3408, 3478, 3423, 1569, 3377, 3378, 3379,
	1740, 1152, 1152, 1991, 3575, 2248, 3410, 3516, 3913, 1414,
	3521, 3422, 2248, 3523, 1819, 2496, 1281, 3425, 3426, 4038,
	1355, 2840, 2839, 3859, 1355, 3598, 2057, 4187, 2838, 3604,
	3590, 3502, 3592, 3860, 2180, 3596, 5004, 1030, 1029, 3602,
	1817, 2837, 2836, 4717, 3416, 4144, 3497, 1623, 1637, 1656,
	3508, 2966, 2967, 4041, 1576, 1635, 3428, 936, 3429, 4048,
	1624, 3092, 1090, 4661, 4341, 1671, 3545, 1355, 1576, 4495,
	1576, 4586, 3475, 3940, 1414, 2792, 3549, 2942, 3568, 4061,
	3479, 828, 1576, 2175, 1026, 3955, 3547, 1724, 2176, 2334,
	2425, 1521, 3486, 1576, 3629, 2211, 3414, 3421, 3944, 3585,
	4041, 4937, 4565, 3492, 3639, 1355, 3728, 4469, 3561, 2795,
	3668, 4468, 3064, 3571, 3469, 3454, 3160, 3563, 3069, 3726,
	3067, 4708, 1274, 1699, 2363, 3681, 3912, 2265, 3683, 3719,
	3420, 1698, 4777, 4662, 3463, 3464, 3533, 3465, 918, 919,
	3659, 1521, 3149, 3541, 4491, 3597, 4478, 1576, 3666, 3603,
	2794, 3149, 4490, 3623, 3554, 2793, 3445, 4784, 4768, 1576,
	3875, 1576, 4193, 2664, 3557, 3555, 3588, 4216, 3624, 3556,
	3627, 2212, 1790, 773, 4700, 4564, 4496, 4460, 3610, 4805,
	4941, 4939, 3580, 4879, 1792, 4691, 3692, 4701, 4682, 3703,
	3586, 3674, 1789, 4479, 4466, 1787, 1764, 4439, 4227, 4185,
	3605, 3611, 2177, 2456, 3599, 4047, 3374, 2988, 1414, 1027,
	1762, 1414, 3730, 3778, 1734, 1732, 3736, 3740, 1730, 1728,
	2181, 4702, 1726, 4778, 4663, 3735, 3577, 1720, 3721, 1714,
	1712, 1633, 3467, 3612, 1083, 3750, 1028, 3337, 3417, 3418,
	3419, 3677, 3682, 3720, 3267, 1152, 3089, 3007, 2963, 834,
	3001, 1152, 1152, 3631, 2955, 1152, 1152, 1152, 2868, 1152,
	3616, 2465, 2354, 3945, 2022, 3684, 3733, 2018, 1152, 2063,
	3731, 3663, 3664, 3662, 182, 182, 1793, 1152, 1269, 837,
	1674, 2434, 1152, 4549, 2401, 3375, 3758, 4704, 1414, 1031,
	3757, 1636, 3689, 1813, 3201, 2178, 2183, 1152, 1634, 3729,
	935, 3698, 2274, 3701, 3702, 1414, 3200, 3167, 2484, 3691,
	4703, 1751, 3755, 2404, 2315, 2063, 2063, 1152, 1152, 3756,
	1152, 1152, 1152, 2294, 2093, 2091, 1927, 1687, 4705, 1606,
	2663, 3753, 4304, 4852, 4000, 2060, 3999, 3717, 1152, 4308,
	3759, 4288, 1152, 4767, 2063, 2063, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 2057, 1152, 3764, 3831,
	3734, 3832, 1791, 3781, 4386, 1152, 1152, 2063, 2179, 3589,
	1788, 4216, 1152, 1786, 1763, 3744, 2458, 3745, 4313, 3746,
	1040, 2457, 1093, 1152, 3791, 3792, 4301, 4240, 1761, 4239,
	3761, 3728, 1733, 1731, 1274, 1274, 1729, 1727, 1152, 4087,
	1725, 4078, 2057, 2057, 3726, 1719, 4016, 1713, 1711, 1632,
	2321, 3997, 3970, 3968, 3719, 2173, 3946, 3670, 3665, 2185,
	3655, 3119, 3680, 3111, 4914, 3104, 2515, 3822, 3096, 3082,
	1414, 2057, 2057, 3081, 1907, 3788, 3062, 3786, 1912, 3905,
	2887, 2882, 2292, 1355, 1355, 4381, 3798, 2290, 3727, 3722,
	3723, 3724, 3725, 2267, 2433, 2515, 3837, 2400, 1355, 1355,
	3892, 828, 1355, 3821, 2057, 2250, 3814, 3870, 3805, 3807,
	3808, 2213, 2200, 2171, 2186, 2273, 2126, 2123, 2120, 2117,
	2112, 1152, 3829, 2110, 2051, 3834, 3830, 2106, 3866, 2097,
	3799, 3937, 3836, 4909, 3600, 3938, 4836, 3730, 3877, 2259,
	1152, 3862, 4370, 2035, 1822, 3246, 4931, 2148, 4660, 3219,
	1249, 182, 2468, 3721, 3217, 3055, 2172, 1268, 3863, 4817,
	2136, 2137, 4371, 1272, 3882, 3883, 3871, 4729, 3720, 3916,
	3917, 1152, 1152, 1268, 4402, 3969, 1250, 3971, 4320, 1272,
	4231, 1045, 1047, 1049, 3929, 3930, 3150, 2167, 3936, 1587,
	1269, 1269, 3879, 3880, 4604, 2918, 2918, 2943, 2466, 4597,
	4099, 2195, 3809, 1268, 2391, 2333, 1335, 1152, 1152, 1272,
	2916, 2940, 4706, 1334, 3950, 1152, 2448, 4816, 4707, 3894,
	1784, 1785, 2428, 2423, 3729, 3828, 1160, 2398, 4280, 4315,
	1829, 1830, 1710, 4622, 4493, 4194, 2946, 1576, 1829, 1830,
	1576, 3247, 1270, 2180, 2467, 1355, 4172, 3528, 4015, 2947,
	4026, 2968, 1826, 3601, 3932, 1823, 1362, 1302, 1270, 4934,
	1832, 3895, 3074, 4887, 4925, 3077, 3981, 3079, 2947, 834,
	2063, 3985, 270, 270, 270, 3080, 705, 706, 263, 721,
	705, 721, 732, 2135, 4012, 772, 4075, 1251, 1270, 792,
	1335, 3986, 3988, 2317, 798, 1831, 1373, 4002, 1335, 837,
	4014, 270, 3014, 1831, 3012, 3021, 4011, 3005, 2951, 3003,
	4008, 4034, 1576, 3123, 3973, 3978, 3123, 4092, 1152, 2949,
	3004, 2950, 911, 4776, 4758, 699, 1274, 1152, 4728, 270,
	4722, 4101, 4659, 4588, 4556, 4057, 2963, 1576, 1576, 1576,
	4470, 4085, 3132, 4077, 1576, 1576, 1576, 4064, 2029, 3902,
	3669, 3126, 4031, 4032, 4108, 2779, 2132, 4071, 4046, 3149,
	4027, 2044, 3925, 4971, 4807, 4492, 1576, 2057, 4036, 4808,
	4025, 4045, 1414, 2991, 1533, 4096, 4093, 1532, 3455, 4050,
	5003, 3343, 3344, 3727, 3722, 3723, 3724, 3725, 4112, 4944,
	1697, 3508, 1829, 1830, 4724, 4024, 1696, 4063, 3195, 1414,
	4035, 4059, 1152, 1152, 2910, 2911, 2908, 2909, 1152, 1152,
	2063, 4116, 1412, 1152, 1152, 4081, 1152, 4807, 1543, 4164,
	3221, 1152, 4808, 2659, 4095, 3921, 2910, 2351, 2908, 4076,
	2694, 1766, 1152, 4084, 1765, 4589, 4531, 4317, 4312, 4311,
	4160, 3920, 3810, 4079, 3594, 2365, 2367, 3591, 1152, 1921,
	4072, 1920, 2472, 4988, 4094, 4952, 4822, 4762, 2370, 705,
	705, 4761, 4760, 4690, 4689, 4639, 4129, 270, 4127, 4103,
	2378, 4102, 2381, 2382, 2383, 4559, 1344, 4097, 4128, 4114,
	4107, 4145, 1269, 4113, 4523, 4463, 4457, 4358, 4338, 4146,
	4278, 4222, 4115, 4105, 4051, 1268, 3966, 2060, 2060, 3958,
	3673, 1272, 3672, 3522, 3473, 3206, 3198, 2057, 3175, 1274,
	3174, 4158, 3173, 3172, 4154, 3110, 3083, 1274, 2941, 2878,
	2872, 1414, 1414, 2861, 1414, 1344, 4139, 2860, 2849, 2588,
	2459, 1274, 2429, 2422, 2421, 2420, 2419, 2418, 2331, 2305,
	2301, 2300, 1576, 1576, 4199, 2299, 2298, 2297, 2100, 2099,
	2098, 2096, 2034, 2033, 1783, 1414, 1782, 1344, 1344, 1721,
	1601, 1600, 1599, 1598, 1597, 1596, 1595, 1590, 1586, 1584,
	1583, 1526, 1525, 1524, 1405, 1404, 4134, 1403, 1402, 1401,
	1270, 1365, 1321, 1320, 1319, 1274, 1318, 1274, 1317, 1316,
	4232, 4233, 1315, 1313, 4217, 4218, 1308, 1307, 1306, 1305,
	1304, 904, 8, 4184, 3437, 1232, 2138, 1051, 4220, 1037,
	1355, 4202, 4204, 4665, 4257, 4287, 4281, 4268, 4256, 4255,
	1414, 4226, 1355, 2455, 4229, 1355, 93, 4296, 1592, 866,
	4299, 87, 4267, 2257, 4283, 4284, 3965, 1152, 182, 4195,
	1414, 1003, 4804, 4694, 4196, 4197, 4198, 4200, 4201, 1567,
	874, 1507, 4786, 4191, 4073, 3524, 2051, 2051, 4264, 4208,
	4264, 3026, 2403, 1722, 4316, 1269, 4318, 4236, 4211, 2405,
	4282, 3432, 2821, 1269, 4750, 4168, 3305, 4629, 1576, 1576,
	4432, 2662, 4238, 1925, 4215, 3386, 89, 1269, 1521, 1136,
	4207, 4228, 1182, 4349, 4348, 4241, 3952, 3642, 4345, 4344,
	2048, 2050, 4342, 1100, 1417, 4830, 1355, 2149, 4994, 1142,
	2165, 4372, 2158, 2862, 2738, 1159, 1156, 2052, 1414, 4302,
	2054, 1158, 1157, 1576, 2053, 1945, 1155, 4339, 4389, 4319,
	4310, 2047, 4083, 3130, 4286, 3699, 1642, 4297, 1640, 1005,
	2153, 1269, 2582, 1269, 2646, 4336, 3294, 4295, 1918, 1116,
	4298, 1138, 1576, 1576, 1576, 1576, 1576, 1576, 4378, 4300,
	2643, 1296, 1127, 1115, 3412, 3391, 4329, 3686, 1414, 4373,
	3901, 2494, 884, 3340, 2649, 4335, 1287, 1268, 1268, 4337,
	1152, 1152, 1152, 1272, 1272, 4328, 2762, 4390, 2754, 2750,
	3483, 4327, 3120, 1799, 4446, 1896, 3131, 1795, 1414, 1399,
	1120, 2580, 1909, 1152, 4347, 4343, 1152, 1152, 4384, 4355,
	4393, 4364, 3272, 2504, 3693, 4354, 1152, 3435, 2855, 2063,
	4810, 3818, 3204, 4375, 1152, 1152, 2309, 1248, 1247, 1294,
	1246, 4792, 4789, 2586, 2247, 1521, 4391, 4352, 3637, 3638,
	2141, 1414, 4398, 1576, 2902, 2592, 1344, 3656, 1132, 1907,
	1520, 2447, 3751, 4407, 3397, 4062, 1603, 4411, 1355, 4404,
	4424, 797, 1270, 1270, 4500, 4412, 4405, 1144, 1881, 4419,
	3051, 2060, 3050, 4413, 4654, 1414, 1384, 1382, 1381, 1380,
	4961, 2021, 3961, 1152, 3960, 3959, 237, 3240, 1820, 1812,
	234, 236, 235, 4359, 3906, 3441, 1152, 4885, 3983, 1521,
	3628, 1521, 4429, 23, 2761, 1152, 22, 21, 116, 42,
	2063, 20, 155, 133, 152, 151, 2057, 125, 150, 1152,
	4452, 4453, 1152, 4441, 3537, 3538, 4435, 3539, 149, 148,
	147, 154, 146, 145, 1289, 140, 1152, 4514, 4515, 1152,
	4473, 144, 4474, 143, 4465, 142, 1414, 141, 139, 137,
	138, 132, 4503, 1355, 136, 135, 134, 131, 4539, 130,
	129, 128, 127, 1576, 1576, 1576, 126, 124, 1310, 156,
	4532, 4475, 4534, 2184, 4535, 4472, 123, 122, 3581, 3582,
	270, 3583, 270, 270, 1274, 1339, 270, 1349, 4482, 121,
	120, 119, 118, 117, 4548, 4455, 785, 4456, 1363, 786,
	4522, 61, 60, 4536, 115, 2169, 792, 2057, 113, 792,
	114, 3639, 19, 4558, 40, 14, 4569, 1414, 4577, 4520,
	1576, 65, 4562, 4525, 66, 4598, 18, 13, 35, 4566,
	2051, 4512, 92, 270, 105, 270, 270, 1339, 104, 270,
	270, 4524, 4533, 103, 1349, 36, 101, 100, 34, 4551,
	4550, 17, 4585, 1152, 1152, 4603, 4526, 4264, 270, 16,
	1545, 4560, 15, 98, 4553, 4554, 4581, 4555, 4540, 1268,
	1152, 2063, 97, 96, 33, 1272, 1565, 31, 4538, 11,
	4607, 4601, 4609, 1580, 4599, 9, 4576, 37, 2006, 12,
	5, 187, 1355, 186, 189, 1355, 185, 1355, 1355, 188,
	91, 184, 1605, 183, 90, 1349, 29, 4595, 10, 270,
	270, 4606, 1339, 4393, 4605, 1152, 4600, 1152, 179, 1152,
	4578, 4069, 82, 181, 180, 178, 177, 176, 83, 1274,
	80, 175, 86, 792, 174, 270, 270, 81, 85, 84,
	1269, 27, 1152, 6, 1274, 64, 7, 1668, 4618, 4619,
	4649, 2285, 3168, 4414, 1270, 3737, 108, 1675, 109, 4617,
	38, 78, 911, 77, 76, 75, 26, 63, 2057, 25,
	173, 218, 217, 4621, 216, 4627, 215, 214, 4638, 213,
	4647, 4640, 212, 4641, 4642, 4648, 211, 206, 210, 4677,
	208, 4644, 4686, 207, 209, 205, 4676, 228, 1274, 1274,
	227, 221, 4264, 4669, 220, 1152, 1152, 226, 225, 224,
	223, 4697, 222, 219, 4670, 1152, 231, 4264, 204, 203,
	202, 2499, 1274, 200, 196, 1274, 199, 201, 198, 1576,
	197, 195, 230, 4685, 229, 72, 171, 172, 71, 1576,
	270, 170, 169, 4711, 4712, 168, 167, 4687, 166, 165,
	164, 70, 1268, 1152, 1152, 24, 2, 1, 1272, 0,
	1268, 0, 0, 1152, 270, 0, 1272, 4732, 0, 0,
	4734, 4264, 4264, 4746, 1268, 4747, 4718, 4726, 4709, 4581,
	1272, 4725, 4692, 4719, 4720, 1269, 4723, 4731, 0, 0,
	0, 0, 0, 4739, 4743, 4264, 4740, 0, 4264, 0,
	1269, 0, 0, 4745, 4742, 0, 4744, 0, 0, 0,
	4755, 1152, 1152, 0, 0, 1152, 4763, 4759, 0, 1355,
	0, 0, 1355, 0, 1521, 1521, 0, 0, 1268, 0,
	1268, 0, 0, 4764, 1272, 0, 1272, 1270, 4766, 0,
	0, 0, 4791, 4794, 0, 1270, 4812, 0, 4754, 0,
	4774, 4775, 4809, 4813, 1269, 1269, 4806, 4783, 4782, 1270,
	0, 0, 0, 0, 0, 0, 0, 2756, 0, 0,
	0, 4800, 0, 0, 0, 4833, 0, 0, 1269, 4835,
	0, 1269, 1152, 1152, 1152, 0, 0, 0, 0, 0,
	4796, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 4818, 0, 4801, 4795, 0, 4802, 0,
	4799, 4823, 0, 1270, 4834, 1270, 4826, 0, 1152, 0,
	4866, 2321, 0, 4847, 4848, 0, 0, 0, 4850, 0,
	0, 4871, 0, 2761, 0, 0, 2518, 4849, 0, 0,
	0, 4867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2184, 0, 0, 0, 4892, 4881, 4893, 4883, 4894,
	0, 0, 4869, 0, 0, 705, 0, 4906, 4900, 4902,
	0, 0, 4884, 0, 1152, 0, 0, 0, 0, 4882,
	0, 0, 1355, 0, 0, 0, 270, 4899, 270, 4915,
	0, 4558, 270, 4898, 0, 0, 0, 0, 0, 4907,
	0, 4908, 0, 0, 4932, 1545, 1339, 2026, 270, 0,
	270, 2032, 4921, 4922, 2761, 2761, 4912, 4926, 270, 4928,
	721, 0, 2060, 0, 4924, 270, 4948, 0, 4935, 2660,
	0, 4936, 1274, 4938, 1274, 4947, 4946, 4791, 0, 4812,
	4794, 2101, 4955, 0, 4945, 0, 4957, 0, 4943, 1344,
	0, 0, 4953, 270, 4954, 0, 0, 0, 0, 4963,
	270, 0, 0, 0, 1829, 1830, 4962, 0, 4923, 0,
	0, 0, 1355, 0, 0, 0, 0, 4956, 4985, 4958,
	0, 4978, 4980, 0, 0, 0, 4987, 1860, 0, 4992,
	0, 4986, 0, 792, 1832, 0, 2060, 0, 0, 4990,
	0, 0, 1152, 1152, 0, 4264, 4998, 4264, 4989, 0,
	1152, 0, 1152, 1152, 3132, 4996, 0, 5001, 5014, 0,
	1885, 5007, 5016, 5013, 0, 2831, 0, 0, 5015, 1831,
	5018, 0, 5020, 5011, 5017, 5019, 5023, 5022, 0, 5010,
	0, 5021, 0, 0, 4080, 3132, 0, 0, 0, 1521,
	0, 1355, 5027, 0, 5028, 5032, 5031, 5035, 4983, 5029,
	5033, 5026, 5039, 5030, 0, 0, 0, 0, 0, 0,
	5041, 1152, 0, 5038, 0, 0, 0, 5042, 5035, 5044,
	5046, 2051, 0, 0, 0, 0, 0, 0, 1269, 0,
	1269, 0, 0, 0, 0, 0, 2761, 2761, 2761, 2761,
	0, 0, 0, 0, 0, 0, 0, 5008, 5009, 0,
	0, 4130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	0, 0, 0, 1272, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 3044, 0, 0,
	0, 270, 0, 0, 0, 270, 5043, 0, 0, 0,
	0, 0, 0, 2913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	3034, 3032, 0, 0, 0, 0, 0, 3036, 3038, 3028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3607, 0, 0, 0, 270,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 270,
	3052, 0, 0, 1852, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 3632, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 3660, 0, 0, 705, 0, 270,
	0, 0, 1268, 0, 0, 0, 0, 0, 1272, 0,
	0, 792, 0, 0, 0, 911, 0, 1268, 0, 0,
	0, 0, 0, 1272, 0, 0, 3230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 1339, 270, 3709, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3732, 792, 0, 0, 3269, 3270, 2060, 0, 270, 0,
	0, 1268, 1268, 0, 0, 0, 2402, 1272, 1272, 0,
	0, 270, 270, 0, 270, 0, 270, 1270, 270, 0,
	270, 0, 0, 0, 0, 1268, 0, 0, 1268, 0,
	0, 1272, 1270, 0, 1272, 0, 0, 2756, 2756, 0,
	4306, 3030, 2060, 2060, 0, 2439, 0, 0, 2440, 0,
	2441, 0, 3046, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 270, 270, 270, 270, 0, 0, 0, 0,
	0, 2060, 2060, 0, 3045, 3035, 3033, 3037, 3039, 3029,
	3031, 3047, 3049, 0, 0, 0, 1270, 1270, 1344, 0,
	0, 772, 3041, 3043, 0, 792, 0, 0, 0, 4357,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	1270, 0, 4374, 1270, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 3053, 0, 0, 0,
	0, 0, 0, 0, 0, 4397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 2321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 3367, 3368, 3369, 3370,
	0, 0, 0, 0, 0, 0, 0, 0, 2594, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 2051, 0, 0, 0, 0, 79, 0, 0,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 2756,
	2756, 2756, 2756, 0, 0, 0, 0, 0, 0, 0,
	2051, 2051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3048, 0, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 2761, 2761, 0, 3343, 3344, 705,
	3361, 3362, 3363, 2051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 4151,
	0, 0, 0, 705, 0, 0, 0, 0, 905, 0,
	270, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 110, 270, 0, 0, 3054, 0, 94,
	107, 0, 0, 0, 0, 0, 3040, 3042, 0, 0,
	0, 0, 0, 0, 0, 270, 1349, 0, 0, 0,
	0, 0, 3358, 0, 0, 1268, 0, 1268, 0, 0,
	0, 1272, 0, 1272, 2761, 2761, 2761, 2761, 2761, 2761,
	2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761,
	2761, 2761, 2761, 2761, 0, 2761, 0, 2060, 0, 95,
	0, 0, 0, 0, 270, 1349, 0, 0, 721, 0,
	721, 0, 0, 0, 2877, 0, 0, 0, 0, 0,
	270, 0, 0, 270, 0, 0, 0, 270, 0, 270,
	0, 0, 0, 0, 1339, 0, 270, 270, 0, 1349,
	1349, 2893, 0, 0, 0, 0, 270, 0, 0, 0,
	1270, 0, 1270, 0, 0, 0, 0, 0, 0, 3349,
	0, 1344, 0, 0, 0, 0, 0, 0, 4021, 0,
	0, 4022, 0, 0, 0, 0, 0, 0, 0, 3398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2930, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 3427, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 2321, 3365, 0, 0, 3440, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 792, 0, 0, 0, 0, 0, 1344, 99, 0,
	0, 0, 0, 3461, 0, 0, 2051, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 3359, 270, 4109, 4110,
	4111, 0, 0, 0, 0, 2365, 4117, 4118, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 3343, 3344, 0,
	3361, 3362, 3363, 4683, 0, 79, 0, 0, 0, 0,
	270, 3072, 0, 0, 190, 102, 0, 0, 106, 4150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4696, 0, 0, 0, 0, 0, 1545, 0, 0,
	270, 0, 270, 0, 238, 88, 0, 0, 0, 270,
	0, 0, 906, 1882, 0, 0, 0, 153, 0, 3115,
	0, 0, 0, 4730, 0, 0, 0, 0, 0, 2930,
	0, 705, 3358, 0, 0, 0, 0, 0, 0, 0,
	3144, 911, 2930, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 270, 0, 0, 2051, 94, 107, 0,
	0, 0, 0, 0, 3774, 3775, 272, 0, 157, 0,
	0, 0, 270, 1339, 270, 0, 0, 0, 0, 0,
	0, 0, 3360, 194, 1349, 270, 0, 0, 1339, 0,
	1339, 239, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 2756, 2756, 0,
	0, 0, 0, 0, 233, 0, 0, 95, 0, 3349,
	0, 0, 0, 0, 0, 0, 0, 0, 3440, 0,
	0, 0, 0, 4213, 4214, 0, 0, 270, 270, 270,
	270, 1339, 193, 0, 1339, 0, 270, 4819, 0, 0,
	0, 270, 0, 4821, 3838, 3839, 3840, 3841, 3842, 3843,
	3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853,
	3854, 3855, 3856, 3857, 0, 3861, 0, 0, 0, 0,
	0, 0, 270, 0, 3365, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 0, 2756, 0,
	0, 0, 0, 3355, 3356, 3357, 3359, 73, 0, 0,
	3354, 3352, 3353, 3345, 3346, 3347, 3348, 3350, 3351, 0,
	0, 0, 0, 0, 74, 0, 2852, 0, 0, 1829,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 1114, 3752, 0, 0, 1412, 99, 0, 0, 2365,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 1882, 0, 1885, 2060, 0, 0, 1521,
	0, 0, 0, 0, 1831, 0, 1545, 0, 0, 0,
	0, 0, 190, 102, 1851, 0, 106, 0, 0, 3343,
	3344, 0, 3361, 3362, 3363, 0, 0, 0, 0, 0,
	0, 905, 3795, 4406, 0, 4408, 4409, 4410, 0, 0,
	0, 3783, 238, 0, 49, 0, 110, 0, 0, 3811,
	906, 0, 94, 107, 1865, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 240, 0, 0, 3358, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 95, 0, 0, 1344, 157, 0, 0, 0,
	0, 0, 0, 0, 4458, 0, 0, 0, 0, 0,
	0, 194, 0, 805, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 232, 0, 2051, 0, 0, 816, 0,
	1859, 1861, 233, 0, 0, 0, 270, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 705, 0, 0, 705,
	0, 0, 705, 705, 3904, 0, 0, 0, 705, 0,
	193, 3349, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 3355, 3356, 3357, 0, 0, 1852, 0,
	3354, 3352, 3353, 3345, 3346, 3347, 3348, 3350, 3351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4552, 0, 2051, 0, 2060, 270,
	0, 810, 0, 270, 270, 0, 3365, 0, 822, 0,
	0, 99, 0, 0, 2761, 0, 0, 0, 0, 0,
	0, 0, 815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2930, 2930, 270, 0, 2026, 0, 0, 0,
	0, 0, 2930, 0, 2032, 1882, 0, 0, 3359, 73,
	0, 0, 0, 2930, 2032, 0, 2930, 2032, 0, 0,
	2032, 0, 0, 1865, 0, 0, 74, 190, 102, 0,
	0, 106, 0, 814, 270, 270, 2026, 0, 270, 0,
	0, 2761, 79, 0, 0, 0, 0, 0, 0, 0,
	767, 1829, 1830, 0, 0, 0, 0, 238, 2026, 0,
	270, 1858, 3567, 3567, 0, 906, 0, 1339, 0, 0,
	153, 0, 0, 0, 1860, 812, 0, 0, 0, 0,
	0, 1832, 88, 0, 1853, 1882, 0, 0, 0, 2930,
	0, 2930, 0, 3595, 2930, 2026, 0, 0, 2930, 2026,
	0, 0, 792, 0, 0, 0, 240, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 2051, 0, 0,
	0, 0, 0, 905, 0, 0, 1851, 0, 0, 0,
	0, 157, 1339, 821, 0, 1848, 49, 0, 110, 270,
	0, 0, 0, 1884, 94, 107, 194, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 270, 0, 3633,
	0, 0, 3635, 2930, 3360, 0, 270, 0, 232, 0,
	270, 0, 0, 1349, 0, 0, 1865, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 3777, 0, 3115, 0, 0, 1339, 0, 270, 0,
	0, 2930, 0, 705, 95, 1653, 0, 0, 0, 0,
	2930, 807, 1865, 1854, 1855, 1856, 1857, 0, 1865, 0,
	0, 0, 0, 1837, 1865, 0, 0, 0, 2761, 0,
	2365, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 811, 0, 0, 0, 0, 3343, 3344, 0,
	3361, 3362, 3363, 0, 0, 0, 1114, 1114, 1114, 3743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3782,
	73, 0, 1859, 1861, 1498, 2761, 0, 0, 0, 3749,
	766, 0, 1545, 0, 0, 1339, 270, 74, 270, 0,
	0, 0, 0, 0, 1339, 817, 0, 1846, 1847, 0,
	2761, 809, 0, 79, 0, 3355, 3356, 3357, 0, 0,
	0, 0, 3354, 3352, 3353, 3345, 3346, 3347, 3348, 3350,
	3351, 0, 3358, 0, 1865, 270, 0, 0, 0, 1865,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 88, 0, 0, 0, 1865, 4206, 806,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 813, 0, 0, 4224,
	0, 0, 0, 3816, 905, 0, 0, 0, 0, 0,
	768, 0, 0, 0, 4438, 0, 0, 0, 0, 110,
	0, 808, 0, 0, 0, 94, 107, 1882, 0, 190,
	102, 0, 1865, 106, 0, 0, 0, 0, 1865, 3349,
	0, 0, 0, 0, 0, 819, 820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2756, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 906, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 4485, 0, 1858, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 270, 0, 0, 3365, 0, 1853, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2756, 705, 705, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3359, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 270, 0, 0,
	232, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 1651, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 792,
	0, 0, 4430, 0, 0, 0, 0, 0, 0, 0,
	2760, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 1865, 0, 0, 0, 0, 4626, 1865,
	0, 0, 3567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4430, 0, 270, 0, 0,
	190, 102, 0, 0, 106, 0, 0, 0, 0, 0,
	1829, 1830, 3360, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	2026, 2756, 270, 0, 0, 4653, 721, 721, 1349, 2518,
	238, 0, 1866, 1860, 0, 0, 0, 0, 906, 0,
	1832, 270, 0, 153, 0, 0, 0, 1984, 0, 1879,
	4675, 0, 270, 3115, 0, 0, 3115, 2032, 0, 0,
	0, 0, 270, 0, 0, 0, 1885, 0, 2756, 0,
	0, 0, 270, 1498, 0, 1831, 0, 270, 0, 240,
	0, 0, 270, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 2756, 1848, 0, 0, 0, 0, 0,
	2518, 2930, 270, 0, 157, 0, 0, 0, 0, 0,
	0, 3144, 3144, 0, 0, 0, 0, 911, 2930, 194,
	0, 0, 0, 0, 0, 0, 0, 239, 3343, 3344,
	0, 3361, 3362, 3363, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 270, 0, 0, 0,
	233, 0, 0, 3355, 3356, 3357, 0, 0, 0, 0,
	3354, 3352, 3353, 3345, 3346, 3347, 3348, 3350, 3351, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 193, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 3358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 4169, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 1852,
	0, 1545, 0, 270, 0, 0, 0, 0, 0, 0,
	3349, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 1349, 0,
	270, 1349, 3366, 1498, 0, 0, 0, 0, 0, 2930,
	2930, 0, 3567, 2930, 0, 1867, 0, 0, 0, 0,
	0, 4266, 0, 4266, 1545, 3365, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 2930, 0, 2032, 0, 0,
	0, 1545, 1545, 270, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 270,
	2026, 0, 270, 0, 3567, 0, 0, 3359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 1858, 2930, 0, 2930, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2930, 2930, 0, 0, 0, 0, 3115, 3115, 0,
	0, 0, 1871, 0, 4361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 270, 0, 0, 1865, 0,
	0, 0, 1865, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 0, 0, 0, 0, 0, 1865, 0, 1865, 1865,
	1865, 1865, 0, 3360, 0, 0, 0, 0, 0, 0,
	2760, 2760, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 4177, 0, 0,
	0, 4176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3343, 3344, 0, 3361, 3362, 3363, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2930, 2032, 0, 2032,
	0, 0, 4477, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 1865, 0, 0, 1865,
	0, 4501, 1865, 4501, 0, 1865, 0, 0, 0, 0,
	0, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 3358, 792, 0, 0,
	0, 0, 0, 0, 3355, 3356, 3357, 0, 3567, 0,
	1339, 3354, 3352, 3353, 3345, 3346, 3347, 3348, 3350, 3351,
	0, 1498, 0, 0, 0, 0, 0, 0, 2026, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	3364, 0, 2760, 2760, 2760, 2760, 0, 4477, 0, 1865,
	4266, 1865, 0, 1545, 0, 0, 1865, 0, 0, 0,
	2930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4592, 1498, 0, 3349, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 1829, 1830, 0, 0, 0, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 1099, 1099,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 3816, 1832, 0, 0, 0, 0, 0, 3365, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3567, 4646, 1885, 0,
	0, 0, 0, 0, 0, 4477, 0, 1831, 0, 0,
	0, 1547, 0, 1553, 0, 1559, 0, 1851, 0, 0,
	3359, 0, 0, 0, 0, 4266, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4266, 0, 2731, 2732, 2733, 2734, 2727, 2728, 2729, 2730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 3772, 0, 1659, 1498, 1664, 0, 0, 0,
	0, 0, 0, 0, 4266, 4266, 0, 1882, 0, 1677,
	4361, 1682, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 4266, 0,
	270, 4266, 0, 2707, 2708, 2709, 2710, 0, 0, 0,
	0, 2032, 3343, 3344, 0, 3361, 3362, 3363, 0, 0,
	1545, 0, 1545, 0, 0, 0, 2719, 2720, 2721, 2722,
	2715, 2716, 2717, 2718, 2723, 2724, 2725, 2726, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1498, 1747,
	1349, 0, 1753, 0, 0, 0, 3360, 0, 0, 1829,
	1830, 0, 4772, 0, 0, 1873, 1874, 1875, 1846, 1847,
	1865, 1865, 0, 1865, 0, 0, 0, 0, 4501, 0,
	0, 270, 1860, 0, 0, 0, 0, 3358, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 1852, 0, 0, 0, 2930, 2703, 2704, 2705, 2706,
	2711, 2712, 2713, 2714, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 270, 1848, 0, 0, 0, 0, 0, 0,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 0, 0,
	0, 0, 0, 0, 3816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 1906, 3349, 0, 0, 0, 1545, 1919,
	0, 1865, 0, 0, 0, 0, 0, 3355, 3356, 3357,
	0, 0, 1137, 112, 3354, 3352, 3353, 3345, 3346, 3347,
	3348, 3350, 3351, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 1865, 0,
	2760, 2760, 0, 0, 1865, 0, 0, 1853, 0, 4477,
	0, 0, 0, 0, 3364, 3364, 0, 0, 1865, 1865,
	1870, 0, 0, 1880, 0, 0, 0, 0, 1865, 0,
	1859, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3359, 1865, 0, 1978, 1978, 1978, 112, 2930, 0,
	0, 0, 0, 0, 1865, 1846, 1847, 0, 4266, 0,
	4266, 0, 0, 1545, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760,
	2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760,
	0, 2760, 3364, 3364, 3364, 3364, 0, 0, 1882, 0,
	0, 0, 0, 2930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 3144, 0, 0, 0, 0, 1094, 1865, 0, 0,
	0, 0, 1849, 1845, 2930, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 1882, 0, 0, 0, 3144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 0, 1258, 0, 0, 0, 3360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1148, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	269, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 0, 0, 0,
	0, 0, 0, 1865, 1865, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 3355, 3356,
	3357, 0, 0, 0, 0, 3354, 3352, 3353, 3345, 3346,
	3347, 3348, 3350, 3351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 1865, 0, 0, 1865, 3364,
	3364, 1865, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2426, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 1865,
	1865, 1865, 1865, 0, 0, 0, 0, 0, 1865, 2453,
	1865, 0, 0, 3364, 3364, 3364, 3364, 3364, 3364, 3364,
	3364, 3364, 3364, 3364, 3364, 3364, 3364, 3364, 3364, 3364,
	3364, 3364, 3364, 0, 0, 0, 3364, 0, 0, 1865,
	1865, 0, 0, 0, 0, 2493, 0, 2497, 0, 0,
	1498, 1865, 0, 0, 2511, 0, 0, 0, 0, 0,
	1865, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 0, 2561, 0,
	2563, 2564, 2565, 2566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2590, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1906, 0,
	0, 0, 2641, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 2671, 2674,
	2677, 2680, 0, 0, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 0, 0, 0, 0, 0, 0, 0, 1865, 1865,
	0, 0, 0, 0, 1498, 0, 0, 1498, 0, 0,
	0, 0, 2752, 0, 2764, 2766, 2771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 1829, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 1498, 0, 1094, 112, 112, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	112, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 112, 0, 0,
	0, 0, 1865, 1865, 1885, 0, 0, 1865, 1865, 0,
	0, 1865, 1865, 1831, 0, 0, 1865, 0, 0, 0,
	1865, 0, 0, 1851, 0, 1865, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	2760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1184, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 269,
	269, 0, 0, 269, 0, 0, 0, 0, 3771, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2760, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 269, 269, 0, 0, 269, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 0, 0, 1074,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 0, 0, 1846, 1847, 3075, 3076, 1905, 3078,
	0, 0, 1911, 752, 0, 0, 269, 269, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 735, 0, 0, 0, 1852, 736, 0,
	0, 0, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 737, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 738, 0,
	1865, 1865, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 1865, 3364, 2760, 0, 0, 1275, 0, 739,
	1865, 0, 0, 1865, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 758, 1998, 0, 2001, 0, 112, 0, 0, 0,
	3258, 0, 0, 0, 0, 0, 3196, 269, 0, 0,
	3364, 2760, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 1865, 0, 0,
	1858, 269, 1837, 0, 0, 1865, 2760, 741, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 1853, 1865, 0, 0, 0, 0, 0,
	742, 0, 0, 743, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1886, 1887,
	767, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 757, 1846, 1847, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3252, 3253, 0, 0, 0, 1852,
	3259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3364, 0, 0, 0, 0, 0, 0, 0, 3273,
	3274, 0, 0, 754, 0, 2641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 3364, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1845,
	3364, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	3283, 0, 0, 0, 0, 0, 1882, 1498, 1498, 0,
	1498, 0, 0, 0, 0, 0, 3297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 764, 0, 745, 0,
	0, 0, 0, 3309, 0, 0, 0, 0, 0, 0,
	0, 1498, 1865, 2000, 0, 1271, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 765, 0, 746,
	0, 0, 1858, 0, 0, 269, 2000, 269, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 0, 0, 0,
	0, 0, 835, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 0, 0, 0, 0, 0, 1498, 0, 747, 0,
	269, 0, 0, 762, 763, 760, 0, 269, 0, 0,
	0, 755, 0, 0, 748, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 2771, 2771, 2771, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 0, 0, 0, 0, 3402, 0,
	0, 1865, 0, 0, 0, 0, 0, 749, 0, 756,
	0, 0, 0, 0, 1094, 0, 1094, 750, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 751, 0, 0, 0, 0, 759, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3527, 0, 0, 0, 1865, 269, 0,
	0, 1865, 835, 0, 1275, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 1074, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 3578, 3579,
	0, 1275, 0, 0, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 269, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 269, 1860, 0, 0,
	0, 0, 269, 2579, 1832, 0, 0, 0, 1114, 0,
	0, 0, 0, 1879, 0, 0, 0, 1275, 269, 0,
	269, 0, 0, 1094, 1275, 0, 269, 0, 0, 0,
	1885, 0, 1498, 1905, 0, 0, 0, 1905, 0, 1831,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1275, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 835, 269,
	1258, 269, 0, 269, 0, 269, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	269, 269, 269, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	0, 0, 735, 0, 0, 1859, 1861, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 2511, 1877, 0, 0, 0, 0, 3769, 3770,
	1846, 1847, 3773, 0, 0, 0, 3776, 0, 0, 0,
	0, 0, 0, 0, 0, 3780, 737, 0, 1868, 0,
	0, 0, 0, 0, 3787, 0, 0, 738, 0, 3402,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3800, 0, 0, 0, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3823, 3824, 0, 3825, 3826, 3827,
	758, 1114, 1114, 0, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 3833, 0, 0, 0, 3835,
	0, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 3864, 3865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 742,
	3876, 0, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 3885, 1275, 0, 1275, 767,
	0, 0, 0, 0, 0, 0, 1858, 1271, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 1114, 0,
	0, 269, 0, 0, 757, 0, 0, 0, 0, 1853,
	112, 0, 0, 112, 2064, 112, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3941, 0,
	0, 112, 754, 0, 112, 0, 0, 0, 1884, 0,
	112, 269, 0, 0, 0, 0, 0, 3953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	269, 0, 0, 0, 269, 0, 269, 0, 0, 0,
	0, 0, 0, 269, 269, 0, 0, 0, 0, 3982,
	0, 0, 0, 269, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	1869, 0, 0, 0, 4003, 4004, 112, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 765, 0, 746, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 766,
	0, 0, 0, 0, 0, 0, 0, 747, 0, 0,
	0, 0, 762, 763, 760, 0, 0, 0, 0, 0,
	755, 0, 0, 748, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 1275, 1978, 0, 0, 0, 0,
	0, 0, 0, 1275, 4104, 0, 0, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 0, 756, 0,
	0, 0, 0, 2579, 0, 0, 750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 835,
	751, 0, 0, 0, 1905, 759, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 0, 0, 0, 0, 0, 0, 0, 4147,
	4148, 0, 0, 0, 0, 4152, 4153, 0, 0, 0,
	4156, 4157, 0, 0, 0, 0, 0, 0, 4161, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 1275, 4165,
	1275, 0, 1275, 0, 0, 0, 0, 0, 0, 269,
	0, 269, 0, 0, 0, 4170, 0, 0, 0, 0,
	1275, 1275, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 1829, 1830,
	0, 0, 0, 0, 0, 1275, 0, 1275, 1275, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 269, 269, 269, 269, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 269,
	0, 0, 1848, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 2064, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 4307, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 1859,
	1861, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 1846, 1847, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 112, 112, 0, 112, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 4425, 4426, 4427,
	1275, 0, 0, 0, 0, 0, 112, 112, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	2511, 0, 0, 4436, 4437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 4445, 4448, 0, 1882, 1837, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 2000, 1859, 1861, 1860, 0, 0, 0,
	1858, 0, 0, 1832, 0, 269, 0, 0, 0, 0,
	1876, 0, 1877, 4502, 0, 0, 0, 0, 0, 1846,
	1847, 0, 4510, 1853, 1258, 0, 0, 1094, 0, 1885,
	0, 0, 0, 0, 0, 0, 4518, 1868, 1831, 1099,
	0, 112, 112, 0, 0, 0, 269, 0, 1851, 0,
	269, 269, 1852, 4527, 0, 0, 4529, 1848, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3251, 0, 0, 0, 0, 1867, 0,
	0, 269, 269, 0, 0, 269, 0, 0, 0, 1882,
	0, 0, 2000, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 0, 269, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 4652, 0, 0, 1871, 4656, 0, 0, 0,
	0, 0, 0, 0, 835, 1275, 0, 0, 0, 0,
	0, 0, 1852, 269, 0, 0, 0, 269, 1275, 0,
	1275, 0, 0, 0, 0, 0, 1161, 1884, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1258, 1258, 0, 0,
	0, 0, 271, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 1099, 1099, 0, 0, 0, 0, 0, 1882,
	0, 0, 4727, 0, 0, 0, 0, 0, 0, 1869,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 271,
	3318, 2511, 0, 269, 3319, 269, 0, 0, 0, 0,
	4448, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4846,
	4846, 4846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 1264, 1271, 1271, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4846, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 265, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 4846,
	5002, 0, 0, 0, 0, 0, 1275, 5006, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 269, 1275, 0, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 269,
	0, 1258, 0, 1866, 1860, 0, 0, 0, 0, 1258,
	0, 1832, 0, 0, 0, 0, 0, 0, 269, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 269,
	0, 0, 0, 0, 0, 2064, 1831, 0, 0, 269,
	0, 0, 0, 0, 269, 0, 1851, 0, 0, 269,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 1275, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 1275, 112, 0, 0,
	1275, 0, 1870, 0, 0, 1880, 0, 0, 1275, 0,
	112, 0, 1859, 1861, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 112, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	271, 0, 271, 271, 0, 1868, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 1271, 1275, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 1275, 0, 1275, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 1418, 271, 271, 0, 0, 271,
	271, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 0,
	0, 0, 0, 0, 1275, 0, 1867, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 2000, 0,
	2000, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	271, 0, 0, 0, 0, 0, 269, 0, 0, 269,
	0, 0, 0, 0, 0, 2064, 0, 1418, 0, 0,
	0, 0, 0, 1858, 1418, 271, 271, 0, 0, 0,
	0, 0, 0, 269, 1275, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 2064, 269, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 269, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	271, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 1275, 2579, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 1325, 1325, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 827, 2637, 0,
	0, 0, 2638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 1658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 0, 271, 271,
	271, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	1774, 0, 0, 0, 269, 269, 0, 0, 0, 0,
	0, 0, 1275, 271, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1275, 1275, 1275, 0, 0, 0, 0,
	1275, 1275, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 112, 1275, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 1275, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 269, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 1275, 1275, 0,
	1275, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 271, 0, 1418, 1418, 271, 0, 0, 1275, 1275,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	1519, 1275, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 271, 1275, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 269,
	1519, 271, 0, 271, 0, 0, 1275, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	1418, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 1418, 0, 0, 1275, 1275, 0, 0, 0, 0,
	0, 0, 0, 1418, 271, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 1418, 1418, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 1275,
	0, 271, 271, 0, 271, 0, 271, 0, 271, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 1275,
	1275, 1275, 1275, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 271, 271, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 2000, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2307,
	0, 0, 0, 2314, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 1577, 0, 2327, 0, 0, 0, 0,
	1577, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2339, 0, 2339, 0, 0, 1577, 0, 0, 2346,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 2314, 0, 0, 2374, 0, 0,
	0, 1418, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2394, 0,
	0, 0, 0, 1275, 271, 0, 1275, 1418, 0, 0,
	0, 0, 2410, 0, 2412, 0, 2414, 0, 2416, 0,
	2417, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 2444, 2445, 2446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 271, 0, 0, 0, 271, 0, 271,
	0, 0, 0, 0, 0, 0, 271, 271, 0, 0,
	0, 0, 0, 0, 0, 1275, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 1418, 0, 858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 1275, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 859, 0, 876, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 1275, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 1275, 0, 0, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 1418, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	885, 0, 0, 0, 0, 0, 0, 862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 883, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1578, 0, 0, 0, 827, 0, 856, 0, 0, 0,
	271, 827, 271, 0, 2828, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 887, 1418, 1578, 0, 0, 767,
	0, 0, 0, 1578, 0, 0, 0, 0, 1418, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	0, 0, 0, 271, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 271, 0, 0, 0, 0, 0,
	2879, 0, 0, 1325, 0, 271, 0, 1325, 0, 1325,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 2327, 1578, 0, 0,
	0, 0, 881, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 271, 271, 271,
	271, 0, 0, 1832, 0, 0, 271, 0, 0, 0,
	0, 271, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 865, 0, 1831, 0,
	0, 0, 271, 0, 0, 0, 0, 867, 1851, 0,
	271, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 868, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 1577,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 854, 0, 878, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 869, 0, 1837, 0, 0, 0, 0,
	2314, 0, 0, 0, 0, 0, 0, 0, 0, 2327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 870, 1880, 0, 0,
	871, 890, 0, 889, 1859, 1861, 872, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 1577, 0, 1577, 0,
	873, 0, 0, 3166, 0, 882, 0, 0, 0, 1846,
	1847, 891, 0, 888, 0, 0, 1577, 1577, 0, 768,
	0, 0, 3177, 0, 3180, 0, 0, 1868, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 1852, 1577, 1577, 1577, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3212, 1519, 3214,
	1519, 0, 0, 0, 0, 0, 3220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	3249, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 1415, 1858, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 271, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 1578, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 1418, 0, 1415, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 1418, 0, 1418, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 271, 1418, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 1418,
	271, 0, 0, 0, 0, 0, 0, 1578, 0, 1578,
	0, 1578, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 0, 0, 3450, 0,
	0, 0, 0, 1418, 1578, 0, 1578, 1578, 1578, 0,
	0, 0, 0, 0, 0, 1418, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	0, 1415, 0, 1519, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 1418, 0, 271, 1418, 271, 0,
	0, 0, 0, 0, 3496, 0, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 1885, 0, 0, 3544, 3546, 0, 0, 2327, 0,
	1831, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1416, 0, 1848,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 1577, 0, 0, 0, 0, 0, 1837, 0, 0,
	1416, 0, 0, 0, 1577, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3657, 0, 0, 0,
	3661, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 1418, 0, 0, 0,
	1416, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 1416, 271, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3754, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 3767, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 1418, 1858, 0, 0,
	0, 0, 271, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 1418, 1418, 1418, 0, 0, 0, 0,
	1418, 1418, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 271, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 4175, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 1418, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1418,
	0, 0, 2327, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 2327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2327, 0, 0,
	0, 0, 4086, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 271,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4132, 0, 0, 0,
	0, 0, 0, 0, 1418, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	1577, 0, 1577, 0, 1418, 271, 1415, 0, 0, 1418,
	0, 0, 0, 827, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1418,
	1418, 1418, 1418, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 1577, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4285, 0, 0, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 1415, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	1418, 1418, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 2327, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 4385, 1418, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 271, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 1578,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 0, 1578, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 1578, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 4487, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 1578, 0, 0, 1418, 1868, 0, 0, 0,
	0, 0, 0, 0, 1578, 1418, 1578, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 1577,
	2327, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 1416, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4616, 1519, 1577,
	1577, 1577, 0, 0, 0, 0, 1577, 1577, 1577, 0,
	0, 0, 271, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 1577, 0,
	1416, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	4733, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 1415, 1415, 0, 1415, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1577, 1577, 0, 0, 0, 0,
	0, 0, 0, 3785, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 1578, 0, 0, 0, 0,
	1577, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 1577, 1577, 1577, 1577, 1577, 1577,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	1415, 0, 1578, 1578, 1578, 0, 0, 0, 0, 1578,
	1578, 1578, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	1415, 1578, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1851, 0, 0, 0, 0,
	0, 0, 0, 1415, 1848, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 1851, 1416, 1416, 0, 1416,
	0, 0, 0, 0, 1848, 1577, 1577, 1577, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 1578, 1578, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 1577, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 1578, 1578, 0, 1882, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 1578, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 1578, 1578,
	1578, 1578, 1578, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 1867, 0, 0, 0, 0,
	0, 1577, 0, 1416, 0, 0, 1882, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 1871, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 1578,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 1416, 0, 0, 1578, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 1578, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 1578, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 2806, 0, 0, 0,
	0, 0, 0, 0, 2807, 279, 281, 280, 282, 283,
	284, 285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423,
	647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 1428, 652, 298, 299, 300, 301, 302, 303, 1429,
	1430, 0, 304, 653, 654, 655, 1431, 305, 306, 656,
	1432, 1499, 1433, 307, 308, 309, 310, 311, 312, 313,
	0, 1434, 315, 316, 317, 314, 318, 1435, 319, 0,
	320, 321, 322, 323, 324, 325, 1436, 326, 327, 328,
	1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442,
	1443, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 1444, 342, 338, 340, 1445, 343, 341, 344, 1446,
	345, 346, 347, 1447, 1448, 348, 349, 350, 1449, 351,
	352, 353, 1450, 354, 355, 356, 1451, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 1452, 276, 1453, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 1454,
	375, 376, 377, 1455, 1456, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1457, 390, 665, 1458, 666, 391, 1459, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 1460,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1461, 1218, 407, 670, 671, 1462, 672, 1463,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1464,
	420, 422, 421, 1465, 423, 674, 1223, 424, 425, 1224,
	1466, 426, 427, 428, 429, 430, 431, 434, 1467, 1468,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1469,
	278, 1227, 478, 479, 480, 1470, 675, 481, 676, 483,
	484, 1471, 0, 485, 0, 1472, 1473, 487, 488, 489,
	1474, 1475, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 1476, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 1477, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 1478, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 1479, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 1480, 570, 571, 569, 572, 573, 574,
	1481, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 1482, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 1483, 603, 604, 0,
	600, 591, 1484, 605, 606, 607, 608, 609, 610, 611,
	612, 1485, 613, 688, 689, 690, 691, 1486, 622, 1487,
	614, 615, 616, 692, 617, 693, 1488, 618, 619, 620,
	621, 0, 623, 624, 1489, 1490, 625, 626, 627, 629,
	630, 628, 631, 1491, 632, 1492, 0, 633, 634, 635,
	694, 695, 696, 1493, 637, 636, 638, 639, 697, 640,
	641, 1494, 1495, 1496, 1497, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 3794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3796, 279, 281, 280, 282,
	283, 284, 285, 1419, 286, 287, 1420, 1421, 1422, 0,
	1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 1428, 652, 298, 299, 300, 301, 302, 303,
	1429, 1430, 0, 304, 653, 654, 655, 1431, 305, 306,
	656, 1432, 1499, 1433, 307, 308, 309, 310, 311, 312,
	313, 0, 1434, 315, 316, 317, 314, 318, 1435, 319,
	0, 320, 321, 322, 323, 324, 325, 1436, 326, 327,
	328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441,
	1442, 1443, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 1444, 342, 338, 340, 1445, 343, 341, 344,
	1446, 345, 346, 347, 1447, 1448, 348, 349, 350, 1449,
	351, 352, 353, 1450, 354, 355, 356, 1451, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 1452, 276, 1453, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	1454, 375, 376, 377, 1455, 1456, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1457, 390, 665, 1458, 666, 391, 1459, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	1460, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1461, 1218, 407, 670, 671, 1462, 672,
	1463, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1464, 420, 422, 421, 1465, 423, 674, 1223, 424, 425,
	1224, 1466, 426, 427, 428, 429, 430, 431, 434, 1467,
	1468, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1469, 278, 1227, 478, 479, 480, 1470, 675, 481, 676,
	483, 484, 1471, 0, 485, 0, 1472, 1473, 487, 488,
	489, 1474, 1475, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1476, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 1477, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 1478, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1479,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1480, 570, 571, 569, 572, 573,
	574, 1481, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 1482,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 1483, 603, 604,
	0, 600, 591, 1484, 605, 606, 607, 608, 609, 610,
	611, 612, 1485, 613, 688, 689, 690, 691, 1486, 622,
	1487, 614, 615, 616, 692, 617, 693, 1488, 618, 619,
	620, 621, 0, 623, 624, 1489, 1490, 625, 626, 627,
	629, 630, 628, 631, 1491, 632, 1492, 0, 633, 634,
	635, 694, 695, 696, 1493, 637, 636, 638, 639, 697,
	640, 641, 1494, 1495, 1496, 1497, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4205, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4203, 279, 281, 280, 282,
	283, 284, 285, 1419, 286, 287, 1420, 1421, 1422, 0,
	1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 1428, 652, 298, 299, 300, 301, 302, 303,
	1429, 1430, 0, 304, 653, 654, 655, 1431, 305, 306,
	656, 1432, 1499, 1433, 307, 308, 309, 310, 311, 312,
	313, 0, 1434, 315, 316, 317, 314, 318, 1435, 319,
	0, 320, 321, 322, 323, 324, 325, 1436, 326, 327,
	328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441,
	1442, 1443, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 1444, 342, 338, 340, 1445, 343, 341, 344,
	1446, 345, 346, 347, 1447, 1448, 348, 349, 350, 1449,
	351, 352, 353, 1450, 354, 355, 356, 1451, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 1452, 276, 1453, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	1454, 375, 376, 377, 1455, 1456, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1457, 390, 665, 1458, 666, 391, 1459, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	1460, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1461, 1218, 407, 670, 671, 1462, 672,
	1463, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1464, 420, 422, 421, 1465, 423, 674, 1223, 424, 425,
	1224, 1466, 426, 427, 428, 429, 430, 431, 434, 1467,
	1468, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1469, 278, 1227, 478, 479, 480, 1470, 675, 481, 676,
	483, 484, 1471, 0, 485, 0, 1472, 1473, 487, 488,
	489, 1474, 1475, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1476, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 1477, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 1478, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1479,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1480, 570, 571, 569, 572, 573,
	574, 1481, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 1482,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 1483, 603, 604,
	0, 600, 591, 1484, 605, 606, 607, 608, 609, 610,
	611, 612, 1485, 613, 688, 689, 690, 691, 1486, 622,
	1487, 614, 615, 616, 692, 617, 693, 1488, 618, 619,
	620, 621, 0, 623, 624, 1489, 1490, 625, 626, 627,
	629, 630, 628, 631, 1491, 632, 1492, 0, 633, 634,
	635, 694, 695, 696, 1493, 637, 636, 638, 639, 697,
	640, 641, 1494, 1495, 1496, 1497, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4431, 279, 281, 280, 282, 283,
	284, 285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423,
	647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 1428, 652, 298, 299, 300, 301, 302, 303, 1429,
	1430, 0, 304, 653, 654, 655, 1431, 305, 306, 656,
	1432, 1499, 1433, 307, 308, 309, 310, 311, 312, 313,
	0, 1434, 315, 316, 317, 314, 318, 1435, 319, 0,
	320, 321, 322, 323, 324, 325, 1436, 326, 327, 328,
	1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442,
	1443, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 1444, 342, 338, 340, 1445, 343, 341, 344, 1446,
	345, 346, 347, 1447, 1448, 348, 349, 350, 1449, 351,
	352, 353, 1450, 354, 355, 356, 1451, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 1452, 276, 1453, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 1454,
	375, 376, 377, 1455, 1456, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1457, 390, 665, 1458, 666, 391, 1459, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 1460,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1461, 1218, 407, 670, 671, 1462, 672, 1463,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1464,
	420, 422, 421, 1465, 423, 674, 1223, 424, 425, 1224,
	1466, 426, 427, 428, 429, 430, 431, 434, 1467, 1468,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1469,
	278, 1227, 478, 479, 480, 1470, 675, 481, 676, 483,
	484, 1471, 0, 485, 0, 1472, 1473, 487, 488, 489,
	1474, 1475, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 1476, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 1477, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 1478, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 1479, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 1480, 570, 571, 569, 572, 573, 574,
	1481, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 1482, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 1483, 603, 604, 0,
	600, 591, 1484, 605, 606, 607, 608, 609, 610, 611,
	612, 1485, 613, 688, 689, 690, 691, 1486, 622, 1487,
	614, 615, 616, 692, 617, 693, 1488, 618, 619, 620,
	621, 0, 623, 624, 1489, 1490, 625, 626, 627, 629,
	630, 628, 631, 1491, 632, 1492, 0, 633, 634, 635,
	694, 695, 696, 1493, 637, 636, 638, 639, 697, 640,
	641, 1494, 1495, 1496, 1497, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4294, 279, 281, 280, 282, 283, 284,
	285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423, 647,
	1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	1428, 652, 298, 299, 300, 301, 302, 303, 1429, 1430,
	0, 304, 653, 654, 655, 1431, 305, 306, 656, 1432,
	1499, 1433, 307, 308, 309, 310, 311, 312, 313, 0,
	1434, 315, 316, 317, 314, 318, 1435, 319, 0, 320,
	321, 322, 323, 324, 325, 1436, 326, 327, 328, 1216,
	329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442, 1443,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	1444, 342, 338, 340, 1445, 343, 341, 344, 1446, 345,
	346, 347, 1447, 1448, 348, 349, 350, 1449, 351, 352,
	353, 1450, 354, 355, 356, 1451, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 1452, 276, 1453, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 1454, 375,
	376, 377, 1455, 1456, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1457,
	390, 665, 1458, 666, 391, 1459, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 1219, 397, 398, 1460, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1461, 1218, 407, 670, 671, 1462, 672, 1463, 408,
	409, 1220, 673, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1464, 420,
	422, 421, 1465, 423, 674, 1223, 424, 425, 1224, 1466,
	426, 427, 428, 429, 430, 431, 434, 1467, 1468, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1469, 278,
	1227, 478, 479, 480, 1470, 675, 481, 676, 483, 484,
	1471, 0, 485, 0, 1472, 1473, 487, 488, 489, 1474,
	1475, 490, 491, 677, 1228, 492, 1229, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	1476, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 1477, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 1478, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 1479, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 1480, 570, 571, 569, 572, 573, 574, 1481,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 1482, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 1483, 603, 604, 0, 600,
	591, 1484, 605, 606, 607, 608, 609, 610, 611, 612,
	1485, 613, 688, 689, 690, 691, 1486, 622, 1487, 614,
	615, 616, 692, 617, 693, 1488, 618, 619, 620, 621,
	0, 623, 624, 1489, 1490, 625, 626, 627, 629, 630,
	628, 631, 1491, 632, 1492, 0, 633, 634, 635, 694,
	695, 696, 1493, 637, 636, 638, 639, 697, 640, 641,
	1494, 1495, 1496, 1497, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4133, 279, 281, 280, 282, 283, 284, 285,
	1419, 286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424,
	1425, 1426, 1427, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 1428,
	652, 298, 299, 300, 301, 302, 303, 1429, 1430, 0,
	304, 653, 654, 655, 1431, 305, 306, 656, 1432, 1499,
	1433, 307, 308, 309, 310, 311, 312, 313, 0, 1434,
	315, 316, 317, 314, 318, 1435, 319, 0, 320, 321,
	322, 323, 324, 325, 1436, 326, 327, 328, 1216, 329,
	330, 331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 1444,
	342, 338, 340, 1445, 343, 341, 344, 1446, 345, 346,
	347, 1447, 1448, 348, 349, 350, 1449, 351, 352, 353,
	1450, 354, 355, 356, 1451, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 1452, 276, 1453, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 1454, 375, 376,
	377, 1455, 1456, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1457, 390,
	665, 1458, 666, 391, 1459, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 1460, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	1461, 1218, 407, 670, 671, 1462, 672, 1463, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1464, 420, 422,
	421, 1465, 423, 674, 1223, 424, 425, 1224, 1466, 426,
	427, 428, 429, 430, 431, 434, 1467, 1468, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1469, 278, 1227,
	478, 479, 480, 1470, 675, 481, 676, 483, 484, 1471,
	0, 485, 0, 1472, 1473, 487, 488, 489, 1474, 1475,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 1476,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 1477, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 1478, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 1479, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 1480, 570, 571, 569, 572, 573, 574, 1481, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 1482, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 1483, 603, 604, 0, 600, 591,
	1484, 605, 606, 607, 608, 609, 610, 611, 612, 1485,
	613, 688, 689, 690, 691, 1486, 622, 1487, 614, 615,
	616, 692, 617, 693, 1488, 618, 619, 620, 621, 0,
	623, 624, 1489, 1490, 625, 626, 627, 629, 630, 628,
	631, 1491, 632, 1492, 0, 633, 634, 635, 694, 695,
	696, 1493, 637, 636, 638, 639, 697, 640, 641, 1494,
	1495, 1496, 1497, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3812, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3630, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2661,
	279, 281, 280, 282, 283, 284, 285, 1419, 286, 287,
	1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 1428, 652, 298, 299,
	300, 301, 302, 303, 1429, 1430, 0, 304, 653, 654,
	655, 1431, 305, 306, 656, 1432, 1499, 1433, 307, 308,
	309, 310, 311, 312, 313, 0, 1434, 315, 316, 317,
	314, 318, 1435, 319, 0, 320, 321, 322, 323, 324,
	325, 1436, 326, 327, 328, 1216, 329, 330, 331, 1437,
	1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 1444, 342, 338, 340,
	1445, 343, 341, 344, 1446, 345, 346, 347, 1447, 1448,
	348, 349, 350, 1449, 351, 352, 353, 1450, 354, 355,
	356, 1451, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 1452,
	276, 1453, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 1454, 375, 376, 377, 1455, 1456,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1457, 390, 665, 1458, 666,
	391, 1459, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 1460, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1461, 1218, 407,
	670, 671, 1462, 672, 1463, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1464, 420, 422, 421, 1465, 423,
	674, 1223, 424, 425, 1224, 1466, 426, 427, 428, 429,
	430, 431, 434, 1467, 1468, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1469, 278, 1227, 478, 479, 480,
	1470, 675, 481, 676, 483, 484, 1471, 0, 485, 0,
	1472, 1473, 487, 488, 489, 1474, 1475, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1476, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 1477, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 1478,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1479, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1480, 570,
	571, 569, 572, 573, 574, 1481, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 1482, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 1483, 603, 604, 0, 600, 591, 1484, 605, 606,
	607, 608, 609, 610, 611, 612, 1485, 613, 688, 689,
	690, 691, 1486, 622, 1487, 614, 615, 616, 692, 617,
	693, 1488, 618, 619, 620, 621, 0, 623, 624, 1489,
	1490, 625, 626, 627, 629, 630, 628, 631, 1491, 632,
	1492, 0, 633, 634, 635, 694, 695, 696, 1493, 637,
	636, 638, 639, 697, 640, 641, 1494, 1495, 1496, 1497,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	1410, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2286, 279,
	281, 280, 282, 283, 284, 285, 1419, 286, 287, 1420,
	1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 1428, 652, 298, 299, 300,
	301, 302, 303, 1429, 1430, 0, 304, 653, 654, 655,
	1431, 305, 306, 656, 1432, 1499, 1433, 307, 308, 309,
	310, 311, 312, 313, 0, 1434, 315, 316, 317, 314,
	318, 1435, 319, 0, 320, 321, 322, 323, 324, 325,
	1436, 326, 327, 328, 1216, 329, 330, 331, 1437, 1438,
	1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 1444, 342, 338, 340, 1445,
	343, 341, 344, 1446, 345, 346, 347, 1447, 1448, 348,
	349, 350, 1449, 351, 352, 353, 1450, 354, 355, 356,
	1451, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 1452, 276,
	1453, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 1454, 375, 376, 377, 1455, 1456, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1457, 390, 665, 1458, 666, 391,
	1459, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 1460, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1461, 1218, 407, 670,
	671, 1462, 672, 1463, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1464, 420, 422, 421, 1465, 423, 674,
	1223, 424, 425, 1224, 1466, 426, 427, 428, 429, 430,
	431, 434, 1467, 1468, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1469, 278, 1227, 478, 479, 480, 1470,
	675, 481, 676, 483, 484, 1471, 0, 485, 0, 1472,
	1473, 487, 488, 489, 1474, 1475, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 1476, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 1477, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 1478, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 1479, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 1480, 570, 571,
	569, 572, 573, 574, 1481, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 1482, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	1483, 603, 604, 0, 600, 591, 1484, 605, 606, 607,
	608, 609, 610, 611, 612, 1485, 613, 688, 689, 690,
	691, 1486, 622, 1487, 614, 615, 616, 692, 617, 693,
	1488, 618, 619, 620, 621, 0, 623, 624, 1489, 1490,
	625, 626, 627, 629, 630, 628, 631, 1491, 632, 1492,
	0, 633, 634, 635, 694, 695, 696, 1493, 637, 636,
	638, 639, 697, 640, 641, 1494, 1495, 1496, 1497, 642,
	643, 698, 644, 645, 646, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 2636, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 2633, 286, 287, 0, 0, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 2634, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 2632, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 2635, 0, 0, 0, 0,
	0, 0, 0, 1135, 2631, 0, 1095, 1133, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 238, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 240, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	1649, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 232, 642, 643, 698, 644, 645,
	646, 1109, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	0, 1910, 1908, 0, 0, 1133, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 238, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 240, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 1649, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 232,
	642, 643, 698, 644, 645, 646, 1109, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 1910, 3271, 0, 0,
	1133, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 238, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 240, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	1649, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 232, 642, 643, 698, 644, 645,
	646, 1109, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	0, 1910, 1908, 0, 0, 1133, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 2767, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 2772,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 2768, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 2769, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	2681, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 0, 0,
	0, 0, 0, 0, 0, 1135, 2679, 0, 2678, 1133,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 1135, 2676, 0, 2675, 1133, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 2673, 0, 2672, 1133, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 1135,
	2670, 0, 1749, 1133, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 1748, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 1098, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	1113, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 4797, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 1113,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 2513, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	2512, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 1113, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 4521, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 1113, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	4098, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 1979, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 3790, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 1979, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 2772, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 1135, 1908, 0,
	2777, 1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 2775,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 2763, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 2751, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 2749, 0, 2740, 2747,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 2743, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	2744, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 2745, 444, 2742, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 2746, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 2741,
	646, 1109, 0, 0, 0, 2737, 0, 2740, 2747, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 2743, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 2744,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	2745, 444, 2742, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 2746, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 2741, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 0, 0, 0, 0, 0, 1916, 0, 1135,
	0, 0, 0, 1133, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 2492, 286,
	287, 0, 0, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 2454, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	2427, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 1754,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 1683, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 1678, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 1665, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 1660, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 1561, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1560, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 1555, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1554,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 1548, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 1510, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 1514, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 1515, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 1513, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	1359, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 4845, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 4844, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 4843, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 4845, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 4844, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 4450, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 4451, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 4449, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 3238, 3239, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	3236, 3237, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 2500, 2501,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 0, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	2759, 0, 0, 0, 0, 0, 0, 2757, 2758, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 0, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 3231, 3232, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 0,
	0, 0, 0, 0, 0, 0, 2163, 2164, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 0, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 4845, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 0, 1178, 0, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 0, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 4844, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 1095,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 1174, 0, 304, 653, 654, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1259, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 0, 1179,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 1267, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 238, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 240, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 1649, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 232, 642, 643,
	698, 644, 645, 646, 1273, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 1263, 0, 2003, 0, 1175, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 1174, 0, 304, 653,
	654, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1259, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 278, 1227, 478, 479,
	480, 0, 1179, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 1265, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 1267, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 238,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 0, 600, 591, 240, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 1649, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	232, 642, 643, 698, 644, 645, 646, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3395,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1263, 0, 2003, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 1174, 0, 304, 653, 654, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1259, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 0, 1179,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 1267, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1255, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 1261, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	1174, 0, 304, 653, 654, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1259,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	278, 1227, 478, 479, 480, 0, 1179, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 1265, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 1267,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 1263,
	0, 1261, 0, 1175, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 1174, 0, 304, 653, 654, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1259, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 0, 1179,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 1267, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 1263, 0, 1261, 0, 1175, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 1174, 0, 304, 653,
	654, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 278, 1227, 478, 479,
	480, 0, 1179, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 4265, 0, 1175,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 1174,
	0, 304, 653, 654, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 278,
	1227, 478, 479, 480, 0, 1179, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 1267, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 273, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 2604, 2605, 2606, 2623, 2624, 2625, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 2626, 0, 647, 0, 0, 0, 0, 288, 289,
	1900, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 1885, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 2616, 0, 315, 316, 317, 314, 318,
	0, 319, 2612, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	2617, 2618, 2619, 2620, 371, 372, 373, 662, 0, 0,
	2611, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 2621, 2622, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 2614, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 2615, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 1884, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 1575, 2601, 2602, 2603, 2627, 2613, 2607,
	0, 2609, 2610, 2608, 2595, 2596, 2597, 2598, 2599, 2600,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 1499, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1218, 407,
	670, 671, 0, 672, 0, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 0, 1227, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 238, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 240, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 1649, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 232,
	642, 643, 698, 644, 645, 646, 0, 1646, 233, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 193, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 238, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 240, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 1649, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 232, 642, 643, 698, 644,
	645, 646, 1575, 1574, 233, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 193, 0, 647, 0, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 1499, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1218, 407, 670,
	671, 0, 672, 0, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 0, 0, 1227, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1575, 1574, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 1673, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1575, 1574,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 3708, 0,
	647, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 1499, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	0, 1227, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 2368, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1575, 2278, 0, 0, 0, 0, 2279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 1673, 0, 647, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 1499, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 2277, 422, 421, 0, 423, 674, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 0, 1227, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1575, 1574, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 1673, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1095, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 1655, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 238, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 240, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 1649, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 273, 0, 232, 642, 643, 698, 644,
	645, 646, 0, 0, 233, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 193, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 273, 3145, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 2017, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	5012, 0, 1175, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 1174, 0, 304, 653, 654, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 278, 1227, 478, 479, 480, 0, 1179, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 3658, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 1643,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 273, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 3133, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 273, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	3815, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 925, 0, 826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 2355, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 833, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 923, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	831, 605, 606, 607, 608, 609, 832, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 2062,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 836, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 0, 2068, 0, 296, 2058,
	297, 2074, 0, 2081, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 2084, 2085, 0, 0, 305, 306,
	0, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 1198, 337, 339,
	2072, 2071, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 2070, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	2079, 2080, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 2065, 2066, 0, 2061,
	0, 408, 409, 1220, 0, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 0, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 0, 481, 2073,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 0, 1228, 492, 1229, 0,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 2055, 506, 507, 508, 2056,
	509, 510, 511, 0, 512, 0, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 2069,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 0,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 2067, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 2083,
	594, 595, 596, 597, 0, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 2075, 2076, 2077, 2078, 0, 622,
	0, 614, 615, 616, 0, 617, 0, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 0, 2059, 2082, 0, 637, 636, 638, 639, 0,
	640, 641, 0, 0, 0, 0, 642, 643, 0, 644,
	645, 646, 826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 3935, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 2049, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 833, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 3934, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 831, 605, 606, 607,
	608, 609, 832, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 3933, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 826, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	2089, 286, 287, 0, 0, 0, 0, 836, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 833, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 2088, 565, 566, 567,
	568, 0, 2090, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	831, 605, 606, 607, 608, 609, 832, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 2087, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	826, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 2040, 286, 287, 0, 0, 0,
	0, 836, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 833, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	2039, 565, 566, 567, 568, 0, 2041, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 831, 605, 606, 607, 608, 609,
	832, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 2038, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 824, 0, 826, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 836, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 833, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 831,
	605, 606, 607, 608, 609, 832, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 826,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	836, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 833, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 831, 605, 606, 607, 608, 609, 832,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 826, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 836, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 833,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 2406, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 2407, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 831, 605, 606,
	607, 608, 609, 832, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 2408, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 273, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 836, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 1575, 1574, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 1499,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 0, 1227,
	478, 479, 480, 4023, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1575,
	1574, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 3608, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1703, 0, 1575, 1574, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 1702, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 1701, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 1700, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1568, 0, 1575,
	1574, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1570, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1575, 1574, 0, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 1499, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1218, 407, 670,
	671, 0, 672, 0, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 0, 0, 1227, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1575, 1574, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 1575, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 1499, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	0, 1227, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 2931,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	3650, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	2935, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 3649, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 2934, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 3646, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 3648, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 3645, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	2933, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 3647, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 2931, 305, 306, 656, 0, 0, 2925, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 2927, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 2935, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 2934,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 2924, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 2933, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 2932, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1780, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 1779, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 1778, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 1781, 557, 564,
	565, 566, 567, 568, 0, 1777, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 1775, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 1776, 636, 638, 639, 697,
	640, 641, 1503, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1505, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 1265, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1500, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1502, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 1265, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1406, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1408, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 1265, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 731, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	730, 284, 285, 719, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 722, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 728, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 724, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 718, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 719, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 722, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 723, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 724,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 719, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 722, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 723,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 724, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 719, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 722, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 4033, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 724, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 1265, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 3553, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 3103,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 3102, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 2375, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 2313, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 2320, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 2319, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 2306, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 2308, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 2271, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	1265, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1621, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1620, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1523, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1516, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1518, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1342, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1341, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1332, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1331, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1329, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1328, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1324, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1323, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	700, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 264, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 722, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 723, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 724, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 2415, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 2413, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 2411, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 2326,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 2114, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 2108, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 910, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 909, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	908, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 3649, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 4346, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1370, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1373, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 1371, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 791, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 790,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 789, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 1374, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 787,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1370, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1373, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 1371, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 791,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 790, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 789,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 1374,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 787, 689, 690, 691, 0, 622,
	0, 614, 1372, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 709, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 708, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 707, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 3145, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 4362, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 4645, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 4237, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 3984, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 2812, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 3145, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 3142, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 2232, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 790, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 789, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 787, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 2385, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 2373, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1676,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1669, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 781,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 777, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 782,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 791, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 790, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 789, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 1654, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 787, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1627, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1626, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1611,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1609, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1604, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1581,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1579, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1566, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1528,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1508, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1376,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 790, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 789, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 787, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1347, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1346, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1338,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1337, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 1290, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 796, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	781, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 777, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 776, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	782, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 791, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 790, 549, 550,
	551, 552, 778, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 789, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 779, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 787, 689, 690,
	691, 0, 622, 0, 614, 783, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 770, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 771, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	733, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 726, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	704, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 3678, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 790, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 789, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 787, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 3593, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 3569, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 3566, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 3520, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	3518, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 3506, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 3503, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 3113,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 771, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 2344, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 0, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1309, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	1238, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 0, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 0, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 0, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 0, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 1617, 0, 1354, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 1616,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 0, 640, 641, 1531, 0,
	1354, 0, 642, 643, 0, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1356, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1530, 0, 0, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	0, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 0, 492, 0,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1357, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 0, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 0, 0, 0, 637, 636, 638, 639,
	0, 640, 641, 1352, 0, 1354, 0, 642, 643, 0,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 1351,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 0, 640, 641, 2128, 0,
	1354, 0, 642, 643, 0, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1356, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	0, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 0, 492, 0,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1357, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 0, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 0, 0, 0, 637, 636, 638, 639,
	0, 640, 641, 2095, 0, 1354, 0, 642, 643, 0,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 1354, 640, 641, 0, 0,
	0, 0, 642, 643, 0, 644, 645, 646, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 0, 640, 641, 0, 0,
	0, 0, 642, 643, 0, 644, 645, 646, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1879, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 1866, 1860, 0,
	0, 0, 0, 1831, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 1851, 1879, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 1852, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	1853, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 1884, 0, 0, 0, 0, 1871, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 1884,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3317,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 3316, 0, 1829, 1830,
	1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 1851, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	1858, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1852, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 1878, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 1882, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3315,
	0, 0, 0, 1853, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 1829, 1830, 1837, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 1870, 0, 0, 1880,
	0, 0, 1884, 0, 0, 0, 1859, 1861, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	1851, 1846, 1847, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2638,
	0, 1878, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 1858, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 1871, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 1884,
	0, 1878, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	1867, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 4773, 1854, 1855, 1856, 1857, 0, 0, 0,
	1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 1871, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 1885, 0, 1884,
	0, 0, 0, 0, 0, 0, 1831, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 1851, 1846, 1847, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0, 0,
	0, 0, 4769, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 1858, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 1853, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 1884, 0, 1878, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 1867, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 4671, 1854,
	1855, 1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 1885, 0, 1884, 0, 0, 0, 0,
	0, 0, 1831, 0, 1876, 0, 1877, 0, 0, 0,
	0, 0, 1851, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 1878, 0, 0, 0, 0, 4625, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 1858,
	0, 0, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 1871,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 1884, 0, 1878, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 1867, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 4624, 1854, 1855, 1856, 1857, 0,
	0, 0, 1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 1871,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 1885,
	0, 1884, 0, 0, 0, 0, 0, 0, 1831, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 1851, 1846,
	1847, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878,
	0, 0, 0, 0, 4434, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 1858, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 1853, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 1871, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 1884, 0, 1878,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 1867, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	4261, 1854, 1855, 1856, 1857, 0, 0, 0, 1853, 1829,
	1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 1871, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 1885, 0, 1884, 0, 0,
	0, 0, 0, 0, 1831, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 1851, 1846, 1847, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0,
	4180, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	0, 1858, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 1853, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 1871, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 1884, 0, 1878, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 1867, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 4179, 1854, 1855, 1856,
	1857, 0, 0, 0, 1853, 1829, 1830, 1837, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 1871, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 1885, 0, 1884, 0, 0, 0, 0, 0, 0,
	1831, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	1851, 1846, 1847, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 1878, 0, 0, 0, 0, 4178, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 1858, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 1871, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 1884,
	0, 1878, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	1867, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 3820, 1854, 1855, 1856, 1857, 0, 0, 0,
	1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 1871, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 1885, 0, 1884,
	0, 0, 0, 0, 0, 0, 1831, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 1851, 1846, 1847, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0, 0,
	0, 0, 3313, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 1858, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 1853, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 1884, 0, 1878, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 1867, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 3312, 1854,
	1855, 1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 1885, 0, 1884, 0, 0, 0, 0,
	0, 0, 1831, 0, 1876, 0, 1877, 0, 0, 0,
	0, 0, 1851, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 1878, 0, 0, 0, 0, 3311, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 1858,
	0, 0, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 1884, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 1867, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1851, 0, 0, 0, 2195, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 3310, 0, 0, 0, 0, 0,
	2193, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 1829,
	1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	1870, 1884, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 1851, 1846, 1847, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 3275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 4920, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	2194, 1858, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 1853, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 1871, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 1884, 0, 1878, 0, 0, 0, 0,
	1831, 0, 0, 2192, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 1867, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 1853, 0, 0, 1837, 0, 3375,
	0, 0, 0, 0, 3374, 0, 0, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1870, 0, 3246, 1880,
	1832, 0, 0, 0, 0, 0, 1859, 1861, 0, 1879,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 1885, 0, 0, 0,
	0, 1846, 1847, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1868,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 3247, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 1882, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 2785,
	0, 0, 0, 0, 1868, 0, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 1871, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 0, 2784, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1867, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 0,
	0, 1831, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 1851, 1846, 1847, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1878, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	4528, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 1858, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 0, 1878, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1867, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1885, 0,
	1884, 0, 0, 0, 0, 0, 0, 1831, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 1851, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1867, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1858, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1853, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 1871, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 1884, 0, 1878, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 1867, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 1853, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1870, 0, 0, 1880, 1832, 0, 0, 0, 0, 0,
	1859, 1861, 0, 1879, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	1885, 0, 0, 0, 4305, 1846, 1847, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 1868, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 1882, 1837, 0, 4005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 1871, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	1878, 4006, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1867,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 1853,
	1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 1885, 0, 1884, 0,
	0, 0, 0, 0, 0, 1831, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 1851, 1846, 1847, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 1878, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 1867, 0, 0, 0, 3381,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 1858, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 3376, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 3801, 0, 0, 0,
	0, 1851, 0, 0, 0, 1867, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 0,
	0, 1831, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 1851, 1846, 1847, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1878, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 1858, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 3314,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 0, 1878, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1867, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1885, 0,
	1884, 0, 0, 0, 0, 0, 0, 1831, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 1851, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1858, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1853, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 0, 1878, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 1867, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 975, 0, 1024,
	1854, 1855, 1856, 1857, 0, 0, 0, 1853, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 998,
	0, 981, 980, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 1000, 0, 0, 1884, 0, 0, 982,
	0, 0, 0, 0, 985, 1876, 0, 1877, 0, 1035,
	0, 0, 0, 0, 1846, 1847, 0, 0, 995, 996,
	0, 0, 0, 0, 0, 0, 0, 1013, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1025, 987, 1852, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 0,
	0, 2357, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1022, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 1023, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 991, 0, 0, 0, 0, 0, 0, 0,
	979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 992,
	993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1001, 999, 0,
	1858, 0, 0, 0, 0, 994, 0, 0, 0, 1010,
	0, 0, 1030, 1029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 1032, 1021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 986, 0, 0, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 1017, 1018, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	1020, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 1027, 1015, 0, 0, 0, 0,
	0, 0, 0, 1033, 1011, 0, 0, 1004, 1002, 0,
	1007, 0, 0, 0, 0, 0, 1008, 0, 0, 977,
	0, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1019, 0, 1009, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 0, 1012, 0, 0, 0, 0, 0, 0, 0,
	0, 990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1016,
}

var sqlPact = [...]int{
	281, -1000, -1000, -1000, -1000, 174, -1000, -1000, 173, 172,
	166, 165, 162, 161, 160, 158, 156, 155, 154, -1000,
	-1000, -1000, -1000, -1000, -1000, 150, -1000, -1000, 147, -1000,
	145, 144, 142, -1000, -1000, 141, -1000, 140, -1000, -1000,
	-1000, -1000, 137, 135, 132, 91873, 91308, 92436, 2446, 116128,
	99200, 2093, 81150, 115563, 80585, 114998, 2275, 9531, 114433, 2881,
	125, -1000, 113868, 124, 122, 121, -1000, 113303, -1000, 2027,
	-1000, 119, -1000, 6361, 70941, 117, 116, 114, 113, 2350,
	111, -1000, 109, 107, -1000, -1000, 106, -1000, 13900, 1584,
	-1000, 103, 102, -1000, 771, 96942, 97, 96, 95, 2686,
	94, 93, 68112, 91, 90, 89, 2327, 3055, -1000, -1000,
	2277, -1000, -1000, 88, 87, 86, 85, 84, 83, 76,
	75, 74, 73, 72, 71, 70, -1000, 69, 68, 67,
	66, 65, -1000, 64, 63, 60, -1000, 58, -1000, 57,
	55, 53, 46, 45, 43, 40, 37, 36, 35, 34,
	33, 31, 30, 137195, -1000, -1000, 28, 2092, 1756, 1748,
	1747, 1732, 1731, 1000, 26, 25, 24, 23, 22, 19,
	16, 15, 14, 13, 12, 11, 9, 4, 1, 0,
	-1, -3, 134, -4, -5, -7, -8, -9, -10, -12,
	2770, -1000, 1681, 1111, 31169, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 124573, 116691, -15, -74, -16, -1000, 3518, 1056,
	56134, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 288,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 484, 2508, 727, -1000, -1000, -1000, 112740, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2439, -82, -1000, 2171,
	-1000, -1000, -1000, -1000, -1000, 722, -1000, 2437, 2389, 283,
	2385, -1000, -1000, -1000, 3567, 2585, 3968, 3967, 3966, 3965,
	3964, 124010, 1998, 3961, 2648, 3960, 3957, 3956, 3954, 3952,
	3951, 3950, -1000, 90743, 1101, 90178, 89613, 3581, 112177, 89048,
	111612, 126831, 48018, 970, 3566, -1000, -1000, -1000, -1000, -1000,
	-1000, 116691, -1000, 1093, -1000, -1000, 3949, 2220, 721, 98635,
	-1000, -1000, 111047, 1675, -1000, -1000, -1000, 941, 1208, 32906,
	32906, 32906, 287, -1000, -1000, -1000, -1000, -1000, -1000, 3947,
	3946, 3945, 3943, 3942, -1000, -1000, 80020, 24038, 79455, 78890,
	110482, 47439, 88483, 87918, 3941, 3940, 3939, 109917, 126266, 3719,
	3716, 1079, 2158, 1524, -1000, -1000, -1000, -1000, -1000, -1000,
	-46, 72633, 3780, 116691, -1000, 274, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46860, 1115, 46281, 726, 45702, 515, 109352,
	-1000, -1000, -1000, -1000, 74935, -1000, 108787, 2578, 3938, 3937,
	1200, 3936, 3461, 1995, 3935, 2021, 1281, 3934, 3933, 3932,
	3931, 3930, 3929, 3928, 1605, 108222, 3144, 1658, 107657, 1888,
	125701, 1076, 87353, 92436, 2813, 107092, 1576, 1566, -1000, -1000,
	-1000, -1000, 3229, 3053, 3046, 1330, -1000, -1000, -1000, -1000,
	59575, 6500, 6118, -1000, -1000, 10440, 106527, 62440, 92436, 92436,
	-1000, -1000, -1000, -1000, -1000, -1000, 45123, 472, 44544, 926,
	105962, -1000, -1000, 60148, 3090, -1000, -1000, -1000, -1000, -1000,
	105397, 43965, 319, 43386, 923, 116691, -1000, 3142, 2090, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2160, 1703, 3758,
	2906, 74360, 2215, 1430, 3528, 3228, 3227, 1530, 2137, 3225,
	3927, 2736, 3220, 3217, 3216, 3213, 3212, 1642, 2747, 315,
	2717, 30590, 3126, 1889, 42807, 1648, 1526, 3208, 3194, 3799,
	2128, 2170, 2157, 78325, 3924, 3922, 3502, 3193, 3190, 2967,
	3182, -1000, 3086, 1601, 271, -1000, -1000, -1000, -1000, -1000,
	-1000, 1505, -1000, -1000, -1000, -1000, -1000, 82839, -1000, -1000,
	1640, -1000, -1000, 1640, -1000, -1000, -1000, -1000, -1000, 1504,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1681, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2413, -1000, 2196, -1000, -1000, 2620, 3486,
	3486, 3486, 3562, 456, 449, -1000, 134, -1000, -1000, 137027,
	-1000, -1000, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597,
	2283, -1000, 719, -1000, -1000, 775, -1000, 718, 661, 615,
	-1000, -1000, -1000, -1000, -1000, -1000, 717, -1000, -1000, -1000,
	-1000, -1000, -1000, 3780, -1000, 26984, -1000, -1000, -1000, 465,
	716, 48597, -1000, -1000, 3816, 3814, 911, -1000, 263, 960,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3141, 715, 714, -1000, 713, 711, 710, 709,
	707, -1000, 706, -1000, 705, 704, 703, 702, 700, 699,
	687, 684, -1000, 2169, -1000, -1000, -1000, -1000, -1000, -1000,
	651, 650, 650, 650, -1000, 1068, -1000, -1000, -1000, 277,
	645, 260, 644, 643, 639, -1000, 679, 678, 677, 676,
	671, 668, 667, 666, 665, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1066, -1000, -1000, -1000, -1000, -47, 116691, -1000,
	484, -47, -1000, -1000, 663, -1000, 35222, 35222, 35222, -1000,
	-1000, 2436, 48597, -1000, 2565, -1000, -41, -41, 920, 57853,
	-1000, 54960, 920, 308, 787, 63579, -1000, 3077, -1000, -1000,
	662, 256, -1000, -1000, -1000, -1000, 24611, 3074, 116691, 116691,
	116691, 92436, 92436, 92436, 116691, 3921, 3920, 3375, 48597, -1000,
	-1000, 70376, 128521, 92999, -1000, -1000, 3693, 68675, 69812, 3140,
	128521, 3139, 127961, 3919, -1000, -1000, -1000, -1000, -1000, 3344,
	3918, 3917, 3916, -1000, 116691, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 231, 3342, -1000, -1000, 96377, 231, 3338, -1000,
	231, 3335, -1000, 95814, -1000, -1000, 2381, 3334, -1000, -1000,
	235, 3333, -1000, -1000, -1000, 233, 3332, -1000, -1000, 253,
	-206, 3331, -1000, -1000, -1000, -1000, -1000, -1000, 137027, -1000,
	-1000, -1000, 127396, -1000, 3489, -1000, 116691, -1000, 48597, -1000,
	-1000, 3688, 1639, 3526, 3623, -1000, -1000, -55, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2621, 2611, 1170, 2472, -1000,
	3386, 1453, 32906, 3448, -1000, -1000, -1000, -1000, -1000, 252,
	24611, -1000, -1000, -1000, -1000, -1000, -1000, 3059, 3329, 1578,
	-1000, 2468, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2252, 3327, -1000, 2607, 3326, 2229, -1000, -1000, 2011,
	-1000, 133508, 1387, -1000, -1000, -1000, -1000, 2208, 3320, -40,
	-1000, -1000, 2441, -1000, -1000, -1000, -1000, 2144, -1000, 1326,
	3308, -1000, 2902, 2902, 86788, 3300, 61867, 60148, 72633, -50,
	-1000, -1000, -1000, -1000, -245, -1000, 23459, 137027, -1000, -1000,
	-1000, -1000, 1904, 137027, 918, -1000, -1000, 3302, -1000, 137027,
	908, -1000, -1000, 3297, -1000, 2720, -1000, 3138, -1000, -1000,
	2535, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2532,
	-1000, -1000, 3915, -1000, -1000, 3914, -1000, 3913, 3909, 3908,
	-1000, 1869, 2133, 3907, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 86225, 2435, -1000, -1000, 85095, 3129, -1000, 2531,
	3620, -1000, 85660, 1072, -1000, 1001, 2528, -1000, 95251, 1023,
	2527, -1000, 3906, 3573, 2855, 1001, 2526, -1000, -1000, -1000,
	-1000, -1000, 1013, -1000, 65844, -1000, 65844, -1000, 1786, -1000,
	123447, -41, 92436, 3780, -1000, -73, -1000, -1000, -1000, 1056,
	-1000, 58999, -1000, 58999, 98070, 75508, 976, 3072, 67537, 136761,
	-1000, 1021, -1000, -1000, 137027, -1000, -1000, -1000, 2712, -1000,
	-192, 2899, -1000, 75508, 61294, 2710, -1000, 137027, -1000, -1000,
	-1000, -1000, 137027, -1000, -1000, -1000, 75508, 85095, -1000, 104832,
	84532, -1000, -1000, 1597, 2698, -1000, -1000, -1000, 75508, 1331,
	75508, 75508, 75508, -1000, 104267, -1000, -1000, 2240, 1617, 3485,
	2236, 92436, -1000, 2077, -1000, -1000, -1000, 3517, 3282, 116691,
	-1000, -1000, 3128, -1000, 72069, 94688, -1000, 94125, -1000, 93562,
	-1000, 92436, -1000, 92436, -1000, 3905, 3904, 3903, -1000, -1000,
	3902, -1000, 3901, 3508, -1000, 856, 42228, 137027, 3507, -1000,
	3900, 2166, 3126, 137027, -1000, 3279, 1760, 1759, 116691, -1000,
	-1000, 116691, -1000, 116691, -1000, -1000, -1000, 1690, -1000, -1000,
	2619, -1000, -1000, -1000, -1000, 92436, 92436, 92436, 92436, 1290,
	-1000, 41649, -1000, -1000, 3201, 3898, 1857, -1000, 1982, -1000,
	3071, 3494, -1000, 1596, 1916, 248, 3818, -1000, -1000, 240,
	-1000, -1000, -55, -1000, 122884, -1000, 2620, -1000, 116691, -1000,
	2667, 3108, 3123, 1838, 2456, 2764, -1000, 41070, 2697, 52071,
	2465, 134, -1000, -1000, 134, 134, 32327, -1000, -1000, 68675,
	68675, 24611, 1535, 48597, 48597, 48597, 48597, 48597, 48597, 48597,
	48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597,
	48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597,
	48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 2164,
	48597, 1503, 48597, 48597, 48597, 48597, 1811, -1000, -1000, 2136,
	518, 2228, 661, -1000, -1000, -1000, 3751, 3751, 3751, 1014,
	1014, 1014, 10233, 10233, 479, 3897, 775, -1000, 48597, -1000,
	81, 58417, 48597, 25186, -1000, 449, 12240, 2626, -1000, 448,
	25794, -1000, -1000, -1000, 26984, 615, 40462, 48597, 1016, 137027,
	-1000, -1000, 1439, 3785, 22880, 3152, 2954, 660, 875, 864,
	29982, 29374, 28766, 28158, 839, 834, 48597, 48597, 48597, 48597,
	48597, 48597, 48597, 48597, -1000, -1000, 3792, -1000, 3785, -1000,
	-1000, -1000, -1000, 3785, 1529, 1527, 3785, -1000, 3785, 3785,
	7916, 7916, 39883, 39304, 38725, 52650, 38146, 48597, 27579, 37567,
	36988, -1000, 116691, -47, 3687, 48597, 267, -1000, 134395, -1000,
	267, 267, 659, -85, 137027, 2862, 2862, 56707, 2554, 2301,
	2301, 2301, -1000, 920, 17631, 920, 102578, 2329, 920, 920,
	226, 251, 446, 54387, 2565, 102578, 743, 658, -24, -25,
	-26, -1000, -1000, -27, -34, -1000, -1000, 92436, 657, 25186,
	24611, 217, 2182, -86, 2794, 2793, -1000, 2780, 2774, -1000,
	2773, 2431, -1000, -1000, -1000, 1940, -87, 1501, 92436, 116691,
	1577, 3896, -57, -1000, 5813, -94, -1000, 1315, 216, 3785,
	-1000, -1000, -1000, -1000, -1000, 3895, 3891, -1000, 1064, 654,
	652, 392, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	651, 650, 650, 650, -1000, 277, 645, 260, 644, 643,
	639, -1000, -1000, -1000, -1000, -1000, 3068, 92436, 116691, 1574,
	3888, 81713, -206, 92999, -93, -1000, -1000, 116691, -1000, -1000,
	-1000, 3887, -1000, 92436, -1000, -1000, 92436, 231, 3296, -1000,
	92436, -1000, 92436, 230, 3295, -1000, -1000, 116691, -1000, 92436,
	92436, -1000, 116691, 116691, 116691, 128521, 128521, 228, -1000, 92436,
	886, -100, 1212, -55, -1000, -1000, -1000, -1000, 1640, -1000,
	1845, -1000, -1000, -1000, -1000, -1000, -1000, 1615, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 911, -1000, -1000, -1000,
	-1000, -1000, -1000, 3768, 3766, -48, -1000, -1000, 24611, -1000,
	-56, 1726, 2054, 1499, -1000, 77760, 2471, 3488, 3886, 2841,
	3474, 1779, -1000, 1672, -1000, 3578, 82839, 3648, 3650, 1350,
	-1000, 3064, -1000, -1000, -1000, 937, 1833, 1897, 1494, 1492,
	82839, 2607, -1000, 68675, -1000, 2757, 3561, 1382, 1396, 1382,
	1382, 1392, -1000, 82839, 1885, 1485, 1484, 1478, -1000, -1000,
	2087, 2066, -1000, -1000, 103704, -1000, 1474, 1468, 3715, 2413,
	2319, 805, 2050, -1000, 1381, 1455, 3060, -1000, -1000, -59,
	3638, 3649, 1350, -1000, 3057, 1454, -1000, -1000, -1000, 3559,
	92436, 24611, 1656, 1631, 1620, 1880, 1438, -49, -1000, 3633,
	1436, 1432, -1000, 1052, 5064, 3405, -1000, 128521, 1052, 1052,
	2009, 3291, 2887, 1727, -1000, 2895, 900, 2893, -1000, -1000,
	-1000, 900, -50, 72633, 116691, 209, -1000, 81, 48597, 48597,
	81, 48597, 81, -1000, 3599, 3288, 3284, -1000, -1000, -1000,
	-1000, -1000, 3884, 2115, 2644, -1000, -1000, 638, 2523, 3056,
	116691, 2816, -52, 92436, -1000, 71505, 3283, 128521, 2607, 2521,
	-1000, -1000, 83967, -1000, 3280, 484, 2519, -1000, 595, 3883,
	3278, -1000, 122321, -1000, 3489, 1301, 3276, 1144, 542, 3683,
	-1000, 542, 66409, -1000, 116691, -1000, -41, 5455, 76634, -101,
	-102, 444, -1000, 103141, 116691, 116691, 3437, 2121, 2118, -1000,
	997, 60148, -1000, 60148, -109, -1000, -192, 2891, 1646, -1000,
	976, 976, 900, -1000, 900, -1000, 92436, 3122, -1000, -1000,
	75508, 976, 976, 976, -1000, -1000, -1000, -1000, 3881, 3880,
	3878, 3876, -1000, -1000, 999, 92436, 116691, 92436, -1000, -1000,
	1696, -1000, 201, -1000, 128521, -1000, 128521, 116691, 92436, -1000,
	999, 116691, 999, 116691, 999, 116691, 999, 999, -1000, -1000,
	-1000, -1000, -1000, 81, -1000, -1000, 137027, -1000, 48597, -1000,
	-1000, 1643, 3874, 1803, -1000, 3121, -1000, 3109, -1000, 3,
	-1000, -1000, 2004, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3873, 137027, -1000, 2053, -1000, -1000, -1000, -1000,
	92436, 92436, 92436, 92436, 116691, 3404, -1000, 116691, 3398, 92436,
	-1000, 3786, -1000, -1000, 82839, -1000, 2667, 3108, -1000, -1000,
	-1000, -1000, -1000, -1000, 1483, 2392, -1000, 2690, -1000, 1716,
	-1000, -1000, -1000, 137027, 53229, -1000, -1000, 137027, 1924, -1000,
	51492, 50913, -1000, -1000, 1863, 92436, 2819, -1000, 2819, -191,
	-1000, 134129, 2685, 92436, -1000, -1000, -1000, -1000, -1000, 935,
	576, 576, 1347, 1347, 1347, 1347, 3589, 1187, 4923, 1048,
	8238, 8238, 6158, 6158, 6158, 6158, 6158, 8238, 1007, 1014,
	1014, 1007, 1007, 1007, 1007, 1007, 1014, 1014, 1014, 8238,
	8238, 8238, 1014, 10233, 563, 11452, 48597, 48597, 1425, 2125,
	518, 9509, 48597, 11067, 11067, 11067, 11067, -1000, 2112, -1000,
	-1000, -1000, -1000, 3054, 637, 52650, 52650, -1000, -1000, -1000,
	-1000, 26389, 48597, -1000, -1000, -1000, -1000, 36380, -1000, -1000,
	133226, -322, 441, -1000, 198, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 437, -170,
	8, -1000, 48597, 48597, 48597, 432, -1000, 197, 48597, 116691,
	-1000, 129727, 740, -110, -1000, -111, 1477, -1000, 48597, -1000,
	-1000, 1422, -1000, 1406, 1383, 1375, -1000, 635, 431, -1000,
	192, -1000, 2296, 634, 629, 48597, -1000, -1000, -1000, -1000,
	-1000, 133056, -1000, -1000, 132790, -1000, -1000, 132620, -1000, -1000,
	132354, -1000, -1000, -1000, -1000, -1000, 136591, 129557, 129124, 129087,
	11252, 17009, 16889, -114, 427, -117, 425, 933, 930, 423,
	421, 419, -119, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -120, 416, -1000, 3047, -170,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 414, -1000,
	413, -1000, 136325, -170, 403, 7307, -1000, 52650, 52650, 52650,
	52650, -1000, 402, -1000, 133944, -1000, 136155, 35801, 35801, 35801,
	395, 135889, 48597, -170, -122, -1000, -127, -1000, -1000, 539,
	-129, 1042, 35222, 55547, 24611, -1000, 1042, 1042, 48597, -1000,
	48597, 2705, -1000, -1000, -1000, -1000, 2704, 2371, 2862, 56707,
	-1000, -1000, -1000, -1000, 102578, -1000, 3780, 2909, -1000, 102578,
	-1000, -1000, 116691, 484, -1000, 102578, 102578, 24611, 920, -1000,
	920, 102578, 797, -1000, -1000, -1000, -1000, -1000, 390, 64716,
	8, 189, 24611, 1001, -1000, -1000, 2815, 2815, 2815, 2815,
	2815, 92436, -1000, -1000, 128521, 1306, -53, -128, 2890, -1000,
	3723, -1000, 2194, -1000, 68675, -1000, 770, 1036, 24611, -1000,
	-1000, -1000, 626, -1000, 3785, 3785, -1000, 3785, 128521, 3042,
	222, 2889, -1000, 2430, -51, 203, 128521, 3872, -1000, -1000,
	231, -1000, 92436, 231, 231, -1000, 92436, 92436, 2381, -1000,
	235, -1000, 233, -1000, -1000, -206, -1000, 1012, 32906, -1000,
	1640, -1000, -1000, 1632, -1000, 2122, -1000, 1473, -1000, -1000,
	-1000, -1000, 32906, -1000, 2096, 116691, 116691, 92436, -1000, 116691,
	-1000, 2285, 128521, -1000, 2518, 121758, 2493, 121195, 68675, -1000,
	-1000, 625, 952, 2676, 2668, 1137, 116691, 116691, 2665, 120632,
	120069, -1000, 3871, 116691, 2202, 48597, 3557, 2375, 2480, 81,
	81, -1000, 81, -1000, -1000, 622, 1407, 92436, 92436, 116691,
	128521, 92436, 1969, -1000, -1000, -1000, -1000, -1000, 83402, -1000,
	-1000, 3790, 3788, -1000, 1382, -1000, -1000, -1000, 1382, 2607,
	1912, 116691, 128521, 92436, 128521, 119506, 118943, -1000, -1000, 1877,
	116691, -1000, -1000, -1000, -1000, 1469, -1000, 805, 1305, 3036,
	48597, 48597, 2223, 81, 81, -1000, 81, 620, 24611, 2094,
	-1000, 3161, 116691, 3812, 118380, 3809, 116691, 116691, 116691, 128521,
	3480, 116691, 116691, 128521, -1000, 117817, 5064, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2217, 73785, 1149, 116691, 1326, -1000, -1000, 1872,
	1299, 1298, 82839, 2238, 1866, 1985, 128521, 60148, 996, 60148,
	2865, -1000, -1000, 22301, -1000, 137027, 137027, -1000, 137027, -1000,
	71505, 75508, 116691, -1000, 1071, 116691, 77197, 980, 3275, 65279,
	-245, 976, 75508, 92436, -52, 2816, 116691, -1000, -1000, 2607,
	3273, 484, 2516, -1000, 128521, 3682, 3272, 619, 3870, 3868,
	-1000, 92436, 2427, 2513, -1000, -1000, 117254, 3287, 805, 116691,
	1042, 56707, 2083, -1000, 63015, 1110, 116691, 1992, 167, -1000,
	-1000, -1000, -17, 116691, -1000, 784, -1000, -1000, 5455, 5455,
	976, -246, 618, -1000, 885, 881, 60721, -130, -1000, 188,
	617, 880, 877, -1000, 2982, -1000, -192, -1000, 75508, 997,
	60148, 3035, 3026, -1000, -1000, 1011, -1000, 1590, 976, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-42, 1973, 116691, -206, -206, -63, -53, -1000, 999, -1000,
	999, -1000, 999, -1000, -1000, -1000, 137027, -1000, -1000, -1000,
	1801, 1796, 116691, -1000, -1000, 116691, -1000, 24611, 116691, 92436,
	24611, 92436, 3105, 3101, -1000, -1000, -1000, 116691, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1176, -1000, 1924, 2388,
	-1000, 615, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2601, -1000, -54, 32327, 909, -1000, -1000, 92436, -43,
	48597, 48597, 9267, 8001, 48597, 52650, 52650, -1000, 48597, 6560,
	-1000, -1000, -1000, -1000, -1000, 3023, 613, 48597, 68675, 6756,
	6238, -1000, 389, 16081, 1007, -1000, 48597, -1000, 998, -1000,
	385, 34643, -1000, 134831, -13, -132, -1000, 18224, -170, -137,
	-1000, -1000, 763, -1000, 3352, -1000, 48597, 135719, 2573, 2299,
	2002, 1814, 3785, 3807, 21722, -1000, 66973, 1049, 2346, 132184,
	-1000, -1000, -1000, -1000, 68675, 68675, 48597, 48597, -1000, 48597,
	48597, 48597, -1000, -1000, -1000, 3785, 916, -1000, -1000, -1000,
	916, -1000, -1000, 1382, -1000, 1382, -1000, 48597, -1000, -1000,
	3016, 48597, -1000, 68675, 68675, 52650, 52650, 52650, 52650, 52650,
	52650, 52650, 52650, 52650, 52650, 52650, 52650, 52650, 52650, 52650,
	52650, 52650, 52650, 52650, 52650, 2688, 52650, 3740, 3740, 3740,
	1385, -1000, 3100, 3016, 48597, 48597, 68675, 383, 381, 380,
	-1000, 48597, -170, -1000, -1000, 6761, 612, -1000, 2593, -1000,
	2951, -1000, 48597, -1000, -145, -1000, 2565, -1000, -1000, 2951,
	2951, -142, 137027, 56707, 56707, -1000, 602, 48597, 2696, -1000,
	-1000, 737, -323, -1000, 870, -1000, -1000, -1000, -1000, -1000,
	-1000, 866, -1000, 484, -1000, -1000, -1000, 185, 102578, 102578,
	736, -1000, -143, -1000, -1000, -144, -1000, 3681, 379, 24611,
	-1000, 1042, 2785, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2760, -264, 128521, 128521, 1860, 2378, 3806, -1000, 3787, 756,
	734, 184, 3785, 377, 373, 369, -206, 128521, 128521, 1852,
	69248, 128521, -1000, -1000, -1000, 231, -1000, -1000, -1000, 230,
	-1000, -1000, -1000, -1000, 2754, -1000, -55, -1000, -1000, -1000,
	48597, -1000, -1000, 3487, 1294, 1293, -1000, -1000, -1000, 3038,
	-1000, 3271, -1000, 2507, -1000, 1116, 2506, 1953, -1000, 48597,
	600, 2851, 588, 587, 3867, 2269, 3864, 1142, 3268, 2381,
	3267, 2381, -1000, -1000, -1000, 949, -1000, 137027, 2375, -1000,
	586, 585, -1000, -56, 1679, 2038, 1291, 1009, -1000, -1000,
	48597, 48597, 102015, -1000, 464, 3481, -44, -1000, -1000, -1000,
	1849, 1288, 1287, -1000, -1000, -1000, -1000, 2607, 1840, 1282,
	1277, -1000, -1000, -1000, -1000, -1000, 2501, -1000, -1000, 3266,
	1008, -1000, 3167, 3165, 925, 116691, 48597, 48597, 135453, 135268,
	-1000, 1006, -1000, -1000, 48597, -1000, -59, 1267, 3628, 2499,
	92436, -1000, 2381, 3261, 1258, -1000, 1243, -1000, -1000, -1000,
	3632, 3630, 1274, -1000, -1000, -1000, 75508, -1000, -1000, 73212,
	-1000, -1000, 1052, 116691, 128521, 92436, 1900, -1000, -1000, 81713,
	82276, 116691, 2887, -206, 900, -1000, 2664, 900, 996, 3015,
	-1000, 2814, -1000, 1005, 92436, 3862, 368, -149, -60, 68675,
	-1000, -1000, -1000, -1000, 2493, 92436, 116691, 1323, 2845, 116691,
	116691, 3679, -1000, 2453, 630, 92436, 928, -1000, 3780, -1000,
	-1000, -1000, 1002, -1000, 3613, 92436, 3675, 3256, 1001, 81,
	92436, 3798, -1000, -1000, 3673, 92436, 3254, 2416, 2496, 2623,
	805, 76071, 1001, 2340, -67, -1000, 1992, 34064, 3479, -150,
	-1000, -1000, -1000, 1042, 66409, 56707, 48597, 3861, -152, -1000,
	-1000, -1000, -1000, -1000, 99763, 99763, 75508, 75508, 75508, 976,
	116691, 116691, 3860, 75508, 75508, 75508, -61, 584, -1000, 865,
	862, 861, -1000, -1000, -1000, -1000, -1000, -1000, 859, 857,
	852, 997, -1000, -1000, -192, 60148, 81, -1000, 2363, 92436,
	-1000, 21143, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 999,
	-245, -1000, -1000, -1000, 2227, 2461, 2227, 1970, 1966, -1000,
	-1000, 2383, -1000, -1000, -1000, -1000, 2781, 3476, 24611, 3597,
	11067, 48597, 48597, 358, 5856, 5556, 11067, 48597, 48597, 68675,
	14182, -157, 48597, 48597, -1000, 48597, 733, 137027, -1000, 3805,
	48597, 365, 363, -1000, -1000, -1000, 3781, -1000, -1000, -1000,
	137027, 48597, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 362,
	-1000, 177, -1000, -1000, -1000, 125136, -1000, 48597, 361, 3556,
	-1000, 360, 357, 14944, 7189, 131918, 131748, 131482, 353, -1000,
	-1000, 343, 340, 137027, 3100, 137027, -1000, -1000, 1177, 1177,
	1421, 1421, 1421, 1421, 3740, 341, 1194, 532, 1945, 1945,
	1945, 616, 1385, 1385, 1945, 1945, 1945, 1385, 3009, 2682,
	580, 7800, -1000, -1000, 137027, 137027, 339, -1000, -1000, -1000,
	-170, 313, 6761, -1000, 2950, 3545, 137027, -1000, 56707, 2950,
	2950, -1000, -1000, 2371, 116691, 137027, 56707, -1000, 2909, -1000,
	19400, 18815, -1000, 24611, -1000, -1000, -1000, -1000, 3780, -1000,
	64716, -1000, 579, -1000, 168, -1000, 2785, -1000, 851, -1000,
	-1000, 75508, 75508, 2815, -1000, 2961, -264, -262, 116691, -1000,
	-1000, 731, 3859, 750, 24611, 310, -1000, -1000, -1000, -206,
	-206, 116691, 3008, 92436, 116691, 1555, -206, -1000, -1000, -1000,
	3431, 137027, 116691, 116691, 1659, 101452, 116691, 3244, -1000, 3242,
	-1000, 1137, 2316, 131312, 57280, -1000, 57280, 116691, -1000, -1000,
	-1000, -1000, 2186, 1551, 3858, 1191, -1000, 3519, 116691, -1000,
	116691, -1000, -1000, -1000, 116691, 116691, 92436, 116691, -1000, 128521,
	3178, -158, 137027, -62, -1000, 850, -1000, 1374, -1000, 20564,
	116691, 128521, 92436, 116691, 128521, 92436, 3241, 116691, 2263, -1000,
	-1000, 3163, -1000, 137027, 135001, 81, 48597, 3176, -160, 24611,
	-1000, 3804, 3803, 3233, 3523, -1000, 116691, 3802, 116691, 92436,
	3429, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1837, 1242,
	1241, 2415, 2414, 2367, -63, 2238, 996, -64, 577, -1000,
	849, -1000, -1000, 848, 847, 996, -1000, 75508, 60148, 3856,
	484, -1000, 2828, -1000, 97505, 77197, 2384, -1000, -1000, 575,
	116691, 116691, 573, -1000, 81, -1000, 3855, 100326, 572, -1000,
	2353, -1000, 730, -1000, 2587, 128521, 2607, 81, 92436, -1000,
	995, 484, 305, -65, -1000, 3306, 1128, 24611, 92436, 3219,
	2638, 805, 76071, -1000, 1301, 2764, -1000, -66, -1000, 669,
	81, 2340, -1000, -67, 137027, -1000, 841, -1000, -165, -1000,
	-1000, 303, -1000, 3425, -1000, -1000, -172, -1000, -1000, 3277,
	3277, 75508, 60148, 75508, 75508, 75508, 60148, -1000, 997, 900,
	-1000, 2562, -1000, -1000, -1000, -1000, -1000, 24611, 1822, -1000,
	562, 560, -1000, -1000, -1000, -1000, 3476, 11067, 11067, 48597,
	48597, 48597, 11067, 14182, -180, -1000, 11067, 11067, -170, -1000,
	-1000, 134831, -1000, -1000, -1000, 137027, -1000, 19985, 2254, -1000,
	131046, -1000, 32327, -1000, -1000, 48597, 48597, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 52650, 3007, 559, 68675, -1000,
	-1000, 299, 1015, 48597, 50334, 2565, 1015, 1015, -1000, -185,
	-1000, -1000, -1000, 3780, -1000, 3780, 168, -1000, -1000, 3854,
	24611, -1000, 75508, -1000, -1000, -1000, 2366, -1000, -1000, 3175,
	-174, 746, -1000, 3853, -1000, -1000, 149, 128521, 3004, 146,
	2886, -1000, -1000, -1000, 2882, 3672, -1000, 2046, -1000, 116691,
	116691, -1000, 116691, -1000, 24611, 116691, 2975, 1343, -1000, 952,
	2661, 549, 52650, 1174, 92436, 903, 2935, 2927, -1000, 3705,
	3544, 2938, -186, -1000, 116691, 48597, 116691, -194, -195, 2482,
	-1000, -1000, 1166, 1318, 48597, 1163, -1000, -1000, -1000, 68675,
	540, 2381, 2381, -204, -205, -1000, -1000, -1000, 48597, 1240,
	116691, 33485, -1000, 3852, 3481, -1000, -1000, -1000, -1000, -1000,
	-1000, 116691, -1000, 116691, -1000, 48597, -1000, 134565, 48597, 1236,
	-1000, -1000, -1000, 3801, 2381, 24611, 2381, -1000, 2381, 3523,
	1188, 116691, 128521, 92436, 1575, 1575, 3098, -1000, -1000, -1000,
	2617, 2617, 75508, 60148, 60148, -1000, -70, 996, -1000, 3666,
	2249, 3843, -1000, -1000, -1000, -1000, 2656, -1000, -1000, -1000,
	116691, 2653, 2948, 57280, 538, 536, 116691, 985, -1000, -207,
	-1000, 833, 828, 77197, 980, 968, -1000, -75, 534, -1000,
	825, -1000, -1000, -1000, -1000, 484, -1000, 2752, 3665, -1000,
	3800, 531, 530, 116691, 2412, 528, 24611, 3477, 805, 76071,
	-1000, 3287, 1992, -1000, 2488, 116691, 3471, -1000, 2764, 518,
	-1000, 976, 516, 976, -1000, -210, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -83, -1000, 884, 882, -1000, -1000,
	92436, 92436, 48597, 48597, -1000, 11067, 11067, 11067, -1000, 295,
	-1000, -1000, 2340, 3543, -1000, -84, 130876, 130610, 8191, 52650,
	68675, -212, -1000, -1000, 116691, 137027, -92, -1000, 137027, 513,
	512, 436, -1000, -1000, -1000, 564, 533, -1000, -1000, -1000,
	-1000, 128521, 3833, -1000, 128521, -206, 128521, 128521, 1815, 100889,
	116691, -1000, -1000, 1953, 2120, -1000, -1000, -1000, 116691, 2494,
	-1000, -1000, -1000, 1135, 48597, 7800, 52650, 511, 48597, -1000,
	509, 495, 3664, 3391, -1000, 2825, 3001, 2062, 57280, -1000,
	3476, -1000, 130440, -1000, 1125, 2086, -1000, -1000, -1000, -1000,
	137027, 52650, 3523, 57280, -1000, -1000, 494, 493, 137027, 492,
	824, 2998, -1000, -1000, -1000, -1000, -1000, 137027, 81, 137027,
	490, 3628, -1000, -1000, -1000, -1000, 2381, 92436, -1000, -1000,
	-1000, 1233, -1000, -1000, -1000, -1000, 3832, 3831, 2995, 81713,
	-1000, -218, -1000, -1000, -1000, 2099, 81, 980, -1000, -1000,
	2384, 489, -1000, -1000, 3093, 3093, -221, 57280, 57280, -223,
	2395, 2724, -1000, 100326, 32906, 32906, 294, 3662, 968, -1000,
	3755, -1000, 3395, 3395, 48597, 3660, 3418, -1000, 81, -1000,
	3798, 57280, -1000, 92436, 57280, 2404, 2159, 2613, 76071, -1000,
	2623, -1000, -1000, -226, 116691, 1992, -1000, -1000, 75508, -1000,
	-1000, 2562, -1000, 116691, -1000, 116691, -1000, -1000, -228, -233,
	-1000, 2247, 48597, 32327, -1000, -1000, 8191, -234, -1000, -163,
	-1000, 3656, 50334, 3830, 3829, 3825, -1000, -1000, -264, -1000,
	-206, -206, -206, 116691, -1000, 2037, -1000, 2493, -1000, -1000,
	3188, 2945, 130174, 7800, 2595, 116691, 130004, 2607, 2607, -1000,
	3655, 3000, -1000, -1000, 2223, 488, -1000, -1000, -1000, -1000,
	909, 116691, -1000, 2944, 92436, 7800, 1129, -235, 2227, 2227,
	48597, 31748, 2261, -1000, 48597, -1000, -1000, 3523, 128521, -1000,
	-1000, 128521, 2397, -1000, 2988, 3782, -1000, 2395, 116691, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1125, -236, -244, -1000, -1000, 3505, -1000, 3410, -1000, -1000,
	-1000, 2828, 81, -1000, -1000, -1000, -250, 137027, 81, 3824,
	995, 284, -252, 1128, -253, 92436, 2060, -1000, 805, -1000,
	2638, 1042, 3366, -1000, -261, -1000, -266, -267, -1000, -1000,
	282, 49755, 49755, 49755, -170, -191, -1000, 116691, 485, -1000,
	-1000, -1000, -1000, -1000, 108, -1000, -1000, 3162, 993, -1000,
	842, 1994, 268, 1127, 148, 10, -1000, -1000, -1000, 2938,
	-1000, 116691, -1000, -1000, 990, 484, -1000, 48597, 1125, -274,
	-1000, 1109, -275, -1000, 1108, -277, -1000, 2993, -1000, -280,
	2381, -264, 228, 1575, 989, 3587, -1000, -1000, -1000, 2605,
	-283, -1000, -1000, 2062, 1125, 2223, 2572, -1000, 2249, 985,
	-1000, -1000, -1000, -1000, -1000, 1125, 481, 2062, 480, 1637,
	805, -1000, -1000, 1382, 3477, 3363, 1377, 976, -1000, -1000,
	-1000, 3281, -1000, 53808, 2386, 1950, 133678, 3281, 3281, -1000,
	-1000, 128521, 116691, 3579, -1000, 890, 887, 1567, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1042, -286, 3574, 2595,
	137027, -1000, -1000, 2227, 2876, -1000, 2227, 2991, -1000, 2248,
	-1000, -1000, -1000, -1000, 2990, -1000, 1909, 3729, -1000, -1000,
	-1000, 116691, 2223, 2062, 965, 1929, 1926, 3823, 980, 2395,
	2062, 57280, 2223, 57280, 2205, -1000, 116691, -1000, 2159, 1368,
	-1000, 1765, -1000, -1000, 1931, 3700, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -206, -1000, 822, -1000, 3383, -1000, 1161,
	2246, 2246, -1000, -1000, 817, 842, -1000, 474, -1000, 473,
	-1000, 128521, 2352, -1000, -1000, -1000, 965, 2223, 1042, 470,
	-1000, 3821, -1000, 2395, -1000, 2223, -288, 965, -289, 2256,
	-1000, -1000, -245, 2060, -1000, 1763, 66409, 1932, -1000, -1000,
	2304, 49176, 48597, -1000, 3727, -1000, -1000, 2695, -1000, 48597,
	2938, 48597, 48597, 228, 64143, 1042, 965, -1000, -1000, 2605,
	965, 1125, 1042, 2062, -1000, 805, 1637, 66409, -272, -1000,
	-1000, -1000, 137027, -1000, -1000, -1000, 137027, -1000, -294, -297,
	-1000, -246, 99763, -1000, 1042, -1000, 1042, 2062, -1000, 2223,
	128521, 2205, -272, -1000, 2223, 1228, -303, -1000, -1000, 2223,
	965, -1000, -1000, -1000, -1000, -1000, 469, -1000, 965, 1042,
	48597, 1042, -1000, -305, -1000, 2223, -1000,
}

var sqlPgo = [...]int{
	0, 4627, 4626, 4625, 4621, 4620, 4619, 4618, 4616, 4615,
	4612, 4611, 4608, 152, 4607, 4606, 4605, 4604, 4602, 4601,
	4600, 4598, 4597, 4596, 4594, 4593, 4590, 4589, 4588, 4586,
	4583, 4582, 4580, 4579, 4578, 4577, 4574, 4571, 4570, 4567,
	4565, 4564, 4563, 4560, 4558, 4557, 4556, 4552, 4549, 4547,
	4546, 4544, 4542, 4541, 4540, 4539, 4537, 4536, 4535, 4534,
	4533, 4531, 4530, 4528, 4526, 4525, 4523, 61, 4516, 4515,
	4513, 4511, 4509, 4508, 4507, 4504, 4502, 4501, 4500, 4498,
	4497, 4496, 4495, 4494, 4493, 4492, 4491, 4490, 77, 4488,
	280, 4478, 4476, 4474, 4473, 4471, 4470, 4469, 4466, 4464,
	4463, 4461, 4460, 278, 4459, 150, 164, 4458, 4457, 3971,
	4455, 4449, 277, 4447, 4444, 4443, 4442, 4433, 290, 4432,
	4429, 4421, 4418, 4417, 4416, 4415, 4413, 4408, 4404, 4402,
	4398, 100, 209, 4397, 4396, 1344, 4394, 4391, 4385, 4384,
	4382, 4380, 4378, 4374, 4372, 4371, 4369, 254, 181, 4366,
	275, 4363, 4362, 4361, 4360, 4359, 4347, 4346, 4339, 4337,
	4336, 4332, 4331, 4330, 4329, 4327, 4326, 4325, 4324, 4321,
	4320, 4319, 4318, 4317, 4315, 4313, 4311, 4305, 4303, 4302,
	4301, 4300, 4299, 4298, 4288, 4287, 4285, 4284, 4283, 4282,
	251, 218, 140, 4281, 4279, 272, 270, 4278, 4277, 4276,
	4273, 4270, 145, 18, 48, 4268, 4267, 99, 89, 87,
	106, 109, 115, 4265, 131, 4264, 142, 72, 4263, 23,
	1, 267, 250, 8392, 248, 4262, 4261, 4260, 246, 200,
	4259, 244, 4258, 4257, 4256, 4255, 4254, 4252, 83, 57,
	188, 187, 179, 180, 25, 60, 111, 94, 65, 43,
	21, 91, 217, 20, 3, 265, 4250, 263, 14, 149,
	8, 36, 4249, 4248, 4247, 4246, 3596, 117, 4244, 264,
	247, 173, 4242, 4240, 4238, 828, 4237, 4234, 53, 4231,
	122, 90, 124, 17, 137, 4226, 169, 176, 41, 4225,
	182, 69, 4224, 4222, 101, 96, 8653, 12056, 4221, 4220,
	133, 79, 114, 1807, 198, 168, 206, 126, 174, 175,
	59, 215, 214, 185, 749, 4218, 255, 4217, 3648, 107,
	192, 166, 5184, 4215, 4214, 4210, 92, 4209, 112, 4208,
	4207, 82, 24, 4, 2, 155, 44, 42, 13, 4204,
	33, 139, 51, 27, 4202, 26, 4201, 4200, 4199, 4198,
	50, 4197, 46, 167, 4196, 4192, 284, 4191, 110, 56,
	45, 4190, 29, 221, 4188, 224, 143, 4187, 4184, 259,
	210, 189, 4183, 95, 234, 4182, 4172, 4171, 4170, 4169,
	4167, 159, 9, 146, 4166, 4165, 162, 4164, 54, 242,
	205, 4163, 58, 4162, 4160, 184, 62, 148, 281, 196,
	233, 132, 245, 194, 226, 4159, 4158, 4156, 229, 4146,
	4144, 222, 178, 4143, 4142, 257, 287, 108, 52, 84,
	240, 85, 203, 171, 4141, 208, 4140, 4137, 286, 191,
	220, 12, 11, 105, 118, 4135, 7, 239, 170, 228,
	129, 4134, 7237, 2728, 2771, 4133, 4132, 154, 138, 81,
	134, 163, 268, 104, 4131, 4130, 2308, 4121, 4119, 4118,
	4116, 193, 4114, 4112, 4110, 160, 201, 237, 4109, 123,
	74, 55, 22, 130, 252, 283, 128, 223, 197, 261,
	4108, 4106, 4105, 204, 4103, 70, 113, 177, 207, 260,
	66, 4102, 121, 4101, 158, 2196, 71, 165, 4096, 231,
	4095, 4094, 4092, 4091, 4090, 4087, 4086, 2037, 238, 4085,
	4084, 4083, 35, 199, 4082, 266, 269, 190, 161, 78,
	4080, 98, 2974, 4079, 97, 225, 64, 5, 4078, 86,
	4077, 2141, 67, 4075, 0, 13205, 9386, 11756, 12772, 4074,
	5986, 4073, 4071, 4070, 227, 76, 4069, 4068, 4067, 120,
	4066, 88, 4065, 4064, 80, 4063, 28, 16, 19, 31,
	32, 743, 156, 4062, 4059, 73, 141, 135, 4056, 282,
	235, 4055, 4053, 4051, 4050, 93, 4047, 49, 4046, 39,
	4045, 4044, 40, 15, 34, 4042, 4041, 153, 4039, 127,
	258, 4033, 172, 4032, 102, 144, 4031, 4025, 4024, 68,
	63, 262, 213, 216, 116, 4022, 288, 4020, 211, 4019,
	4013, 30, 4012, 4011, 249, 125, 119, 47, 253, 147,
	38, 186, 219, 4006, 4003, 183, 4001, 3999, 3998, 279,
	3996, 3993, 37, 3989, 3988, 3984, 10, 3983, 3979, 212,
	3390, 3977, 3976, 6, 3975, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 601,
	601, 601, 602, 602, 603, 603, 603, 24, 45, 17,
	18, 18, 18, 18, 604, 604, 604, 604, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 597, 597, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 605, 605, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 496, 496, 496, 527, 527, 527, 527, 529,
	529, 624, 624, 625, 625, 625, 625, 625, 134, 134,
	394, 394, 394, 55, 55, 55, 55, 55, 592, 592,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 611, 611, 610, 609, 609, 609, 612, 612,
	612, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 216, 16, 16, 16, 113, 113, 113, 113, 113,
	113, 113, 108, 108, 531, 531, 532, 532, 201, 201,
	202, 202, 202, 202, 203, 203, 204, 204, 204, 70,
	70, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 59,
	60, 60, 60, 60, 60, 60, 61, 61, 68, 68,
	68, 68, 68, 68, 68, 68, 192, 192, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 76, 76, 76, 76, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 627, 627, 628, 628, 629, 629,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 85, 85, 354, 354,
	317, 317, 86, 86, 86, 87, 87, 88, 88, 72,
	72, 590, 590, 370, 370, 487, 487, 73, 598, 598,
	598, 600, 600, 599, 599, 90, 90, 393, 393, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 100, 100, 100, 100,
	100, 101, 101, 101, 98, 98, 98, 95, 95, 95,
	94, 94, 94, 99, 99, 99, 589, 306, 306, 97,
	97, 97, 96, 96, 96, 371, 371, 102, 102, 102,
	102, 318, 103, 103, 103, 103, 103, 103, 103, 103,
	106, 106, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 489, 489, 104, 104, 104,
	454, 454, 109, 109, 109, 409, 409, 110, 110, 110,
	110, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 594, 594, 363, 363, 269, 269, 269,
	269, 122, 122, 122, 122, 123, 123, 123, 124, 124,
	197, 197, 140, 140, 140, 140, 139, 139, 139, 139,
	139, 139, 139, 139, 62, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 67, 67, 67, 67, 67,
	143, 143, 621, 621, 145, 142, 142, 142, 142, 142,
	141, 141, 144, 144, 144, 144, 146, 148, 148, 148,
	148, 148, 147, 147, 147, 147, 147, 149, 149, 521,
	521, 379, 379, 519, 519, 541, 541, 520, 520, 324,
	324, 324, 324, 324, 325, 325, 325, 530, 530, 530,
	530, 530, 530, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 198, 198, 199, 200,
	200, 200, 200, 200, 175, 175, 175, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 380, 380,
	178, 178, 178, 162, 162, 151, 151, 151, 151, 151,
	151, 151, 156, 156, 156, 156, 156, 156, 156, 156,
	152, 152, 164, 164, 164, 164, 164, 157, 157, 158,
	158, 158, 159, 159, 159, 159, 185, 185, 161, 161,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 153,
	153, 153, 153, 166, 166, 166, 166, 416, 416, 416,
	190, 190, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 188, 188,
	188, 188, 188, 188, 613, 613, 614, 614, 614, 182,
	182, 182, 182, 182, 182, 468, 468, 176, 176, 176,
	176, 181, 181, 181, 181, 184, 184, 184, 184, 399,
	399, 173, 173, 173, 174, 174, 174, 179, 179, 180,
	355, 355, 177, 177, 183, 183, 183, 183, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 155, 155, 155,
	155, 186, 186, 172, 172, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 631, 631, 168, 168,
	168, 167, 167, 167, 167, 170, 170, 171, 171, 171,
	171, 171, 171, 169, 160, 189, 591, 591, 587, 587,
	587, 587, 587, 587, 587, 587, 588, 588, 588, 588,
	593, 593, 114, 114, 114, 114, 114, 114, 114, 125,
	125, 125, 125, 125, 125, 125, 128, 128, 115, 115,
	115, 115, 115, 115, 115, 118, 118, 116, 116, 116,
	116, 117, 117, 80, 80, 80, 80, 80, 15, 15,
	15, 81, 81, 260, 260, 219, 219, 219, 342, 342,
	220, 220, 332, 332, 332, 332, 217, 217, 218, 218,
	82, 82, 632, 632, 632, 606, 606, 606, 607, 607,
	607, 607, 607, 607, 326, 326, 327, 327, 434, 434,
	434, 434, 434, 330, 330, 330, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 340, 341, 341, 333, 333,
	339, 338, 338, 337, 337, 336, 336, 334, 335, 335,
	335, 344, 344, 343, 346, 346, 345, 433, 550, 550,
	552, 552, 552, 552, 552, 552, 552, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 417, 417, 633, 633, 634, 635,
	548, 548, 548, 549, 544, 544, 545, 545, 545, 545,
	545, 328, 328, 329, 329, 329, 329, 546, 547, 361,
	361, 472, 551, 551, 553, 553, 555, 636, 636, 636,
	636, 636, 636, 637, 637, 637, 432, 432, 431, 431,
	352, 352, 556, 556, 556, 556, 557, 557, 557, 557,
	557, 560, 559, 558, 558, 558, 558, 558, 84, 84,
	84, 396, 396, 395, 395, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	194, 194, 272, 272, 272, 78, 78, 78, 12, 12,
	12, 12, 12, 12, 12, 287, 287, 13, 13, 13,
	608, 608, 608, 83, 83, 83, 83, 83, 83, 350,
	350, 350, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 596, 596, 595, 595,
	273, 273, 639, 639, 89, 89, 89, 89, 89, 89,
	89, 89, 490, 490, 491, 491, 77, 77, 77, 77,
	77, 418, 418, 415, 415, 414, 414, 360, 360, 470,
	470, 470, 471, 277, 277, 278, 278, 238, 238, 238,
	31, 30, 22, 22, 26, 26, 27, 27, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 28, 28, 48,
	48, 48, 48, 49, 49, 49, 49, 52, 52, 53,
	53, 47, 47, 47, 47, 50, 50, 44, 44, 54,
	54, 54, 54, 54, 615, 617, 617, 616, 616, 620,
	620, 620, 620, 620, 620, 618, 618, 619, 619, 622,
	622, 623, 623, 121, 121, 126, 126, 126, 126, 126,
	127, 127, 127, 127, 129, 129, 129, 129, 138, 138,
	193, 193, 193, 193, 193, 193, 193, 56, 56, 56,
	56, 69, 69, 69, 69, 136, 641, 641, 641, 137,
	137, 137, 640, 640, 270, 270, 428, 428, 429, 429,
	642, 642, 430, 430, 430, 430, 430, 263, 262, 264,
	264, 265, 265, 75, 75, 75, 253, 253, 252, 254,
	254, 255, 255, 250, 250, 533, 533, 257, 257, 257,
	258, 258, 246, 246, 247, 247, 248, 248, 249, 249,
	261, 261, 528, 528, 643, 643, 112, 112, 112, 196,
	196, 316, 316, 316, 425, 425, 425, 353, 353, 284,
	284, 427, 427, 427, 427, 427, 392, 392, 392, 195,
	195, 368, 368, 382, 382, 383, 383, 484, 484, 384,
	119, 119, 120, 120, 135, 135, 223, 223, 221, 221,
	221, 221, 221, 221, 221, 221, 228, 228, 229, 229,
	230, 230, 231, 232, 232, 232, 232, 372, 372, 233,
	233, 233, 222, 222, 222, 224, 224, 224, 224, 224,
	224, 224, 227, 227, 227, 227, 234, 234, 234, 226,
	226, 567, 567, 567, 569, 569, 571, 571, 570, 570,
	566, 566, 568, 568, 638, 638, 398, 398, 398, 349,
	351, 347, 347, 348, 348, 358, 358, 356, 357, 357,
	359, 359, 469, 469, 469, 239, 239, 239, 389, 389,
	389, 389, 390, 390, 421, 421, 419, 419, 419, 419,
	420, 420, 422, 422, 422, 423, 423, 424, 424, 386,
	386, 387, 387, 388, 388, 388, 388, 450, 450, 225,
	225, 225, 365, 365, 365, 366, 366, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 441, 441,
	439, 439, 439, 439, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 474, 475, 475, 367, 367, 476, 426,
	426, 585, 585, 585, 586, 586, 467, 467, 477, 477,
	477, 477, 477, 477, 465, 465, 466, 466, 485, 486,
	486, 402, 402, 402, 402, 400, 400, 403, 403, 403,
	403, 403, 401, 401, 478, 478, 478, 478, 391, 391,
	479, 479, 479, 479, 480, 481, 481, 482, 482, 435,
	436, 436, 492, 492, 492, 492, 494, 364, 364, 364,
	364, 364, 543, 542, 542, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 509, 509, 509, 509,
	509, 509, 509, 495, 495, 495, 495, 495, 499, 499,
	499, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 500, 500, 505, 505, 506, 506, 506, 501,
	502, 507, 507, 507, 507, 644, 644, 511, 511, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 497, 497,
	497, 504, 504, 504, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 410, 410, 412,
	412, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 444, 444, 444, 444, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 561, 561, 561, 561, 561, 561, 561, 561, 446,
	446, 564, 564, 565, 565, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 572, 572, 573, 573,
	575, 575, 576, 576, 577, 578, 578, 578, 579, 580,
	580, 574, 574, 581, 581, 581, 581, 582, 582, 583,
	583, 583, 583, 583, 584, 584, 584, 584, 584, 456,
	456, 457, 457, 463, 463, 463, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 323, 323, 322, 274, 274, 274, 274, 274, 274,
	377, 377, 375, 375, 375, 378, 378, 376, 376, 374,
	374, 373, 373, 453, 453, 451, 451, 455, 455, 404,
	404, 510, 510, 510, 510, 510, 510, 510, 510, 405,
	405, 405, 413, 406, 406, 407, 407, 407, 407, 407,
	447, 448, 408, 408, 408, 449, 449, 458, 462, 462,
	461, 460, 460, 459, 459, 437, 437, 438, 438, 385,
	385, 645, 645, 381, 381, 483, 483, 483, 483, 320,
	320, 369, 369, 319, 319, 311, 311, 312, 312, 312,
	312, 362, 362, 464, 464, 512, 512, 513, 513, 514,
	514, 515, 515, 516, 517, 518, 452, 452, 295, 294,
	281, 282, 293, 292, 291, 280, 283, 288, 289, 290,
	285, 286, 302, 301, 300, 251, 256, 307, 308, 308,
	310, 310, 309, 309, 297, 298, 299, 488, 279, 313,
	313, 314, 314, 314, 315, 315, 315, 315, 275, 275,
	276, 276, 303, 303, 304, 305, 305, 296, 296, 296,
	266, 266, 266, 267, 267, 268, 268, 526, 526, 523,
	523, 523, 524, 524, 524, 525, 525, 525, 525, 522,
	522, 522, 522, 522, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 535, 535, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 537, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 7,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 12, 15, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 6, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 16, 19, 15, 18,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 14, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 7, 10, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 610, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 391, 437, 449, 406, 143, 428, 411,
	-144, -145, 467, -56, -69, -137, -136, 73, 130, 421,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -626, 102, -568,
	-93, -96, -129, -630, 164, 224, -115, -116, -117, 373,
	-123, -124, 430, -126, -127, -128, 433, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 472, -180, -189, -158, 533, 49, 488,
	82, 148, 441, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -567, -94, -95, -98, -100, -101, -97, -99,
	429, -224, -222, 607, 548, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 570, 579, -227, -225, -226, -234, 459, 556,
	508, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, -318, 2, -297, -303, -304, -305, -296,
	-266, -537, -540, 4, -534, -538, 171, 234, 336, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 334, 329, 330, 331, 323, 324,
	320, 325, 321, 322, 326, 327, 333, 328, 338, 339,
	340, 343, 221, 345, 346, 349, 367, 353, 354, 355,
	358, 359, 362, 365, 366, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 378, 379, 381, 382, 383, 385,
	386, 387, 389, 391, 392, 394, 395, 397, 398, 399,
	400, 401, 402, 403, 405, 406, 408, 407, 409, 411,
	413, 414, 415, 421, 428, 422, 424, 425, 426, 427,
	429, 430, 431, 432, 433, 435, 436, 437, 439, 440,
	441, 442, 443, 445, 447, 448, 452, 453, 469, 470,
	490, 449, 450, 451, 454, 455, 456, 457, 458, 462,
	460, 461, 463, 464, 465, 467, 468, 471, 472, 474,
	475, 476, 477, 478, 479, 480, 483, 485, 486, 487,
	488, 507, 489, 491, 495, 496, 497, 498, 492, 493,
	506, 500, 501, 503, 504, 509, 510, 511, 512, 513,
	514, 515, 516, 518, 526, 527, 528, 530, 533, 534,
	535, 536, 524, 538, 539, 542, 543, 544, 547, 545,
	546, 548, 550, 553, 554, 555, 561, 560, 562, 563,
	565, 566, 571, 572, 574, 575, 576, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 125, 126, 155,
	167, 168, 180, 195, 196, 208, 210, 218, 219, 220,
	241, 242, 244, 249, 271, 342, 344, 360, 364, 380,
	384, 388, 390, 404, 444, 481, 494, 499, 519, 520,
	521, 522, 529, 531, 556, 557, 558, 564, 573, -318,
	2, -297, 351, -290, 2, -266, -266, 391, 28, 2,
	28, 379, 461, 511, 513, 2, -594, -363, 2, 28,
	-269, -266, 102, 206, 459, -290, 2, -594, 206, -363,
	25, 2, -266, 2, 365, 22, 27, 66, 77, 98,
	141, 166, 189, 192, -629, 367, 398, 447, 463, 506,
	516, 530, 2, 560, 292, 460, 508, 234, 120, 535,
	454, -608, 452, 453, 365, 396, 439, 209, 549, -270,
	2, 449, -266, 292, 2, 610, 94, 74, 444, 464,
	-147, 2, 282, 527, -148, -149, -146, 519, -521, 454,
	439, 314, -266, 610, 610, 610, 28, -279, -266, 508,
	234, 454, 120, 504, 610, 2, 508, 370, 560, 460,
	120, 401, 234, 535, 192, 141, 27, 454, -608, 584,
	585, 292, 127, -592, 2, -587, 4, -538, -534, -312,
	-311, 508, 514, 120, -305, -296, 599, -304, 610, 610,
	610, 610, 2, 252, 253, 400, 399, 464, 465, 28,
	610, 610, 610, 610, 452, 2, 166, 22, 27, 66,
	93, 98, 127, 189, 192, 356, -627, 367, 398, 463,
	506, 510, 516, 530, -607, 489, 68, 427, 454, -606,
	-608, 292, 535, 141, -414, 120, 282, 204, 543, 513,
	511, 541, 133, 240, 546, 545, 610, 610, -106, 2,
	607, 32, 31, -105, -109, 143, 467, -216, 508, 245,
	2, -266, 610, 610, 610, 2, 252, 253, 452, 453,
	28, 610, 610, 190, -587, 2, 610, 610, 610, 2,
	28, 252, 253, 452, 453, 245, 2, 68, 456, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 2, -191, 464, 489, 215,
	47, 46, 74, 28, 397, 79, 371, 121, 127, 150,
	536, 207, 234, 235, 260, 93, 94, -416, 44, 253,
	68, 252, 453, -613, 452, -468, 509, 455, 461, 503,
	264, 449, 527, 102, 550, 440, 576, 401, 402, 501,
	415, 283, 159, 191, 4, 120, 314, 439, 466, 268,
	267, 519, 282, 448, 374, 84, 610, -638, 2, 508,
	-640, 2, 527, 527, 2, -640, 2, -640, 2, -640,
	2, -641, 527, 573, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, -222, -224, -223, 610, 610, 610, 610, 610,
	610, 610, -191, 464, 2, 74, 28, -356, -358, 540,
	243, 152, 357, -221, -223, 2, -567, -519, 2, -442,
	-541, -444, 597, 598, 590, 505, 67, -322, 335, 577,
	-456, 127, 541, 351, -540, -445, -458, 155, 367, 444,
	-378, 8, 9, 5, 6, 7, -275, -446, -452, 532,
	170, 341, -315, 611, 10, 607, -564, -223, -457, 37,
	210, 65, -523, -314, -276, -495, 244, -313, -296, -561,
	-562, 4, -534, -535, -524, -498, -506, -502, -503, -509,
	-266, -537, 77, 111, 112, 110, 115, 114, 285, 284,
	116, 113, 466, 549, 66, 36, 218, 219, 249, 342,
	220, 75, -563, 142, -536, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 54, 557, -507, 122, 519,
	520, 521, 522, 195, 196, 58, 167, 168, 364, 388,
	499, 529, 531, 208, 271, 43, 106, 191, 239, 222,
	248, 250, 254, 272, 275, 315, 332, 337, 361, 363,
	438, 473, -644, 558, 494, 69, 70, -569, 407, -570,
	-290, -569, 610, 610, 612, 610, -347, -349, -351, 2,
	28, 139, 607, 2, -473, 2, -474, -478, -223, 265,
	-477, 607, -475, 605, -297, 352, -565, 445, -561, -562,
	-275, -296, -314, 4, -534, -536, 609, -352, 607, 120,
	454, 508, 78, 234, 93, 166, 192, -409, 607, -266,
	28, 351, 523, 612, -348, 395, -454, 607, 351, 354,
	190, 354, 60, 296, 2, 2, 2, 2, 2, 218,
	-266, 508, 119, 2, 263, 2, 2, 2, 2, 2,
	2, 2, -371, 218, 2, -297, 560, -371, 218, 2,
	-371, 218, 2, -415, 2, 87, -280, 218, 2, -266,
	-306, 218, 2, -301, -303, -310, 218, 2, -308, -266,
	-529, 218, 2, -527, 4, -534, 116, 466, -442, 2,
	-135, 2, 60, -266, 560, 2, 469, 2, 607, -147,
	2, 71, 527, 43, 464, -148, 2, -429, 2, -430,
	-262, -263, -264, -485, -265, 251, 394, 403, 580, 131,
	335, 576, -621, 190, 589, 523, -519, -519, -519, -379,
	609, 2, 2, 2, 2, 2, 2, -478, 218, -297,
	2, -294, -522, 4, -534, -538, -535, -539, -537, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 57, 65,
	66, 72, 76, 78, 87, 93, 102, 110, 111, 113,
	112, 114, 115, 116, 127, 131, 135, 139, 140, 144,
	148, 152, 170, 172, 185, 189, 190, 206, 209, 212,
	225, 238, 243, 245, 265, 269, 276, 284, 285, 335,
	341, 347, 351, 352, 356, 357, 377, 393, 410, 434,
	459, 466, 484, 502, 508, 517, 523, 525, 532, 540,
	541, 549, 551, 559, 567, 568, 569, 570, -540, 77,
	2, -478, 218, 2, -300, 218, -478, -303, 2, -280,
	2, -442, -601, 515, 162, 422, 2, -319, 218, -297,
	-299, -303, -301, 2, 2, 2, 2, -308, 2, -527,
	218, 2, 28, 28, 560, 395, 245, 523, 612, -369,
	-311, -312, -518, 8, -362, -266, 609, -442, 2, -135,
	-118, 2, 185, -442, 218, 2, -135, 218, 2, -442,
	218, 2, -135, 218, 2, -266, 2, -609, 2, -531,
	218, -526, 10, -525, 5, 4, -534, -538, -535, 218,
	-266, 2, 296, 2, 2, 530, 2, 98, 508, 119,
	2, 426, -628, 447, 534, 2, 2, 2, 2, 2,
	2, 2, 508, -285, 2, -266, 185, 492, -308, 218,
	-309, 2, 460, -639, 407, -527, 218, 2, 560, -301,
	218, 2, -301, 234, 247, -280, 218, 2, 513, 511,
	513, 511, 190, 2, 245, 2, 245, 2, -479, 2,
	-480, -474, -481, 605, 352, -489, 2, -488, -525, 556,
	-106, 607, -106, 607, 464, 607, -531, -297, -297, -442,
	2, -135, -118, 2, -442, 2, -135, 2, -266, 2,
	-132, -531, -131, 607, 190, -266, 2, -442, 2, -135,
	-118, 2, -442, 2, -135, 2, -216, 185, 2, 120,
	508, -191, 2, 185, 551, 2, 8, 2, 225, -531,
	455, 402, 177, 2, 469, 2, 470, 74, -416, 576,
	74, 190, 2, 190, 2, -399, 2, 570, 395, 190,
	2, 2, -591, 2, 351, 190, 2, 190, 2, 190,
	2, 190, 2, 190, 2, -190, 465, 528, 507, 399,
	253, 2, -135, 567, -118, 253, 252, -442, 567, 2,
	-614, 185, 453, -442, 2, 526, 262, 160, 190, -399,
	2, 190, 2, 190, 2, 5, 2, 400, 490, 2,
	251, 394, 490, 2, -297, 508, 560, 460, 120, 28,
	2, 452, 2, 2, 88, 89, 190, 2, 190, 2,
	205, 190, 2, 190, 508, -380, 609, 576, 2, -391,
	-478, -428, -429, -428, 523, -356, -358, -191, 469, 2,
	-228, -389, -230, 185, -419, -420, -231, 276, 172, 347,
	-232, -398, 28, 139, -398, -398, 60, 608, 608, 11,
	12, 76, 41, 597, 598, 599, 600, 183, 601, 602,
	595, 596, 594, 587, 588, 592, 257, 258, 95, 591,
	589, 86, 290, 446, 173, 174, 175, 176, 423, 232,
	34, 233, 14, 15, 16, -322, 33, 356, 275, 577,
	222, 473, 590, 17, 18, 19, 248, 250, 337, 50,
	225, -274, 367, -321, 505, 67, -442, -442, -442, -442,
	-442, -442, -442, -442, 363, 607, -385, -437, 605, -223,
	607, 607, 607, 607, -518, -223, -442, -456, 608, -376,
	607, -223, -456, -451, 607, 444, 605, 607, -459, -442,
	5, 5, 5, 607, 609, -572, 571, 185, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 390, -500, 607, -499, 607, -499,
	-499, 561, -497, 607, 579, 572, 607, -497, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 561, 612, -569, -352, 607, -381, -483, -442, 599,
	-381, -381, 351, -373, -442, 106, -402, 254, 315, 191,
	272, 438, 239, -439, 611, -439, -467, 579, -223, -475,
	-296, -223, -477, 607, -473, -467, -107, -518, -90, -103,
	-112, -135, -150, -195, -196, 599, -297, 607, 190, 607,
	609, -522, 190, -362, -280, -307, -266, -297, -313, -314,
	-319, -291, -266, 2, 2, 138, -373, -587, 535, 454,
	28, 460, -529, -269, 38, -453, -492, -493, -543, 611,
	-542, -495, -505, -501, -504, 380, 384, -524, 54, 557,
	-507, 244, 4, -534, -536, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 519, 520, 521, 522, 195,
	196, 58, 558, 494, 69, 70, -587, 535, 454, 28,
	460, 185, -529, 185, -529, 2, 2, 155, 2, 2,
	2, -266, -244, 612, 64, 431, 155, -371, 218, -244,
	155, -244, 155, -320, 218, -319, -244, 155, -244, 612,
	155, -244, 612, 155, 609, 612, 155, -529, 2, -415,
	-521, -373, 38, -429, 2, 127, 4, 5, -642, 612,
	274, -325, 289, 334, 214, 352, 574, 345, 131, -530,
	5, 4, -452, -464, 127, 282, 244, -512, -514, 8,
	-513, 9, -515, 597, 598, -520, -519, 109, 609, -522,
	-241, 424, 467, 366, -240, 24, 29, 143, 236, 319,
	554, 161, -337, 237, -334, 370, 155, 485, 544, -601,
	-604, 451, 515, 162, 422, 90, 345, 467, 366, 424,
	155, -395, -397, 38, 118, 319, 365, 61, 228, 294,
	295, 488, 564, 155, 467, 366, 424, 366, -13, -255,
	24, 143, -257, -252, 467, -604, 99, 424, 583, 429,
	376, 500, 393, -604, -601, 270, -603, 566, 333, -243,
	485, 544, -601, -604, 451, 424, -242, -339, -334, 370,
	155, 611, 24, 143, 424, 467, 366, -624, -625, 29,
	424, 366, -595, -287, -566, 225, 570, 155, -287, -287,
	-478, 218, -618, 185, 2, -611, -131, 266, 5, 10,
	-531, -131, -369, 612, 612, -522, 599, 453, 452, 155,
	155, 155, 155, 253, 185, 335, 335, 2, 2, 2,
	2, 2, 192, -606, -629, 2, 2, -297, 218, -354,
	351, -590, -370, 508, -297, 185, 335, 43, -300, 218,
	2, -303, 560, -595, 335, -302, 218, -297, 38, 607,
	335, 2, -415, 2, 234, -566, 335, -479, -316, -297,
	-474, -316, 467, -290, 38, -439, -297, 608, 612, -489,
	-489, -531, -204, 570, 190, 607, -216, 570, 570, 253,
	-486, 612, -485, 225, -532, -531, -132, -531, 427, 253,
	-531, -590, -280, 2, -297, 2, 508, 255, -531, -204,
	225, -531, -531, -531, -521, 28, 470, 2, -190, 465,
	528, 89, 470, 2, -297, 508, 120, 234, 80, -618,
	185, 2, -266, -593, 185, -588, 439, 454, 535, -587,
	-297, 120, -297, 120, -297, 120, -297, -297, 2, 2,
	2, 2, 2, 85, 2, -135, -442, 2, 85, 2,
	46, 486, -614, 185, 2, 526, 2, 526, 2, -266,
	-266, -266, 489, 274, -297, -297, -297, -298, -303, 455,
	509, 536, 453, -442, 2, -631, 2, 190, 185, 2,
	508, 234, 508, 234, 120, 190, 74, 120, 28, 508,
	450, 609, 4, -244, 612, -270, -228, -389, -521, -390,
	-389, -229, -228, -231, 185, 403, 545, 319, 471, 259,
	-420, -419, 28, -442, -424, 179, 318, -442, -422, -444,
	597, 598, -513, -515, -372, 345, -222, -222, -222, -359,
	-469, -442, 393, 234, -494, -492, -492, -295, -522, 519,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, 275, 222, 473, 50,
	225, -442, 523, -442, -442, -442, -442, 312, 335, 341,
	532, 170, 542, 139, 345, -645, 502, 40, -449, -223,
	-377, 607, -463, 35, 484, 28, -456, 607, 2, -437,
	-442, -438, -323, -321, -266, 597, 598, 599, 600, 601,
	602, 587, 588, 589, 14, 15, 16, 592, 596, 594,
	595, 183, 95, 591, 290, 446, 86, 173, 174, 175,
	176, 257, 258, 17, 18, 19, 34, 590, -374, -373,
	-373, 608, 559, 28, 139, 599, 2, 608, 612, 38,
	608, -442, -374, -455, -451, -373, -462, -461, 567, -410,
	-411, 575, 299, 123, 216, 297, -412, 458, -516, 8,
	-522, 599, -573, 178, 209, 607, 608, 2, 608, 2,
	608, -442, 2, 608, -442, 2, 608, -442, 2, 608,
	-442, 2, 608, 2, 608, 2, -442, -442, -442, -442,
	-442, -442, -442, -373, 8, -516, -516, 519, 519, -516,
	-516, -516, -508, 380, 381, 382, 383, 277, 278, 279,
	280, 384, 385, 386, 387, 304, 305, 306, 307, 300,
	301, 302, 303, 308, 309, 310, 311, 200, 201, 202,
	203, 196, 197, 198, 199, -508, -404, 2, -510, -373,
	4, 575, 299, 123, 216, 297, 458, 5, -404, 2,
	-405, 2, -442, -373, -406, -443, -444, 597, 598, 590,
	-322, -456, -407, 2, -442, -374, -442, 57, 269, 525,
	-408, -442, 190, -373, -373, 2, -373, 2, -570, 38,
	-373, -365, 612, 190, 38, 4, -365, -365, 607, 608,
	612, -403, 213, 293, 288, 247, -403, -473, -402, 254,
	-400, 361, -400, -400, -467, -281, 605, 613, -522, -467,
	-466, -465, 38, -290, 358, -467, -467, 609, 608, -466,
	606, -585, 607, 610, 610, 610, 610, 610, -297, 607,
	-373, -522, 609, 491, 2, 608, 248, 248, 248, 248,
	248, 351, 445, 608, 523, -589, -306, -310, 509, 2,
	570, -105, 353, 608, 612, -364, 37, 605, 609, -516,
	2, 2, -511, 561, 607, 607, -411, 607, 190, -589,
	-310, 509, 2, -594, -363, -363, 523, -266, 2, -297,
	-371, -244, 155, -371, -371, -244, 612, 155, -280, -301,
	-306, -308, -310, -266, -527, -529, -244, -302, -621, 608,
	527, -430, -324, 403, 483, 425, 462, 504, 8, 9,
	8, 9, 612, -522, 612, -622, 93, 523, 78, 454,
	-259, 283, 523, -433, 218, 78, -544, 93, -283, -545,
	-266, 72, 541, 393, 189, 153, -622, 93, 393, -622,
	93, 2, 236, 93, 467, 489, 28, 60, -478, 41,
	41, 28, -602, -603, 270, 190, 576, 508, 234, 454,
	523, 523, -478, -397, -492, 118, 294, 295, 60, -517,
	-512, 597, 598, -517, 60, -517, -517, -517, 570, -300,
	-478, 454, 523, 523, 523, 413, 413, -252, -148, 523,
	523, 28, -191, 432, 127, -643, 589, 413, 270, -603,
	523, 190, 612, 41, 41, 28, -602, 190, 523, -319,
	-281, 555, 42, 555, 42, 555, 523, 42, 454, 523,
	612, 42, 523, 523, -13, 467, -596, -271, 105, 325,
	287, 326, 97, 322, 96, 321, 103, 323, 104, 324,
	562, 338, 563, 339, 63, 320, 298, 327, 487, 328,
	-272, -273, 146, 372, 553, 120, -527, -13, -13, 467,
	366, 424, 155, -619, 225, 28, -608, 225, -486, 225,
	-486, -311, -266, 609, -135, -442, -442, -135, -442, -135,
	46, 155, 155, 2, -639, 263, 607, -328, 335, 190,
	-362, -487, 245, 612, -370, -587, 155, -527, -396, -395,
	335, -302, 218, 2, 155, -352, 335, 149, 607, 401,
	2, 155, -282, 218, -267, -266, -415, -246, 512, 155,
	-393, 551, -425, -135, 607, 127, 38, -425, -382, -383,
	-484, -384, -283, 607, -290, -439, -106, -488, 608, 608,
	608, -203, 355, -202, -266, 5, -216, -353, -284, -283,
	119, 405, 405, -210, 570, -131, -132, 608, 612, -486,
	225, 492, -204, -204, -486, -486, -297, 185, -531, -204,
	-204, -204, 2, 2, 2, 2, -399, -297, -280, -319,
	-297, 28, 609, -529, -529, -310, -306, -399, -280, -399,
	-280, -399, -280, -399, -399, -135, -442, 489, 2, 464,
	185, 185, 609, -399, -355, 434, 2, 401, 120, 508,
	370, 234, -297, -319, -297, -319, -280, 120, -280, 121,
	-297, 4, -478, -390, -229, 352, 259, 471, -422, -423,
	-444, 444, 445, -423, 444, 445, 8, 9, 8, 9,
	-233, 475, 340, -371, 612, -238, 39, 135, 259, -297,
	576, 151, -442, -442, 523, -645, 502, -449, 151, -442,
	312, 341, 532, 170, 542, 139, 345, 190, 607, -443,
	-443, 608, -375, -442, -442, 606, 615, 608, 609, 608,
	-358, 612, -356, -442, -373, -373, 608, 609, -373, -362,
	606, 606, 612, 608, -460, -461, 144, -442, 523, 523,
	523, 523, 607, 608, 609, -578, 362, 607, 607, -442,
	608, 608, 608, 608, 38, 612, 612, 612, 608, 612,
	612, 612, 608, 608, 608, 612, 608, 576, 576, 608,
	608, 608, 608, 612, 608, 612, 608, 190, 608, 608,
	-413, 377, 608, 11, 12, 597, 598, 599, 600, 183,
	601, 602, 595, 596, 594, 587, 588, 589, 86, 290,
	446, 14, 15, 16, -322, 248, 225, -443, -443, -443,
	-443, 608, -447, -448, 190, 185, 38, -408, -408, -408,
	608, 190, -373, 608, 608, 607, -571, 292, 335, 608,
	-436, -435, 568, -483, -366, 2, -473, -292, -522, -436,
	-436, -373, -442, 254, 254, -401, 551, 351, -403, -473,
	-466, -518, -441, -440, 187, 39, 135, 329, 330, 331,
	221, 188, -466, -290, -352, -466, -466, -522, -467, -467,
	-465, 608, -586, -518, 608, -367, -476, -565, -358, 609,
	-522, -213, -566, -192, 5, 341, -192, -192, -192, -192,
	-297, -529, 523, 523, 225, 25, 378, -492, 605, 606,
	8, -522, 607, -516, -516, -516, -529, 190, 190, 225,
	351, 190, -527, 2, -244, -371, -244, -244, -319, -320,
	-244, -244, -244, -394, 570, -519, -429, 539, 83, 403,
	519, -519, -240, 424, -283, -283, -297, -307, 204, 414,
	-527, 335, -433, 218, -245, 335, 218, -291, -492, 607,
	-417, 572, 259, 259, 551, -283, -291, 259, 218, -283,
	218, -291, 2, -291, -597, 403, 346, -442, 60, -335,
	281, 401, 336, -241, 424, 467, 366, -135, -135, -135,
	607, -621, 551, 138, -297, -319, -297, -307, -527, -302,
	467, 366, 424, 332, -313, -517, -517, -395, 467, 366,
	424, -307, -527, -300, -527, -251, 218, -266, -251, 218,
	454, -280, 413, 576, 45, -643, 523, 190, -442, -442,
	-242, -135, -135, -135, 607, -281, -243, 424, 5, 218,
	-283, 5, -283, 218, 5, -266, -283, -307, -527, -625,
	24, 143, -283, -307, -527, -271, 372, -531, 341, 547,
	-280, -595, -287, 454, 523, 523, -478, -615, -616, 206,
	437, 454, 440, -529, -131, -207, 570, -131, -201, 229,
	599, -592, -531, -266, 560, -266, -326, -329, -327, -283,
	-434, -433, -548, -549, -544, 275, 234, 541, 247, 171,
	93, -219, -220, 572, 570, 155, -317, -297, 605, -204,
	-531, -297, -487, -308, -309, 155, -352, 335, -527, 38,
	155, 607, 2, 2, -301, 351, 335, -282, 218, -247,
	145, -643, -280, -436, -366, -392, -427, 434, 351, -353,
	556, -290, -392, -368, 612, 190, 589, 609, -353, -482,
	599, -106, -106, -204, 612, 607, 589, 589, 607, -531,
	608, 612, 609, 607, 589, 589, -212, 355, -211, 147,
	261, 246, 477, 478, 479, 480, 137, 476, 124, 317,
	230, -486, -531, -210, -132, 190, 190, -65, 570, 508,
	-204, 611, 440, -266, -399, -399, -399, 464, 464, -266,
	-362, -293, -522, -280, -297, -294, -319, 185, 185, -280,
	545, -423, 352, 286, -469, -239, 578, -297, 611, -442,
	-442, 151, 151, -442, -443, -443, -442, 151, 190, 607,
	-442, -453, 33, 33, 608, 612, -438, -442, -321, 608,
	559, -358, -358, 608, 599, -522, 611, 608, -451, 148,
	-442, 517, 299, 216, 297, -412, 297, -412, -412, -516,
	5, -522, 599, -579, -286, 607, -266, 568, -357, 357,
	608, -494, -492, -442, -442, -442, -442, -442, -516, -497,
	-497, -512, -512, -442, -447, -442, -494, -492, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, 139, 335,
	345, -443, -448, -447, -442, -442, -492, 608, 608, 608,
	-373, -105, 607, 292, -386, 209, -442, -486, 612, -386,
	-386, 608, -473, -473, 607, -442, 254, 606, 612, 614,
	589, 589, -352, 609, -465, -466, 606, 608, 612, 608,
	612, -426, 38, 608, -522, -436, -215, -214, 136, 53,
	107, 134, 341, 248, -617, 570, -529, -529, 454, 354,
	5, 8, 605, 606, 609, -516, 608, 608, 608, -529,
	-529, 454, -587, 535, 454, 28, -529, -244, -244, 119,
	319, -442, 523, 523, 60, 225, 155, 335, 553, 335,
	-545, 153, -550, -442, 607, 234, 607, 607, 2, -235,
	-236, -237, 143, 467, 24, -623, 2, 551, 155, -244,
	155, -244, 574, -335, 607, 607, 523, 454, -259, 523,
	570, -373, -442, -205, 127, -521, -604, 611, -604, 611,
	454, 523, 523, 454, 523, 523, 335, 155, 570, 169,
	169, 576, -251, -442, -442, 185, 523, 570, -373, 523,
	-496, 48, 26, 335, -301, -244, 155, 523, 523, 535,
	467, -531, -531, 341, -13, -307, -527, -302, 467, 366,
	424, -594, -594, 206, -310, -619, -486, -209, 355, -208,
	147, 436, 137, 261, 230, -486, -207, 190, 245, 570,
	-302, 2, 608, 608, 612, 612, -551, -245, -297, -282,
	234, 234, -289, -267, 38, 349, 349, 607, -297, -86,
	570, -485, -518, -598, 570, 43, -300, 38, 155, -595,
	-135, -302, -490, -491, 5, 38, -297, 155, 351, 335,
	-248, 268, -643, -526, -566, -358, -392, -381, 336, 91,
	608, -436, -383, -366, -442, 2, 608, -202, -203, -531,
	-531, -531, -204, -216, -284, 2, -532, -531, -531, 612,
	607, 589, 589, 589, 589, 589, 589, -210, -486, -131,
	-135, 355, -297, 599, -399, -341, -340, 370, 345, -341,
	444, 444, 352, 179, 264, -238, -281, -442, -442, 151,
	33, 33, -442, -442, -453, 608, -442, -442, -373, 606,
	5, -442, 608, 608, 8, -442, 608, 609, -580, -266,
	-442, 608, 60, 608, 608, 612, 612, 608, 608, 608,
	608, 608, 608, 608, -448, 190, 139, 345, 607, 608,
	608, -105, -450, 212, 60, -473, -450, -450, -401, -362,
	-473, -440, -281, 605, -281, 605, -522, -518, -476, 607,
	609, -214, 589, -531, -531, -192, 206, -617, -617, 570,
	-310, 606, 2, 605, -522, 608, -310, 190, -589, -310,
	509, 119, -283, -283, 508, 444, -251, 393, -433, 155,
	155, -552, 93, -554, 76, 171, 102, 335, 341, 541,
	393, 72, 127, 351, 410, -633, -634, -635, 38, 581,
	582, 608, -360, -470, -565, 607, -266, -360, -362, 335,
	497, 127, 351, 335, 127, 351, 565, 119, 2, 535,
	79, -283, -291, -362, -362, -297, -307, -527, 163, 608,
	612, 589, 2, 599, 599, -307, -527, -302, -307, -527,
	-300, 155, -251, 368, 169, 523, -135, -442, 163, 608,
	-281, 5, 5, 155, -278, 76, -283, 5, -283, -301,
	119, 454, 523, 523, 351, 351, 354, -615, -616, -207,
	612, 607, 589, 589, 589, -207, -532, -131, 2, -352,
	-342, 236, -283, -549, -546, -547, 393, -434, -553, -555,
	171, 393, -330, 607, -282, -267, 607, -135, 2, -218,
	-217, -266, 5, 607, -328, 355, 606, -600, 355, -599,
	117, 137, -527, -396, -135, -302, -350, 570, -352, 608,
	612, 149, -418, 551, -281, -297, 155, -249, 267, -643,
	-526, -246, -421, -419, 140, 607, 351, -135, -358, 589,
	608, 608, 119, 608, -211, -212, -531, -131, -531, -531,
	-531, -131, -210, -486, -66, -67, 234, 93, 375, -294,
	508, 234, 607, 607, -238, -442, -442, -442, 608, -358,
	-522, 599, -574, 370, 608, -469, -442, -442, -443, 190,
	607, -453, 608, -575, 569, -442, -387, -388, -442, 442,
	108, 210, -575, -575, 608, -518, -518, 2, -531, 354,
	2, 523, 605, 2, 190, -529, 190, 190, 225, 225,
	38, 413, -433, -291, -291, -295, -288, -266, 171, 218,
	341, 565, -417, 259, 607, -443, 545, -297, 607, 2,
	217, 217, 30, 60, -636, 131, 238, 608, 612, -471,
	-277, -266, -442, -471, 608, 608, 341, 545, 341, 565,
	-442, 545, -492, 607, -244, -244, 608, 608, -442, 523,
	-521, 100, -519, 2, -604, -251, -280, -442, 185, -442,
	523, 5, -244, -295, -244, -244, -278, 535, -307, -527,
	-302, -620, 509, 461, 536, 455, 193, 443, -620, 185,
	-208, -209, -531, -131, -131, -207, 38, -336, -337, 2,
	-551, 259, -288, 259, 227, 154, -360, 607, 607, -362,
	-632, 570, 608, 612, 589, 589, -326, -219, -87, -88,
	524, -485, 612, 607, 589, -352, 319, 119, 38, 5,
	607, 607, -266, 351, 607, -281, -261, 92, -643, -526,
	-247, -392, 336, -362, 93, -421, -449, -204, 607, -204,
	608, 612, 28, 607, 28, 607, -297, -319, -373, -373,
	608, -358, 60, 612, 608, 608, -443, -453, 608, -576,
	-577, -286, 612, 607, 607, 468, 606, 606, -529, 2,
	-529, -529, -529, 454, -251, 393, -266, -545, -554, -288,
	335, 551, -442, -443, -268, 607, -442, 607, 607, 38,
	127, 238, 132, 223, -432, -637, 101, 498, 226, -470,
	-238, 608, -431, 551, 410, -443, -278, -360, 607, 607,
	607, 589, 190, -135, 607, -496, -244, -301, 523, 2,
	2, 190, -594, 608, -610, 408, -135, -219, 607, -331,
	81, 94, 128, 217, 194, 235, 489, 495, 28, -331,
	608, -360, -360, 608, -332, 351, 119, 319, -217, -519,
	-519, 608, 38, -88, 9, -599, -600, -442, 38, 119,
	-135, -490, -360, -297, -360, 351, -253, -252, 276, -526,
	-248, 608, -291, -392, -532, -67, -362, -362, 608, 608,
	-581, 401, 445, 211, -373, -359, 608, 612, 38, -388,
	2, 2, 2, -617, -310, 413, -245, 155, 213, 608,
	-556, 291, -266, 608, -396, -396, 38, 132, 223, -338,
	-334, 607, -239, -471, 213, -297, -605, 551, 608, -344,
	-343, -340, -346, -345, -340, -373, -519, 100, 368, -373,
	-278, -529, -529, 351, -612, 191, -611, 5, 10, -332,
	-361, -472, -283, -431, 608, 608, 82, 119, -342, -135,
	608, -135, 2, -350, 608, 608, -418, 608, -297, -250,
	-533, 413, 415, -643, -249, -436, 140, 608, 608, 608,
	608, -582, -583, 50, 538, 109, -442, -582, -582, -577,
	-579, 190, 171, 570, -557, -560, -559, 586, 474, 191,
	369, 608, 497, 564, 608, 608, -636, -362, 570, -352,
	-442, -431, 608, 612, 556, 608, 612, 556, 608, 190,
	608, -244, -617, -244, -620, -206, 570, 46, -260, -259,
	608, 612, -432, -431, -338, 392, 133, 143, -336, -632,
	-431, 607, -432, 607, -258, -257, -643, -512, -261, 140,
	336, 545, -204, -584, 153, -583, 389, 184, 444, 389,
	184, -584, -584, -529, -288, 55, -559, 586, -560, 586,
	545, 133, -436, 608, 55, -556, -343, 225, -345, 190,
	368, 190, 452, -611, 30, -472, -338, -432, -220, 570,
	445, 445, 2, -219, -332, -432, -360, -338, -360, -254,
	-255, -256, -362, -253, 336, 545, 467, 109, 209, 518,
	319, 33, 589, -558, 319, 431, 64, 467, -558, 589,
	-557, 607, 607, -529, 355, -220, -338, -436, 2, -332,
	-338, 608, -220, 608, -528, 366, -250, 467, -382, 444,
	359, -583, -442, 23, 341, 127, -442, -636, -373, -373,
	-244, -203, 607, -436, -220, -260, -220, -431, -436, -432,
	-643, -258, -382, -436, 608, 608, -203, -436, -436, -432,
	-338, -527, -254, -436, -333, -334, 523, 608, -338, -220,
	607, -220, -436, -373, -436, 608, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 562, 563, 565, 566, 567, 569,
	570, 572, 574, 576, 577, 578, 580, 581, 583, 584,
	585, 586, 587, 589, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	662, 664, 0, 1440, 1442, 1444, 1446, 0, 818, 0,
	36, 37, 39, 0, -2, 340, 342, 344, 346, 0,
	378, 380, 381, 383, 385, 386, 387, 389, -2, 0,
	495, 496, 498, 500, -2, 0, 1032, 1034, 1036, 0,
	651, 653, 0, 1039, 1041, 1043, 0, 0, 674, 675,
	0, 1554, -2, 666, 668, 670, 672, 743, 745, 747,
	749, 751, 753, 755, 757, 759, 761, 762, 764, 766,
	768, 770, 772, 773, 775, 777, 779, 780, 782, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 809, -2, 812, 813, 814, -2, -2, 0,
	-2, -2, -2, 1458, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 439, 441, 443, 445, 447, 450,
	452, 454, 1612, 502, 504, 506, 508, 510, 512, 514,
	0, -2, 1626, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1585, 1587, 1589, 1591, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 564, 568, 571, 573, 575, 579, 582,
	588, 590, 592, 547, 548, 551, 2324, 2342, 2343, 2344,
	2347, 2348, 2349, 2350, 2351, 2352, 2814, 2895, 2896, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454,
	2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
	2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564,
	2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
	2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594,
	2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604,
	2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644,
	2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664,
	2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674,
	2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684,
	2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694,
	2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714,
	2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724,
	2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734,
	2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744,
	2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774,
	2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 549,
	550, 1221, 0, 616, 614, 2309, 617, 2608, 619, 621,
	489, 490, 491, 492, 493, 494, 0, 644, 630, 1624,
	645, 647, 648, 649, 650, 611, 609, 0, 649, 644,
	2378, 642, 1438, 1439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 418, 1280, 1281, 1282, 1423,
	1424, 2656, 1465, 0, 239, 663, -2, -2, 2779, -2,
	697, 698, -2, -2, 712, 716, 707, 2783, 0, 2659,
	2643, -2, 719, 1441, 1443, 1445, 816, 817, 2328, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 249, -2, -2, -2, -2,
	0, 0, 2705, 2430, 2277, 2344, 2280, 2275, 341, 343,
	345, 347, 348, 0, 0, 0, 0, 0, 0, 0,
	379, 382, 384, 388, -2, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1103, 1095,
	1096, 1345, 0, 0, 0, -2, 497, 499, 552, 553,
	0, 1613, 1613, 560, 561, -2, 0, 0, 0, 0,
	311, 301, 1033, 1035, 1037, 1038, 0, 0, 0, 0,
	0, 652, 654, 0, 0, 279, 1040, 1042, 1044, 1045,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 667,
	669, 671, 673, 744, 746, 748, 750, 752, 754, 756,
	758, 760, 763, 765, 767, 769, 771, 774, 776, 778,
	781, 784, 786, 788, 790, 792, 794, 796, 798, 800,
	802, 804, 806, 808, 810, 811, 824, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 926, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 1013, 0, 0, 827, 830, 831, 832, 833, 834,
	835, 0, 899, 924, 925, 935, 815, 0, 1261, 1614,
	1467, 1448, 1462, 1467, 1450, 1451, 1452, 1453, 1454, 1459,
	1461, 1455, 1456, 1457, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 440, 442, 444, 446, 448, 451,
	453, 455, -2, 1583, 1584, 503, 505, 507, 509, 511,
	513, 515, 655, 0, 657, 0, 829, -2, 0, 1618,
	1618, 1618, 0, 0, 1584, 1582, 0, 660, 661, 723,
	724, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	2151, 1979, 0, 725, -2, 2012, 2014, 2754, 2581, 2779,
	2150, 2016, 2017, 2018, 2019, 2020, 0, 2022, 2023, 2024,
	2025, 2026, 2027, 0, 2029, 0, 2034, 2035, 2036, 0,
	2761, 2254, 2338, -2, 0, 0, 2767, 2334, 0, 2117,
	2052, -2, -2, 2361, 2340, 1823, 1824, 1825, 1826, 1827,
	-2, -2, 2797, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 0, 2742, 2762, 2763, 2768, 2770,
	2764, 2751, 2077, 2444, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1850, 1859, -2,
	-2, -2, -2, -2, -2, -2, 2755, 2756, 2773, 2776,
	2782, 2787, 2788, 2760, 2769, 2796, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 1851, -2, -2, -2, -2, 1601, 2622, 1604,
	1221, 1602, 1586, 1588, 0, 1590, 0, 0, 0, 1595,
	1621, 1619, 0, 1670, 1599, 1600, 1693, 1693, 1717, 0,
	1698, 0, 1717, 1613, 1744, 0, 1704, 2648, 2053, 2054,
	0, 2344, 2339, -2, -2, 2794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 618,
	620, 0, 0, 0, 643, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 421, 422, 423, 424, 425, 2762,
	0, 0, 0, 430, 0, 432, 433, 434, 435, 436,
	437, 438, 209, 2762, 520, 545, 0, 209, 2762, 523,
	209, 2762, 526, 0, 529, 1343, 209, 2762, 532, 2305,
	209, 2762, 535, 537, 2313, 209, 2762, 541, 2320, 2318,
	542, 0, 544, 229, 225, 226, 227, 228, 1434, 1435,
	1436, 1437, 0, 1464, 1344, 665, 0, 691, 0, 695,
	696, 2750, -2, 0, 2668, 700, 701, -2, 703, 1468,
	1472, 1473, 1474, 1475, 1476, 0, 0, 0, 0, 1481,
	0, 0, 0, 0, 692, 693, 710, 711, 717, 720,
	0, 819, 820, 821, 822, 823, 71, 0, 2762, 1744,
	73, 0, 2299, 2369, 2370, 2371, 2372, 2373, 2795, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885,
	2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2797,
	77, 0, 2762, 82, 0, 2762, 0, -2, 95, 0,
	108, 0, 135, -2, -2, -2, 116, 0, 2762, 0,
	2274, -2, 0, 221, 302, 303, 304, 0, 1070, -2,
	0, 1274, 1276, 1276, 0, -2, 0, 0, 0, 1023,
	2271, 2276, 1024, 2295, 1025, 2281, 0, 349, 350, 351,
	352, 353, 0, 354, 2762, 356, 357, 0, 359, 360,
	2762, 362, 363, 0, 365, 0, 367, 0, 261, 265,
	2762, 314, 315, 2357, 2358, 2365, 2366, 2367, 2368, 2762,
	392, 394, 0, 396, 397, 0, 399, 0, 0, 0,
	403, -2, 419, 0, 416, 406, 407, 409, 410, 411,
	412, 413, 0, 459, 457, 2310, 0, 0, -2, 2762,
	0, 1067, 0, 0, 1323, -2, 0, 1267, 0, 1330,
	2762, 1326, 0, -2, 0, 1611, 2762, 1485, 1099, 1100,
	1101, 1102, 1756, 486, 0, 1518, 0, 1520, 0, 1540,
	1750, 1693, 0, 0, 1755, 0, -2, 605, 2327, -2,
	555, 0, 556, 0, -2, 0, 328, 0, 0, 1048,
	1050, 1051, 1053, 1054, 1057, 1058, 1059, 1060, 0, 1062,
	1730, 280, 282, 0, 0, 0, 1047, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 0, 0, 676, 0,
	0, 825, 826, 0, 0, 842, 843, 844, 0, 328,
	2660, 2617, 2466, 851, 0, 854, 857, -2, 0, 0,
	0, 0, 861, 0, 866, 867, 868, 0, -2, 0,
	875, 877, 1031, 879, 0, 0, 881, 0, 885, 0,
	888, 0, 890, 0, 892, -2, -2, -2, 900, 901,
	-2, 906, -2, 0, 910, -2, 0, 913, 0, 916,
	-2, 0, 926, 922, 923, 0, 0, 0, 0, 943,
	944, 0, 953, 0, 956, 957, 958, 0, 962, 963,
	0, 965, 966, 967, 968, 0, 2732, 2665, 2430, 0,
	976, -2, 982, 984, 0, -2, 0, 1000, 0, 1004,
	0, 0, 1012, 0, 0, 828, 0, 836, 837, 209,
	1748, 1447, -2, 1449, 0, -2, 0, 656, 0, 659,
	1643, 1569, 1566, 0, 1640, 1641, 1570, 0, 0, 0,
	1577, 0, 1616, 1617, 0, 0, 0, 1556, 1557, 0,
	0, 0, 0, 2156, 2157, 2158, 2159, 2172, 2160, 2161,
	2171, 2169, 2170, 2162, 2163, 2168, 2182, 2183, 2173, 2174,
	2164, 2177, 2175, 2176, 2178, 2179, 2180, 2181, 0, 0,
	2187, 0, 2165, 2166, 2167, 2195, 0, 0, 2196, 0,
	2198, 0, 2188, 2184, 2185, 2186, 0, 1958, 1960, 2262,
	0, 0, 0, 2194, 2189, 2190, 1896, 1897, 1898, 1899,
	1900, 1933, 1937, 1938, 0, 0, 2013, 2259, 2258, 2015,
	0, 0, 2210, 0, 2028, -2, 0, 2151, 2205, 0,
	0, 2037, 2038, 2039, 0, 0, 2210, 0, 0, 2253,
	2049, 2050, 1888, 0, 0, 2119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 1836, 0, 1838, 0, 1839,
	1840, 1847, 1860, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 2234, -2, 0, 0, 0,
	0, 1852, 0, 1603, 0, 0, 1674, 2263, 2267, 2268,
	1674, 1674, 0, 0, 2211, 1741, 1741, 0, 0, 1736,
	1736, 1736, 1734, 1717, 0, 1717, 1727, 0, 1717, 1717,
	0, -2, 1698, 0, 0, 1727, 0, 1711, 593, 595,
	597, 599, 600, 601, 603, 1745, 1746, 0, 0, 0,
	0, 2345, 0, 0, 0, 0, 2317, 0, 0, 2330,
	0, 0, 2304, 374, 375, 0, 0, 0, 2715, 2659,
	0, -2, 623, 646, 1613, 0, 2213, 1771, 1775, 0,
	1777, 1778, 1779, 1780, 1781, 0, 0, 1772, -2, 1848,
	1850, 1871, 2362, 2363, 2364, 1831, 1832, 1833, 1834, 1835,
	1843, 1830, 1830, 1830, 1841, 1870, 1862, 1870, 1866, 1816,
	1817, 1818, 1853, 1854, 1855, 1856, 0, 2715, 2659, 0,
	-2, 0, 633, 0, 0, 1551, 420, 0, 427, 428,
	429, 0, 516, 0, 207, 208, 0, 209, 2762, 521,
	0, 524, 0, 209, 2762, 2269, 530, 0, 533, 0,
	0, 539, 0, 0, 0, 0, 0, 209, 1553, 0,
	0, 0, 0, -2, 705, 713, 714, 715, 0, 1470,
	0, 1477, 734, 735, 736, 1479, 1480, 0, 1482, 708,
	737, 738, 739, 740, 741, 742, 0, 2283, 2284, 2285,
	2286, 2289, 2290, 0, 0, 706, 727, 709, 0, 721,
	117, 1420, 0, 0, 164, 0, 1420, 1420, 0, 0,
	0, 0, 192, 0, 1133, 0, 0, 0, 0, 135,
	149, 160, 129, 130, 131, 0, 0, 0, 0, 0,
	0, 83, 1243, 0, 1246, 0, 0, 0, 0, 0,
	0, 0, 1259, 0, 0, 0, 0, 0, 97, 98,
	0, 0, 103, 104, 0, 148, 0, 0, 0, 0,
	0, 1515, 0, 139, 135, 0, 0, 134, 136, 119,
	0, 0, 135, 150, 162, 0, 196, 198, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 231, 0,
	0, 0, 1268, 0, 0, 0, 1610, 0, 0, 0,
	0, 2762, 1418, 0, 1403, 0, 1730, 2515, -2, -2,
	280, 1730, 1022, 0, 0, 2345, 2279, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 395, 398, 400,
	401, 402, 0, 1322, 0, 408, 449, 1192, 2762, 0,
	0, 476, 471, 0, 473, 0, 0, 0, 1242, 2762,
	1240, 2314, 0, 1265, 0, 1221, 2762, 2312, 0, 0,
	0, 1331, 2354, 1340, 1344, 1503, 0, 488, 0, 1521,
	1523, 0, 0, 1751, 0, 1753, 1693, 1613, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 1061,
	286, 0, 1729, 0, 0, 316, 1730, 280, 2634, 1046,
	328, 328, 1730, 678, 1730, 680, 0, 0, 845, 846,
	0, 328, 328, 328, 852, 853, 855, 856, -2, -2,
	-2, -2, 858, 859, 950, 0, 0, 0, 949, 869,
	0, 871, 874, 878, 0, 1016, 2643, 2659, 2715, 1029,
	950, 2430, 950, 2430, 950, 2430, 950, 950, 894, 938,
	946, 905, 912, 0, 907, 911, 914, 917, 0, 919,
	927, 0, -2, 0, 930, 0, 932, 0, 934, 950,
	951, 954, 961, 964, 969, 970, 971, 972, 2325, 973,
	974, 975, -2, 979, 980, 0, 991, 996, 997, 993,
	0, 0, 0, 0, 0, 0, 1007, 1008, 0, 0,
	1015, 0, 838, 1260, 0, 1460, 1643, 1569, 658, 1560,
	1642, 1561, 1568, 1571, 0, 0, 1573, 0, 1575, 0,
	1638, 1639, 1646, 1647, 0, 1657, 1658, 1650, 0, -2,
	0, 0, 1653, 1654, 1579, 0, 1596, 1597, 1598, 1627,
	1630, 1359, 0, 2895, 1892, 1766, 1893, 1894, 2298, 0,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	-2, -2, -2, -2, -2, -2, -2, -2, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, -2,
	-2, -2, 1934, 1935, 1936, -2, 2197, 2199, 0, 2262,
	0, -2, 0, -2, -2, -2, -2, 1955, 0, 1957,
	1962, 1964, 1966, 0, 0, 0, 0, 2261, 1976, 2245,
	2246, 0, 0, 2153, 2154, 2155, 1961, 0, 1980, 2260,
	2257, 0, 0, 2191, 0, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 0, 2209,
	1626, 2041, 0, 0, 0, 0, 2048, 2033, 2207, 0,
	2206, 0, 0, 0, 2217, 0, 2252, 2248, 0, 2296,
	1887, 1874, 1875, 1876, 1877, 1878, 1879, 1889, 0, 2293,
	2331, 2337, 2127, 0, 0, 0, 2078, 2079, 2080, 2081,
	2082, 0, 2084, 2085, 0, 2087, 2088, 0, 2090, 2091,
	0, 2093, 2094, 2095, 2096, 2097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 0, 0, 2099, 0, 2220,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2101,
	0, 2103, 2211, 2231, 0, 0, 1981, 0, 0, 0,
	0, 2151, 0, 2106, 2211, 2239, 0, 0, 0, 0,
	0, 2211, 0, 2244, 0, 2113, 0, 2115, 1605, 0,
	0, 1761, 0, 0, 0, 2266, 1761, 1761, 0, 1669,
	0, 0, 1737, 1738, 1739, 1740, 0, 0, 1741, 0,
	1731, 1735, 1732, 1733, 1727, 1690, 0, 0, 2300, 1727,
	1696, 1726, 0, 1221, 1716, 1727, 1727, 0, -2, 1700,
	1717, 0, 0, 594, 596, 598, 602, 604, 0, 0,
	1626, -2, 0, -2, 330, 1220, 0, 0, 0, 0,
	0, 0, 613, 615, 0, 0, 536, 0, 0, 629,
	0, 607, 0, 610, 0, 1762, 1765, 0, 0, 1776,
	1782, 1783, 0, -2, 0, 0, 1872, 0, 0, 0,
	0, 0, 641, 0, 644, 0, 0, 0, 431, 546,
	209, 518, 0, 209, 209, 527, 0, 0, 209, 538,
	209, 2321, 209, 2319, 230, 543, 1552, 242, 0, 694,
	0, 1469, 1478, 0, 731, 0, 733, 0, 2287, 2291,
	2288, 2292, 0, 722, 0, 0, 0, 0, 1419, 0,
	1366, 0, 0, 168, 2762, 0, 211, 0, 0, 1185,
	2306, 0, 1175, 0, 0, 2452, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 132, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 1245, 1247, 1254, 1256, 0, 1250,
	2294, 0, 0, 1251, 0, 1253, 1255, 1257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 1277, 0,
	0, 1278, 1279, 1491, 1492, 0, 1514, 1515, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	2273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 1318, 1316, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 0, 0, 0, 0, -2, 1272, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	319, 2272, 2282, 0, 1055, 1056, 355, 358, 361, 364,
	248, 0, 0, 404, 0, 0, 1105, 1080, 0, 0,
	458, 328, 0, 0, 472, 476, 2323, 1065, 1238, 1241,
	0, 1221, 2762, 1288, 0, 0, 0, 0, 0, 0,
	1329, 0, 0, 2762, 2301, 2353, 2354, 1505, 1515, 0,
	1761, 0, 1538, 1524, 0, 0, 0, 1538, 1542, 1543,
	1545, 1546, 0, 0, 1752, 1758, 554, 606, 1613, 1613,
	328, 326, 2584, 324, 321, 323, 0, 0, 1527, 1529,
	0, 0, 0, 274, 0, 283, 1730, 281, 0, 286,
	0, 0, 0, 470, 677, 682, 840, 0, 328, 848,
	849, 850, 896, 940, 948, 995, 860, 862, 863, 864,
	0, 0, 0, 1030, 1026, 1027, 1028, 880, 950, 883,
	950, 886, 950, 889, 891, 909, 915, 928, 921, 929,
	0, 0, 0, 942, 959, 0, 978, 0, 0, 0,
	0, 0, 0, 0, 1001, 1002, 1003, 1005, 1010, 1009,
	1014, 839, 1749, 1564, 1565, 1567, 0, 1576, 0, 0,
	1652, -2, -2, 1651, 1655, 1656, -2, -2, -2, -2,
	1572, 0, 1581, 1578, 0, 1637, 1357, 1358, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1977, 0, -2,
	1956, 1959, 1963, 1965, 1967, 0, 0, 0, 0, 0,
	0, 2200, 0, 2202, 1978, 2255, 2258, 2193, 0, 2149,
	0, 0, 1625, 1626, 1626, 0, 2047, 0, 2208, 0,
	2215, 2216, 0, 2040, 0, 2249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	2083, 2086, 2089, 2092, 0, 0, 0, 0, 2072, 0,
	0, 0, 2076, 1842, 1828, 0, 1870, 1868, 1869, 1863,
	1870, 1867, 1820, 0, 1819, 0, 2098, 0, 2100, 2102,
	0, 0, 2104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 1985, 1986,
	2006, 2105, 2237, 2238, 0, 0, 0, 0, 0, 0,
	2111, 0, 2243, 2112, 2114, 1613, 0, 1606, 0, 1671,
	1660, 1760, 0, 2264, 1730, 1673, 1675, 2265, 2303, 1660,
	1660, 0, 2212, 0, 0, 1721, 0, 0, 0, 1723,
	1694, 0, 0, 1688, 0, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1695, 1221, 1725, 1697, 1701, 2331, 0, 1727,
	0, 1712, 0, 1714, 1747, 0, 1706, 1709, 0, 0,
	2346, 1761, 0, 368, 376, 377, 369, 370, 371, 372,
	0, 1406, 0, 0, 0, 0, 0, 2214, 0, 1767,
	0, 1773, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 1550, 426, 517, 209, 522, 525, 2270, 209,
	531, 534, 540, 238, 0, 690, -2, 729, 730, 732,
	0, 728, 165, 1420, 0, 0, 1362, 1364, 1368, 1374,
	1377, 0, 170, 2762, 182, 0, 2762, 0, 1149, 0,
	0, 0, 0, 0, 0, 1422, 0, 0, 2762, 209,
	2762, 209, 186, 188, 191, 0, 195, 193, 0, 1137,
	0, 0, 1140, 118, 1420, 0, 0, 121, 125, 137,
	0, 0, 0, 147, 0, 0, 0, 1379, 1383, 1391,
	0, 0, 0, 1248, 1249, 1252, 1258, 84, 0, 0,
	0, 1387, 1389, 1395, 96, 99, 2762, 2315, 101, 2762,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 123, 127, 138, 0, 1397, 120, 0, 224, 0,
	0, 214, 209, 2762, 0, 216, 0, 217, 218, 232,
	0, 0, 0, 1068, 1069, 1317, 0, 1263, 1264, 0,
	1275, 1269, 0, 0, 0, 0, 0, 1399, 1400, 0,
	0, 0, 1418, 1415, 1730, 244, 0, 1730, 252, 0,
	2278, 0, 266, 391, 0, 0, 0, 0, 1104, 1203,
	1106, 1108, 1109, 1110, 211, 0, 2354, 1175, 2504, 2354,
	0, 0, 1075, 0, 0, 0, 464, 460, 0, 469,
	475, 474, 480, -2, 0, 0, 0, 0, -2, 0,
	0, 1333, 1327, 1328, 0, 0, 0, 0, 2762, 1507,
	1515, 0, 1611, 1626, 487, 1516, 1538, 0, 0, 0,
	1526, 1522, 1519, 1761, 0, 0, 0, 0, 0, 1754,
	1757, 557, 558, 305, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 284, 0, 287, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 286, 317, 276, 1730, 0, 0, 679, 0, 0,
	847, 0, 870, 873, 882, 884, 887, 931, 933, 950,
	960, 985, 2302, 986, 1127, 0, 1127, 0, 0, 1006,
	1574, 0, 1649, 1580, 1631, 1632, 0, 1359, 0, 1895,
	1940, 0, 0, -2, 0, 0, 1944, 0, 0, 0,
	-2, 0, 0, 0, 2201, 2203, 0, 2257, 2192, 2042,
	0, 0, 0, 2046, 2030, 2031, 0, 2152, 2218, 2247,
	2251, 0, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 0,
	2297, 2332, 2336, 2125, 2126, 2130, 2311, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1865, 0, 0, 2219, 2230, 2232, 1982, 1983, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, -2, -2,
	-2, 2000, 2001, 2002, -2, -2, -2, 2007, 0, 0,
	0, 2233, 2235, 2236, 2240, 2241, 0, 2108, 2109, 2110,
	2242, 0, 1613, 1607, 1668, 0, 1759, 1672, 0, 1668,
	1668, 1620, 1719, 0, 0, 1743, 0, 1691, 0, 1692,
	0, 0, 1724, 0, 1699, 1702, 1703, 1713, 0, 1705,
	0, 1708, 0, 2042, -2, 329, 331, 333, 0, 336,
	337, 0, 0, 0, 622, 0, 1406, 1406, 0, 624,
	608, 0, 0, 1769, 0, 0, 1845, 1849, 1873, 635,
	637, 0, 0, 2715, 2659, 0, 634, 519, 528, 240,
	0, 1728, 0, 0, 0, 0, 0, 0, 210, 0,
	1184, 0, 1147, 0, 0, 1174, 0, 0, 1190, 172,
	173, 174, 0, 0, 0, 0, 184, 0, 0, 180,
	0, 190, 194, 1134, 0, 0, 0, 0, 1367, 0,
	0, 0, 144, 145, 146, 0, 151, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	1498, 0, 1488, 141, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 1356, 234, 0, 0, 0, 0,
	0, 1262, 1320, 1321, 1271, 1380, 1384, 1392, 0, 0,
	0, 0, 0, 649, 1417, 0, 252, 250, 0, 253,
	0, 256, 257, 0, 0, 252, 246, 0, 0, 0,
	1221, 405, 1078, 1191, 0, 0, 1193, 1111, 1115, 0,
	2354, 2354, 0, 2308, 0, 1076, 0, 0, 1192, 456,
	0, 463, 0, 477, 0, 0, 1242, 0, 0, 1266,
	1291, 1221, 0, 1332, 1334, 0, 1342, 0, 0, 0,
	1509, 1515, 0, 1502, 1503, 1645, 1517, 1536, -2, 0,
	0, 1626, 1544, 1541, 1547, 1548, 0, 325, 0, 320,
	322, 0, 308, 0, 1528, 1530, 0, 1049, 1052, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 286, 1730,
	312, 0, 841, 865, 941, 987, 1126, 0, 0, 989,
	0, 0, 1648, 1635, 1636, 1633, 1359, 1942, 1946, 0,
	0, 0, 1948, -2, 0, 1970, -2, -2, 2204, 2256,
	2021, 1626, 2043, 2045, 2032, 2250, 1890, 0, 2132, 2129,
	0, 2116, 0, 2067, 2068, 0, 0, 2071, 2073, 2074,
	2075, 1829, 1822, 1821, 2229, 0, 0, 0, 0, 2107,
	1608, 0, 2121, 0, 0, 1676, 2121, 2121, 1720, 0,
	1722, 1689, 1677, 0, 1686, 0, 2332, 1715, 1707, 0,
	0, 334, 0, 338, 339, 373, 0, 625, 626, 0,
	0, 1763, 1768, 0, 1774, 1844, 0, 0, 0, 0,
	0, 241, 166, 167, 1371, 1375, 1372, 0, 169, 0,
	0, 1148, 0, 1151, 0, 0, 0, 0, 1158, 1175,
	0, 0, 0, 0, 0, 0, 1177, 0, 1176, 0,
	0, 1207, 0, 1347, 1354, 0, -2, 0, 0, 0,
	176, 200, 0, 0, 0, 0, 203, 1421, 178, 0,
	0, 209, 209, 0, 0, 1363, 1365, 1378, 0, 0,
	0, 0, 154, 0, 0, 1381, 1385, 1393, 1388, 1390,
	1396, 0, 102, 0, 1499, 0, 140, 0, 0, 0,
	1398, 222, 223, 0, 209, 0, 209, 215, 209, 1356,
	0, 0, 0, 0, 0, 0, 0, 1401, 1402, 243,
	0, 0, 0, 0, 0, 245, 318, 252, 393, 0,
	1136, 0, 1203, 1195, 1196, 1197, 0, 1107, 1202, 1204,
	0, 0, 1112, 0, 0, 0, 0, 1092, 1077, 0,
	1088, 0, 0, 1105, 1080, 0, 461, 478, 0, 481,
	0, 484, 1066, 1239, 1283, 1221, 1286, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 1511, 1515, 0,
	1504, 1505, 1538, 1644, 0, 0, 0, 1525, 1645, 0,
	327, 328, 0, 328, 288, 0, 289, 290, 291, 298,
	299, 300, 277, 278, 681, 683, 0, 0, 689, 1125,
	0, 0, 0, 0, 1634, 1950, -2, -2, 1971, 0,
	2333, 2335, 1626, 0, 2118, 1628, 0, 0, -2, 0,
	0, 0, 1609, 1592, 0, 1667, 1659, 1661, 1663, 2646,
	2425, 2761, 1593, 1594, 1742, 0, 0, 1710, 335, 1405,
	627, 0, 0, 1770, 0, 632, 0, 0, 0, 0,
	0, 1373, 171, 0, 0, 1152, 1153, 2307, 1155, 0,
	1157, 1159, 1160, 1161, 0, 1164, 0, 2356, 0, 1169,
	1172, 1173, 0, 0, 1186, 1208, 0, 1217, 0, 1349,
	1359, 1353, 0, 1351, 1219, 0, 175, 202, 177, 204,
	199, 0, 1356, 0, 179, 189, 0, 0, 122, 0,
	0, 2419, 157, 155, 153, 100, 1360, 143, 0, 124,
	0, 224, 233, 1355, 235, 219, 209, 0, 1382, 1386,
	1394, 0, 1409, 1410, 1411, 1412, 0, 0, 0, 0,
	254, 0, 255, 258, 259, 0, 0, 1080, 1135, 1079,
	1194, 0, 1205, 1206, 0, 0, 0, 0, 0, 0,
	1082, 0, 1081, 0, 0, 0, 0, 0, 462, 465,
	0, 468, 0, 0, 0, 0, 0, 1290, 0, 1335,
	1333, 0, 1341, 0, 0, 0, 1487, 0, 0, 1506,
	1507, 485, 1531, 0, 0, 1538, 1549, 307, 0, 310,
	285, 0, 685, 0, 687, 0, 988, 990, 0, 0,
	2044, 2136, 0, 0, 2069, 2070, -2, 0, 2010, 2120,
	2122, 0, 0, 0, 0, 0, 1678, 1687, 1406, 1764,
	639, 636, 638, 0, 1369, 0, 1376, 211, 1150, 1154,
	0, 0, 0, 1165, 1225, 0, 0, 1242, 1242, 1178,
	0, 0, 1211, 1212, 1132, 0, 1213, 1214, 1215, 1348,
	1637, 1354, 1188, 0, 0, 201, 206, 0, 0, 0,
	0, 0, 0, 142, 0, 213, 236, 1356, 0, 1413,
	1414, 0, 0, 251, 270, 0, 1284, 1082, 0, 1113,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1114,
	1219, 0, 0, 1183, 1090, 0, 1093, 0, 1089, 1086,
	1087, 1078, 0, 466, 467, 482, 0, 483, 0, 0,
	1291, 0, 0, 1342, 0, 0, 1494, 1486, 1515, 1508,
	1509, 1761, 0, 1539, 0, 684, 0, 0, 998, 999,
	0, 0, 0, 0, 2131, 1629, 2011, 0, 0, 1662,
	1664, 1665, 1666, 628, 0, 1370, 183, 0, 0, 1163,
	1230, 0, 0, 0, 0, 0, 1179, 1209, 1210, 1207,
	1131, 0, 1352, 1350, 0, 1221, 181, 0, 1219, 0,
	1141, 0, 0, 1144, 0, 0, 158, 2419, 156, 0,
	209, 1406, 209, 0, 273, 0, 264, 262, 263, 1074,
	0, 1199, 1201, 1217, 1219, 1132, 0, 1094, 1136, 1092,
	479, 1285, 1289, 1287, 1325, 1219, 0, 1217, 0, 1501,
	1515, 1495, 1496, 0, 1511, 0, 0, 328, 686, 688,
	2128, 2148, 2137, -2, 2718, 2426, 0, 2148, 2148, 2123,
	2124, 0, 0, 0, 1166, 1226, 1227, 0, 1222, 1223,
	1224, 2355, 1167, 1168, 1170, 1171, 1761, 0, 0, 1225,
	205, 187, 1138, 0, 0, 1139, 0, 0, 161, 0,
	163, 237, 1404, 1407, 0, 260, 0, 0, 1071, 1073,
	1198, 0, 1132, 1217, 1080, 0, 0, 0, 1080, 1082,
	1217, 0, 1132, 0, 1490, 1500, 0, 1510, 1487, 0,
	1534, 0, 309, 2133, 0, 0, 2139, 2140, 2141, 2142,
	2143, 2134, 2135, 640, 1156, 0, 1228, 0, 1229, 0,
	0, 0, 1187, 1216, 0, 1230, 1142, 0, 1145, 0,
	159, 0, 0, 268, 269, 1200, 1080, 1132, 1761, 0,
	1083, 0, 1085, 1082, 1091, 1132, 0, 1080, 0, 1513,
	1489, 1493, 2316, 1494, 1532, 0, 0, 0, 2145, 2146,
	0, 0, 0, 1231, 0, 1234, 1235, 0, 1232, 0,
	1207, 0, 0, 209, 0, 1761, 1080, 1182, 1084, 1074,
	1080, 1219, 1761, 1217, 1483, 1515, 1501, 0, 1761, 2144,
	2147, 2138, 1162, 1233, 1236, 1237, 1218, 1189, 0, 0,
	1408, 271, 0, 1180, 1761, 1072, 1761, 1217, 1338, 1132,
	0, 1490, 1761, 1535, 1129, 0, 0, 1181, 1336, 1132,
	1080, 1512, 1484, 1533, 1143, 1128, 0, 272, 1080, 1761,
	0, 1761, 1339, 0, 1337, 1129, 1146,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 595, 3, 601, 596, 3,
	607, 608, 599, 597, 612, 598, 609, 600, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 615, 3,
	587, 589, 588, 592, 611, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 605, 3, 606, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 613, 594, 614, 590,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 591,
	57930, 593, 57931, 603, 57932, 604, 57933, 610, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1511
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1704
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1716
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1805
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1837
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1899
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1958
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1979
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2041
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2050
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2061
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2069
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2090
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2109
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2120
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2126
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2157
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2248
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2292
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2305
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2545
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2549
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2636
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2741
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2768
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "alter function")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3182
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3191
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3197
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3202
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3207
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = nil
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3315
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3511
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3542
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3561
		{
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CREATE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3575
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "create access method")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create cast")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "create publication")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create rule")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplemented(sqllex, "create server")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3605
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3608
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3609
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "drop server")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3756
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3791
		{

			sqlVAL.union.val = nil
		}
	case 477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "DELETE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3878
		{
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3904
		{
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "DROP")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4104
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4170
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4194
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4202
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "DELETE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "INSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "DELETE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "INSERT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4283
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4316
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4407
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4423
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "GRANT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4519
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4532
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "RESET")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "RESET")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4606
		{
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "USE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4779
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			return unimplemented(sqllex, "set from current")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4880
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.Low
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = tree.Normal
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = tree.High
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5060
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5069
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5074
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5084
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.str = "client_encoding"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.str = "timezone"
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5146
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5209
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5218
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5428
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = true
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = false
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5526
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5594
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5599
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5601
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = true
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = false
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5625
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5656
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5666
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5671
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = true
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = false
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5689
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5718
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5729
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5751
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5765
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5781
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5786
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5791
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5796
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5830
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5870
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5878
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5899
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5909
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5913
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5922
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5945
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5957
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6026
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6341
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6381
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6456
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6492
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6507
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6535
		{

			sqlVAL.union.val = nil
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6541
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.str = ""
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = nil
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6578
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6604
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6617
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6631
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6632
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6633
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6688
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.str = ""
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6974
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{

			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7029
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7036
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7132
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7160
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7170
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7185
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7250
		{
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7254
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7255
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7412
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7421
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7429
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7440
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7453
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7467
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7477
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7521
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7555
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.str = ""
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{

			sqlVAL.union.val = true
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = false
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7604
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7618
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7630
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7642
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7652
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7662
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7666
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = true
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = nil
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7801
		{
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7829
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7831
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7833
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7837
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7872
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7889
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7907
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7923
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7939
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7943
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = false
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = true
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = false
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = true
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = false
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8003
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8009
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8017
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.str = ""
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.str = ""
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8076
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8082
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8307
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8313
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8325
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8331
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8345
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8351
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8410
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = true
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = false
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.Types
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8499
		{
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8532
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8541
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8562
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8570
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8615
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8640
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8653
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8658
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8667
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8669
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8686
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8689
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8690
		{
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8718
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8733
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8737
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.str = ""
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{

		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8887
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.str = ""
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.str = ""
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.str = ""
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.str = ""
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8942
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8968
		{
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8997
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9077
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9122
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9160
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9213
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9228
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9408
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9409
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9470
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = true
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = false
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9584
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = nil
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9598
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = true
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = false
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = false
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = true
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9627
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9628
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9632
		{
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9685
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9690
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9716
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9749
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9805
		{
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9844
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9875
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9877
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9892
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9914
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9945
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9961
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9973
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9992
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10034
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10044
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10079
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10090
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10120
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10153
		{
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10155
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = nil
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = true
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = false
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.str = tree.AstFull
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.str = tree.AstRight
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.str = tree.AstInner
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10273
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.str = tree.AstHash
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.str = ""
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10365
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10377
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10387
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = true
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = false
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = true
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = false
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10449
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10457
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10458
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10476
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10486
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10499
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10506
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10567
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10568
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = types.Geography
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10617
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10625
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10651
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10659
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = nil
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = types.Int2
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = types.Int
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = types.Float4
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = types.Float
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10702
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10710
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = types.Bool
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = types.Float
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10751
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10757
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10779
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = types.String
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = true
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = false
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = types.Date
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10828
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10836
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10850
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10859
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10867
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10884
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = true
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = false
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = false
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = types.Interval
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10908
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = nil
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11037
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11097
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11246
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11375
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11441
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11463
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11571
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11579
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11680
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11706
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11715
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11730
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11764
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11775
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11776
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11800
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11866
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12005
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12023
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12032
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12037
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12042
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12047
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12052
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12057
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12066
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12067
		{
			return unimplemented(sqllex, "treat")
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12093
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.str = ""
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12242
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12310
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12339
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12415
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12755
		{
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12756
		{
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12805
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12828
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12836
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12886
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12909
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12925
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12934
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12945
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12962
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12979
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13198
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13211
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13218
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.str = ""
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
