// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:868
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13529

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1562,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 405,
	-2, 0,
	-1, 74,
	242, 243,
	513, 243,
	-2, 0,
	-1, 87,
	230, 1298,
	244, 1298,
	260, 401,
	389, 401,
	399, 1054,
	437, 401,
	450, 1054,
	497, 1054,
	524, 401,
	550, 1054,
	-2, 0,
	-1, 93,
	132, 1562,
	237, 1562,
	535, 1562,
	536, 1562,
	-2, 0,
	-1, 109,
	150, 1533,
	169, 1533,
	182, 1533,
	240, 1533,
	273, 1533,
	340, 1533,
	350, 1533,
	530, 1533,
	-2, 1504,
	-1, 149,
	158, 905,
	259, 905,
	392, 867,
	455, 867,
	496, 867,
	516, 905,
	518, 867,
	-2, 0,
	-1, 153,
	4, 1564,
	21, 1564,
	22, 1564,
	23, 1564,
	24, 1564,
	25, 1564,
	26, 1564,
	27, 1564,
	29, 1564,
	30, 1564,
	36, 1564,
	41, 1564,
	42, 1564,
	44, 1564,
	45, 1564,
	46, 1564,
	47, 1564,
	48, 1564,
	49, 1564,
	50, 1564,
	51, 1564,
	53, 1564,
	54, 1564,
	55, 1564,
	56, 1564,
	58, 1564,
	59, 1564,
	60, 1564,
	61, 1564,
	62, 1564,
	63, 1564,
	64, 1564,
	68, 1564,
	69, 1564,
	70, 1564,
	71, 1564,
	73, 1564,
	74, 1564,
	75, 1564,
	79, 1564,
	80, 1564,
	81, 1564,
	82, 1564,
	83, 1564,
	84, 1564,
	85, 1564,
	88, 1564,
	89, 1564,
	90, 1564,
	91, 1564,
	92, 1564,
	94, 1564,
	96, 1564,
	97, 1564,
	98, 1564,
	99, 1564,
	100, 1564,
	101, 1564,
	103, 1564,
	104, 1564,
	105, 1564,
	107, 1564,
	108, 1564,
	109, 1564,
	117, 1564,
	118, 1564,
	119, 1564,
	120, 1564,
	121, 1564,
	123, 1564,
	124, 1564,
	125, 1564,
	127, 1564,
	128, 1564,
	129, 1564,
	131, 1564,
	132, 1564,
	133, 1564,
	135, 1564,
	136, 1564,
	137, 1564,
	140, 1564,
	141, 1564,
	142, 1564,
	144, 1564,
	145, 1564,
	147, 1564,
	148, 1564,
	149, 1564,
	151, 1564,
	152, 1564,
	153, 1564,
	154, 1564,
	155, 1564,
	156, 1564,
	157, 1564,
	158, 1564,
	159, 1564,
	160, 1564,
	161, 1564,
	162, 1564,
	163, 1564,
	164, 1564,
	165, 1564,
	166, 1564,
	168, 1564,
	174, 1564,
	175, 1564,
	176, 1564,
	177, 1564,
	181, 1564,
	183, 1564,
	184, 1564,
	188, 1564,
	189, 1564,
	190, 1564,
	191, 1564,
	192, 1564,
	193, 1564,
	194, 1564,
	195, 1564,
	196, 1564,
	197, 1564,
	198, 1564,
	199, 1564,
	200, 1564,
	201, 1564,
	203, 1564,
	204, 1564,
	206, 1564,
	207, 1564,
	209, 1564,
	210, 1564,
	211, 1564,
	212, 1564,
	213, 1564,
	214, 1564,
	215, 1564,
	216, 1564,
	217, 1564,
	219, 1564,
	220, 1564,
	222, 1564,
	223, 1564,
	224, 1564,
	225, 1564,
	226, 1564,
	230, 1564,
	231, 1564,
	232, 1564,
	233, 1564,
	234, 1564,
	237, 1564,
	238, 1564,
	239, 1564,
	241, 1564,
	243, 1564,
	244, 1564,
	246, 1564,
	248, 1564,
	249, 1564,
	250, 1564,
	252, 1564,
	256, 1564,
	257, 1564,
	258, 1564,
	259, 1564,
	260, 1564,
	261, 1564,
	263, 1564,
	264, 1564,
	265, 1564,
	267, 1564,
	268, 1564,
	270, 1564,
	271, 1564,
	274, 1564,
	278, 1564,
	279, 1564,
	280, 1564,
	283, 1564,
	284, 1564,
	285, 1564,
	286, 1564,
	288, 1564,
	289, 1564,
	290, 1564,
	291, 1564,
	292, 1564,
	293, 1564,
	294, 1564,
	295, 1564,
	296, 1564,
	297, 1564,
	298, 1564,
	299, 1564,
	300, 1564,
	301, 1564,
	302, 1564,
	303, 1564,
	304, 1564,
	305, 1564,
	306, 1564,
	307, 1564,
	308, 1564,
	309, 1564,
	311, 1564,
	313, 1564,
	314, 1564,
	315, 1564,
	316, 1564,
	317, 1564,
	318, 1564,
	319, 1564,
	320, 1564,
	321, 1564,
	322, 1564,
	323, 1564,
	324, 1564,
	325, 1564,
	327, 1564,
	328, 1564,
	330, 1564,
	332, 1564,
	333, 1564,
	335, 1564,
	336, 1564,
	337, 1564,
	338, 1564,
	339, 1564,
	342, 1564,
	345, 1564,
	346, 1564,
	347, 1564,
	348, 1564,
	351, 1564,
	352, 1564,
	353, 1564,
	355, 1564,
	357, 1564,
	358, 1564,
	359, 1564,
	360, 1564,
	361, 1564,
	362, 1564,
	363, 1564,
	364, 1564,
	365, 1564,
	366, 1564,
	367, 1564,
	368, 1564,
	369, 1564,
	371, 1564,
	372, 1564,
	373, 1564,
	374, 1564,
	375, 1564,
	376, 1564,
	377, 1564,
	378, 1564,
	379, 1564,
	380, 1564,
	381, 1564,
	382, 1564,
	383, 1564,
	384, 1564,
	385, 1564,
	387, 1564,
	388, 1564,
	390, 1564,
	391, 1564,
	392, 1564,
	393, 1564,
	394, 1564,
	395, 1564,
	396, 1564,
	397, 1564,
	398, 1564,
	399, 1564,
	400, 1564,
	401, 1564,
	403, 1564,
	405, 1564,
	406, 1564,
	407, 1564,
	412, 1564,
	414, 1564,
	415, 1564,
	416, 1564,
	417, 1564,
	418, 1564,
	419, 1564,
	420, 1564,
	421, 1564,
	422, 1564,
	423, 1564,
	425, 1564,
	426, 1564,
	427, 1564,
	429, 1564,
	430, 1564,
	431, 1564,
	432, 1564,
	433, 1564,
	434, 1564,
	435, 1564,
	437, 1564,
	438, 1564,
	439, 1564,
	440, 1564,
	441, 1564,
	442, 1564,
	443, 1564,
	444, 1564,
	445, 1564,
	446, 1564,
	447, 1564,
	448, 1564,
	450, 1564,
	451, 1564,
	452, 1564,
	453, 1564,
	454, 1564,
	455, 1564,
	457, 1564,
	458, 1564,
	459, 1564,
	460, 1564,
	461, 1564,
	462, 1564,
	464, 1564,
	465, 1564,
	466, 1564,
	467, 1564,
	468, 1564,
	469, 1564,
	470, 1564,
	471, 1564,
	473, 1564,
	475, 1564,
	476, 1564,
	477, 1564,
	478, 1564,
	479, 1564,
	480, 1564,
	481, 1564,
	482, 1564,
	483, 1564,
	484, 1564,
	485, 1564,
	486, 1564,
	487, 1564,
	488, 1564,
	489, 1564,
	490, 1564,
	492, 1564,
	493, 1564,
	495, 1564,
	496, 1564,
	498, 1564,
	499, 1564,
	500, 1564,
	501, 1564,
	502, 1564,
	503, 1564,
	504, 1564,
	505, 1564,
	506, 1564,
	508, 1564,
	509, 1564,
	510, 1564,
	511, 1564,
	512, 1564,
	514, 1564,
	516, 1564,
	517, 1564,
	518, 1564,
	519, 1564,
	520, 1564,
	521, 1564,
	523, 1564,
	524, 1564,
	525, 1564,
	526, 1564,
	528, 1564,
	529, 1564,
	532, 1564,
	533, 1564,
	534, 1564,
	535, 1564,
	536, 1564,
	537, 1564,
	538, 1564,
	540, 1564,
	543, 1564,
	544, 1564,
	545, 1564,
	546, 1564,
	547, 1564,
	548, 1564,
	550, 1564,
	551, 1564,
	552, 1564,
	553, 1564,
	555, 1564,
	560, 1564,
	561, 1564,
	562, 1564,
	563, 1564,
	564, 1564,
	565, 1564,
	-2, 0,
	-1, 154,
	1, 1415,
	130, 1415,
	248, 1415,
	329, 1415,
	387, 1415,
	396, 1415,
	569, 1415,
	598, 1415,
	-2, 0,
	-1, 156,
	1, 1415,
	598, 1415,
	-2, 0,
	-1, 157,
	1, 1415,
	598, 1415,
	-2, 0,
	-1, 158,
	1, 1415,
	513, 1415,
	598, 1415,
	-2, 0,
	-1, 187,
	150, 1532,
	169, 1532,
	182, 1532,
	240, 1532,
	273, 1532,
	340, 1532,
	350, 1532,
	530, 1532,
	-2, 1507,
	-1, 234,
	4, 1571,
	5, 1571,
	6, 1571,
	7, 1571,
	8, 1571,
	9, 1571,
	10, 1571,
	21, 1571,
	22, 1571,
	23, 1571,
	24, 1571,
	25, 1571,
	26, 1571,
	27, 1571,
	29, 1571,
	30, 1571,
	36, 1571,
	37, 1571,
	41, 1571,
	42, 1571,
	43, 1571,
	44, 1571,
	45, 1571,
	46, 1571,
	47, 1571,
	48, 1571,
	49, 1571,
	50, 1571,
	51, 1571,
	53, 1571,
	54, 1571,
	55, 1571,
	56, 1571,
	58, 1571,
	59, 1571,
	60, 1571,
	61, 1571,
	62, 1571,
	63, 1571,
	64, 1571,
	65, 1571,
	66, 1571,
	67, 1571,
	68, 1571,
	69, 1571,
	70, 1571,
	71, 1571,
	73, 1571,
	74, 1571,
	75, 1571,
	77, 1571,
	79, 1571,
	80, 1571,
	81, 1571,
	82, 1571,
	83, 1571,
	84, 1571,
	85, 1571,
	88, 1571,
	89, 1571,
	90, 1571,
	91, 1571,
	92, 1571,
	94, 1571,
	96, 1571,
	97, 1571,
	98, 1571,
	99, 1571,
	100, 1571,
	101, 1571,
	103, 1571,
	104, 1571,
	105, 1571,
	106, 1571,
	107, 1571,
	108, 1571,
	109, 1571,
	110, 1571,
	111, 1571,
	112, 1571,
	113, 1571,
	114, 1571,
	115, 1571,
	116, 1571,
	117, 1571,
	118, 1571,
	119, 1571,
	120, 1571,
	121, 1571,
	122, 1571,
	123, 1571,
	124, 1571,
	125, 1571,
	126, 1571,
	127, 1571,
	128, 1571,
	129, 1571,
	131, 1571,
	132, 1571,
	133, 1571,
	135, 1571,
	136, 1571,
	137, 1571,
	140, 1571,
	141, 1571,
	142, 1571,
	144, 1571,
	145, 1571,
	147, 1571,
	148, 1571,
	149, 1571,
	151, 1571,
	152, 1571,
	153, 1571,
	154, 1571,
	155, 1571,
	156, 1571,
	157, 1571,
	158, 1571,
	159, 1571,
	160, 1571,
	161, 1571,
	162, 1571,
	163, 1571,
	164, 1571,
	165, 1571,
	166, 1571,
	167, 1571,
	168, 1571,
	174, 1571,
	175, 1571,
	176, 1571,
	177, 1571,
	181, 1571,
	183, 1571,
	184, 1571,
	187, 1571,
	188, 1571,
	189, 1571,
	190, 1571,
	191, 1571,
	192, 1571,
	193, 1571,
	194, 1571,
	195, 1571,
	196, 1571,
	197, 1571,
	198, 1571,
	199, 1571,
	200, 1571,
	201, 1571,
	203, 1571,
	204, 1571,
	206, 1571,
	207, 1571,
	209, 1571,
	210, 1571,
	211, 1571,
	212, 1571,
	213, 1571,
	214, 1571,
	215, 1571,
	216, 1571,
	217, 1571,
	218, 1571,
	219, 1571,
	220, 1571,
	222, 1571,
	223, 1571,
	224, 1571,
	225, 1571,
	226, 1571,
	230, 1571,
	231, 1571,
	232, 1571,
	233, 1571,
	234, 1571,
	236, 1571,
	237, 1571,
	238, 1571,
	239, 1571,
	241, 1571,
	243, 1571,
	244, 1571,
	245, 1571,
	246, 1571,
	247, 1571,
	248, 1571,
	249, 1571,
	250, 1571,
	251, 1571,
	252, 1571,
	256, 1571,
	257, 1571,
	258, 1571,
	259, 1571,
	260, 1571,
	261, 1571,
	263, 1571,
	264, 1571,
	265, 1571,
	267, 1571,
	268, 1571,
	269, 1571,
	270, 1571,
	271, 1571,
	272, 1571,
	274, 1571,
	278, 1571,
	279, 1571,
	280, 1571,
	281, 1571,
	282, 1571,
	283, 1571,
	284, 1571,
	285, 1571,
	286, 1571,
	288, 1571,
	289, 1571,
	290, 1571,
	291, 1571,
	292, 1571,
	293, 1571,
	294, 1571,
	295, 1571,
	296, 1571,
	297, 1571,
	298, 1571,
	299, 1571,
	300, 1571,
	301, 1571,
	302, 1571,
	303, 1571,
	304, 1571,
	305, 1571,
	306, 1571,
	307, 1571,
	308, 1571,
	309, 1571,
	311, 1571,
	312, 1571,
	313, 1571,
	314, 1571,
	315, 1571,
	316, 1571,
	317, 1571,
	318, 1571,
	319, 1571,
	320, 1571,
	321, 1571,
	322, 1571,
	323, 1571,
	324, 1571,
	325, 1571,
	326, 1571,
	327, 1571,
	328, 1571,
	329, 1571,
	330, 1571,
	331, 1571,
	332, 1571,
	333, 1571,
	334, 1571,
	335, 1571,
	336, 1571,
	337, 1571,
	338, 1571,
	339, 1571,
	342, 1571,
	346, 1571,
	347, 1571,
	348, 1571,
	351, 1571,
	352, 1571,
	353, 1571,
	354, 1571,
	355, 1571,
	356, 1571,
	357, 1571,
	358, 1571,
	359, 1571,
	360, 1571,
	361, 1571,
	362, 1571,
	363, 1571,
	364, 1571,
	365, 1571,
	366, 1571,
	367, 1571,
	368, 1571,
	369, 1571,
	371, 1571,
	372, 1571,
	373, 1571,
	374, 1571,
	375, 1571,
	376, 1571,
	377, 1571,
	378, 1571,
	379, 1571,
	380, 1571,
	381, 1571,
	382, 1571,
	383, 1571,
	384, 1571,
	385, 1571,
	387, 1571,
	388, 1571,
	390, 1571,
	391, 1571,
	392, 1571,
	393, 1571,
	394, 1571,
	395, 1571,
	396, 1571,
	397, 1571,
	398, 1571,
	399, 1571,
	400, 1571,
	401, 1571,
	403, 1571,
	405, 1571,
	406, 1571,
	407, 1571,
	412, 1571,
	414, 1571,
	415, 1571,
	416, 1571,
	417, 1571,
	418, 1571,
	419, 1571,
	420, 1571,
	421, 1571,
	422, 1571,
	423, 1571,
	425, 1571,
	426, 1571,
	427, 1571,
	428, 1571,
	429, 1571,
	430, 1571,
	431, 1571,
	432, 1571,
	433, 1571,
	434, 1571,
	435, 1571,
	437, 1571,
	438, 1571,
	439, 1571,
	440, 1571,
	441, 1571,
	442, 1571,
	443, 1571,
	444, 1571,
	445, 1571,
	446, 1571,
	447, 1571,
	448, 1571,
	450, 1571,
	451, 1571,
	452, 1571,
	453, 1571,
	454, 1571,
	455, 1571,
	456, 1571,
	457, 1571,
	458, 1571,
	459, 1571,
	460, 1571,
	461, 1571,
	462, 1571,
	463, 1571,
	464, 1571,
	465, 1571,
	466, 1571,
	467, 1571,
	468, 1571,
	469, 1571,
	470, 1571,
	471, 1571,
	473, 1571,
	475, 1571,
	476, 1571,
	477, 1571,
	478, 1571,
	479, 1571,
	480, 1571,
	481, 1571,
	482, 1571,
	483, 1571,
	484, 1571,
	485, 1571,
	486, 1571,
	487, 1571,
	488, 1571,
	489, 1571,
	490, 1571,
	492, 1571,
	493, 1571,
	494, 1571,
	495, 1571,
	496, 1571,
	498, 1571,
	499, 1571,
	500, 1571,
	501, 1571,
	502, 1571,
	503, 1571,
	504, 1571,
	505, 1571,
	506, 1571,
	508, 1571,
	509, 1571,
	510, 1571,
	511, 1571,
	512, 1571,
	514, 1571,
	516, 1571,
	517, 1571,
	518, 1571,
	519, 1571,
	520, 1571,
	521, 1571,
	522, 1571,
	523, 1571,
	524, 1571,
	525, 1571,
	526, 1571,
	528, 1571,
	529, 1571,
	531, 1571,
	532, 1571,
	533, 1571,
	534, 1571,
	535, 1571,
	536, 1571,
	537, 1571,
	538, 1571,
	539, 1571,
	540, 1571,
	543, 1571,
	544, 1571,
	545, 1571,
	546, 1571,
	547, 1571,
	548, 1571,
	550, 1571,
	551, 1571,
	552, 1571,
	553, 1571,
	555, 1571,
	560, 1571,
	561, 1571,
	562, 1571,
	563, 1571,
	564, 1571,
	565, 1571,
	566, 1571,
	579, 1571,
	586, 1571,
	587, 1571,
	588, 1571,
	595, 1571,
	599, 1571,
	-2, 0,
	-1, 738,
	4, 1296,
	21, 1296,
	22, 1296,
	23, 1296,
	24, 1296,
	25, 1296,
	26, 1296,
	27, 1296,
	29, 1296,
	30, 1296,
	36, 1296,
	41, 1296,
	42, 1296,
	44, 1296,
	45, 1296,
	46, 1296,
	47, 1296,
	48, 1296,
	49, 1296,
	50, 1296,
	51, 1296,
	53, 1296,
	54, 1296,
	55, 1296,
	56, 1296,
	58, 1296,
	59, 1296,
	60, 1296,
	61, 1296,
	62, 1296,
	63, 1296,
	64, 1296,
	68, 1296,
	69, 1296,
	70, 1296,
	71, 1296,
	73, 1296,
	74, 1296,
	75, 1296,
	79, 1296,
	80, 1296,
	81, 1296,
	82, 1296,
	83, 1296,
	84, 1296,
	85, 1296,
	88, 1296,
	89, 1296,
	90, 1296,
	91, 1296,
	92, 1296,
	94, 1296,
	96, 1296,
	97, 1296,
	98, 1296,
	99, 1296,
	100, 1296,
	101, 1296,
	103, 1296,
	104, 1296,
	105, 1296,
	107, 1296,
	108, 1296,
	109, 1296,
	117, 1296,
	118, 1296,
	119, 1296,
	120, 1296,
	121, 1296,
	123, 1296,
	124, 1296,
	125, 1296,
	127, 1296,
	128, 1296,
	129, 1296,
	131, 1296,
	132, 1296,
	133, 1296,
	135, 1296,
	136, 1296,
	137, 1296,
	140, 1296,
	141, 1296,
	142, 1296,
	144, 1296,
	145, 1296,
	147, 1296,
	148, 1296,
	149, 1296,
	151, 1296,
	152, 1296,
	153, 1296,
	154, 1296,
	155, 1296,
	156, 1296,
	157, 1296,
	158, 1296,
	159, 1296,
	160, 1296,
	161, 1296,
	162, 1296,
	163, 1296,
	164, 1296,
	165, 1296,
	166, 1296,
	168, 1296,
	174, 1296,
	175, 1296,
	176, 1296,
	177, 1296,
	181, 1296,
	183, 1296,
	184, 1296,
	188, 1296,
	189, 1296,
	190, 1296,
	191, 1296,
	192, 1296,
	193, 1296,
	194, 1296,
	195, 1296,
	196, 1296,
	197, 1296,
	198, 1296,
	199, 1296,
	200, 1296,
	201, 1296,
	203, 1296,
	204, 1296,
	206, 1296,
	207, 1296,
	209, 1296,
	210, 1296,
	211, 1296,
	212, 1296,
	213, 1296,
	214, 1296,
	215, 1296,
	216, 1296,
	217, 1296,
	219, 1296,
	220, 1296,
	222, 1296,
	223, 1296,
	224, 1296,
	225, 1296,
	226, 1296,
	230, 1296,
	231, 1296,
	232, 1296,
	233, 1296,
	234, 1296,
	237, 1296,
	238, 1296,
	239, 1296,
	241, 1296,
	243, 1296,
	244, 1296,
	246, 1296,
	248, 1296,
	249, 1296,
	250, 1296,
	252, 1296,
	256, 1296,
	257, 1296,
	258, 1296,
	259, 1296,
	260, 1296,
	261, 1296,
	263, 1296,
	264, 1296,
	265, 1296,
	267, 1296,
	268, 1296,
	270, 1296,
	271, 1296,
	274, 1296,
	278, 1296,
	279, 1296,
	280, 1296,
	283, 1296,
	284, 1296,
	285, 1296,
	286, 1296,
	288, 1296,
	289, 1296,
	290, 1296,
	291, 1296,
	292, 1296,
	293, 1296,
	294, 1296,
	295, 1296,
	296, 1296,
	297, 1296,
	298, 1296,
	299, 1296,
	300, 1296,
	301, 1296,
	302, 1296,
	303, 1296,
	304, 1296,
	305, 1296,
	306, 1296,
	307, 1296,
	308, 1296,
	309, 1296,
	311, 1296,
	313, 1296,
	314, 1296,
	315, 1296,
	316, 1296,
	317, 1296,
	318, 1296,
	319, 1296,
	320, 1296,
	321, 1296,
	322, 1296,
	323, 1296,
	324, 1296,
	325, 1296,
	327, 1296,
	328, 1296,
	330, 1296,
	332, 1296,
	333, 1296,
	335, 1296,
	336, 1296,
	337, 1296,
	338, 1296,
	339, 1296,
	342, 1296,
	346, 1296,
	347, 1296,
	348, 1296,
	351, 1296,
	352, 1296,
	353, 1296,
	355, 1296,
	357, 1296,
	358, 1296,
	359, 1296,
	360, 1296,
	361, 1296,
	362, 1296,
	363, 1296,
	364, 1296,
	365, 1296,
	366, 1296,
	367, 1296,
	368, 1296,
	369, 1296,
	371, 1296,
	372, 1296,
	373, 1296,
	374, 1296,
	375, 1296,
	376, 1296,
	377, 1296,
	378, 1296,
	379, 1296,
	380, 1296,
	381, 1296,
	382, 1296,
	383, 1296,
	384, 1296,
	385, 1296,
	387, 1296,
	388, 1296,
	390, 1296,
	391, 1296,
	392, 1296,
	393, 1296,
	394, 1296,
	395, 1296,
	396, 1296,
	397, 1296,
	398, 1296,
	399, 1296,
	400, 1296,
	401, 1296,
	403, 1296,
	405, 1296,
	406, 1296,
	407, 1296,
	412, 1296,
	414, 1296,
	415, 1296,
	416, 1296,
	417, 1296,
	418, 1296,
	419, 1296,
	420, 1296,
	421, 1296,
	422, 1296,
	423, 1296,
	425, 1296,
	426, 1296,
	427, 1296,
	429, 1296,
	430, 1296,
	431, 1296,
	432, 1296,
	433, 1296,
	434, 1296,
	435, 1296,
	437, 1296,
	438, 1296,
	439, 1296,
	440, 1296,
	441, 1296,
	442, 1296,
	443, 1296,
	444, 1296,
	445, 1296,
	446, 1296,
	447, 1296,
	448, 1296,
	450, 1296,
	451, 1296,
	452, 1296,
	453, 1296,
	454, 1296,
	455, 1296,
	457, 1296,
	458, 1296,
	459, 1296,
	460, 1296,
	461, 1296,
	462, 1296,
	464, 1296,
	465, 1296,
	466, 1296,
	467, 1296,
	468, 1296,
	469, 1296,
	470, 1296,
	471, 1296,
	473, 1296,
	475, 1296,
	476, 1296,
	477, 1296,
	478, 1296,
	479, 1296,
	480, 1296,
	481, 1296,
	482, 1296,
	483, 1296,
	484, 1296,
	485, 1296,
	486, 1296,
	487, 1296,
	488, 1296,
	489, 1296,
	490, 1296,
	492, 1296,
	493, 1296,
	495, 1296,
	496, 1296,
	498, 1296,
	499, 1296,
	500, 1296,
	501, 1296,
	502, 1296,
	503, 1296,
	504, 1296,
	505, 1296,
	506, 1296,
	508, 1296,
	509, 1296,
	510, 1296,
	511, 1296,
	512, 1296,
	514, 1296,
	516, 1296,
	517, 1296,
	518, 1296,
	519, 1296,
	520, 1296,
	521, 1296,
	523, 1296,
	524, 1296,
	525, 1296,
	526, 1296,
	528, 1296,
	529, 1296,
	532, 1296,
	533, 1296,
	534, 1296,
	535, 1296,
	536, 1296,
	537, 1296,
	538, 1296,
	540, 1296,
	543, 1296,
	544, 1296,
	545, 1296,
	546, 1296,
	547, 1296,
	548, 1296,
	550, 1296,
	551, 1296,
	552, 1296,
	553, 1296,
	555, 1296,
	560, 1296,
	561, 1296,
	562, 1296,
	563, 1296,
	564, 1296,
	565, 1296,
	-2, 0,
	-1, 757,
	186, 2357,
	513, 2357,
	578, 2357,
	597, 2357,
	-2, 0,
	-1, 758,
	186, 2464,
	513, 2464,
	578, 2464,
	597, 2464,
	-2, 0,
	-1, 759,
	186, 2344,
	513, 2344,
	578, 2344,
	597, 2344,
	-2, 0,
	-1, 761,
	186, 2600,
	513, 2600,
	578, 2600,
	597, 2600,
	-2, 0,
	-1, 763,
	186, 2641,
	513, 2641,
	578, 2641,
	597, 2641,
	-2, 0,
	-1, 771,
	186, 2491,
	513, 2491,
	578, 2491,
	597, 2491,
	-2, 694,
	-1, 806,
	597, 2293,
	600, 2293,
	-2, 985,
	-1, 807,
	597, 2295,
	600, 2295,
	-2, 986,
	-1, 808,
	597, 2294,
	600, 2294,
	-2, 987,
	-1, 809,
	600, 2219,
	-2, 988,
	-1, 832,
	182, 258,
	-2, 0,
	-1, 856,
	43, 2266,
	-2, 0,
	-1, 857,
	550, 1274,
	-2, 1055,
	-1, 873,
	4, 1701,
	21, 1701,
	22, 1701,
	23, 1701,
	24, 1701,
	25, 1701,
	26, 1701,
	27, 1701,
	29, 1701,
	30, 1701,
	36, 1701,
	41, 1701,
	42, 1701,
	44, 1701,
	45, 1701,
	46, 1701,
	47, 1701,
	48, 1701,
	49, 1701,
	50, 1701,
	51, 1701,
	53, 1701,
	54, 1701,
	55, 1701,
	56, 1701,
	58, 1701,
	59, 1701,
	60, 1701,
	61, 1701,
	62, 1701,
	63, 1701,
	64, 1701,
	68, 1701,
	69, 1701,
	70, 1701,
	71, 1701,
	73, 1701,
	74, 1701,
	75, 1701,
	79, 1701,
	80, 1701,
	81, 1701,
	82, 1701,
	83, 1701,
	84, 1701,
	85, 1701,
	88, 1701,
	89, 1701,
	90, 1701,
	91, 1701,
	92, 1701,
	94, 1701,
	96, 1701,
	97, 1701,
	98, 1701,
	99, 1701,
	100, 1701,
	101, 1701,
	103, 1701,
	104, 1701,
	105, 1701,
	107, 1701,
	108, 1701,
	109, 1701,
	117, 1701,
	118, 1701,
	119, 1701,
	120, 1701,
	121, 1701,
	123, 1701,
	124, 1701,
	125, 1701,
	127, 1701,
	128, 1701,
	129, 1701,
	131, 1701,
	132, 1701,
	133, 1701,
	135, 1701,
	136, 1701,
	137, 1701,
	140, 1701,
	141, 1701,
	142, 1701,
	144, 1701,
	145, 1701,
	147, 1701,
	148, 1701,
	149, 1701,
	151, 1701,
	152, 1701,
	153, 1701,
	154, 1701,
	155, 1701,
	156, 1701,
	157, 1701,
	158, 1701,
	159, 1701,
	160, 1701,
	161, 1701,
	162, 1701,
	163, 1701,
	164, 1701,
	165, 1701,
	166, 1701,
	168, 1701,
	174, 1701,
	175, 1701,
	176, 1701,
	177, 1701,
	181, 1701,
	183, 1701,
	184, 1701,
	188, 1701,
	189, 1701,
	190, 1701,
	191, 1701,
	192, 1701,
	193, 1701,
	194, 1701,
	195, 1701,
	196, 1701,
	197, 1701,
	198, 1701,
	199, 1701,
	200, 1701,
	201, 1701,
	203, 1701,
	204, 1701,
	206, 1701,
	207, 1701,
	209, 1701,
	210, 1701,
	211, 1701,
	212, 1701,
	213, 1701,
	214, 1701,
	215, 1701,
	216, 1701,
	217, 1701,
	219, 1701,
	220, 1701,
	222, 1701,
	223, 1701,
	224, 1701,
	225, 1701,
	226, 1701,
	230, 1701,
	231, 1701,
	232, 1701,
	233, 1701,
	234, 1701,
	237, 1701,
	238, 1701,
	239, 1701,
	241, 1701,
	243, 1701,
	244, 1701,
	246, 1701,
	248, 1701,
	249, 1701,
	250, 1701,
	252, 1701,
	256, 1701,
	257, 1701,
	258, 1701,
	259, 1701,
	260, 1701,
	261, 1701,
	263, 1701,
	264, 1701,
	265, 1701,
	267, 1701,
	268, 1701,
	270, 1701,
	271, 1701,
	274, 1701,
	278, 1701,
	279, 1701,
	280, 1701,
	283, 1701,
	284, 1701,
	285, 1701,
	286, 1701,
	288, 1701,
	289, 1701,
	290, 1701,
	291, 1701,
	292, 1701,
	293, 1701,
	294, 1701,
	295, 1701,
	296, 1701,
	297, 1701,
	298, 1701,
	299, 1701,
	300, 1701,
	301, 1701,
	302, 1701,
	303, 1701,
	304, 1701,
	305, 1701,
	306, 1701,
	307, 1701,
	308, 1701,
	309, 1701,
	311, 1701,
	313, 1701,
	314, 1701,
	315, 1701,
	316, 1701,
	317, 1701,
	318, 1701,
	319, 1701,
	320, 1701,
	321, 1701,
	322, 1701,
	323, 1701,
	324, 1701,
	325, 1701,
	327, 1701,
	328, 1701,
	330, 1701,
	332, 1701,
	333, 1701,
	335, 1701,
	336, 1701,
	337, 1701,
	338, 1701,
	339, 1701,
	342, 1701,
	346, 1701,
	347, 1701,
	348, 1701,
	351, 1701,
	352, 1701,
	353, 1701,
	355, 1701,
	357, 1701,
	358, 1701,
	359, 1701,
	360, 1701,
	361, 1701,
	362, 1701,
	363, 1701,
	364, 1701,
	365, 1701,
	366, 1701,
	367, 1701,
	368, 1701,
	369, 1701,
	371, 1701,
	372, 1701,
	373, 1701,
	374, 1701,
	375, 1701,
	376, 1701,
	377, 1701,
	378, 1701,
	379, 1701,
	380, 1701,
	381, 1701,
	382, 1701,
	383, 1701,
	384, 1701,
	385, 1701,
	387, 1701,
	388, 1701,
	390, 1701,
	391, 1701,
	392, 1701,
	393, 1701,
	394, 1701,
	395, 1701,
	396, 1701,
	397, 1701,
	398, 1701,
	399, 1701,
	400, 1701,
	401, 1701,
	403, 1701,
	405, 1701,
	406, 1701,
	407, 1701,
	412, 1701,
	414, 1701,
	415, 1701,
	416, 1701,
	417, 1701,
	418, 1701,
	419, 1701,
	420, 1701,
	421, 1701,
	422, 1701,
	423, 1701,
	425, 1701,
	426, 1701,
	427, 1701,
	429, 1701,
	430, 1701,
	431, 1701,
	432, 1701,
	433, 1701,
	434, 1701,
	435, 1701,
	437, 1701,
	438, 1701,
	439, 1701,
	440, 1701,
	441, 1701,
	442, 1701,
	443, 1701,
	444, 1701,
	445, 1701,
	446, 1701,
	447, 1701,
	448, 1701,
	450, 1701,
	451, 1701,
	452, 1701,
	453, 1701,
	454, 1701,
	455, 1701,
	457, 1701,
	458, 1701,
	459, 1701,
	460, 1701,
	461, 1701,
	462, 1701,
	464, 1701,
	465, 1701,
	466, 1701,
	467, 1701,
	468, 1701,
	469, 1701,
	470, 1701,
	471, 1701,
	473, 1701,
	475, 1701,
	476, 1701,
	477, 1701,
	478, 1701,
	479, 1701,
	480, 1701,
	481, 1701,
	482, 1701,
	483, 1701,
	484, 1701,
	485, 1701,
	486, 1701,
	487, 1701,
	488, 1701,
	489, 1701,
	490, 1701,
	492, 1701,
	493, 1701,
	495, 1701,
	496, 1701,
	498, 1701,
	499, 1701,
	500, 1701,
	501, 1701,
	502, 1701,
	503, 1701,
	504, 1701,
	505, 1701,
	506, 1701,
	508, 1701,
	509, 1701,
	510, 1701,
	511, 1701,
	512, 1701,
	514, 1701,
	516, 1701,
	517, 1701,
	518, 1701,
	519, 1701,
	520, 1701,
	521, 1701,
	523, 1701,
	524, 1701,
	525, 1701,
	526, 1701,
	528, 1701,
	529, 1701,
	532, 1701,
	533, 1701,
	534, 1701,
	535, 1701,
	536, 1701,
	537, 1701,
	538, 1701,
	540, 1701,
	543, 1701,
	544, 1701,
	545, 1701,
	546, 1701,
	547, 1701,
	548, 1701,
	550, 1701,
	551, 1701,
	552, 1701,
	553, 1701,
	555, 1701,
	560, 1701,
	561, 1701,
	562, 1701,
	563, 1701,
	564, 1701,
	565, 1701,
	-2, 0,
	-1, 883,
	260, 405,
	-2, 0,
	-1, 955,
	392, 868,
	455, 868,
	496, 868,
	518, 868,
	-2, 0,
	-1, 956,
	392, 867,
	455, 867,
	496, 867,
	518, 867,
	-2, 804,
	-1, 960,
	1, 919,
	594, 919,
	596, 919,
	598, 919,
	-2, 0,
	-1, 962,
	1, 842,
	594, 842,
	596, 842,
	598, 842,
	-2, 0,
	-1, 963,
	1, 846,
	594, 846,
	596, 846,
	598, 846,
	-2, 0,
	-1, 964,
	1, 984,
	182, 984,
	594, 984,
	596, 984,
	598, 984,
	-2, 0,
	-1, 972,
	1, 873,
	594, 873,
	596, 873,
	598, 873,
	-2, 0,
	-1, 979,
	1, 919,
	594, 919,
	596, 919,
	598, 919,
	-2, 0,
	-1, 980,
	1, 921,
	594, 921,
	596, 921,
	598, 921,
	-2, 0,
	-1, 981,
	1, 924,
	594, 924,
	596, 924,
	598, 924,
	-2, 0,
	-1, 987,
	1, 948,
	594, 948,
	596, 948,
	598, 948,
	-2, 0,
	-1, 988,
	1, 950,
	594, 950,
	596, 950,
	598, 950,
	-2, 0,
	-1, 993,
	1, 978,
	594, 978,
	596, 978,
	598, 978,
	-2, 0,
	-1, 1042,
	169, 1575,
	182, 1575,
	273, 1575,
	340, 1575,
	-2, 1511,
	-1, 1057,
	169, 1574,
	182, 1574,
	273, 1574,
	340, 1574,
	-2, 1508,
	-1, 1084,
	597, 2292,
	-2, 702,
	-1, 1113,
	5, 2284,
	595, 2282,
	-2, 2273,
	-1, 1121,
	5, 2305,
	595, 2302,
	-2, 2293,
	-1, 1122,
	5, 2306,
	595, 2303,
	-2, 2294,
	-1, 1130,
	597, 2290,
	-2, 2272,
	-1, 1131,
	595, 2724,
	-2, 2291,
	-1, 1154,
	595, 2723,
	-2, 2307,
	-1, 1155,
	5, 1776,
	-2, 2694,
	-1, 1156,
	5, 1777,
	-2, 2695,
	-1, 1157,
	5, 1778,
	-2, 2709,
	-1, 1158,
	5, 1779,
	-2, 2673,
	-1, 1159,
	5, 1780,
	-2, 2707,
	-1, 1160,
	5, 1788,
	-2, 2686,
	-1, 1161,
	5, 1775,
	-2, 2682,
	-1, 1162,
	5, 1775,
	-2, 2681,
	-1, 1163,
	5, 1775,
	-2, 2700,
	-1, 1164,
	5, 1786,
	-2, 2675,
	-1, 1165,
	5, 1791,
	-2, 2674,
	-1, 1166,
	5, 1793,
	-2, 2719,
	-1, 1169,
	5, 1815,
	-2, 2712,
	-1, 1170,
	5, 1807,
	-2, 2713,
	-1, 1171,
	5, 1815,
	-2, 2714,
	-1, 1172,
	5, 1811,
	-2, 2715,
	-1, 1173,
	5, 1761,
	-2, 2687,
	-1, 1174,
	5, 1762,
	-2, 2688,
	-1, 1175,
	5, 1763,
	-2, 2676,
	-1, 1203,
	5, 1798,
	-2, 2720,
	-1, 1204,
	5, 1799,
	-2, 2710,
	-1, 1205,
	5, 1800,
	551, 1800,
	-2, 2677,
	-1, 1206,
	5, 1801,
	551, 1801,
	-2, 2678,
	-1, 1243,
	595, 2302,
	-2, 2293,
	-1, 1244,
	595, 2303,
	-2, 2294,
	-1, 1344,
	186, 2641,
	513, 2641,
	578, 2641,
	597, 2641,
	-2, 0,
	-1, 1347,
	1, 679,
	598, 679,
	-2, 1423,
	-1, 1475,
	359, 2267,
	414, 2267,
	457, 2267,
	588, 2267,
	-2, 2257,
	-1, 1486,
	599, 2267,
	-2, 2269,
	-1, 1494,
	1, 1271,
	419, 1235,
	457, 1235,
	572, 1235,
	594, 1271,
	596, 1271,
	598, 1271,
	-2, 1560,
	-1, 1500,
	202, 1368,
	221, 1368,
	427, 1368,
	-2, 0,
	-1, 1545,
	399, 1054,
	550, 1054,
	-2, 400,
	-1, 1562,
	43, 2265,
	-2, 1020,
	-1, 1569,
	1, 1271,
	594, 1271,
	596, 1271,
	598, 1271,
	-2, 1560,
	-1, 1577,
	4, 1296,
	21, 1296,
	22, 1296,
	23, 1296,
	24, 1296,
	25, 1296,
	26, 1296,
	27, 1296,
	29, 1296,
	30, 1296,
	36, 1296,
	41, 1296,
	42, 1296,
	44, 1296,
	45, 1296,
	46, 1296,
	47, 1296,
	48, 1296,
	49, 1296,
	50, 1296,
	51, 1296,
	53, 1296,
	54, 1296,
	55, 1296,
	56, 1296,
	58, 1296,
	59, 1296,
	60, 1296,
	61, 1296,
	62, 1296,
	63, 1296,
	64, 1296,
	68, 1296,
	69, 1296,
	70, 1296,
	71, 1296,
	73, 1296,
	74, 1296,
	75, 1296,
	79, 1296,
	80, 1296,
	81, 1296,
	82, 1296,
	83, 1296,
	84, 1296,
	85, 1296,
	88, 1296,
	89, 1296,
	90, 1296,
	91, 1296,
	92, 1296,
	94, 1296,
	96, 1296,
	97, 1296,
	98, 1296,
	99, 1296,
	100, 1296,
	101, 1296,
	103, 1296,
	104, 1296,
	105, 1296,
	107, 1296,
	108, 1296,
	109, 1296,
	117, 1296,
	118, 1296,
	119, 1296,
	120, 1296,
	121, 1296,
	123, 1296,
	124, 1296,
	125, 1296,
	127, 1296,
	128, 1296,
	129, 1296,
	131, 1296,
	132, 1296,
	133, 1296,
	135, 1296,
	136, 1296,
	137, 1296,
	140, 1296,
	141, 1296,
	142, 1296,
	144, 1296,
	145, 1296,
	147, 1296,
	148, 1296,
	149, 1296,
	151, 1296,
	152, 1296,
	153, 1296,
	154, 1296,
	155, 1296,
	156, 1296,
	157, 1296,
	158, 1296,
	159, 1296,
	160, 1296,
	161, 1296,
	162, 1296,
	163, 1296,
	164, 1296,
	165, 1296,
	166, 1296,
	174, 1296,
	175, 1296,
	176, 1296,
	177, 1296,
	181, 1296,
	183, 1296,
	184, 1296,
	188, 1296,
	189, 1296,
	190, 1296,
	191, 1296,
	192, 1296,
	193, 1296,
	194, 1296,
	195, 1296,
	196, 1296,
	197, 1296,
	198, 1296,
	199, 1296,
	200, 1296,
	201, 1296,
	203, 1296,
	204, 1296,
	206, 1296,
	207, 1296,
	209, 1296,
	210, 1296,
	211, 1296,
	212, 1296,
	213, 1296,
	214, 1296,
	215, 1296,
	216, 1296,
	217, 1296,
	219, 1296,
	220, 1296,
	222, 1296,
	223, 1296,
	224, 1296,
	225, 1296,
	226, 1296,
	231, 1296,
	232, 1296,
	233, 1296,
	234, 1296,
	237, 1296,
	238, 1296,
	239, 1296,
	241, 1296,
	243, 1296,
	244, 1296,
	246, 1296,
	248, 1296,
	249, 1296,
	250, 1296,
	252, 1296,
	256, 1296,
	257, 1296,
	258, 1296,
	259, 1296,
	260, 1296,
	261, 1296,
	263, 1296,
	264, 1296,
	265, 1296,
	267, 1296,
	268, 1296,
	270, 1296,
	271, 1296,
	274, 1296,
	278, 1296,
	279, 1296,
	280, 1296,
	283, 1296,
	284, 1296,
	285, 1296,
	286, 1296,
	288, 1296,
	289, 1296,
	290, 1296,
	291, 1296,
	292, 1296,
	293, 1296,
	294, 1296,
	295, 1296,
	296, 1296,
	297, 1296,
	298, 1296,
	299, 1296,
	300, 1296,
	301, 1296,
	302, 1296,
	303, 1296,
	304, 1296,
	305, 1296,
	306, 1296,
	307, 1296,
	308, 1296,
	309, 1296,
	311, 1296,
	313, 1296,
	314, 1296,
	315, 1296,
	316, 1296,
	317, 1296,
	318, 1296,
	319, 1296,
	320, 1296,
	321, 1296,
	322, 1296,
	323, 1296,
	324, 1296,
	325, 1296,
	327, 1296,
	328, 1296,
	332, 1296,
	333, 1296,
	335, 1296,
	336, 1296,
	337, 1296,
	338, 1296,
	339, 1296,
	342, 1296,
	344, 1296,
	346, 1296,
	347, 1296,
	348, 1296,
	351, 1296,
	352, 1296,
	353, 1296,
	355, 1296,
	357, 1296,
	358, 1296,
	359, 1296,
	360, 1296,
	361, 1296,
	362, 1296,
	363, 1296,
	364, 1296,
	365, 1296,
	366, 1296,
	367, 1296,
	368, 1296,
	369, 1296,
	371, 1296,
	372, 1296,
	373, 1296,
	374, 1296,
	375, 1296,
	376, 1296,
	377, 1296,
	378, 1296,
	379, 1296,
	380, 1296,
	381, 1296,
	382, 1296,
	383, 1296,
	384, 1296,
	385, 1296,
	387, 1296,
	388, 1296,
	390, 1296,
	391, 1296,
	392, 1296,
	393, 1296,
	394, 1296,
	395, 1296,
	396, 1296,
	397, 1296,
	398, 1296,
	399, 1296,
	400, 1296,
	401, 1296,
	403, 1296,
	405, 1296,
	406, 1296,
	407, 1296,
	412, 1296,
	414, 1296,
	415, 1296,
	416, 1296,
	417, 1296,
	418, 1296,
	419, 1296,
	420, 1296,
	421, 1296,
	422, 1296,
	423, 1296,
	425, 1296,
	426, 1296,
	427, 1296,
	429, 1296,
	430, 1296,
	431, 1296,
	432, 1296,
	433, 1296,
	434, 1296,
	435, 1296,
	437, 1296,
	438, 1296,
	439, 1296,
	440, 1296,
	441, 1296,
	442, 1296,
	443, 1296,
	444, 1296,
	445, 1296,
	446, 1296,
	447, 1296,
	448, 1296,
	450, 1296,
	451, 1296,
	452, 1296,
	453, 1296,
	454, 1296,
	455, 1296,
	457, 1296,
	458, 1296,
	459, 1296,
	460, 1296,
	461, 1296,
	462, 1296,
	464, 1296,
	465, 1296,
	466, 1296,
	467, 1296,
	468, 1296,
	469, 1296,
	470, 1296,
	471, 1296,
	473, 1296,
	475, 1296,
	476, 1296,
	477, 1296,
	478, 1296,
	479, 1296,
	480, 1296,
	481, 1296,
	482, 1296,
	483, 1296,
	484, 1296,
	485, 1296,
	486, 1296,
	487, 1296,
	488, 1296,
	489, 1296,
	490, 1296,
	492, 1296,
	493, 1296,
	495, 1296,
	496, 1296,
	498, 1296,
	499, 1296,
	500, 1296,
	501, 1296,
	502, 1296,
	503, 1296,
	504, 1296,
	505, 1296,
	506, 1296,
	508, 1296,
	509, 1296,
	510, 1296,
	511, 1296,
	512, 1296,
	514, 1296,
	516, 1296,
	517, 1296,
	518, 1296,
	519, 1296,
	520, 1296,
	521, 1296,
	523, 1296,
	524, 1296,
	525, 1296,
	526, 1296,
	528, 1296,
	529, 1296,
	532, 1296,
	533, 1296,
	534, 1296,
	535, 1296,
	536, 1296,
	537, 1296,
	538, 1296,
	540, 1296,
	543, 1296,
	544, 1296,
	545, 1296,
	546, 1296,
	547, 1296,
	548, 1296,
	550, 1296,
	551, 1296,
	552, 1296,
	553, 1296,
	555, 1296,
	560, 1296,
	561, 1296,
	562, 1296,
	563, 1296,
	564, 1296,
	565, 1296,
	-2, 0,
	-1, 1600,
	1, 545,
	594, 545,
	596, 545,
	598, 545,
	-2, 1531,
	-1, 1603,
	4, 2718,
	11, 2718,
	12, 2718,
	14, 2718,
	15, 2718,
	16, 2718,
	17, 2718,
	18, 2718,
	19, 2718,
	21, 2718,
	22, 2718,
	23, 2718,
	24, 2718,
	25, 2718,
	26, 2718,
	27, 2718,
	29, 2718,
	30, 2718,
	33, 2718,
	34, 2718,
	36, 2718,
	38, 2718,
	41, 2718,
	42, 2718,
	44, 2718,
	45, 2718,
	46, 2718,
	47, 2718,
	48, 2718,
	49, 2718,
	50, 2718,
	51, 2718,
	53, 2718,
	54, 2718,
	55, 2718,
	56, 2718,
	58, 2718,
	59, 2718,
	60, 2718,
	61, 2718,
	62, 2718,
	63, 2718,
	64, 2718,
	67, 2718,
	68, 2718,
	69, 2718,
	70, 2718,
	71, 2718,
	73, 2718,
	74, 2718,
	75, 2718,
	76, 2718,
	79, 2718,
	80, 2718,
	81, 2718,
	82, 2718,
	83, 2718,
	84, 2718,
	85, 2718,
	86, 2718,
	88, 2718,
	89, 2718,
	90, 2718,
	91, 2718,
	92, 2718,
	94, 2718,
	95, 2718,
	96, 2718,
	97, 2718,
	98, 2718,
	99, 2718,
	100, 2718,
	101, 2718,
	103, 2718,
	104, 2718,
	105, 2718,
	106, 2718,
	107, 2718,
	108, 2718,
	109, 2718,
	117, 2718,
	118, 2718,
	119, 2718,
	120, 2718,
	121, 2718,
	123, 2718,
	124, 2718,
	125, 2718,
	127, 2718,
	128, 2718,
	129, 2718,
	131, 2718,
	132, 2718,
	133, 2718,
	135, 2718,
	136, 2718,
	137, 2718,
	140, 2718,
	141, 2718,
	142, 2718,
	144, 2718,
	145, 2718,
	147, 2718,
	148, 2718,
	149, 2718,
	151, 2718,
	152, 2718,
	153, 2718,
	154, 2718,
	155, 2718,
	156, 2718,
	157, 2718,
	158, 2718,
	159, 2718,
	160, 2718,
	161, 2718,
	162, 2718,
	163, 2718,
	164, 2718,
	165, 2718,
	166, 2718,
	170, 2718,
	171, 2718,
	172, 2718,
	173, 2718,
	174, 2718,
	175, 2718,
	176, 2718,
	177, 2718,
	180, 2718,
	181, 2718,
	183, 2718,
	184, 2718,
	187, 2718,
	188, 2718,
	189, 2718,
	190, 2718,
	191, 2718,
	192, 2718,
	193, 2718,
	194, 2718,
	195, 2718,
	196, 2718,
	197, 2718,
	198, 2718,
	199, 2718,
	200, 2718,
	201, 2718,
	203, 2718,
	204, 2718,
	206, 2718,
	207, 2718,
	209, 2718,
	210, 2718,
	211, 2718,
	212, 2718,
	213, 2718,
	214, 2718,
	215, 2718,
	216, 2718,
	217, 2718,
	218, 2718,
	219, 2718,
	220, 2718,
	221, 2718,
	222, 2718,
	223, 2718,
	224, 2718,
	225, 2718,
	226, 2718,
	228, 2718,
	229, 2718,
	231, 2718,
	232, 2718,
	233, 2718,
	234, 2718,
	236, 2718,
	237, 2718,
	238, 2718,
	239, 2718,
	241, 2718,
	243, 2718,
	244, 2718,
	245, 2718,
	246, 2718,
	247, 2718,
	248, 2718,
	249, 2718,
	250, 2718,
	251, 2718,
	252, 2718,
	254, 2718,
	255, 2718,
	256, 2718,
	257, 2718,
	258, 2718,
	259, 2718,
	260, 2718,
	261, 2718,
	263, 2718,
	264, 2718,
	265, 2718,
	267, 2718,
	268, 2718,
	269, 2718,
	270, 2718,
	271, 2718,
	272, 2718,
	274, 2718,
	278, 2718,
	279, 2718,
	280, 2718,
	283, 2718,
	284, 2718,
	285, 2718,
	286, 2718,
	287, 2718,
	288, 2718,
	289, 2718,
	290, 2718,
	291, 2718,
	292, 2718,
	293, 2718,
	294, 2718,
	295, 2718,
	296, 2718,
	297, 2718,
	298, 2718,
	299, 2718,
	300, 2718,
	301, 2718,
	302, 2718,
	303, 2718,
	304, 2718,
	305, 2718,
	306, 2718,
	307, 2718,
	308, 2718,
	309, 2718,
	311, 2718,
	312, 2718,
	313, 2718,
	314, 2718,
	315, 2718,
	316, 2718,
	317, 2718,
	318, 2718,
	319, 2718,
	320, 2718,
	321, 2718,
	322, 2718,
	323, 2718,
	324, 2718,
	325, 2718,
	327, 2718,
	328, 2718,
	331, 2718,
	332, 2718,
	333, 2718,
	335, 2718,
	336, 2718,
	337, 2718,
	338, 2718,
	339, 2718,
	342, 2718,
	346, 2718,
	347, 2718,
	348, 2718,
	349, 2718,
	351, 2718,
	352, 2718,
	353, 2718,
	355, 2718,
	357, 2718,
	358, 2718,
	359, 2718,
	360, 2718,
	361, 2718,
	362, 2718,
	363, 2718,
	364, 2718,
	365, 2718,
	366, 2718,
	367, 2718,
	368, 2718,
	369, 2718,
	371, 2718,
	372, 2718,
	373, 2718,
	374, 2718,
	375, 2718,
	376, 2718,
	377, 2718,
	378, 2718,
	379, 2718,
	380, 2718,
	381, 2718,
	382, 2718,
	383, 2718,
	384, 2718,
	385, 2718,
	387, 2718,
	388, 2718,
	390, 2718,
	391, 2718,
	392, 2718,
	393, 2718,
	394, 2718,
	395, 2718,
	396, 2718,
	397, 2718,
	398, 2718,
	399, 2718,
	400, 2718,
	401, 2718,
	403, 2718,
	405, 2718,
	406, 2718,
	407, 2718,
	412, 2718,
	413, 2718,
	414, 2718,
	415, 2718,
	416, 2718,
	417, 2718,
	418, 2718,
	419, 2718,
	420, 2718,
	421, 2718,
	422, 2718,
	423, 2718,
	425, 2718,
	426, 2718,
	427, 2718,
	428, 2718,
	429, 2718,
	430, 2718,
	431, 2718,
	432, 2718,
	433, 2718,
	434, 2718,
	435, 2718,
	436, 2718,
	437, 2718,
	438, 2718,
	439, 2718,
	440, 2718,
	441, 2718,
	442, 2718,
	443, 2718,
	444, 2718,
	445, 2718,
	446, 2718,
	447, 2718,
	448, 2718,
	450, 2718,
	451, 2718,
	452, 2718,
	453, 2718,
	454, 2718,
	455, 2718,
	457, 2718,
	458, 2718,
	459, 2718,
	460, 2718,
	461, 2718,
	462, 2718,
	463, 2718,
	464, 2718,
	465, 2718,
	466, 2718,
	467, 2718,
	468, 2718,
	469, 2718,
	470, 2718,
	471, 2718,
	473, 2718,
	475, 2718,
	476, 2718,
	477, 2718,
	478, 2718,
	479, 2718,
	480, 2718,
	481, 2718,
	482, 2718,
	483, 2718,
	484, 2718,
	485, 2718,
	486, 2718,
	487, 2718,
	488, 2718,
	489, 2718,
	490, 2718,
	492, 2718,
	493, 2718,
	494, 2718,
	495, 2718,
	496, 2718,
	498, 2718,
	499, 2718,
	500, 2718,
	501, 2718,
	502, 2718,
	503, 2718,
	504, 2718,
	505, 2718,
	506, 2718,
	508, 2718,
	509, 2718,
	510, 2718,
	511, 2718,
	512, 2718,
	514, 2718,
	516, 2718,
	517, 2718,
	518, 2718,
	519, 2718,
	520, 2718,
	521, 2718,
	523, 2718,
	524, 2718,
	525, 2718,
	526, 2718,
	528, 2718,
	529, 2718,
	532, 2718,
	533, 2718,
	534, 2718,
	535, 2718,
	536, 2718,
	537, 2718,
	538, 2718,
	540, 2718,
	543, 2718,
	544, 2718,
	545, 2718,
	546, 2718,
	547, 2718,
	548, 2718,
	550, 2718,
	551, 2718,
	552, 2718,
	553, 2718,
	555, 2718,
	560, 2718,
	561, 2718,
	562, 2718,
	563, 2718,
	564, 2718,
	565, 2718,
	566, 2718,
	568, 2718,
	576, 2718,
	577, 2718,
	578, 2718,
	579, 2718,
	580, 2718,
	581, 2718,
	583, 2718,
	584, 2718,
	585, 2718,
	586, 2718,
	587, 2718,
	588, 2718,
	589, 2718,
	590, 2718,
	591, 2718,
	593, 2718,
	596, 2718,
	597, 2718,
	599, 2718,
	600, 2718,
	-2, 0,
	-1, 1608,
	186, 2600,
	513, 2600,
	578, 2600,
	597, 2600,
	-2, 0,
	-1, 1657,
	392, 868,
	455, 868,
	496, 868,
	518, 868,
	-2, 0,
	-1, 1668,
	1, 1368,
	594, 1368,
	596, 1368,
	598, 1368,
	-2, 0,
	-1, 1685,
	1, 863,
	594, 863,
	596, 863,
	598, 863,
	-2, 0,
	-1, 1686,
	1, 906,
	594, 906,
	596, 906,
	598, 906,
	-2, 0,
	-1, 1687,
	1, 914,
	594, 914,
	596, 914,
	598, 914,
	-2, 0,
	-1, 1690,
	1, 872,
	594, 872,
	596, 872,
	598, 872,
	-2, 0,
	-1, 1692,
	1, 878,
	594, 878,
	596, 878,
	598, 878,
	-2, 0,
	-1, 1695,
	1, 874,
	594, 874,
	596, 874,
	598, 874,
	-2, 0,
	-1, 1700,
	1, 888,
	594, 888,
	596, 888,
	598, 888,
	-2, 0,
	-1, 1731,
	1, 2583,
	594, 2583,
	596, 2583,
	597, 2583,
	598, 2583,
	-2, 0,
	-1, 1735,
	1, 959,
	594, 959,
	596, 959,
	598, 959,
	-2, 0,
	-1, 1750,
	1, 1418,
	598, 1418,
	-2, 1423,
	-1, 1753,
	169, 1574,
	182, 1574,
	273, 1574,
	340, 1574,
	-2, 1512,
	-1, 1853,
	150, 1533,
	169, 1533,
	182, 1533,
	240, 1533,
	273, 1533,
	340, 1533,
	350, 1533,
	530, 1533,
	-2, 1980,
	-1, 1913,
	596, 2153,
	-2, 0,
	-1, 1948,
	150, 1533,
	169, 1533,
	182, 1533,
	240, 1533,
	273, 1533,
	340, 1533,
	350, 1533,
	530, 1533,
	-2, 1662,
	-1, 1983,
	513, 2597,
	597, 2597,
	600, 2597,
	-2, 0,
	-1, 2000,
	595, 1803,
	-2, 1791,
	-1, 2032,
	186, 2597,
	597, 2597,
	600, 2597,
	-2, 0,
	-1, 2080,
	1, 681,
	598, 681,
	-2, 1423,
	-1, 2213,
	221, 259,
	-2, 2301,
	-1, 2214,
	221, 260,
	-2, 308,
	-1, 2318,
	1, 865,
	594, 865,
	596, 865,
	598, 865,
	-2, 0,
	-1, 2319,
	1, 908,
	594, 908,
	596, 908,
	598, 908,
	-2, 0,
	-1, 2320,
	1, 916,
	594, 916,
	596, 916,
	598, 916,
	-2, 0,
	-1, 2321,
	1, 961,
	594, 961,
	596, 961,
	598, 961,
	-2, 0,
	-1, 2361,
	1, 890,
	594, 890,
	596, 890,
	598, 890,
	-2, 0,
	-1, 2379,
	1, 944,
	594, 944,
	596, 944,
	598, 944,
	-2, 0,
	-1, 2424,
	434, 1601,
	435, 1601,
	-2, 1836,
	-1, 2455,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1856,
	-1, 2456,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1857,
	-1, 2457,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1858,
	-1, 2458,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1859,
	-1, 2459,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1860,
	-1, 2460,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1861,
	-1, 2461,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1862,
	-1, 2462,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1863,
	-1, 2474,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1875,
	-1, 2475,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1876,
	-1, 2476,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1877,
	-1, 2480,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1884,
	-1, 2486,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1888,
	-1, 2488,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1896,
	-1, 2489,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1897,
	-1, 2490,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1898,
	-1, 2491,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1899,
	-1, 2663,
	5, 2305,
	186, 2164,
	595, 2302,
	-2, 2293,
	-1, 2664,
	186, 2165,
	-2, 2669,
	-1, 2665,
	186, 2166,
	-2, 2490,
	-1, 2666,
	186, 2167,
	-2, 2375,
	-1, 2667,
	186, 2168,
	-2, 2430,
	-1, 2668,
	186, 2169,
	-2, 2475,
	-1, 2669,
	186, 2170,
	-2, 2595,
	-1, 2670,
	186, 2171,
	-2, 1963,
	-1, 2741,
	1, 1663,
	2, 1663,
	106, 1663,
	150, 1663,
	169, 1663,
	182, 1663,
	187, 1663,
	205, 1663,
	208, 1663,
	236, 1663,
	240, 1663,
	251, 1663,
	269, 1663,
	273, 1663,
	312, 1663,
	340, 1663,
	344, 1663,
	350, 1663,
	424, 1663,
	428, 1663,
	530, 1663,
	541, 1663,
	557, 1663,
	558, 1663,
	559, 1663,
	569, 1663,
	594, 1663,
	596, 1663,
	598, 1663,
	600, 1663,
	-2, 1662,
	-1, 2754,
	595, 2274,
	-2, 2288,
	-1, 2756,
	1, 325,
	557, 325,
	-2, 1560,
	-1, 2784,
	595, 1802,
	-2, 1792,
	-1, 2969,
	1, 1271,
	419, 1235,
	457, 1235,
	572, 1235,
	594, 1271,
	596, 1271,
	598, 1271,
	-2, 1560,
	-1, 3148,
	345, 1604,
	-2, 2708,
	-1, 3149,
	345, 1605,
	-2, 2580,
	-1, 3153,
	434, 2230,
	435, 2230,
	-2, 1961,
	-1, 3154,
	434, 2234,
	435, 2234,
	-2, 1962,
	-1, 3155,
	434, 2231,
	435, 2231,
	-2, 1961,
	-1, 3156,
	434, 2235,
	435, 2235,
	-2, 1962,
	-1, 3169,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1886,
	-1, 3170,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1890,
	-1, 3176,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1892,
	-1, 3399,
	1, 678,
	594, 678,
	596, 678,
	598, 678,
	-2, 1423,
	-1, 3569,
	43, 2265,
	-2, 1021,
	-1, 3574,
	1, 1271,
	594, 1271,
	596, 1271,
	598, 1271,
	-2, 1560,
	-1, 3682,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1894,
	-1, 3689,
	245, 0,
	247, 0,
	331, 0,
	-2, 1913,
	-1, 3757,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1942,
	-1, 3758,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1943,
	-1, 3759,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1944,
	-1, 3763,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1948,
	-1, 3764,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1949,
	-1, 3765,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1950,
	-1, 3812,
	595, 2275,
	-2, 2289,
	-1, 3986,
	597, 2826,
	-2, 1486,
	-1, 4044,
	245, 0,
	247, 0,
	331, 0,
	-2, 1914,
	-1, 4047,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1917,
	-1, 4048,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1919,
	-1, 4146,
	597, 2290,
	-2, 1306,
	-1, 4299,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1918,
	-1, 4300,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1920,
	-1, 4311,
	245, 0,
	-2, 1953,
	-1, 4498,
	245, 0,
	-2, 1954,
	-1, 4694,
	50, 0,
	218, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 2672,
}

const sqlPrivate = 57344

const sqlLast = 131978

var sqlAct = [...]int{
	270, 4888, 4687, 3558, 2847, 4529, 4796, 3307, 4750, 4809,
	3040, 3053, 4565, 4537, 4693, 3557, 4675, 4704, 4825, 4586,
	2128, 4686, 4142, 4662, 2210, 4360, 4561, 4640, 4622, 4643,
	4763, 4027, 4706, 4451, 4705, 2285, 4427, 2891, 4405, 4342,
	1247, 3722, 4216, 4420, 2913, 4502, 4255, 1113, 4692, 4191,
	4250, 4365, 4320, 3674, 1316, 2434, 1236, 4288, 3978, 1067,
	3421, 3591, 3970, 4237, 4436, 1120, 1309, 4239, 4230, 4143,
	1320, 698, 3162, 2696, 3906, 808, 4123, 3483, 2062, 2503,
	4465, 2294, 1762, 4260, 1058, 2926, 2049, 3553, 3585, 3951,
	3543, 3933, 3410, 2136, 3935, 1624, 2442, 3424, 3062, 769,
	1380, 808, 4316, 3632, 3630, 1987, 3029, 3075, 2258, 3351,
	3815, 3010, 2999, 3536, 3064, 3535, 3330, 3322, 4083, 1472,
	885, 1954, 3024, 1311, 3290, 3072, 709, 2292, 3055, 3061,
	881, 4, 4026, 3311, 1923, 2435, 3026, 2199, 2197, 3041,
	4797, 2940, 3313, 2147, 3443, 2849, 2439, 1899, 2734, 2976,
	3783, 1988, 1066, 178, 1831, 1861, 4503, 3289, 2516, 3418,
	3146, 1479, 2736, 3071, 876, 2583, 1314, 803, 2733, 1564,
	949, 2581, 3003, 2945, 764, 2198, 1227, 2174, 1302, 2181,
	1509, 1117, 2193, 3011, 1362, 264, 1665, 2116, 2120, 2714,
	1750, 1122, 2060, 2572, 3358, 263, 2423, 1943, 2106, 1924,
	2500, 2037, 2406, 1288, 2404, 2767, 742, 3555, 1601, 3034,
	2245, 1567, 685, 2890, 2872, 4587, 707, 805, 4810, 809,
	3065, 108, 2693, 810, 1940, 2766, 2575, 2835, 1349, 1933,
	1622, 1894, 3927, 1230, 2704, 2723, 1209, 1244, 2553, 2659,
	1845, 187, 2625, 1763, 1764, 1700, 178, 2405, 1299, 188,
	750, 2207, 2407, 762, 1226, 2244, 1504, 1592, 2271, 2135,
	814, 1119, 1685, 1599, 2035, 4751, 2428, 1098, 2038, 702,
	817, 44, 43, 41, 32, 30, 28, 1769, 725, 1207,
	798, 1232, 857, 3199, 1242, 699, 814, 710, 1749, 970,
	1515, 3797, 3193, 3798, 858, 3309, 817, 4901, 2051, 2051,
	877, 2713, 1239, 4891, 1508, 1062, 4731, 3610, 4875, 73,
	2051, 2051, 2713, 3610, 2051, 4104, 2051, 2051, 900, 1096,
	4874, 4864, 4335, 2219, 2713, 2219, 74, 73, 4845, 880,
	879, 4843, 4364, 4782, 3601, 4364, 4739, 2219, 3600, 4728,
	4740, 1062, 78, 2713, 74, 3260, 3261, 2219, 4726, 4723,
	4720, 4690, 2713, 4724, 4721, 2219, 2219, 1052, 4689, 4688,
	78, 4683, 2219, 2072, 4682, 2072, 4673, 4671, 2072, 3161,
	4364, 4364, 4668, 1777, 1778, 4332, 4439, 4638, 2713, 1224,
	4611, 4364, 87, 4604, 2775, 4603, 4598, 2713, 3383, 2713,
	4364, 1210, 1210, 4597, 4591, 4557, 3381, 4364, 2219, 4207,
	87, 4500, 4482, 1780, 4479, 2775, 4013, 4612, 2219, 4476,
	4429, 1063, 4383, 4364, 4430, 4382, 2219, 4371, 3366, 2219,
	1043, 2219, 883, 2706, 4504, 4495, 1777, 1778, 1042, 1810,
	1811, 1812, 1821, 1822, 1823, 4370, 107, 4483, 1779, 4364,
	883, 93, 104, 4363, 4439, 2072, 4327, 4364, 1814, 1808,
	2219, 4301, 49, 1358, 107, 2775, 1780, 93, 1266, 93,
	104, 3787, 2069, 4279, 4268, 1827, 4186, 2072, 3610, 2705,
	2713, 4169, 1057, 3260, 3261, 2713, 4046, 3994, 2796, 3988,
	2775, 3627, 1833, 3627, 2293, 3949, 3807, 1259, 1358, 3950,
	3808, 1779, 2529, 2530, 2531, 2548, 2549, 2550, 1238, 3805,
	94, 1799, 3790, 3806, 3706, 2069, 2713, 3702, 2219, 1211,
	1796, 2713, 2551, 3626, 3266, 4248, 3617, 3627, 94, 3787,
	3618, 3306, 3301, 4207, 3300, 2713, 2713, 1691, 2713, 3251,
	3249, 3241, 3239, 3252, 3250, 3242, 2713, 3210, 3208, 3079,
	2771, 2713, 1785, 2072, 3209, 1833, 3051, 3050, 2819, 2774,
	2281, 2281, 2713, 2775, 2764, 2713, 1240, 2758, 2713, 2069,
	1260, 2219, 3260, 3261, 2541, 2795, 2712, 2280, 4170, 234,
	2713, 2281, 4013, 2537, 1260, 1213, 3618, 1214, 2916, 2140,
	2834, 2219, 2085, 1124, 2050, 1802, 1803, 1804, 1805, 2066,
	3005, 3198, 73, 3260, 3261, 1785, 2218, 2936, 2832, 1919,
	1503, 3889, 3677, 3651, 1941, 2186, 2750, 1667, 3602, 74,
	2749, 3260, 3261, 2748, 2747, 2746, 1215, 236, 1212, 1051,
	1050, 3276, 1049, 1048, 1047, 78, 2773, 3603, 1508, 1046,
	1045, 1041, 1040, 1818, 1039, 1631, 1828, 3275, 2354, 1038,
	1037, 234, 3266, 1807, 1809, 3120, 97, 1036, 2542, 2543,
	2544, 2545, 1035, 1034, 1033, 2052, 2052, 1032, 2536, 1031,
	1824, 1030, 1825, 1029, 97, 87, 235, 2052, 2052, 1794,
	1795, 2052, 1028, 2052, 2052, 1027, 1026, 1025, 1024, 228,
	1006, 947, 1617, 946, 945, 2578, 944, 1816, 229, 236,
	943, 942, 941, 940, 1830, 939, 938, 937, 1529, 186,
	100, 1523, 1800, 103, 936, 883, 935, 1517, 934, 933,
	932, 931, 930, 929, 928, 189, 927, 186, 100, 107,
	926, 103, 1830, 925, 93, 104, 924, 1516, 923, 234,
	922, 3266, 2546, 2547, 2608, 921, 2069, 884, 235, 920,
	919, 918, 149, 1325, 1122, 234, 1826, 234, 3600, 3276,
	917, 916, 915, 914, 913, 884, 903, 902, 149, 898,
	149, 897, 3266, 891, 1815, 2539, 1635, 890, 875, 874,
	3277, 1122, 1122, 831, 2579, 1830, 830, 236, 1777, 1778,
	3266, 829, 828, 94, 820, 819, 818, 189, 1383, 784,
	2594, 775, 1383, 236, 774, 236, 773, 756, 258, 1325,
	1863, 257, 1260, 153, 256, 255, 254, 253, 1780, 252,
	2069, 251, 250, 249, 248, 1517, 247, 246, 190, 245,
	244, 153, 1830, 1122, 243, 1122, 235, 1122, 1806, 242,
	1366, 1367, 4262, 1325, 2219, 2806, 190, 2705, 3276, 228,
	3037, 241, 235, 1779, 235, 1353, 2050, 2069, 229, 240,
	2066, 1801, 2795, 2399, 239, 228, 2580, 228, 2577, 1325,
	1487, 238, 1517, 237, 229, 4099, 229, 4058, 3829, 3276,
	1621, 1482, 1260, 3801, 3628, 189, 3354, 1333, 1819, 1325,
	3221, 3204, 3195, 3103, 2986, 3019, 1325, 3276, 2779, 2755,
	2740, 189, 3304, 878, 1122, 2592, 1122, 1902, 3277, 2114,
	1325, 1065, 2071, 1967, 1901, 1944, 1122, 1517, 1122, 1832,
	1528, 1830, 1872, 1522, 2540, 1511, 1369, 3271, 3269, 3270,
	3262, 3263, 3264, 3265, 3267, 3268, 1246, 1573, 1576, 97,
	2288, 1905, 3305, 1776, 1507, 4711, 1902, 4691, 3260, 3261,
	1293, 1296, 1830, 1901, 3260, 3261, 1306, 1785, 1781, 1782,
	1783, 1784, 1786, 1787, 1347, 1325, 4670, 4572, 4486, 1864,
	1830, 1862, 4507, 1376, 1492, 1469, 1474, 4492, 4355, 1477,
	1900, 4484, 1832, 4315, 234, 1122, 4269, 4247, 1122, 4110,
	4081, 1817, 186, 100, 4080, 4074, 103, 3277, 4073, 4072,
	4065, 1791, 1792, 1798, 1820, 1797, 1793, 814, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 817, 4064, 4062,
	2582, 4625, 234, 4057, 2287, 1342, 4054, 4053, 3277, 3954,
	884, 3948, 236, 1562, 3833, 149, 3832, 3831, 3811, 3778,
	1636, 1506, 178, 178, 3777, 1505, 3277, 4264, 3776, 3698,
	3693, 3349, 1579, 3297, 1604, 1606, 3269, 3270, 3262, 3263,
	3264, 3265, 3267, 3268, 2526, 2527, 2528, 2552, 2538, 2532,
	236, 2534, 2535, 2533, 2520, 2521, 2522, 2523, 2524, 2525,
	3288, 235, 3259, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1693, 234, 3256, 228, 234, 153, 3255, 3887, 3253,
	3248, 3247, 1353, 229, 3246, 1353, 3243, 3240, 3220, 1865,
	1063, 190, 3203, 3196, 3194, 3052, 1122, 3266, 1870, 235,
	2741, 2565, 1122, 3266, 1776, 1863, 1223, 2226, 2224, 1775,
	189, 1641, 228, 4895, 2261, 4835, 2576, 1754, 1595, 234,
	236, 229, 3021, 236, 3271, 3269, 3270, 3262, 3263, 3264,
	3265, 3267, 3268, 4834, 3955, 234, 2777, 4798, 234, 4749,
	4747, 1248, 3724, 4630, 1322, 4564, 4548, 2788, 189, 4545,
	4544, 4543, 4522, 234, 4506, 4505, 1709, 3270, 3262, 3263,
	3264, 3265, 3267, 3268, 234, 4480, 4464, 236, 4463, 235,
	2506, 4449, 235, 4446, 1748, 1616, 3262, 3263, 3264, 3265,
	3267, 3268, 228, 236, 4445, 228, 236, 1630, 3302, 4440,
	4379, 229, 4350, 4313, 229, 4296, 4295, 4276, 4275, 4233,
	4208, 236, 4098, 234, 4079, 4508, 3346, 1122, 1122, 1122,
	4014, 4008, 236, 1122, 1755, 1852, 235, 4005, 189, 3875,
	1244, 189, 1244, 3874, 3857, 3856, 3854, 3793, 3781, 228,
	3688, 1850, 235, 3629, 3611, 235, 1658, 1383, 229, 3577,
	3500, 1921, 3456, 3423, 3375, 228, 1122, 3225, 228, 808,
	235, 236, 3224, 1694, 229, 2005, 808, 229, 3373, 1325,
	3219, 235, 3955, 228, 3185, 189, 2512, 1242, 2998, 1242,
	1908, 1907, 229, 1906, 228, 1903, 1895, 1830, 4263, 1893,
	2786, 189, 2785, 229, 189, 1239, 1930, 1239, 2752, 1974,
	2745, 2711, 1751, 2590, 1849, 1966, 1759, 1922, 1043, 3036,
	235, 1758, 1917, 1916, 1915, 1914, 1042, 234, 1913, 1904,
	189, 1912, 1911, 228, 234, 1910, 1753, 1063, 2607, 1978,
	1909, 1975, 229, 3020, 1890, 1325, 1889, 1888, 1772, 1773,
	1887, 1886, 1122, 1885, 1884, 1883, 1325, 1882, 234, 1881,
	1880, 1879, 1927, 1928, 1878, 1783, 1784, 1786, 1787, 189,
	1777, 1778, 1593, 1122, 1877, 236, 1876, 1865, 1851, 1848,
	1383, 1210, 236, 1843, 1951, 1341, 1264, 1255, 4236, 2130,
	2056, 4106, 1598, 2058, 2593, 4050, 178, 3828, 3804, 2063,
	1780, 3796, 3207, 2065, 1896, 1897, 236, 2743, 2068, 2103,
	4333, 4108, 3827, 1864, 3371, 1846, 3260, 3261, 3606, 1962,
	2105, 4172, 4832, 1365, 235, 2078, 2105, 4824, 2914, 4546,
	4441, 235, 2112, 2289, 4432, 1779, 1353, 228, 1971, 1970,
	1952, 2105, 4431, 1973, 228, 4267, 229, 4210, 1363, 2077,
	1984, 4209, 4171, 229, 814, 235, 4437, 2033, 4101, 4017,
	4016, 814, 1942, 1063, 817, 2097, 2096, 4015, 228, 2105,
	2107, 817, 3799, 189, 3613, 1949, 3612, 229, 2895, 4707,
	189, 4778, 4776, 1358, 3958, 1944, 1979, 3675, 1364, 1657,
	1902, 2943, 2140, 2028, 1358, 2183, 39, 1901, 1920, 2591,
	1746, 1238, 2091, 1238, 189, 1359, 2054, 1022, 3492, 3901,
	3459, 1358, 1325, 1325, 3245, 1961, 1960, 1959, 1957, 1956,
	1955, 1946, 1383, 3262, 3263, 3264, 3265, 3267, 3268, 2941,
	3244, 3264, 3265, 3267, 3268, 4487, 3167, 2877, 1361, 1710,
	1985, 3872, 3560, 3622, 3559, 2080, 3425, 2200, 4485, 2310,
	1666, 1874, 1023, 4761, 2286, 4428, 4735, 4716, 4703, 1240,
	3544, 1240, 3076, 1667, 2201, 3962, 3945, 3903, 2578, 1885,
	1885, 4354, 3898, 3880, 3648, 3397, 4317, 3309, 3726, 2573,
	2784, 2168, 1918, 2173, 4712, 1898, 2178, 2100, 3551, 3213,
	2922, 2255, 1572, 1499, 2874, 2076, 1336, 2933, 1292, 4725,
	4722, 3596, 2930, 2928, 3849, 4538, 1645, 2211, 2216, 2074,
	3102, 4251, 4637, 3401, 4518, 3428, 1325, 3867, 1325, 3059,
	1325, 4374, 3033, 1355, 2083, 3527, 4346, 4779, 4780, 4377,
	4373, 870, 4352, 3916, 3669, 4157, 1325, 1325, 2108, 2098,
	1597, 4401, 4154, 2851, 2942, 4159, 1539, 1325, 1547, 2820,
	2921, 4713, 4890, 1689, 2873, 1020, 4552, 2579, 2838, 1325,
	4814, 1325, 1325, 1325, 1707, 2148, 2146, 2367, 4394, 4385,
	1018, 1061, 2365, 2836, 2838, 1016, 1014, 1011, 4200, 4199,
	3914, 3913, 1501, 2203, 2204, 808, 2205, 3905, 2152, 2836,
	2296, 2262, 3895, 3894, 1002, 2309, 2251, 3892, 3891, 814,
	3879, 3915, 2102, 2167, 1360, 3844, 3843, 1122, 1871, 817,
	3533, 3532, 2778, 3365, 2081, 1598, 2319, 3218, 2256, 1222,
	2092, 3217, 3852, 1708, 2414, 3216, 3215, 2268, 2978, 3171,
	2939, 2938, 2935, 1506, 2924, 1548, 871, 1505, 2912, 2580,
	2101, 2577, 1122, 2291, 2911, 2149, 2905, 2904, 2903, 2882,
	2881, 2842, 2177, 2166, 2765, 2487, 2854, 1688, 1752, 3403,
	2621, 1060, 1356, 2620, 2314, 1706, 2444, 2276, 3030, 4294,
	2217, 1357, 2879, 2140, 2235, 1365, 1122, 2792, 1122, 2320,
	1585, 2769, 1584, 2412, 4116, 1122, 1643, 748, 2005, 2005,
	1383, 1543, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 2302, 1122,
	2278, 1122, 1122, 1122, 1122, 2237, 2265, 1063, 2236, 1063,
	1364, 4375, 1359, 2137, 2398, 4153, 4347, 4115, 3649, 2414,
	4138, 1595, 2153, 2273, 2270, 2273, 2416, 1122, 1999, 2274,
	4155, 1122, 1122, 2388, 3372, 4815, 2403, 2297, 3490, 1122,
	814, 1062, 1342, 1122, 3425, 1122, 1122, 2133, 2875, 2282,
	817, 2283, 2875, 1383, 4131, 2201, 1365, 2286, 1167, 1122,
	1122, 1122, 1122, 2582, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 2339, 2301, 2396, 748, 2138, 2139, 2412, 1583,
	2306, 1582, 2379, 1008, 3458, 1278, 2827, 1348, 2154, 2155,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 2413,
	2329, 2318, 1744, 1122, 2554, 2555, 2134, 2502, 4132, 2440,
	2441, 1556, 2150, 2502, 1358, 1244, 2171, 697, 2554, 2570,
	1787, 1364, 1383, 1502, 3082, 1561, 2865, 2853, 2361, 4410,
	1355, 1244, 782, 1597, 4531, 2391, 2371, 2378, 4819, 3144,
	2323, 2899, 1719, 692, 2616, 2757, 2427, 1122, 1383, 1723,
	1659, 1757, 3159, 1638, 1340, 2151, 4847, 3658, 1071, 2410,
	1962, 2864, 1242, 2662, 2662, 2676, 3268, 2554, 2892, 2893,
	2697, 2699, 2573, 2411, 2892, 2893, 2703, 4173, 1242, 2576,
	1239, 747, 2402, 2400, 2518, 2408, 2415, 2401, 3924, 2892,
	2893, 1043, 1705, 2275, 1043, 1043, 1239, 3657, 3491, 2431,
	2569, 4779, 2432, 2433, 873, 872, 4293, 2728, 2317, 2878,
	1568, 1360, 3117, 1602, 4151, 1359, 2184, 2109, 2110, 2510,
	2753, 1059, 4198, 3712, 2413, 3126, 2508, 3260, 3261, 3400,
	3278, 3279, 3280, 1745, 4820, 2582, 3715, 4709, 2932, 2841,
	4156, 2618, 780, 3925, 1689, 2390, 2619, 4793, 3893, 2622,
	1063, 2623, 2624, 1325, 1325, 4533, 868, 2720, 867, 2326,
	1063, 1566, 1210, 3876, 1063, 2514, 1667, 2180, 1655, 1356,
	2931, 1639, 2852, 1951, 2156, 2929, 2927, 1667, 1357, 2837,
	3864, 2841, 1702, 2567, 3158, 2768, 3923, 2397, 1115, 911,
	997, 749, 3890, 3836, 2179, 1383, 1251, 2772, 2411, 747,
	2387, 2742, 3275, 2719, 3823, 3713, 3539, 1686, 2815, 3531,
	3488, 4127, 2934, 2809, 1056, 1644, 4128, 3475, 2727, 178,
	2732, 2801, 2902, 2738, 2739, 4138, 4133, 2805, 2175, 2005,
	2671, 2658, 2688, 1355, 2791, 3129, 2701, 2780, 1249, 1542,
	1012, 2816, 2709, 2710, 4822, 2721, 1353, 1904, 1688, 2880,
	2157, 2366, 1063, 2725, 2726, 1012, 2364, 2138, 2139, 4131,
	1012, 1013, 1012, 4124, 1949, 2817, 4801, 1383, 4130, 2327,
	1687, 4800, 3476, 4411, 2812, 4850, 1238, 2187, 2763, 4828,
	4122, 1253, 2194, 1325, 4134, 4409, 4768, 2176, 4032, 4126,
	2582, 4407, 1238, 2223, 2222, 1720, 3266, 4031, 3862, 3652,
	2843, 3151, 3152, 3877, 1122, 1122, 998, 1122, 3540, 749,
	2787, 1332, 4710, 4132, 1360, 3474, 2811, 4149, 3593, 3537,
	1642, 2823, 997, 2808, 3594, 3482, 1896, 1897, 1054, 808,
	997, 1325, 4152, 3123, 1240, 2790, 1545, 2800, 4406, 2840,
	2825, 2803, 2818, 2804, 2925, 2839, 1056, 2794, 1252, 4618,
	1240, 1358, 2121, 2810, 1056, 4125, 781, 2122, 2900, 2582,
	3044, 3282, 1325, 1277, 4878, 2051, 4408, 2184, 3128, 4677,
	2884, 4678, 1356, 3412, 1325, 3073, 1325, 2826, 4539, 3017,
	2885, 1357, 4338, 2915, 2910, 3402, 4559, 693, 2484, 2868,
	1514, 1325, 1521, 2821, 1527, 2188, 2196, 2909, 2824, 3125,
	1055, 3467, 2883, 3276, 3593, 783, 1568, 1717, 1932, 779,
	3440, 746, 2389, 4129, 4708, 2901, 3083, 3084, 3503, 2981,
	4532, 904, 2846, 1668, 2983, 2970, 2971, 3090, 3091, 3092,
	2856, 2859, 268, 4608, 1721, 2973, 2160, 4821, 998, 1122,
	2121, 1999, 1999, 1500, 3013, 2122, 998, 2894, 2896, 2897,
	2898, 2195, 4139, 4140, 1262, 2172, 3468, 1891, 3173, 2907,
	4225, 1615, 2906, 1620, 2501, 4767, 694, 3439, 3369, 3077,
	2123, 2908, 2920, 1629, 4150, 1634, 1830, 2184, 1009, 3223,
	3182, 715, 4742, 2131, 814, 892, 3100, 2127, 3058, 1936,
	2974, 2161, 4743, 4290, 817, 2979, 2143, 999, 2322, 3466,
	1122, 4028, 3127, 2041, 3002, 3080, 1122, 1122, 1756, 3180,
	3085, 1339, 3086, 178, 814, 695, 4127, 696, 1506, 1718,
	3046, 4128, 2984, 2756, 817, 3048, 1722, 4306, 2996, 4790,
	4826, 4133, 3009, 2972, 2159, 4660, 2325, 3006, 1939, 1692,
	2121, 3106, 4648, 4183, 3538, 2122, 3007, 3131, 1640, 3133,
	1842, 2144, 3277, 1934, 1358, 1080, 2482, 2908, 2123, 2485,
	2124, 2129, 1122, 1122, 3039, 2509, 2316, 912, 1122, 2041,
	3049, 1937, 2564, 4130, 2172, 2127, 2724, 3060, 1932, 3413,
	2041, 1122, 1122, 2838, 3047, 3099, 4851, 1122, 1122, 4134,
	2737, 3097, 1062, 1122, 2142, 3104, 3028, 3105, 2857, 821,
	3109, 3728, 3111, 4838, 3113, 4235, 3078, 3108, 3444, 3110,
	2481, 3112, 2191, 3863, 1935, 1250, 4022, 2979, 2498, 4836,
	4606, 3481, 3640, 1084, 3107, 1654, 1656, 4203, 3824, 999,
	4289, 3633, 3938, 1267, 4033, 3121, 4827, 999, 1122, 1122,
	1122, 3936, 1000, 2125, 1122, 3174, 3324, 2496, 2124, 2129,
	3134, 3177, 3671, 3136, 1122, 4240, 3139, 3142, 2123, 1936,
	3446, 4607, 3953, 4566, 3150, 4653, 4766, 2189, 905, 906,
	4077, 1122, 4829, 3938, 4241, 2127, 3178, 4585, 4226, 4448,
	3183, 1673, 3936, 4202, 4201, 3141, 3140, 3450, 1936, 3976,
	3581, 2131, 3272, 3273, 3274, 1001, 3145, 2243, 2427, 3271,
	3269, 3270, 3262, 3263, 3264, 3265, 3267, 3268, 1939, 1929,
	2190, 1265, 3201, 3202, 3160, 262, 1258, 3205, 4129, 3940,
	3197, 4879, 2052, 1934, 3445, 684, 1767, 4029, 2430, 3635,
	1938, 2125, 893, 894, 1766, 4741, 3767, 1939, 4372, 2141,
	2093, 1937, 3448, 3359, 3634, 4457, 4517, 1761, 2124, 2129,
	3977, 4856, 2722, 2164, 3939, 3909, 3332, 4139, 4140, 3896,
	3940, 1122, 1122, 1122, 1122, 3172, 3848, 3419, 4291, 3582,
	1937, 1122, 1122, 1122, 1000, 2119, 1122, 2678, 1766, 2131,
	1053, 3573, 1000, 3415, 1935, 3449, 1122, 1244, 1383, 2492,
	2090, 3018, 1122, 3012, 1122, 3939, 3000, 3316, 3317, 2269,
	1958, 2483, 2263, 1244, 2257, 2249, 2229, 4567, 1063, 2493,
	3840, 3711, 1999, 1536, 2494, 3817, 1269, 3782, 2499, 2140,
	2841, 1383, 755, 2420, 4623, 3206, 3672, 1001, 2169, 1766,
	2117, 2125, 4588, 1244, 1242, 1001, 1383, 2886, 1765, 2372,
	1602, 2086, 1602, 3323, 3934, 3212, 822, 823, 3979, 3299,
	1242, 3333, 1239, 4256, 4034, 2997, 2005, 3339, 4426, 2715,
	1383, 907, 908, 1280, 3179, 3318, 2088, 4424, 1239, 3818,
	4078, 2165, 2126, 2118, 3181, 4349, 1325, 1325, 3431, 2131,
	1242, 3795, 1765, 3427, 4474, 3426, 4238, 3165, 3143, 3352,
	1842, 2858, 2307, 3321, 2718, 3819, 3320, 3816, 1239, 1122,
	1938, 3331, 1696, 1695, 1690, 1767, 2762, 2761, 2089, 2760,
	2759, 3944, 3004, 1122, 1591, 1060, 4526, 2130, 3353, 1589,
	3407, 3408, 3937, 1325, 1577, 895, 896, 3768, 2005, 1938,
	3406, 3328, 910, 1765, 3336, 2717, 3769, 4466, 1578, 4035,
	2716, 3429, 4421, 4217, 3433, 3326, 1122, 3348, 2862, 1767,
	4467, 2130, 3641, 3636, 3637, 3638, 3639, 4361, 3398, 4855,
	2126, 2421, 1325, 3937, 3855, 3391, 3623, 3387, 3547, 2267,
	3389, 3390, 3404, 3345, 3357, 3393, 3327, 3394, 3338, 3395,
	3845, 3337, 1353, 4468, 1325, 3310, 1325, 3340, 3341, 825,
	824, 3325, 4787, 3294, 3295, 3296, 4563, 4336, 3430, 2183,
	2977, 3435, 2495, 4568, 3437, 1383, 3841, 3370, 2183, 4273,
	2887, 2888, 2497, 3506, 3382, 3508, 1325, 1974, 3512, 3343,
	1325, 3344, 3518, 1674, 3416, 3367, 3364, 3081, 2982, 2980,
	2295, 3376, 3377, 2200, 3378, 3361, 3362, 3363, 3461, 1648,
	3493, 3334, 3335, 4344, 4627, 4527, 4470, 1325, 1238, 4357,
	3379, 826, 827, 3463, 3504, 4356, 4634, 4620, 4084, 3784,
	2126, 1325, 4362, 1325, 1238, 2589, 4791, 1383, 3486, 4469,
	1740, 3465, 3360, 4655, 808, 3477, 4792, 3384, 3385, 3420,
	3392, 4272, 4789, 3556, 4727, 1325, 3388, 4471, 2162, 4345,
	3501, 3399, 4555, 2383, 1238, 4547, 3820, 1325, 1742, 4702,
	4413, 4312, 4076, 3405, 3479, 3943, 1240, 3513, 1739, 754,
	3291, 3519, 3687, 1737, 1244, 2172, 1714, 1712, 3646, 3565,
	3589, 3073, 1240, 1684, 3414, 3645, 1682, 1680, 3380, 3254,
	3073, 3184, 4628, 4528, 3572, 3001, 3447, 1678, 1676, 1325,
	1325, 3846, 3457, 2170, 1670, 1664, 1662, 1587, 2923, 2876,
	2789, 3470, 1240, 2392, 1590, 3587, 3542, 1969, 3545, 1588,
	1965, 1242, 1325, 3464, 3473, 1743, 1626, 3292, 3609, 3640,
	3580, 3489, 909, 3667, 3666, 1761, 3494, 3119, 3633, 1239,
	3118, 3598, 3088, 3502, 2409, 3478, 2163, 3480, 3529, 3471,
	1701, 2334, 2248, 3472, 3523, 2228, 3521, 2034, 3524, 3515,
	1875, 1637, 2363, 1084, 1084, 3650, 1383, 2331, 2209, 1383,
	1560, 2588, 4184, 3900, 3899, 4185, 4168, 3514, 2171, 4619,
	1467, 3520, 4254, 2002, 1467, 3530, 4190, 3528, 4181, 4120,
	3975, 3583, 3534, 3966, 3912, 2884, 3897, 3870, 1010, 3868,
	3541, 3549, 1122, 3847, 3586, 3576, 3571, 3590, 1122, 1122,
	3561, 3031, 1122, 1122, 1122, 3569, 1122, 3023, 3570, 814,
	3568, 3016, 2355, 3505, 4764, 1122, 2005, 4249, 3643, 817,
	3621, 3008, 2994, 2385, 1122, 2975, 3635, 2384, 3708, 1122,
	3595, 3597, 1741, 178, 178, 1383, 3642, 3625, 3665, 3604,
	3588, 3634, 1738, 2807, 1122, 3607, 3608, 1736, 4755, 2802,
	1713, 1711, 1383, 2227, 2225, 3619, 2202, 1683, 2185, 3664,
	1681, 1679, 2005, 2005, 1122, 1122, 2158, 1122, 1122, 1122,
	2145, 1677, 1675, 2132, 2073, 2070, 2067, 2064, 1669, 1663,
	1661, 1586, 2059, 2057, 4472, 1122, 2053, 2044, 1063, 1122,
	4473, 2005, 2005, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1770, 1122, 3700, 3701, 3661, 3740, 1977,
	3741, 3690, 1122, 1122, 2005, 1238, 3654, 3673, 3655, 1122,
	3656, 3631, 2362, 3163, 3660, 3662, 3670, 2330, 2208, 2215,
	1122, 1219, 3644, 4240, 3668, 1015, 1017, 1019, 4780, 3516,
	2094, 1244, 1244, 4525, 2194, 1122, 3137, 3135, 2968, 4665,
	4278, 4271, 4241, 4270, 4197, 2395, 4112, 1220, 3074, 2113,
	1541, 2838, 4459, 2838, 2863, 4452, 2321, 3987, 2140, 2266,
	3697, 2358, 3695, 1240, 1301, 1383, 2836, 1300, 2860, 1999,
	1734, 1735, 2353, 4664, 3813, 3707, 2328, 4160, 1242, 1242,
	1777, 1778, 3779, 1993, 4192, 1660, 1310, 2866, 3730, 3800,
	3723, 2393, 4494, 2440, 3731, 3718, 1239, 1239, 3714, 3716,
	3717, 3738, 4359, 1771, 4085, 3739, 1777, 1778, 3164, 4063,
	1780, 3442, 2867, 2889, 1122, 2041, 1774, 3745, 3737, 2867,
	1334, 1268, 2440, 3746, 3771, 3743, 4783, 4774, 3908, 3641,
	3636, 3637, 3638, 3639, 1122, 1475, 259, 2394, 1486, 1310,
	4736, 1999, 2993, 3780, 1301, 1779, 1602, 3517, 2930, 3786,
	3907, 2360, 1301, 3963, 2250, 3775, 1345, 1221, 3772, 2928,
	2937, 2917, 2919, 2871, 2869, 178, 4626, 1122, 1122, 4613,
	4579, 1779, 4823, 3791, 3792, 2918, 2870, 3788, 3789, 4573,
	4524, 4443, 4419, 681, 4337, 3838, 3973, 3965, 3952, 3839,
	3810, 3575, 3038, 2702, 2079, 1986, 4657, 4358, 3522, 1498,
	1497, 4658, 3802, 3368, 4854, 4657, 1310, 1310, 3260, 3261,
	4658, 1122, 1777, 1778, 2830, 2831, 2828, 2829, 4575, 1647,
	1508, 4795, 4055, 3803, 2584, 1646, 3826, 2830, 2828, 2617,
	3869, 1716, 3871, 3972, 1715, 4444, 4395, 4194, 1325, 4189,
	3881, 4188, 4051, 1325, 3825, 3719, 3510, 3507, 1869, 1868,
	4840, 3830, 4802, 4617, 4616, 4615, 3821, 3822, 4554, 4553,
	4510, 4422, 4389, 4334, 3886, 3888, 4331, 2005, 3885, 4329,
	4228, 3834, 3835, 4214, 3837, 4158, 4107, 3851, 4011, 3993,
	3947, 3902, 3866, 3910, 3904, 3858, 3579, 3578, 3436, 3386,
	3124, 1855, 1238, 1238, 3116, 1860, 3096, 3873, 1325, 3095,
	3878, 3094, 3093, 3022, 1122, 3911, 2995, 2861, 2798, 1467,
	2793, 2782, 1244, 1122, 2781, 3044, 2770, 3989, 2513, 3926,
	3928, 2386, 2359, 1325, 1325, 1325, 2352, 2884, 2351, 2350,
	2349, 2348, 2264, 3996, 3920, 2238, 2234, 2233, 2232, 2231,
	1325, 3980, 3073, 2230, 2047, 2046, 2045, 3942, 2043, 1976,
	1240, 1240, 3922, 2731, 3959, 1733, 1325, 1732, 1671, 1242,
	1555, 4000, 1383, 1554, 3984, 1553, 2002, 2002, 3981, 1552,
	3946, 1551, 1550, 3930, 1549, 1544, 1540, 1239, 1538, 1537,
	3932, 1491, 3919, 3941, 3983, 1490, 1489, 1374, 1383, 1373,
	1372, 1122, 1122, 1371, 4012, 3969, 3960, 1122, 1122, 2005,
	3931, 3964, 1122, 1122, 1370, 1122, 1338, 1337, 1287, 1286,
	1122, 1285, 1284, 1283, 1282, 1281, 1279, 1274, 3420, 2987,
	1273, 1122, 2990, 3967, 2992, 1084, 1272, 1271, 1270, 882,
	8, 1202, 1467, 2084, 1021, 1007, 3982, 1122, 3985, 4530,
	4137, 4136, 4135, 2382, 3921, 3991, 1130, 4001, 4002, 3995,
	3990, 4020, 92, 1546, 844, 4006, 2424, 4009, 4003, 4036,
	4018, 86, 2192, 4010, 3865, 4730, 976, 4654, 3035, 1530,
	4007, 3035, 4558, 4037, 852, 4636, 3961, 3438, 4049, 1999,
	2944, 2333, 4019, 1672, 2335, 3347, 2744, 4605, 4059, 3222,
	4501, 4305, 266, 266, 266, 2587, 687, 688, 1244, 703,
	687, 703, 713, 1873, 4045, 753, 1244, 3303, 4030, 772,
	1383, 88, 1383, 1106, 778, 1152, 4224, 4223, 4121, 1244,
	3850, 266, 3063, 4221, 4220, 1999, 1999, 1990, 1992, 1070,
	1325, 1325, 1386, 4676, 2095, 1112, 2111, 2104, 2783, 2661,
	1383, 889, 1129, 1126, 1994, 1242, 1996, 266, 1128, 1127,
	3114, 1995, 1892, 1242, 1999, 1999, 4025, 1125, 4113, 4114,
	1989, 3971, 3042, 1239, 3605, 1244, 1242, 1244, 1596, 1594,
	978, 1239, 2099, 1238, 1467, 3352, 2507, 2571, 4075, 3211,
	1866, 1086, 1108, 4161, 1239, 2568, 1263, 1999, 1097, 4147,
	1325, 1085, 3329, 3308, 3592, 4093, 1993, 1993, 1486, 3809,
	1383, 2679, 1325, 2419, 862, 1325, 3257, 2574, 1254, 2685,
	2677, 2673, 1242, 3396, 1242, 3032, 1383, 4087, 4088, 1747,
	4089, 4144, 4082, 4144, 4092, 4319, 1844, 4193, 4097, 4195,
	1239, 1240, 1239, 3043, 4117, 4100, 1368, 1090, 4096, 2505,
	4086, 4162, 1857, 3189, 178, 1486, 2429, 3599, 4091, 3350,
	2776, 4661, 3727, 3122, 1325, 1325, 4119, 4105, 2242, 1218,
	2041, 2041, 1217, 1261, 1216, 4218, 4642, 4639, 2182, 4004,
	4111, 3554, 2087, 2822, 1325, 687, 687, 2517, 3562, 1102,
	4166, 1485, 2376, 266, 4090, 4182, 1383, 3314, 3624, 1557,
	777, 1325, 4196, 4175, 4366, 1114, 4178, 4215, 1829, 2965,
	2964, 4187, 4521, 1354, 1352, 1351, 1350, 2041, 4212, 4811,
	4877, 4177, 3861, 3860, 3859, 233, 1244, 3157, 1768, 1760,
	4246, 230, 232, 231, 4229, 4180, 1325, 1325, 1325, 3814,
	3356, 4734, 3883, 4206, 4257, 3546, 23, 2002, 4274, 1383,
	22, 21, 4211, 112, 42, 20, 2041, 151, 4148, 129,
	4213, 1122, 1122, 1122, 148, 4205, 147, 4204, 121, 1238,
	146, 4258, 1319, 1242, 145, 4163, 4164, 1238, 2041, 1383,
	2041, 4252, 4144, 144, 1122, 4219, 4261, 1122, 1122, 4234,
	1238, 1239, 143, 150, 4266, 4245, 4243, 1122, 142, 141,
	2005, 4167, 136, 140, 139, 1122, 1122, 138, 137, 4259,
	2041, 135, 133, 4176, 2041, 134, 4179, 128, 132, 131,
	1383, 130, 1325, 127, 126, 125, 124, 1240, 1494, 123,
	4297, 122, 4283, 120, 152, 1240, 1238, 4280, 1238, 4281,
	119, 118, 117, 116, 115, 1383, 114, 4285, 1240, 4292,
	113, 765, 1467, 1122, 767, 61, 60, 4302, 111, 110,
	1999, 19, 1532, 40, 14, 65, 1122, 66, 4286, 18,
	13, 35, 91, 102, 101, 1122, 36, 99, 98, 34,
	2005, 17, 16, 15, 96, 4242, 95, 33, 1569, 1122,
	31, 11, 1122, 9, 1240, 37, 1240, 1953, 12, 5,
	183, 182, 185, 4340, 181, 4314, 1122, 184, 90, 4277,
	4325, 4326, 180, 1383, 179, 1610, 89, 29, 4369, 4308,
	1325, 10, 2254, 175, 4435, 3957, 81, 177, 176, 1623,
	1325, 1325, 174, 173, 172, 82, 4328, 79, 171, 4339,
	85, 4341, 170, 80, 84, 1467, 83, 4348, 27, 6,
	64, 4388, 7, 4287, 3647, 105, 106, 38, 3556, 77,
	76, 4412, 75, 26, 63, 25, 4400, 169, 4380, 4381,
	4434, 216, 215, 214, 213, 1383, 212, 1993, 1325, 4391,
	211, 210, 209, 204, 1649, 4425, 203, 1238, 4390, 208,
	4386, 206, 1999, 205, 207, 202, 1244, 1244, 4396, 225,
	4398, 219, 4399, 218, 224, 223, 4442, 222, 221, 4397,
	220, 4402, 217, 227, 1467, 201, 1122, 1122, 4477, 4478,
	4415, 4453, 4414, 200, 4418, 4462, 4417, 199, 4423, 4404,
	197, 4378, 193, 1122, 2005, 4481, 192, 4438, 2511, 196,
	1467, 4433, 4456, 1242, 1242, 1240, 198, 195, 4454, 194,
	191, 226, 4144, 4144, 1855, 72, 167, 168, 71, 166,
	4450, 1239, 1239, 165, 164, 163, 162, 4461, 4455, 4261,
	4460, 1122, 161, 1122, 4475, 1122, 3451, 3452, 160, 3453,
	3454, 3455, 4392, 70, 2377, 1244, 24, 2, 1, 4490,
	4491, 0, 0, 4489, 0, 0, 0, 0, 1122, 0,
	1244, 0, 0, 0, 4516, 0, 0, 0, 2684, 0,
	4493, 0, 0, 0, 0, 0, 0, 0, 3147, 0,
	0, 4403, 4542, 0, 3495, 3496, 0, 3497, 3498, 3499,
	0, 0, 1242, 0, 4512, 0, 0, 4515, 0, 4499,
	0, 4144, 0, 2130, 0, 0, 1256, 1242, 4541, 0,
	1239, 1381, 1122, 1122, 4534, 1480, 4144, 0, 0, 4535,
	0, 4562, 1122, 0, 4458, 1239, 0, 1244, 0, 0,
	1244, 0, 0, 0, 1325, 0, 0, 0, 0, 1276,
	0, 0, 0, 0, 1325, 1325, 0, 1467, 4551, 4582,
	4549, 266, 4584, 266, 266, 0, 1305, 266, 1315, 2679,
	2679, 1325, 0, 0, 0, 4556, 0, 4550, 0, 1335,
	4596, 4570, 4571, 0, 1242, 1122, 1122, 1242, 772, 4569,
	4574, 0, 0, 4144, 4577, 1122, 4144, 4576, 4581, 0,
	0, 0, 1239, 4509, 4590, 1239, 4511, 4438, 4594, 4595,
	4592, 0, 4593, 266, 4589, 266, 266, 1305, 0, 266,
	266, 0, 0, 0, 1315, 4599, 0, 1238, 1238, 1467,
	0, 4600, 0, 0, 0, 0, 1122, 1122, 266, 1122,
	1510, 4610, 0, 0, 0, 0, 0, 4614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4609, 4663,
	0, 1534, 0, 4629, 0, 4641, 4644, 4659, 0, 0,
	0, 4633, 0, 0, 4656, 0, 0, 0, 4632, 4631,
	1559, 0, 0, 1315, 0, 1240, 1240, 266, 266, 4681,
	1305, 4650, 4684, 0, 0, 0, 4646, 1122, 1122, 1122,
	0, 4685, 0, 0, 0, 4666, 1310, 0, 0, 4645,
	0, 772, 4649, 266, 266, 0, 1238, 0, 0, 0,
	0, 0, 0, 4679, 4672, 0, 0, 4680, 1122, 0,
	0, 1238, 0, 0, 0, 0, 889, 0, 0, 0,
	0, 4714, 4719, 0, 2002, 4701, 4698, 4699, 4700, 2679,
	2679, 2679, 2679, 1999, 0, 1310, 4601, 0, 4602, 0,
	0, 0, 4737, 0, 0, 0, 4717, 0, 0, 4748,
	0, 0, 0, 0, 1240, 4746, 0, 2041, 0, 0,
	4760, 4759, 4733, 0, 0, 1122, 0, 0, 0, 1240,
	0, 0, 1310, 1310, 4745, 0, 0, 0, 1238, 4765,
	4744, 1238, 0, 0, 4754, 0, 0, 4753, 4756, 4757,
	0, 4752, 0, 266, 4762, 0, 2002, 0, 4758, 4771,
	4772, 0, 0, 4651, 0, 0, 4652, 4729, 4775, 4732,
	4781, 4777, 4773, 1999, 266, 4663, 4784, 2130, 1244, 4786,
	1244, 0, 4805, 4641, 4788, 0, 4644, 0, 4804, 0,
	0, 4794, 0, 4785, 4799, 4562, 1240, 0, 4818, 1240,
	4806, 4803, 4808, 0, 4813, 0, 0, 0, 0, 0,
	4816, 0, 0, 0, 0, 0, 0, 0, 0, 4831,
	0, 0, 4807, 0, 1475, 1242, 0, 1242, 0, 4830,
	0, 0, 4833, 4817, 4144, 0, 4144, 0, 0, 0,
	0, 4715, 0, 1239, 0, 1239, 0, 0, 0, 4841,
	4848, 1486, 0, 0, 1122, 1122, 0, 0, 0, 4844,
	4846, 0, 0, 1122, 0, 1122, 1122, 0, 4852, 4849,
	0, 0, 0, 0, 0, 0, 0, 0, 4868, 4842,
	4862, 4869, 3044, 4873, 4865, 4870, 4872, 4867, 4871, 4858,
	0, 0, 0, 0, 4866, 0, 0, 0, 0, 0,
	4881, 0, 4880, 4882, 0, 4876, 4883, 4889, 0, 4886,
	4885, 4887, 0, 0, 1993, 0, 0, 0, 0, 4892,
	1968, 0, 0, 0, 0, 2684, 1122, 1999, 4897, 0,
	4899, 0, 0, 4903, 4889, 4900, 4894, 4902, 4859, 4860,
	0, 0, 0, 4884, 0, 4896, 0, 0, 0, 2284,
	0, 0, 0, 0, 4861, 0, 4893, 1777, 1778, 0,
	0, 0, 0, 4812, 0, 1319, 2298, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 2300, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 1993, 1780, 2308, 0,
	2311, 2312, 2313, 1486, 0, 0, 266, 0, 266, 4898,
	0, 0, 266, 4837, 1310, 0, 2684, 2684, 0, 4839,
	0, 0, 0, 1833, 0, 1510, 1305, 266, 0, 266,
	0, 0, 1779, 0, 0, 266, 1510, 703, 0, 0,
	0, 0, 266, 1510, 0, 0, 0, 0, 0, 1238,
	0, 1238, 0, 2115, 0, 0, 0, 2048, 0, 0,
	0, 0, 0, 0, 1486, 0, 1486, 0, 0, 266,
	0, 0, 0, 0, 2041, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1467, 0, 3968, 0, 2002, 0, 0, 1240, 0, 1240,
	0, 0, 0, 0, 0, 0, 772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 0, 1785, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1467, 0,
	2002, 2002, 0, 0, 74, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 1467, 4021, 0, 0, 0, 0, 0, 2002,
	2002, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 2679, 2679, 0, 0, 2220, 2684, 2684, 2684, 2684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 1084, 2002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3186, 3187,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 0, 107, 0, 0, 0, 0, 93,
	104, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	266, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679,
	2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679,
	2679, 0, 2679, 3260, 3261, 0, 3278, 3279, 3280, 0,
	0, 0, 0, 0, 0, 0, 1830, 1467, 0, 0,
	0, 0, 0, 0, 0, 4042, 0, 0, 94, 0,
	0, 0, 0, 266, 1993, 0, 0, 266, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 266, 0, 0,
	0, 687, 0, 266, 0, 0, 0, 0, 3275, 1467,
	1993, 1993, 0, 0, 0, 772, 0, 0, 0, 889,
	0, 0, 1801, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1993,
	1993, 0, 0, 0, 266, 0, 1305, 266, 3284, 3285,
	3286, 3287, 2814, 1319, 0, 0, 0, 0, 0, 0,
	0, 772, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 1993, 0, 0, 0, 2332, 0, 0, 0,
	1832, 266, 266, 0, 266, 0, 266, 0, 266, 0,
	266, 1777, 1778, 2443, 0, 0, 0, 0, 0, 0,
	0, 0, 3266, 0, 97, 2002, 0, 0, 0, 4227,
	0, 0, 1486, 1486, 1808, 2368, 0, 0, 2369, 0,
	2370, 1780, 4244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 266, 266, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4265, 0, 1833, 1467, 0,
	0, 1467, 0, 0, 0, 0, 1779, 186, 100, 753,
	0, 103, 0, 772, 0, 0, 1799, 3282, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 2969, 0, 0, 1486, 2585, 234, 0, 73,
	0, 0, 0, 0, 0, 884, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 74, 0, 0, 3276,
	2254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 1467, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 2002, 0, 0,
	0, 0, 0, 0, 1467, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 2519, 0, 0, 0,
	1785, 153, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 2754, 1830, 0, 235, 0, 0, 0, 0, 0,
	3089, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 883, 0, 0, 0, 229, 0, 1807, 1809,
	0, 0, 0, 0, 49, 0, 107, 0, 2684, 2684,
	0, 93, 104, 0, 0, 0, 687, 0, 0, 1310,
	0, 785, 0, 189, 0, 1993, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 796, 266, 3277, 687,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 1467, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 266, 1315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2684, 2684,
	2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
	2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2833, 2684,
	0, 0, 0, 0, 0, 1486, 266, 1315, 0, 0,
	1830, 703, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 2797, 0, 0, 0, 802, 0, 266, 0, 0,
	266, 0, 0, 0, 266, 0, 266, 1993, 0, 795,
	0, 1305, 0, 266, 266, 0, 1315, 1315, 2813, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 3272, 3273,
	3274, 0, 0, 0, 0, 3271, 3269, 3270, 3262, 3263,
	3264, 3265, 3267, 3268, 0, 0, 1801, 794, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 2850, 0,
	0, 0, 3260, 3261, 748, 3278, 3279, 3280, 0, 266,
	3683, 3684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 4041, 0, 0, 0, 0, 792,
	0, 2960, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 4560, 0, 0, 186,
	100, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 2952, 2950, 0, 0, 0, 0,
	4580, 2954, 2956, 2946, 0, 0, 0, 3275, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 884, 801, 0,
	0, 0, 149, 0, 0, 266, 2985, 0, 2002, 0,
	3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756,
	3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766,
	1510, 3770, 0, 266, 0, 266, 0, 236, 73, 0,
	0, 0, 266, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 3027, 0, 1467, 74, 0, 0, 0, 0,
	0, 0, 2850, 153, 687, 0, 0, 0, 0, 0,
	0, 78, 787, 3056, 889, 0, 2850, 2850, 190, 0,
	1467, 3266, 0, 0, 0, 0, 235, 0, 2002, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 791, 0, 2679, 0, 0, 229, 0,
	4667, 87, 266, 1305, 266, 0, 4669, 0, 0, 0,
	0, 1510, 0, 1510, 1315, 266, 0, 0, 1305, 0,
	1305, 0, 1305, 0, 0, 1607, 0, 0, 747, 0,
	1077, 0, 0, 0, 0, 0, 3282, 0, 0, 0,
	0, 883, 0, 797, 0, 0, 0, 0, 0, 789,
	0, 2679, 2948, 49, 0, 107, 0, 0, 0, 0,
	93, 104, 0, 2962, 266, 266, 266, 266, 1305, 0,
	0, 1305, 0, 266, 0, 0, 266, 0, 3276, 0,
	0, 0, 1310, 0, 2961, 2953, 2951, 2955, 2957, 2947,
	2949, 2963, 1467, 0, 1467, 0, 786, 0, 0, 0,
	2959, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 94,
	0, 0, 1467, 0, 793, 0, 0, 0, 1993, 0,
	0, 0, 2002, 2966, 0, 0, 0, 0, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 2254, 0, 788,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 799, 800, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 1467, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 1993, 0,
	0, 0, 0, 1780, 0, 0, 3525, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 3277, 0, 0,
	0, 2679, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 1510, 3260, 3261, 0, 3278, 3279, 3280, 1779, 0,
	0, 0, 0, 0, 3566, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 3692, 97, 3574, 1796, 1467, 0,
	0, 2679, 0, 0, 0, 0, 0, 0, 3260, 3261,
	0, 3278, 3279, 3280, 0, 0, 0, 0, 0, 0,
	0, 3315, 0, 0, 0, 0, 2679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3615, 3616,
	0, 2967, 0, 0, 0, 0, 0, 3275, 186, 100,
	2958, 1467, 103, 0, 3342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3355,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 234, 0,
	0, 1467, 1785, 3275, 0, 0, 884, 0, 0, 0,
	0, 149, 1993, 3374, 0, 0, 0, 3272, 3273, 3274,
	0, 0, 0, 0, 3271, 3269, 3270, 3262, 3263, 3264,
	3265, 3267, 3268, 266, 0, 0, 0, 0, 0, 0,
	1818, 0, 1467, 1828, 0, 0, 236, 0, 0, 266,
	1807, 1809, 0, 0, 687, 0, 0, 0, 0, 687,
	0, 3266, 687, 0, 0, 687, 687, 1467, 0, 0,
	0, 687, 153, 0, 0, 0, 1794, 1795, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 1510, 0, 1816, 235, 0, 3266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 1800,
	0, 0, 0, 0, 1084, 0, 1510, 229, 0, 0,
	0, 2254, 0, 0, 0, 0, 3282, 0, 0, 266,
	0, 0, 0, 266, 266, 1467, 0, 0, 0, 0,
	0, 1310, 2684, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2850, 2850, 266, 0, 3411, 0, 3276, 0,
	0, 0, 2850, 0, 0, 3422, 0, 0, 0, 0,
	0, 0, 1830, 2850, 3422, 0, 2850, 3422, 0, 0,
	3422, 0, 0, 0, 0, 0, 0, 1467, 2684, 0,
	0, 0, 0, 0, 3276, 266, 266, 3411, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3355, 0, 0, 0, 0, 0, 0, 0, 0, 3411,
	0, 266, 0, 0, 0, 1806, 3485, 3485, 0, 1305,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2850, 0, 2850, 1801, 3511,
	2850, 3411, 0, 0, 2850, 3411, 0, 0, 772, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 1510, 3260, 3261, 0,
	3278, 3279, 3280, 0, 0, 0, 1832, 3277, 0, 0,
	266, 3550, 0, 0, 3552, 2850, 0, 0, 266, 3691,
	0, 0, 266, 0, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 3277, 0, 3027, 0, 0, 1305, 1480,
	266, 0, 1381, 2850, 4311, 687, 0, 0, 0, 0,
	0, 0, 2850, 0, 1084, 1084, 0, 0, 2684, 0,
	0, 0, 3275, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 266, 3027, 0, 0, 3027, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 2684, 0,
	4351, 0, 0, 0, 0, 0, 0, 3917, 0, 0,
	3653, 0, 0, 0, 0, 0, 0, 0, 3704, 0,
	0, 0, 0, 2684, 0, 0, 0, 3659, 0, 0,
	1510, 0, 0, 1305, 266, 3720, 266, 3272, 3273, 3274,
	0, 0, 1305, 0, 3271, 3269, 3270, 3262, 3263, 3264,
	3265, 3267, 3268, 0, 0, 0, 3266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 266, 3272, 3273, 3274, 0, 0, 1777, 1778,
	3271, 3269, 3270, 3262, 3263, 3264, 3265, 3267, 3268, 0,
	0, 0, 3997, 3998, 3999, 0, 0, 0, 0, 0,
	1486, 1808, 1777, 1778, 0, 0, 0, 0, 1780, 1319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3282, 0, 0, 0, 1808, 0, 0, 0, 0,
	3725, 0, 1780, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 1777,
	1778, 0, 0, 1799, 0, 1821, 1822, 1823, 1833, 0,
	0, 0, 1796, 3276, 0, 0, 0, 1779, 3812, 0,
	0, 0, 1808, 0, 0, 0, 0, 1799, 0, 1780,
	4498, 0, 0, 0, 0, 0, 1796, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 1310, 0, 0,
	0, 0, 0, 0, 1779, 0, 4040, 0, 0, 0,
	4520, 0, 0, 0, 1799, 0, 0, 266, 266, 0,
	0, 0, 0, 1796, 0, 0, 1830, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 4540, 0, 1785, 0, 0,
	687, 687, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 1510, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 0, 1510, 1510, 1780,
	1510, 0, 0, 0, 0, 1807, 1809, 0, 0, 4102,
	4103, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 3277, 0, 0, 1833, 0, 0, 1785, 1807,
	1809, 1794, 1795, 0, 1779, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1795, 1777, 1778, 0,
	0, 0, 0, 0, 1800, 0, 1818, 0, 0, 1828,
	0, 0, 0, 0, 0, 772, 1807, 1809, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1780, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	3485, 0, 0, 1833, 0, 0, 0, 0, 1107, 109,
	1816, 0, 1779, 266, 0, 0, 0, 0, 0, 1777,
	1778, 0, 0, 1319, 0, 1800, 0, 1830, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3411, 0,
	266, 0, 1808, 0, 703, 703, 1315, 0, 0, 1780,
	0, 1830, 3272, 3273, 3274, 0, 0, 0, 266, 3271,
	3269, 3270, 3262, 3263, 3264, 3265, 3267, 3268, 266, 0,
	0, 0, 0, 0, 0, 1833, 1807, 1809, 266, 0,
	1806, 0, 0, 266, 1779, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 4282, 0, 4284, 1830, 0,
	0, 0, 109, 1801, 1806, 0, 0, 2850, 266, 0,
	0, 0, 0, 0, 0, 0, 1785, 3056, 3056, 0,
	0, 0, 0, 889, 889, 2850, 0, 1801, 0, 3027,
	3027, 0, 0, 889, 2850, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 1832, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 4330, 0, 0, 0, 1832, 0, 1044, 1785, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 1064, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 4095, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 4060, 1832, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 4109, 0, 1228, 0, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 1801, 0, 0, 3260, 3261, 4416,
	3278, 3279, 3280, 0, 266, 1800, 1830, 0, 0, 0,
	1510, 0, 266, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	1315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 1315, 0, 0, 0, 0, 0, 0,
	2850, 2850, 0, 3485, 2850, 0, 0, 0, 0, 0,
	0, 4146, 3275, 4146, 1510, 0, 0, 0, 1830, 0,
	0, 0, 1801, 1813, 0, 2850, 0, 3422, 0, 1813,
	0, 1510, 1510, 266, 3411, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3411, 0, 266,
	3411, 0, 266, 0, 3485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2850,
	0, 2850, 266, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 1381, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3266, 2850, 0, 0,
	0, 0, 4231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4303, 266, 1813, 0, 0, 0, 0, 1813,
	0, 0, 0, 266, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1813, 0, 0, 0, 3283, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4146, 4303, 0, 1510, 0, 0, 0, 0,
	0, 3282, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	1931, 0, 0, 0, 0, 0, 0, 0, 2443, 0,
	0, 0, 0, 1319, 1319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	1319, 0, 0, 3276, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	0, 0, 0, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 1777, 1778, 716, 2443, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 2850, 0, 3422,
	0, 0, 4343, 1780, 0, 0, 1830, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 4367, 0, 4367, 0, 0, 0, 0, 0, 1833,
	719, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 1799, 0,
	0, 720, 0, 0, 0, 0, 0, 1796, 3485, 0,
	1305, 0, 0, 0, 0, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 739, 0, 3411, 0, 266, 0, 0,
	0, 0, 3277, 0, 0, 1813, 0, 0, 0, 0,
	0, 1069, 0, 721, 0, 0, 0, 0, 1813, 0,
	0, 0, 4343, 0, 0, 0, 0, 0, 0, 0,
	2850, 3686, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 4447, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 723, 0,
	1510, 724, 1785, 2683, 0, 0, 0, 0, 0, 0,
	0, 0, 4146, 4146, 0, 0, 1813, 0, 748, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	266, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 738, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 3725, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 109, 0, 109, 0, 0, 1510,
	0, 0, 1510, 3485, 4514, 0, 1794, 1795, 0, 0,
	0, 4343, 3272, 3273, 3274, 0, 0, 0, 0, 3271,
	3269, 3270, 3262, 3263, 3264, 3265, 3267, 3268, 0, 0,
	0, 4146, 735, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 4146, 1064, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 109, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 109, 0, 109, 0, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4231, 0, 0,
	0, 745, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 4146, 0, 266, 4146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3422, 0, 0, 0,
	0, 0, 746, 0, 727, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 747, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 743, 744, 741, 1801, 4624,
	0, 0, 0, 736, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 4367, 0, 0, 266, 2654, 2655, 2656,
	2657, 2650, 2651, 2652, 2653, 0, 0, 0, 0, 1510,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 2850, 0, 0, 0, 1044, 0, 0, 730, 0,
	737, 0, 0, 0, 0, 0, 1832, 0, 0, 731,
	0, 0, 266, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 740, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 1859, 3725,
	0, 0, 749, 0, 0, 0, 0, 0, 0, 2630,
	2631, 2632, 2633, 734, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2642, 2643, 2644, 2645, 2638, 2639, 2640, 2641,
	2646, 2647, 2648, 2649, 0, 0, 0, 266, 0, 0,
	0, 0, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4343,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2626, 2627,
	2628, 2629, 2634, 2635, 2636, 2637, 0, 0, 1945, 0,
	1948, 1813, 109, 0, 0, 0, 0, 2850, 0, 0,
	0, 0, 0, 0, 4146, 0, 4146, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1330, 0, 0, 0, 0, 1813,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 1510,
	0, 1069, 1069, 0, 0, 1510, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 0, 0, 0, 3056, 0, 1813, 0, 1813,
	1813, 1813, 1813, 1512, 2850, 1518, 0, 1524, 0, 0,
	0, 2683, 2683, 0, 0, 0, 0, 0, 0, 0,
	3056, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 46, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 1618, 1813, 0, 78,
	0, 0, 0, 0, 0, 0, 1627, 0, 1632, 0,
	67, 0, 0, 0, 0, 0, 0, 48, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	1813, 0, 0, 1813, 0, 0, 1813, 47, 0, 87,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 68, 0, 0, 0,
	0, 0, 0, 0, 51, 1697, 0, 0, 1703, 57,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 3281,
	0, 2683, 2683, 2683, 2683, 0, 0, 0, 1813, 0,
	1813, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	0, 0, 0, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 0, 0, 0, 1064, 0, 1064, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 3681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 1925, 1925,
	0, 53, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 56, 1785, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 0, 0, 1044, 69,
	0, 1044, 1044, 0, 0, 58, 186, 100, 0, 0,
	103, 0, 0, 0, 54, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 0, 0,
	0, 0, 0, 0, 1807, 1809, 234, 0, 0, 0,
	0, 0, 0, 0, 62, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 2504, 0, 0,
	1794, 1795, 0, 0, 155, 0, 0, 0, 0, 1813,
	1813, 0, 1813, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 1853, 0, 0,
	0, 1853, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 0, 0, 0,
	153, 0, 0, 1069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 1228, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	0, 0, 189, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	1813, 1813, 0, 2683, 2683, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3281, 3281, 0,
	0, 1813, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 2683, 2683, 2683, 2683, 2683, 2683, 2683,
	2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683,
	2683, 2683, 2683, 0, 2683, 3281, 3281, 3281, 3281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2356, 0, 0,
	0, 109, 0, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 109, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 2418, 0, 2422, 0,
	0, 0, 1813, 0, 0, 2436, 0, 0, 0, 0,
	0, 0, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 0, 2486,
	0, 2488, 2489, 2490, 2491, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 2566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2596,
	2599, 2602, 2605, 0, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2675, 0, 2687, 2689, 2694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1813, 0, 0, 1813, 3281, 3281, 1813, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1813, 1813, 1813, 1813, 0, 0,
	0, 0, 0, 1813, 0, 1813, 0, 0, 3281, 3281,
	3281, 3281, 3281, 3281, 3281, 3281, 3281, 3281, 3281, 3281,
	3281, 3281, 3281, 3281, 3281, 3281, 3281, 3281, 1245, 0,
	0, 3281, 0, 0, 1813, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 1245, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1228, 0, 0, 1245, 0,
	1808, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 2988, 2989, 0, 2991, 0, 0,
	0, 0, 1779, 0, 1245, 0, 0, 0, 0, 0,
	0, 1245, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3680, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 109,
	0, 109, 109, 109, 0, 0, 0, 0, 0, 3115,
	0, 0, 0, 1777, 1778, 0, 0, 0, 0, 1813,
	1813, 0, 0, 0, 1813, 1813, 0, 0, 1813, 1813,
	0, 0, 0, 1813, 1807, 1809, 1808, 1813, 0, 0,
	0, 0, 1813, 1780, 0, 0, 109, 109, 0, 109,
	109, 109, 0, 0, 0, 0, 0, 2683, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 1834, 1835, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 1800, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3169, 3170, 0, 0, 0, 0, 3176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3175, 0, 0, 0, 0, 0, 3190, 3191, 0,
	0, 0, 1228, 2566, 0, 1064, 1830, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 109,
	109, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 3214, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 1245, 0, 1245, 0, 0,
	0, 3226, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2006, 0, 0, 0, 1245, 0, 0, 0, 0, 1813,
	1813, 1813, 0, 0, 0, 0, 0, 0, 0, 1800,
	1813, 1813, 3281, 2683, 0, 0, 0, 0, 0, 1813,
	1832, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3281, 2683, 0, 0, 0, 0, 0, 0,
	1245, 2694, 2694, 2694, 0, 0, 0, 0, 0, 1813,
	0, 1245, 0, 0, 0, 0, 1925, 1813, 2683, 0,
	0, 0, 1830, 0, 3319, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	1228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 1069,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 3281,
	0, 0, 0, 1069, 0, 0, 0, 0, 0, 1814,
	1808, 0, 0, 0, 0, 0, 1832, 1780, 0, 0,
	1813, 3281, 0, 0, 1813, 0, 1827, 1245, 1245, 0,
	0, 0, 0, 0, 0, 0, 3441, 1245, 0, 0,
	0, 3281, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 1245, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 1245, 1245, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 1245, 1245, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 1813, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 1824, 0, 1825, 109, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	1228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 2006, 2006, 1245, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 2436, 0, 0, 0, 1830, 0, 3678, 3679,
	0, 0, 3682, 0, 0, 0, 3685, 0, 0, 0,
	0, 0, 0, 0, 1813, 3689, 0, 0, 1813, 0,
	0, 0, 0, 0, 3696, 0, 0, 0, 0, 3319,
	0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 3709, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 1814, 1808, 0, 0, 1245, 0,
	0, 0, 1780, 0, 3732, 3733, 0, 3734, 3735, 3736,
	0, 1827, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3742, 0, 0, 1833, 3744,
	109, 0, 0, 0, 0, 0, 1228, 1779, 0, 1819,
	0, 0, 0, 0, 1228, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	1245, 0, 3773, 3774, 0, 0, 0, 1245, 0, 0,
	1832, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	3785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 3794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	1777, 1778, 4068, 0, 3842, 0, 4067, 733, 0, 1818,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 1808, 3853, 0, 0, 716, 1245, 1245,
	1780, 109, 717, 0, 0, 0, 1824, 0, 1825, 0,
	0, 0, 0, 0, 109, 1794, 1795, 0, 0, 0,
	0, 0, 1118, 0, 0, 0, 1833, 0, 3882, 0,
	0, 0, 0, 1816, 0, 1779, 0, 109, 0, 0,
	1245, 718, 0, 0, 0, 1799, 0, 0, 1800, 0,
	0, 0, 719, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 265,
	265, 0, 0, 720, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 739, 0, 815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3168, 0,
	1815, 0, 1245, 0, 0, 721, 0, 0, 0, 0,
	0, 1830, 0, 815, 0, 0, 0, 0, 1245, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 722, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 724, 1925, 0, 0, 0, 0, 0,
	0, 0, 0, 3992, 1806, 0, 1245, 0, 0, 0,
	748, 0, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 738, 0, 1245, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 1245,
	0, 1245, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 4038, 4039, 0, 0, 1832, 0, 4043, 4044, 1241,
	0, 0, 4047, 4048, 735, 0, 0, 0, 0, 0,
	4052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2504, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 726, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 3235, 0, 0,
	0, 3236, 0, 0, 746, 0, 727, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 747, 0, 0, 0, 0, 0,
	0, 0, 728, 0, 0, 0, 0, 743, 744, 741,
	0, 0, 0, 0, 0, 736, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	730, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 732, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4298, 4299, 4300, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 1245, 1245, 2436, 0, 0, 4309, 4310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 4318, 4321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4368, 0, 0, 0,
	0, 1245, 1245, 0, 0, 4376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4384,
	0, 0, 1069, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4393, 265, 0, 265,
	265, 0, 0, 265, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 265,
	0, 265, 265, 0, 0, 265, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 1245, 0, 0, 815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 833, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 265, 265, 0, 0, 836, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 1245, 265,
	265, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 4519, 0, 0, 0, 4523, 837, 0, 854, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 838, 0, 0, 0, 0, 839, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	863, 0, 0, 0, 1245, 1245, 840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 1069, 1069, 0, 0, 0, 1245, 0, 265,
	0, 0, 4578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 834, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 841, 0, 0, 842, 0,
	0, 1245, 0, 0, 1245, 0, 0, 0, 0, 0,
	865, 0, 0, 0, 0, 748, 2436, 0, 0, 0,
	0, 0, 0, 0, 0, 4321, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 2006, 0, 0, 0, 1827, 0, 1069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 1833, 0, 0, 0, 0, 0, 0, 864,
	0, 1779, 0, 0, 0, 0, 0, 1245, 0, 859,
	0, 1799, 0, 0, 0, 0, 0, 2006, 2006, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4697, 4697, 4697,
	0, 0, 0, 0, 0, 0, 2006, 2006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4718, 843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 0, 0, 1785, 1245, 1245, 0, 0,
	0, 846, 1947, 0, 1241, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 4697, 0, 0, 0, 0,
	0, 0, 0, 265, 1947, 265, 0, 855, 0, 0,
	1245, 815, 0, 1818, 0, 0, 1828, 0, 815, 747,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 832, 0, 856, 0, 0, 0, 0, 0,
	1824, 0, 1825, 847, 0, 265, 0, 0, 0, 1794,
	1795, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 848, 0, 0, 0, 849,
	868, 0, 867, 0, 0, 0, 850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 860, 0, 0, 0, 0,
	0, 869, 0, 866, 4697, 4853, 1826, 0, 0, 749,
	0, 0, 0, 4857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 815, 1245, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 1245,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 1245, 0, 265,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 265, 2006, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	265, 2562, 0, 265, 0, 2563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 815, 265, 0,
	265, 0, 265, 0, 265, 0, 265, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 1245, 1131, 0, 0, 1245, 0, 1245, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 1245, 0, 265, 265,
	265, 265, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 1245, 0, 948, 0, 997, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	956, 0, 0, 0, 0, 1245, 0, 1245, 0, 0,
	1245, 0, 0, 267, 0, 0, 971, 0, 954, 953,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	973, 0, 0, 0, 0, 0, 955, 0, 0, 0,
	0, 958, 0, 0, 0, 0, 1005, 0, 0, 1245,
	1245, 0, 0, 0, 0, 968, 969, 0, 0, 1234,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 998, 960, 0, 0, 1245, 0, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 261, 683, 0, 0,
	962, 1245, 0, 0, 0, 0, 0, 0, 0, 995,
	0, 1245, 1245, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 996,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 964, 0, 265, 0, 0,
	0, 0, 0, 952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 2006, 0, 0, 0, 0,
	0, 0, 965, 966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 1245, 0, 0,
	0, 974, 972, 0, 0, 0, 0, 0, 0, 967,
	0, 0, 0, 983, 0, 0, 0, 0, 0, 0,
	1245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 1002, 994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 265, 0, 0, 0,
	265, 0, 265, 0, 0, 2006, 0, 0, 0, 265,
	265, 0, 0, 999, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 1004,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 957, 0, 0, 0, 990, 991, 0, 0,
	1245, 265, 0, 1245, 0, 0, 0, 0, 0, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 1245, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 0,
	1003, 984, 0, 0, 977, 975, 0, 980, 0, 0,
	0, 0, 0, 981, 0, 0, 950, 0, 1000, 2006,
	0, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	951, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 815, 992, 0, 982, 0, 0, 0, 265, 0,
	979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 1001, 0, 0, 0, 0, 0, 0, 0, 985,
	0, 0, 0, 0, 0, 1245, 0, 0, 963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 987, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 265, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 1245, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	265, 265, 265, 265, 0, 0, 0, 0, 0, 265,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 267, 0, 267,
	267, 265, 0, 267, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	1328, 267, 267, 0, 1328, 267, 267, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 267, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 1328, 267,
	267, 0, 0, 0, 1291, 0, 1291, 1291, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 1378, 1827, 0, 0,
	0, 0, 1484, 1245, 0, 1245, 0, 1328, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 267,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 1612, 0, 0,
	0, 0, 0, 0, 0, 1947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 265,
	265, 0, 0, 0, 0, 1818, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 1824, 0, 1825, 0, 1724, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 265, 0, 1800, 265, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 1328,
	0, 0, 0, 267, 267, 267, 0, 1830, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 815, 0, 0, 0,
	0, 0, 267, 0, 265, 0, 0, 0, 265, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 1241, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 1484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 0, 1484,
	0, 0, 0, 1817, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 4066, 0, 0,
	0, 0, 267, 0, 1328, 1328, 267, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 267, 0, 267, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	1328, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 1241, 0, 0, 0, 1328, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	267, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 1328, 1328, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 267, 0,
	267, 0, 267, 0, 267, 0, 267, 0, 0, 0,
	0, 807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 0, 0,
	2247, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	267, 267, 2260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2272, 0,
	2272, 0, 0, 0, 0, 0, 2279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2247, 0, 0,
	2304, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2340, 265, 2342, 0, 2344,
	0, 2346, 0, 2347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 1328, 0, 0, 0, 265,
	0, 0, 0, 0, 265, 2373, 2374, 2375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 267, 0, 0, 0,
	267, 0, 267, 0, 0, 0, 0, 0, 0, 267,
	267, 0, 0, 0, 0, 1328, 1328, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 2751, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 1947,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 1328,
	0, 0, 0, 0, 0, 265, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	2799, 0, 0, 1291, 0, 0, 0, 1291, 265, 1291,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 267, 0, 1328, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 267,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	267, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 1484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1384, 0,
	0, 0, 1384, 0, 0, 0, 0, 0, 0, 1326,
	267, 267, 267, 267, 0, 0, 0, 0, 0, 267,
	0, 0, 267, 0, 0, 0, 2247, 0, 0, 0,
	0, 0, 0, 0, 0, 2260, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 265, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3087, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 3098, 0, 3101, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 3130, 1484, 3132,
	1484, 0, 0, 0, 0, 0, 3138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 1947,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1291, 0, 0, 0, 0, 0, 265, 265, 3166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 1947,
	0, 265, 1947, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 1328,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 267,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	267, 0, 265, 0, 0, 1328, 0, 0, 0, 807,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 267, 267, 0, 1328, 267, 0, 0, 265, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 267, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 1385, 1326, 0, 1328, 0, 0,
	0, 1327, 0, 0, 0, 0, 1326, 0, 1328, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 1291, 265, 0, 1327, 1484, 1484, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 1328, 0, 1328, 0, 0, 0, 1328,
	0, 1327, 0, 0, 0, 0, 267, 3409, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 1328, 267, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 1327, 1328,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 0, 3460, 3462,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	1947, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 1328, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 1327, 0, 0,
	0, 0, 1326, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	267, 1328, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3563, 0, 0, 0, 3567, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 0, 1326, 0,
	1326, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 1326, 0, 0,
	0, 0, 0, 0, 1328, 0, 3620, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 1326, 1326, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3663, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 1384, 0, 0, 1328, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 1384, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 1328, 1328, 1328, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	0, 1780, 1328, 0, 1327, 1327, 0, 0, 0, 0,
	1827, 0, 0, 0, 1385, 0, 0, 0, 1328, 0,
	0, 0, 267, 0, 1328, 0, 0, 1833, 0, 0,
	0, 0, 0, 1326, 1326, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	1328, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 2260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	0, 2260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2260, 0, 1327, 0,
	1327, 3974, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 1327,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 1327,
	1785, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	0, 1327, 0, 1327, 1327, 1327, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 1328, 0, 0, 0, 1818, 4023,
	0, 1828, 0, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 1328, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 1824, 0, 1825, 0, 807,
	0, 1326, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1326, 0, 0, 0, 0, 1800, 0, 267,
	0, 0, 1328, 0, 1326, 0, 1326, 0, 0, 0,
	0, 0, 1328, 0, 1328, 267, 0, 1328, 267, 0,
	0, 1326, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 267, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 1328, 1328, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 267,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 1385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 1328,
	1328, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 4165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2260, 1819, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 1328, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2260, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 4253, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	3694, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 1328, 267, 0, 1327, 1327, 0, 0, 0,
	0, 0, 1328, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4353, 0, 267, 267, 1384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1384, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 1326, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 1327, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 4488, 1484, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 1328, 0, 0,
	0, 0, 1326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 1326, 0, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 267, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 1833, 1326, 0, 0, 0, 1384, 0, 0,
	0, 1779, 0, 0, 807, 0, 0, 0, 267, 0,
	0, 1799, 0, 0, 0, 1326, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 1326, 4583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 1326, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1384, 0, 0, 1384,
	0, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4674, 0, 0, 0, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	4738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 1385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 0, 0, 1780, 1327, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 1327, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 1327, 0,
	0, 1817, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 1327,
	0, 0, 0, 0, 0, 3238, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 1327, 0, 0, 1326, 1385,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 1327,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1327, 1327, 1828, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 1326, 1326, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 1824, 0, 1825,
	1326, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 1384, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 1800,
	0, 1385, 0, 0, 0, 0, 0, 0, 1384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	1384, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	1326, 1326, 0, 0, 0, 0, 0, 0, 1777, 1778,
	1384, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	1326, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	1384, 0, 1326, 1779, 0, 1326, 0, 1385, 0, 0,
	0, 0, 0, 1799, 0, 0, 1384, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 1326, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 1326, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 1384, 0, 0, 0,
	0, 1326, 3237, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 1326, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 0, 0, 1818, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	1327, 1794, 1795, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 1326, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 1327, 1327, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 1384, 1385, 0, 0, 0, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1326, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 1384, 0, 0, 1326, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 1385, 0, 1385, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 3234, 0, 0,
	0, 0, 1327, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 1385, 0, 1327, 1785, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 1326, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 1326, 0, 1807, 1809, 0, 1327, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 0, 0, 1327, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 1327, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 1327,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 1327, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 3233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 1327, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 1387, 282, 283,
	1388, 1389, 1390, 1327, 1391, 629, 1392, 1393, 1394, 1395,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1396, 634, 294, 295,
	296, 297, 298, 299, 1397, 1398, 0, 300, 635, 636,
	637, 1399, 301, 302, 638, 1400, 1329, 1401, 303, 304,
	305, 306, 307, 308, 309, 0, 1402, 311, 312, 313,
	310, 314, 1403, 315, 0, 316, 317, 318, 319, 320,
	321, 1404, 322, 323, 324, 1186, 325, 326, 327, 1405,
	1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1412, 337, 334, 335, 1413,
	338, 336, 339, 1414, 340, 341, 342, 1415, 1416, 343,
	344, 345, 1417, 346, 347, 1418, 348, 349, 350, 1419,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1420, 272, 1421, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1422, 369, 370, 1423, 1424, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1425, 383, 647, 1426, 648, 384, 1427, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	1428, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1429, 1188, 400, 652, 653, 1430,
	654, 1431, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1432, 414, 416, 415, 1433, 417, 656, 1193, 418,
	419, 1194, 1434, 420, 0, 0, 0, 421, 422, 425,
	1435, 1436, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1437, 274,
	1197, 466, 467, 1438, 657, 468, 658, 470, 471, 1439,
	0, 472, 0, 1440, 1441, 474, 475, 476, 1442, 1443,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1444,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1445, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1446, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1447, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1448, 555,
	556, 554, 557, 558, 559, 1449, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1450, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1451, 587, 588, 0, 584, 575, 1452, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1453, 597, 670, 671,
	672, 673, 1454, 606, 1455, 598, 599, 600, 674, 601,
	675, 1456, 602, 603, 604, 605, 0, 607, 608, 1457,
	1458, 609, 610, 611, 613, 614, 612, 615, 1459, 616,
	1460, 0, 617, 618, 619, 676, 677, 678, 1461, 621,
	620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 2729, 0, 0, 0, 0, 0, 0, 0,
	2730, 275, 277, 276, 278, 279, 280, 281, 1387, 282,
	283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394,
	1395, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 1396, 634, 294,
	295, 296, 297, 298, 299, 1397, 1398, 0, 300, 635,
	636, 637, 1399, 301, 302, 638, 1400, 1329, 1401, 303,
	304, 305, 306, 307, 308, 309, 0, 1402, 311, 312,
	313, 310, 314, 1403, 315, 0, 316, 317, 318, 319,
	320, 321, 1404, 322, 323, 324, 1186, 325, 326, 327,
	1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 1412, 337, 334, 335,
	1413, 338, 336, 339, 1414, 340, 341, 342, 1415, 1416,
	343, 344, 345, 1417, 346, 347, 1418, 348, 349, 350,
	1419, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 1420, 272, 1421,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 1422, 369, 370, 1423, 1424, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 1425, 383, 647, 1426, 648, 384, 1427, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 1428, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 1429, 1188, 400, 652, 653,
	1430, 654, 1431, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1432, 414, 416, 415, 1433, 417, 656, 1193,
	418, 419, 1194, 1434, 420, 0, 0, 0, 421, 422,
	425, 1435, 1436, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1437,
	274, 1197, 466, 467, 1438, 657, 468, 658, 470, 471,
	1439, 0, 472, 0, 1440, 1441, 474, 475, 476, 1442,
	1443, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	1444, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 1445, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 1446, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 1447, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 1448,
	555, 556, 554, 557, 558, 559, 1449, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 1450, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 1451, 587, 588, 0, 584, 575, 1452, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 1453, 597, 670,
	671, 672, 673, 1454, 606, 1455, 598, 599, 600, 674,
	601, 675, 1456, 602, 603, 604, 605, 0, 607, 608,
	1457, 1458, 609, 610, 611, 613, 614, 612, 615, 1459,
	616, 1460, 0, 617, 618, 619, 676, 677, 678, 1461,
	621, 620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 3703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3705,
	275, 277, 276, 278, 279, 280, 281, 1387, 282, 283,
	1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1396, 634, 294, 295,
	296, 297, 298, 299, 1397, 1398, 0, 300, 635, 636,
	637, 1399, 301, 302, 638, 1400, 1329, 1401, 303, 304,
	305, 306, 307, 308, 309, 0, 1402, 311, 312, 313,
	310, 314, 1403, 315, 0, 316, 317, 318, 319, 320,
	321, 1404, 322, 323, 324, 1186, 325, 326, 327, 1405,
	1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1412, 337, 334, 335, 1413,
	338, 336, 339, 1414, 340, 341, 342, 1415, 1416, 343,
	344, 345, 1417, 346, 347, 1418, 348, 349, 350, 1419,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1420, 272, 1421, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1422, 369, 370, 1423, 1424, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1425, 383, 647, 1426, 648, 384, 1427, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	1428, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1429, 1188, 400, 652, 653, 1430,
	654, 1431, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1432, 414, 416, 415, 1433, 417, 656, 1193, 418,
	419, 1194, 1434, 420, 0, 0, 0, 421, 422, 425,
	1435, 1436, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1437, 274,
	1197, 466, 467, 1438, 657, 468, 658, 470, 471, 1439,
	0, 472, 0, 1440, 1441, 474, 475, 476, 1442, 1443,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1444,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1445, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1446, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1447, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1448, 555,
	556, 554, 557, 558, 559, 1449, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1450, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1451, 587, 588, 0, 584, 575, 1452, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1453, 597, 670, 671,
	672, 673, 1454, 606, 1455, 598, 599, 600, 674, 601,
	675, 1456, 602, 603, 604, 605, 0, 607, 608, 1457,
	1458, 609, 610, 611, 613, 614, 612, 615, 1459, 616,
	1460, 0, 617, 618, 619, 676, 677, 678, 1461, 621,
	620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4094, 275, 277, 276, 278, 279, 280, 281,
	1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392,
	1393, 1394, 1395, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 1396,
	634, 294, 295, 296, 297, 298, 299, 1397, 1398, 0,
	300, 635, 636, 637, 1399, 301, 302, 638, 1400, 1329,
	1401, 303, 304, 305, 306, 307, 308, 309, 0, 1402,
	311, 312, 313, 310, 314, 1403, 315, 0, 316, 317,
	318, 319, 320, 321, 1404, 322, 323, 324, 1186, 325,
	326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 1412, 337,
	334, 335, 1413, 338, 336, 339, 1414, 340, 341, 342,
	1415, 1416, 343, 344, 345, 1417, 346, 347, 1418, 348,
	349, 350, 1419, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 1420,
	272, 1421, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 1422, 369, 370, 1423, 1424, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 1425, 383, 647, 1426, 648, 384,
	1427, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 1428, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 1429, 1188, 400,
	652, 653, 1430, 654, 1431, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1432, 414, 416, 415, 1433, 417,
	656, 1193, 418, 419, 1194, 1434, 420, 0, 0, 0,
	421, 422, 425, 1435, 1436, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1437, 274, 1197, 466, 467, 1438, 657, 468, 658,
	470, 471, 1439, 0, 472, 0, 1440, 1441, 474, 475,
	476, 1442, 1443, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 1444, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 1445, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 1446, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 1447, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 1448, 555, 556, 554, 557, 558, 559, 1449, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 1450, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 1451, 587, 588, 0, 584, 575, 1452,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 1453,
	597, 670, 671, 672, 673, 1454, 606, 1455, 598, 599,
	600, 674, 601, 675, 1456, 602, 603, 604, 605, 0,
	607, 608, 1457, 1458, 609, 610, 611, 613, 614, 612,
	615, 1459, 616, 1460, 0, 617, 618, 619, 676, 677,
	678, 1461, 621, 620, 622, 679, 1462, 623, 1463, 1464,
	1465, 1466, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4304, 275, 277, 276, 278, 279, 280, 281, 1387, 282,
	283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394,
	1395, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 1396, 634, 294,
	295, 296, 297, 298, 299, 1397, 1398, 0, 300, 635,
	636, 637, 1399, 301, 302, 638, 1400, 1329, 1401, 303,
	304, 305, 306, 307, 308, 309, 0, 1402, 311, 312,
	313, 310, 314, 1403, 315, 0, 316, 317, 318, 319,
	320, 321, 1404, 322, 323, 324, 1186, 325, 326, 327,
	1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 1412, 337, 334, 335,
	1413, 338, 336, 339, 1414, 340, 341, 342, 1415, 1416,
	343, 344, 345, 1417, 346, 347, 1418, 348, 349, 350,
	1419, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 1420, 272, 1421,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 1422, 369, 370, 1423, 1424, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 1425, 383, 647, 1426, 648, 384, 1427, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 1428, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 1429, 1188, 400, 652, 653,
	1430, 654, 1431, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1432, 414, 416, 415, 1433, 417, 656, 1193,
	418, 419, 1194, 1434, 420, 0, 0, 0, 421, 422,
	425, 1435, 1436, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1437,
	274, 1197, 466, 467, 1438, 657, 468, 658, 470, 471,
	1439, 0, 472, 0, 1440, 1441, 474, 475, 476, 1442,
	1443, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	1444, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 1445, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 1446, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 1447, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 1448,
	555, 556, 554, 557, 558, 559, 1449, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 1450, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 1451, 587, 588, 0, 584, 575, 1452, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 1453, 597, 670,
	671, 672, 673, 1454, 606, 1455, 598, 599, 600, 674,
	601, 675, 1456, 602, 603, 604, 605, 0, 607, 608,
	1457, 1458, 609, 610, 611, 613, 614, 612, 615, 1459,
	616, 1460, 0, 617, 618, 619, 676, 677, 678, 1461,
	621, 620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4174, 275,
	277, 276, 278, 279, 280, 281, 1387, 282, 283, 1388,
	1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 1396, 634, 294, 295, 296,
	297, 298, 299, 1397, 1398, 0, 300, 635, 636, 637,
	1399, 301, 302, 638, 1400, 1329, 1401, 303, 304, 305,
	306, 307, 308, 309, 0, 1402, 311, 312, 313, 310,
	314, 1403, 315, 0, 316, 317, 318, 319, 320, 321,
	1404, 322, 323, 324, 1186, 325, 326, 327, 1405, 1406,
	1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 1412, 337, 334, 335, 1413, 338,
	336, 339, 1414, 340, 341, 342, 1415, 1416, 343, 344,
	345, 1417, 346, 347, 1418, 348, 349, 350, 1419, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 1420, 272, 1421, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	1422, 369, 370, 1423, 1424, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1425, 383, 647, 1426, 648, 384, 1427, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 1428,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1429, 1188, 400, 652, 653, 1430, 654,
	1431, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1432, 414, 416, 415, 1433, 417, 656, 1193, 418, 419,
	1194, 1434, 420, 0, 0, 0, 421, 422, 425, 1435,
	1436, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1437, 274, 1197,
	466, 467, 1438, 657, 468, 658, 470, 471, 1439, 0,
	472, 0, 1440, 1441, 474, 475, 476, 1442, 1443, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1444, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 1445, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	1446, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 1447, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 1448, 555, 556,
	554, 557, 558, 559, 1449, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 1450, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 1451,
	587, 588, 0, 584, 575, 1452, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 1453, 597, 670, 671, 672,
	673, 1454, 606, 1455, 598, 599, 600, 674, 601, 675,
	1456, 602, 603, 604, 605, 0, 607, 608, 1457, 1458,
	609, 610, 611, 613, 614, 612, 615, 1459, 616, 1460,
	0, 617, 618, 619, 676, 677, 678, 1461, 621, 620,
	622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4024, 275, 277, 276,
	278, 279, 280, 281, 1387, 282, 283, 1388, 1389, 1390,
	0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 1396, 634, 294, 295, 296, 297, 298,
	299, 1397, 1398, 0, 300, 635, 636, 637, 1399, 301,
	302, 638, 1400, 1329, 1401, 303, 304, 305, 306, 307,
	308, 309, 0, 1402, 311, 312, 313, 310, 314, 1403,
	315, 0, 316, 317, 318, 319, 320, 321, 1404, 322,
	323, 324, 1186, 325, 326, 327, 1405, 1406, 1408, 1407,
	1409, 1410, 1411, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 1412, 337, 334, 335, 1413, 338, 336, 339,
	1414, 340, 341, 342, 1415, 1416, 343, 344, 345, 1417,
	346, 347, 1418, 348, 349, 350, 1419, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 1420, 272, 1421, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 1422, 369,
	370, 1423, 1424, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 1425, 383,
	647, 1426, 648, 384, 1427, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 1428, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 1429, 1188, 400, 652, 653, 1430, 654, 1431, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 1432, 414,
	416, 415, 1433, 417, 656, 1193, 418, 419, 1194, 1434,
	420, 0, 0, 0, 421, 422, 425, 1435, 1436, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1437, 274, 1197, 466, 467,
	1438, 657, 468, 658, 470, 471, 1439, 0, 472, 0,
	1440, 1441, 474, 475, 476, 1442, 1443, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 1444, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 1445, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 1446, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	1447, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 1448, 555, 556, 554, 557,
	558, 559, 1449, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	1450, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 1451, 587, 588,
	0, 584, 575, 1452, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 1453, 597, 670, 671, 672, 673, 1454,
	606, 1455, 598, 599, 600, 674, 601, 675, 1456, 602,
	603, 604, 605, 0, 607, 608, 1457, 1458, 609, 610,
	611, 613, 614, 612, 615, 1459, 616, 1460, 0, 617,
	618, 619, 676, 677, 678, 1461, 621, 620, 622, 679,
	1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3721, 275, 277, 276, 278, 279,
	280, 281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391,
	629, 1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 1396, 634, 294, 295, 296, 297, 298, 299, 1397,
	1398, 0, 300, 635, 636, 637, 1399, 301, 302, 638,
	1400, 1329, 1401, 303, 304, 305, 306, 307, 308, 309,
	0, 1402, 311, 312, 313, 310, 314, 1403, 315, 0,
	316, 317, 318, 319, 320, 321, 1404, 322, 323, 324,
	1186, 325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410,
	1411, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	1412, 337, 334, 335, 1413, 338, 336, 339, 1414, 340,
	341, 342, 1415, 1416, 343, 344, 345, 1417, 346, 347,
	1418, 348, 349, 350, 1419, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 1420, 272, 1421, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 1422, 369, 370, 1423,
	1424, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 1425, 383, 647, 1426,
	648, 384, 1427, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 1428, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 1429,
	1188, 400, 652, 653, 1430, 654, 1431, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 1432, 414, 416, 415,
	1433, 417, 656, 1193, 418, 419, 1194, 1434, 420, 0,
	0, 0, 421, 422, 425, 1435, 1436, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1437, 274, 1197, 466, 467, 1438, 657,
	468, 658, 470, 471, 1439, 0, 472, 0, 1440, 1441,
	474, 475, 476, 1442, 1443, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 1444, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	1445, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 1446, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 1447, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 1448, 555, 556, 554, 557, 558, 559,
	1449, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 1450, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 1451, 587, 588, 0, 584,
	575, 1452, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 1453, 597, 670, 671, 672, 673, 1454, 606, 1455,
	598, 599, 600, 674, 601, 675, 1456, 602, 603, 604,
	605, 0, 607, 608, 1457, 1458, 609, 610, 611, 613,
	614, 612, 615, 1459, 616, 1460, 0, 617, 618, 619,
	676, 677, 678, 1461, 621, 620, 622, 679, 1462, 623,
	1463, 1464, 1465, 1466, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3548, 275, 277, 276, 278, 279, 280, 281,
	1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392,
	1393, 1394, 1395, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 1396,
	634, 294, 295, 296, 297, 298, 299, 1397, 1398, 0,
	300, 635, 636, 637, 1399, 301, 302, 638, 1400, 1329,
	1401, 303, 304, 305, 306, 307, 308, 309, 0, 1402,
	311, 312, 313, 310, 314, 1403, 315, 0, 316, 317,
	318, 319, 320, 321, 1404, 322, 323, 324, 1186, 325,
	326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 1412, 337,
	334, 335, 1413, 338, 336, 339, 1414, 340, 341, 342,
	1415, 1416, 343, 344, 345, 1417, 346, 347, 1418, 348,
	349, 350, 1419, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 1420,
	272, 1421, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 1422, 369, 370, 1423, 1424, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 1425, 383, 647, 1426, 648, 384,
	1427, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 1428, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 1429, 1188, 400,
	652, 653, 1430, 654, 1431, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1432, 414, 416, 415, 1433, 417,
	656, 1193, 418, 419, 1194, 1434, 420, 0, 0, 0,
	421, 422, 425, 1435, 1436, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1437, 274, 1197, 466, 467, 1438, 657, 468, 658,
	470, 471, 1439, 0, 472, 0, 1440, 1441, 474, 475,
	476, 1442, 1443, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 1444, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 1445, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 1446, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 1447, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 1448, 555, 556, 554, 557, 558, 559, 1449, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 1450, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 1451, 587, 588, 0, 584, 575, 1452,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 1453,
	597, 670, 671, 672, 673, 1454, 606, 1455, 598, 599,
	600, 674, 601, 675, 1456, 602, 603, 604, 605, 0,
	607, 608, 1457, 1458, 609, 610, 611, 613, 614, 612,
	615, 1459, 616, 1460, 0, 617, 618, 619, 676, 677,
	678, 1461, 621, 620, 622, 679, 1462, 623, 1463, 1464,
	1465, 1466, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2586, 275, 277, 276, 278, 279, 280, 281, 1387, 282,
	283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394,
	1395, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 1396, 634, 294,
	295, 296, 297, 298, 299, 1397, 1398, 0, 300, 635,
	636, 637, 1399, 301, 302, 638, 1400, 1329, 1401, 303,
	304, 305, 306, 307, 308, 309, 0, 1402, 311, 312,
	313, 310, 314, 1403, 315, 0, 316, 317, 318, 319,
	320, 321, 1404, 322, 323, 324, 1186, 325, 326, 327,
	1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 1412, 337, 334, 335,
	1413, 338, 336, 339, 1414, 340, 341, 342, 1415, 1416,
	343, 344, 345, 1417, 346, 347, 1418, 348, 349, 350,
	1419, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 1420, 272, 1421,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 1422, 369, 370, 1423, 1424, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 1425, 383, 647, 1426, 648, 384, 1427, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 1428, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 1429, 1188, 400, 652, 653,
	1430, 654, 1431, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1432, 414, 416, 415, 1433, 417, 656, 1193,
	418, 419, 1194, 1434, 420, 0, 0, 0, 421, 422,
	425, 1435, 1436, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1437,
	274, 1197, 466, 467, 1438, 657, 468, 658, 470, 471,
	1439, 0, 472, 0, 1440, 1441, 474, 475, 476, 1442,
	1443, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	1444, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 1445, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 1446, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 1447, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 1448,
	555, 556, 554, 557, 558, 559, 1449, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 1450, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 1451, 587, 588, 0, 584, 575, 1452, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 1453, 597, 670,
	671, 672, 673, 1454, 606, 1455, 598, 599, 600, 674,
	601, 675, 1456, 602, 603, 604, 605, 0, 607, 608,
	1457, 1458, 609, 610, 611, 613, 614, 612, 615, 1459,
	616, 1460, 0, 617, 618, 619, 676, 677, 678, 1461,
	621, 620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	1478, 0, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2221, 275,
	277, 276, 278, 279, 280, 281, 1387, 282, 283, 1388,
	1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 1396, 634, 294, 295, 296,
	297, 298, 299, 1397, 1398, 0, 300, 635, 636, 637,
	1399, 301, 302, 638, 1400, 1329, 1401, 303, 304, 305,
	306, 307, 308, 309, 0, 1402, 311, 312, 313, 310,
	314, 1403, 315, 0, 316, 317, 318, 319, 320, 321,
	1404, 322, 323, 324, 1186, 325, 326, 327, 1405, 1406,
	1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 1412, 337, 334, 335, 1413, 338,
	336, 339, 1414, 340, 341, 342, 1415, 1416, 343, 344,
	345, 1417, 346, 347, 1418, 348, 349, 350, 1419, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 1420, 272, 1421, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	1422, 369, 370, 1423, 1424, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1425, 383, 647, 1426, 648, 384, 1427, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 1428,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1429, 1188, 400, 652, 653, 1430, 654,
	1431, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1432, 414, 416, 415, 1433, 417, 656, 1193, 418, 419,
	1194, 1434, 420, 0, 0, 0, 421, 422, 425, 1435,
	1436, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1437, 274, 1197,
	466, 467, 1438, 657, 468, 658, 470, 471, 1439, 0,
	472, 0, 1440, 1441, 474, 475, 476, 1442, 1443, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1444, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 1445, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	1446, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 1447, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 1448, 555, 556,
	554, 557, 558, 559, 1449, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 1450, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 1451,
	587, 588, 0, 584, 575, 1452, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 1453, 597, 670, 671, 672,
	673, 1454, 606, 1455, 598, 599, 600, 674, 601, 675,
	1456, 602, 603, 604, 605, 0, 607, 608, 1457, 1458,
	609, 610, 611, 613, 614, 612, 615, 1459, 616, 1460,
	0, 617, 618, 619, 676, 677, 678, 1461, 621, 620,
	622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625,
	680, 626, 627, 628, 1379, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392,
	1393, 1394, 1395, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 1396,
	634, 294, 295, 296, 297, 298, 299, 1397, 1398, 0,
	300, 635, 636, 637, 1399, 301, 302, 638, 1400, 1329,
	1401, 303, 304, 305, 306, 307, 308, 309, 0, 1402,
	311, 312, 313, 310, 314, 1403, 315, 0, 316, 317,
	318, 319, 320, 321, 1404, 322, 323, 324, 1186, 325,
	326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 1412, 337,
	334, 335, 1413, 338, 336, 339, 1414, 340, 341, 342,
	1415, 1416, 343, 344, 345, 1417, 346, 347, 1418, 348,
	349, 350, 1419, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 1420,
	272, 1421, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 1422, 369, 370, 1423, 1424, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 1425, 383, 647, 1426, 648, 384,
	1427, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 1428, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 1429, 1188, 400,
	652, 653, 1430, 654, 1431, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1432, 414, 416, 415, 1433, 417,
	656, 1193, 418, 419, 1194, 1434, 420, 0, 0, 0,
	421, 422, 425, 1435, 1436, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1437, 274, 1197, 466, 467, 1438, 657, 468, 658,
	470, 471, 1439, 0, 472, 0, 1440, 1441, 474, 475,
	476, 1442, 1443, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 1444, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 1445, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 1446, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 1447, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 1448, 555, 556, 554, 557, 558, 559, 1449, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 1450, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 1451, 587, 588, 0, 584, 575, 1452,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 1453,
	597, 670, 671, 672, 673, 1454, 606, 1455, 598, 599,
	600, 674, 601, 675, 1456, 602, 603, 604, 605, 0,
	607, 608, 1457, 1458, 609, 610, 611, 613, 614, 612,
	615, 1459, 616, 1460, 0, 617, 618, 619, 676, 677,
	678, 1461, 621, 620, 622, 679, 1462, 623, 1463, 1464,
	1465, 1466, 624, 625, 680, 626, 627, 628, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391,
	629, 1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 1396, 634, 294, 295, 296, 297, 298, 299, 1397,
	1398, 0, 300, 635, 636, 637, 1399, 301, 302, 638,
	1400, 1329, 1401, 303, 304, 305, 306, 307, 308, 309,
	0, 1402, 311, 312, 313, 310, 314, 1403, 315, 0,
	316, 317, 318, 319, 320, 321, 1404, 322, 323, 324,
	1186, 325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410,
	1411, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	1412, 337, 334, 335, 1413, 338, 336, 339, 1414, 340,
	341, 342, 1415, 1416, 343, 344, 345, 1417, 346, 347,
	1418, 348, 349, 350, 1419, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 1420, 272, 1421, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 1422, 369, 370, 1423,
	1424, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 1425, 383, 647, 1426,
	648, 384, 1427, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 1428, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 1429,
	1188, 400, 652, 653, 1430, 654, 1431, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 1432, 414, 416, 415,
	1433, 417, 656, 1193, 418, 419, 1194, 1434, 420, 0,
	0, 0, 421, 422, 425, 1435, 1436, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1437, 274, 1197, 466, 467, 1438, 657,
	468, 658, 470, 471, 1439, 0, 472, 0, 1440, 1441,
	474, 475, 476, 1442, 1443, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 1444, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	1445, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 1446, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 1447, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 1448, 555, 556, 554, 557, 558, 559,
	1449, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 1450, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 1451, 587, 588, 0, 584,
	575, 1452, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 1453, 597, 670, 671, 672, 673, 1454, 606, 1455,
	598, 599, 600, 674, 601, 675, 1456, 602, 603, 604,
	605, 0, 607, 608, 1457, 1458, 609, 610, 611, 613,
	614, 612, 615, 1459, 616, 1460, 0, 617, 618, 619,
	676, 677, 678, 1461, 621, 620, 622, 679, 1462, 623,
	1463, 1464, 1465, 1466, 624, 625, 680, 626, 627, 628,
	2561, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 2558, 282, 283, 0,
	0, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 2559, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 2557, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 2560, 0, 0, 0,
	0, 0, 0, 1105, 2556, 0, 1065, 1103, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 234, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 236, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	1603, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 228, 624, 625, 680, 626, 627, 628,
	1079, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 1858,
	1856, 0, 0, 1103, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 234, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 236, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 1603, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 228, 624, 625,
	680, 626, 627, 628, 1079, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 1858, 3188, 0, 0, 1103, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 234, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 236,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 1603, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 228, 624, 625, 680, 626, 627, 628, 1079, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 1858, 1856, 0,
	0, 1103, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 2690, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 2695, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 2691, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 2692, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 2606, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 0, 0, 0, 0, 0, 0, 0, 1105, 2604,
	0, 2603, 1103, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 0, 0, 0,
	0, 0, 0, 0, 1105, 2601, 0, 2600, 1103, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 0, 0, 0, 0, 0, 0, 0,
	1105, 2598, 0, 2597, 1103, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 0,
	0, 0, 0, 0, 0, 0, 1105, 2595, 0, 1699,
	1103, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 1698, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 1068, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 1083, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 0, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 4647, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 1083, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 2438, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 2437, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 1083,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 0, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 4387, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 1083, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 3986,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 1926, 0, 0,
	0, 0, 0, 0, 1105, 0, 0, 0, 1103, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 3699, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 0, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	1926, 0, 0, 0, 0, 0, 0, 1105, 0, 0,
	0, 1103, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 2695, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 0, 0, 0, 0, 0, 0, 0,
	1105, 1856, 0, 2700, 1103, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	2698, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 2686, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 2674, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 2672, 0, 2663, 2670, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 2666, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 2667, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 2668, 435, 2665, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 2669, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 2664, 628, 1079, 0, 0, 2660, 0,
	2663, 2670, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 2666,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 2667, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	2668, 435, 2665, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 2669, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	2664, 628, 1079, 0, 0, 0, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 0, 0, 0, 0, 0, 1864, 0, 1105, 0,
	0, 0, 1103, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 2417, 282, 283,
	0, 0, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 2381, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 2357, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 1704, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 1633,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 1628, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 1619, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	1614, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 1526, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1525,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 1520, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1519, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 1513, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 1331, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 0, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 4696,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 4695, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 0,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 4694, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 4696, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 4695, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 0, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 4323, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	4324, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 4322, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 0, 0, 1121, 1093, 1094, 1095, 3155,
	3156, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 0, 1121, 1093, 1094, 1095, 3153, 3154, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 0, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 2425, 2426, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 0,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 2682, 0, 0, 0, 0, 0, 0, 2680, 2681,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 0, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 3148, 3149, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 2109, 2110, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 0, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 4696, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 0, 1148, 0, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 0, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 4695, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 1065, 0, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	0, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 1144,
	0, 300, 635, 636, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1229, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 274, 1197, 466, 467, 0, 1149, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 1235, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 1237, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 234, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 0, 584, 575,
	236, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 1603,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 228, 624, 625, 680, 626, 627, 628, 1243,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 1233, 0, 1950, 0,
	0, 1145, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 1144, 0, 300, 635, 636, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1229, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 274, 1197, 466, 467, 0,
	1149, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	1235, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	1237, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 234, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 0,
	584, 575, 236, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 1603, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 228, 624, 625, 680, 626, 627,
	628, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 3312, 0, 1243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	1950, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1145, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 1144, 0, 300, 635,
	636, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1229, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	274, 1197, 466, 467, 0, 1149, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 1235, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 1237, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 1225, 0, 1243,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1145, 0, 1233, 0, 1231, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 1144, 0, 300, 635, 636, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1229, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 274, 1197, 466, 467, 0,
	1149, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	1235, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	1237, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 1243, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1145, 0, 1233, 0,
	1231, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 1144, 0, 300, 635,
	636, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1229, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	274, 1197, 466, 467, 0, 1149, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 1235, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 1237, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 1243,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1145, 0, 1233, 0, 1231, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 1144, 0, 300, 635, 636, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 274, 1197, 466, 467, 0,
	1149, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 1243, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1145, 0, 0, 0,
	4145, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 1144, 0, 300, 635,
	636, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	274, 1197, 466, 467, 0, 1149, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 1237, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 2529, 2530, 2531, 2548,
	2549, 2550, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 2551, 0, 629, 0,
	0, 0, 0, 284, 285, 1848, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 1833,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 2541, 0,
	311, 312, 313, 310, 314, 0, 315, 2537, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 2542, 2543, 2544, 2545, 365, 366, 367, 644,
	0, 0, 2536, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 2546, 2547, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 2539,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 2540, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 1832, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 1065, 0, 1324, 2526, 2527,
	2528, 2552, 2538, 2532, 0, 2534, 2535, 2533, 2520, 2521,
	2522, 2523, 2524, 2525, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	1329, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 0, 1197, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 234, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	236, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 1603,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 228, 624, 625, 680, 626, 627, 628, 0,
	0, 229, 1600, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 189, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 234,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 236, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 1603, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 228,
	624, 625, 680, 626, 627, 628, 1324, 1323, 229, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 189, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1324, 1323,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 1625, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1324, 1323, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 3614,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 2299, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1324, 2213, 0, 0, 0, 0, 2214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 1625, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 2212, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1324, 1323, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 1625, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 1065, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1609, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 234, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 236,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 1603, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 269, 0,
	0, 228, 624, 625, 680, 626, 627, 628, 0, 0,
	229, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 189, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 1243, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1145, 0, 0, 0, 1964,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 1144, 0, 300, 635, 636,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 274,
	1197, 466, 467, 0, 1149, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 269, 3057, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 4863, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 269, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 3564, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 269, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1597, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 3045, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	3724, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 901, 623, 806, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 2290, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 813,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 899, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 811, 589, 590, 591,
	592, 593, 812, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 806, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 2031, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 816, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 813, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 2030, 550,
	551, 552, 553, 0, 2032, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 811, 589, 590, 591, 592, 593, 812, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 2029,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 806, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 1982, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 816, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 813,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 1981, 550, 551, 552, 553, 0, 1983,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 811, 589, 590, 591,
	592, 593, 812, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 1980, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 804, 0, 806, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 816, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 813, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	811, 589, 590, 591, 592, 593, 812, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 2004, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 0,
	0, 816, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 0, 2010, 0, 292, 2000, 293, 2016,
	0, 2023, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 2026, 2027, 0, 0, 301, 302, 0, 0,
	1329, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 1168, 333, 2014, 2013, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 0, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 0, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	2012, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 2021, 2022, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 0, 0, 0,
	384, 0, 385, 386, 387, 388, 389, 0, 0, 0,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1188,
	400, 2007, 2008, 0, 2003, 0, 402, 403, 1190, 0,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 0, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 0, 1197, 466, 467, 0, 0, 468,
	2015, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 0, 1198, 479, 1199,
	0, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 1997, 493, 494, 495,
	1998, 496, 497, 498, 0, 499, 0, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	2011, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 0, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 2009, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 2025, 578, 579, 580,
	581, 0, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 2017, 2018, 2019, 2020, 0, 606, 0, 598,
	599, 600, 0, 601, 0, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 0,
	2001, 2024, 0, 621, 620, 622, 0, 0, 623, 0,
	0, 0, 0, 624, 625, 0, 626, 627, 628, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 1991, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 813, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 811, 589, 590, 591, 592, 593, 812, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 806, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 816, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	813, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 2336,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 2337, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 811, 589, 590,
	591, 592, 593, 812, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 2338, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 816, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 2075, 0, 1324, 2042, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 816, 0, 629, 0, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 2039, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 2040, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 2036, 623, 1324, 2042, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 1329, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 2039, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 0, 1197, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 2040, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 1324, 2042, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	1329, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 2039,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 0, 1197, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 2040,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1324,
	1323, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1329, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 0, 1197, 466, 467, 3918,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1324, 1323, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 1329, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 0, 1197, 466,
	467, 3526, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1653, 0, 1324, 1323, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 1329, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 1652, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 0, 1197, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 1651, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 1650, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1571, 0, 1324,
	1323, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1329, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1570,
	650, 651, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 0, 1197, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1531, 0, 1324, 1323, 0, 0, 0, 0, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1496, 0, 1324, 1323, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	1329, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1495, 650, 651,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 0, 1197, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1318,
	0, 1324, 1323, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 1329, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1317, 650, 651, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 0, 1197, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1324, 1323, 0, 0, 0, 0, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 1324, 2042, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 1329, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 2082, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 0, 1197, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 1324, 1323, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	1329, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 0, 1197, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 1324, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 2851, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 2848, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 2855, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 3070, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 2854, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 3067, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 3069, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 3066, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 2853,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 3068, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	2851, 301, 302, 638, 0, 0, 2845, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 2848, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 2855,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 2854, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 2844, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 2853, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 2852,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 1730, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 1729, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	1728, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 1731, 542, 549, 550, 551, 552, 553, 0,
	1727, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 1725, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	1726, 620, 622, 679, 1471, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1473, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 1235, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 1468, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 1470, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 1235,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1375, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1377, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 1235, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	712, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 711, 280, 281, 701, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	704, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	705, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 706, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 700, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 701, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 704, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 705, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 706,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 701, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 704, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 705, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 706, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 701, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 704, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 3929, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 706,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	1235, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 3469, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 3015, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 3014, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 2305, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 2246, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 2253, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 2252, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 2239, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 2241, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 2206, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 1235, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 1575, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1574, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 1488, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 1481, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 1483, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1308, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1307, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	1298, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1297, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 1295, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1294, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 1290, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1289, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 682, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 260, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 704, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 705, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 706, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 2345, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 2343, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 2341, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	2259, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 2061, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	2055, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	888, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	887, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 886, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 3070, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 4222,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 766, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1345, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 1343, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 771, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 770,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 1346,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 768, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 766,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1345, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 1343, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 771, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 770, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 1346, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 768, 671, 672, 673,
	0, 606, 0, 598, 1344, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 691, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 690, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 689, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 269, 3057, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 269, 4232, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 4513, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 4118,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 3884, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 2735, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 269,
	3057, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 3054, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 2315, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 2303, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 766, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 759, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 771, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 770, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 1608, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 768, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1581, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1580, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	1565, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1563, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 1558, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 1535, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1533, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 1493, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1476, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	1313, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1312, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 1304, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1303, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 1257, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 776, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 766, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 759, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 757, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 758, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 771, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 760, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 770, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 761, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 768, 671, 672, 673, 0, 606, 0, 598, 763,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 751, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 752, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 714, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	708, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 686, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 3584, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 770,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 768, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 3509, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 3487,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 3484, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 3434,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 3432, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 3417,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 3025, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 752, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 2277, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 0, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1275,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 1208,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 0, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 0, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 0,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	0, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 1777, 1778, 1779, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1814, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 1800, 0, 0,
	0, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 0, 1806, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 1819, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	3232, 0, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 1818, 0, 0, 1828, 0,
	0, 0, 0, 2563, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 0, 1800, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 1818, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 1826,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0,
	0, 0, 0, 4621, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 1806, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 1777, 1778, 1779, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 1799, 0,
	0, 1819, 0, 0, 0, 0, 0, 1796, 1814, 1808,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	1818, 0, 0, 1828, 4536, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 0, 0, 1785, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 1828, 0, 0, 1800,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 0, 0, 1806, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 1819, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 4497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 1818, 0, 0,
	1828, 4496, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 1800, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 1818, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 1826, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 0, 0, 4307, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 1808, 0,
	0, 0, 0, 1806, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 1777, 1778,
	1779, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	1799, 0, 0, 1819, 0, 0, 0, 0, 0, 1796,
	1814, 1808, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 1818, 0, 0, 1828, 4141, 0, 0, 0,
	0, 0, 1807, 1809, 0, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 1828, 0,
	0, 1800, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 1814, 1808, 0, 0, 0, 0,
	1806, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	1819, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	4071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1818,
	0, 0, 1828, 4070, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 1825, 0,
	0, 0, 0, 0, 0, 1794, 1795, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 1808, 0, 1800, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	1818, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 1826, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 4069, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1808, 0, 0, 0, 0, 1806, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 1799, 0, 0, 1819, 0, 0, 0, 0,
	0, 1796, 1814, 1808, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 1818, 0, 0, 1828, 3729, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 1800, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	0, 0, 1806, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 1819, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 3230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 1818, 0, 0, 1828, 3229, 0, 0, 0, 0,
	0, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 1808, 0,
	1800, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 1818, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 1807, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	1792, 1798, 1820, 1797, 1793, 1826, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0, 3228,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 0, 0, 0, 0, 1806, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 1777, 1778, 1779, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 1799, 0, 0, 1819, 0, 0,
	0, 0, 0, 1796, 1814, 1808, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 1818, 0, 0, 1828,
	3227, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 4770, 1824, 0, 1825, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 1828, 0, 0, 1800, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 1825, 0,
	0, 0, 0, 0, 0, 1794, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 4769, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 0, 0, 1806, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 1819, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 3192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 0, 0, 1785, 0, 3292, 0, 0,
	0, 3291, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 1818, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1808, 0, 1800, 0, 0, 3163, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 1826, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2708, 0, 0, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 2707, 1806,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 1819,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 1779, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 1817, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1818, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 1816, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 1825, 0, 0, 0, 1815,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 0, 1806, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 1815, 1062, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 1799, 0, 1819, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	0, 1806, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 1802, 1803, 1804, 1805, 1779,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 1799,
	0, 1819, 0, 0, 0, 0, 1817, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 1832, 1818, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 1816, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 3298,
	0, 0, 1800, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 1818, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 1807, 1809, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 1815, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1808, 0, 0, 1806, 3293,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 1815, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 1799, 1819, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 3710, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 1801,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 1833,
	0, 1785, 0, 0, 0, 0, 1819, 0, 1779, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 1796, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 1832, 0, 1818,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 1825, 0,
	0, 0, 0, 0, 0, 1794, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 1800, 1817,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 0, 1826, 1828, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 1824, 0, 1825,
	0, 1830, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1808, 1806, 0, 0, 3231, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 1826, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 1815, 0, 0, 1819, 1799, 0, 0, 0, 0,
	0, 0, 1830, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 3258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 0, 0, 1806, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1802,
	1803, 1804, 1805, 0, 0, 1833, 0, 0, 0, 1785,
	0, 0, 0, 0, 1779, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 1799, 1819, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 1796, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 0, 1832, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 0, 1800, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 1818, 0, 0, 1828,
	1826, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 1824, 0, 1825, 0, 0, 0, 1830,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 1806, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 1826,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 1815, 0, 0,
	0, 1799, 1819, 0, 0, 0, 0, 0, 1830, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 1806, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 1801, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 1833, 0, 1785, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 1817, 0, 0, 0, 0,
	0, 1819, 1799, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 1796, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 0, 1832, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 1800, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 1818, 0, 1826, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 0, 1825, 0, 1830, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
}

var sqlPact = [...]int{
	8597, -1000, -1000, -1000, -1000, 265, -1000, -1000, 263, 256,
	251, 243, 231, 226, 222, 221, 219, 218, 216, -1000,
	-1000, -1000, -1000, -1000, -1000, 215, -1000, -1000, 214, -1000,
	213, 211, 209, -1000, -1000, 208, -1000, 207, -1000, -1000,
	-1000, -1000, 206, 203, 200, 94866, 94314, 95411, 2301, 115730,
	101979, 1935, 84420, 115178, 83868, 114626, 2043, 7813, 114074, 2740,
	199, -1000, 113522, 198, 196, 193, -1000, 112970, -1000, 1832,
	-1000, 191, -1000, 5659, 70003, 188, 187, 186, 2517, 184,
	-1000, 183, 178, -1000, -1000, 175, -1000, 12050, 1489, -1000,
	171, 170, -1000, 298, 99778, 169, 165, 2403, 163, 161,
	68359, 159, 158, 2339, 2850, -1000, -1000, 2041, -1000, -1000,
	156, 155, 154, 153, 152, 143, 142, 141, 137, 132,
	130, 128, -1000, 125, 122, 118, 116, 115, -1000, 114,
	113, 112, -1000, 111, -1000, 110, 108, 106, 99, 98,
	97, 95, 94, 93, 92, 88, 86, 85, 83, 12972,
	-1000, -1000, 82, 1901, 1665, 1664, 1663, 1658, 1643, 980,
	80, 79, 78, 77, 74, 65, 63, 61, 59, 56,
	55, 54, 49, 42, 41, 36, 34, 33, 192, 32,
	31, 26, 25, 24, 22, 21, 2246, -1000, 1511, 899,
	32754, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 123360, 116275,
	20, -23, 18, -1000, 3309, 1114, 56675, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 329, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 556, 2038, 782, -1000, -1000, -1000, 112425,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2292, -26,
	-1000, 1986, -1000, -1000, -1000, -1000, -1000, 781, -1000, 2287,
	272, 2206, -1000, -1000, -1000, 3351, 2443, 3716, 3715, 3714,
	3708, 3705, 122815, 1786, 3704, 2523, 3703, 3702, 3701, 3700,
	3699, 3697, 3696, -1000, 93762, 1038, 93210, 92658, 3355, 111880,
	92106, 111328, 77807, 48746, 875, 3350, -1000, -1000, -1000, -1000,
	-1000, -1000, 116275, -1000, 1036, -1000, -1000, 3695, 3694, 1972,
	780, 101427, -1000, 1905, -1000, -1000, -1000, -1000, 963, 1252,
	34455, 34455, 319, -1000, -1000, -1000, -1000, -1000, -1000, 3692,
	3681, 3678, 3677, 3675, -1000, -1000, 83316, 25762, 82764, 82212,
	110776, 25198, 91554, 91002, 3674, 3673, 3669, 110224, 77243, 3462,
	3461, 1033, 1975, 1430, -1000, -1000, -1000, -1000, -1000, -1000,
	0, 72205, 3502, 116275, -1000, 318, -1000, -1000, -1000, -1000,
	-1000, -1000, 48179, 725, 47612, 699, 47045, 696, -1000, -1000,
	-1000, -1000, 76679, -1000, 109672, 2440, 3667, 3666, 1116, 3664,
	3242, 1662, 3663, 1840, 1201, 3662, 3660, 3659, 3657, 3653,
	3651, 3648, 1434, 109120, 2948, 1464, 108568, 1631, 76115, 1032,
	90450, 95411, 2614, 108016, 1399, 1270, -1000, -1000, -1000, -1000,
	3065, 2837, 2832, 1360, -1000, -1000, -1000, -1000, 60030, 5959,
	5490, -1000, -1000, 11165, 107464, 62840, 95411, 95411, -1000, -1000,
	-1000, -1000, -1000, 46478, 680, 45911, 868, -1000, -1000, 60592,
	2900, -1000, -1000, -1000, -1000, 45344, 633, 44777, 764, 116275,
	-1000, 2939, 1971, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2238, 1594, 3507, 2738, 75551, 2086, 1405, 3301, 3064, 3063,
	1538, 1955, 3062, 3646, 2599, 3056, 3055, 3045, 3044, 3041,
	1672, 2574, 525, 2573, 32187, 2928, 1659, 44210, 1496, 1527,
	3035, 3034, 3519, 1934, 1960, 1967, 81660, 3645, 3643, 3272,
	3031, 3026, 2789, 3016, -1000, 2899, 1425, -1000, -1000, -1000,
	-1000, 1488, -1000, -1000, -1000, -1000, -1000, 86055, -1000, -1000,
	1365, -1000, -1000, 1365, -1000, -1000, -1000, -1000, -1000, 1235,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1511, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2106, -1000, 1969, -1000, -1000, 2485, 3255,
	3255, 3255, 3346, 523, 518, -1000, 192, -1000, -1000, 131008,
	-1000, -1000, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313,
	2114, -1000, 778, -1000, -1000, 812, -1000, 774, 709, 646,
	-1000, -1000, -1000, -1000, -1000, -1000, 773, -1000, -1000, -1000,
	-1000, -1000, -1000, 3502, -1000, 28652, -1000, -1000, -1000, 366,
	772, 49313, -1000, -1000, 3534, 3533, 1103, -1000, 315, 981,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2938, 771, 769, -1000, 759, 756, 755, 754,
	752, -1000, -1000, -1000, 750, 749, 748, 746, 745, 742,
	741, 739, -1000, 1994, -1000, -1000, -1000, -1000, -1000, -1000,
	694, 691, 691, 691, -1000, 1024, -1000, -1000, -1000, 375,
	690, 336, 688, 686, 685, -1000, 735, 730, 727, 726,
	723, 720, 719, 718, 717, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1021, -1000, -1000, -1000, -1000, -1, 116275, -1000,
	556, -1, -1000, -1000, 712, -1000, 36752, 36752, 36752, -1000,
	-1000, 2285, 49313, -1000, 2392, -1000, 5, 5, 907, 58340,
	-1000, 55545, 907, 296, 821, 63944, -1000, 2894, -1000, -1000,
	710, 306, -1000, -1000, -1000, -1000, 26324, 2891, 116275, 116275,
	95411, 95411, 95411, 3637, 3152, 49313, -1000, -1000, 69449, 116275,
	95956, -1000, -1000, 3447, 70553, 68904, 116275, 2935, 73311, 3636,
	-1000, -1000, -1000, -1000, -1000, 3104, 3634, 3633, 3632, -1000,
	116275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 246, 3103,
	-1000, -1000, 99226, 246, 3100, -1000, 246, 3099, -1000, 98681,
	-1000, -1000, 2221, 3094, -1000, -1000, 250, 3093, -1000, -1000,
	-1000, 247, 3092, -1000, -1000, 305, -155, 3091, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	131008, -1000, -1000, -1000, 72759, -1000, 3267, -1000, -1000, 116275,
	-1000, 49313, -1000, 3446, 1702, 78921, 3403, -18, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2490, 2500, 1147, 2322, -1000,
	3190, 1451, 34455, 3230, -1000, -1000, -1000, -1000, 302, 26324,
	-1000, -1000, -1000, -1000, -1000, -1000, 2336, 3090, 1392, -1000,
	2321, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2057,
	3087, -1000, 1617, 3083, 1997, -1000, -1000, 2649, -1000, 3258,
	-1000, -1000, 1673, 3075, 6, -1000, -1000, 2173, -1000, -1000,
	-1000, -1000, 1957, -1000, 1316, 3073, -1000, 2732, 2732, 89898,
	3126, 62278, 60592, 72205, -4, -1000, -1000, -1000, -1000, -277,
	-1000, 24630, 131008, -1000, -1000, -1000, -1000, 1771, 131008, 965,
	-1000, -1000, 3071, -1000, 131008, 964, -1000, -1000, 3070, -1000,
	2933, -1000, -1000, 2397, -1000, -1000, 3631, -1000, -1000, 3627,
	-1000, 3626, 3625, 3624, -1000, 1576, 1942, 3623, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 89353, 2273, -1000, -1000,
	88249, 2930, -1000, 2396, 3401, -1000, 88801, 1031, -1000, 995,
	2395, -1000, 98136, 1086, 2393, -1000, 3620, 3347, 2659, 995,
	2390, -1000, -1000, -1000, -1000, -1000, 1037, -1000, 66153, -1000,
	66153, -1000, 1556, -1000, 122270, 5, 95411, 3502, -1000, -29,
	-1000, -1000, -1000, 1114, -1000, 59463, -1000, 59463, 100875, 78369,
	985, 828, 67807, 131008, -1000, -1000, -1000, -1000, 131008, -1000,
	-1000, -1000, -116, 2729, -1000, 78369, 61716, 131008, -1000, -1000,
	-1000, -1000, 131008, -1000, -1000, -1000, 78369, 88249, -1000, 106912,
	87704, -1000, -1000, 1403, 2560, -1000, -1000, -1000, 78369, 1318,
	78369, 78369, 78369, -1000, 106360, -1000, -1000, 2026, 1251, 3257,
	1958, 95411, -1000, 1959, -1000, -1000, -1000, 3286, 3125, 116275,
	-1000, -1000, 2929, -1000, 71660, 97591, -1000, 97046, -1000, 96501,
	-1000, 95411, -1000, 95411, -1000, 3619, 3618, 3617, -1000, -1000,
	3616, -1000, 3614, 3277, -1000, 636, 43643, 131008, 3266, -1000,
	3610, 3395, 2928, 131008, -1000, 3120, 1660, 1655, 116275, -1000,
	-1000, 116275, -1000, 116275, -1000, -1000, -1000, 1478, -1000, -1000,
	2488, -1000, -1000, -1000, -1000, 95411, 95411, 95411, 95411, 1459,
	-1000, 43076, -1000, -1000, 3011, 3609, 1623, -1000, 1835, -1000,
	2887, 3307, -1000, 1397, 1667, -1000, -1000, 253, -1000, -1000,
	-18, -1000, 121725, -1000, 2485, -1000, 116275, -1000, 2529, 2913,
	2922, 1583, 2306, 2580, -1000, 42509, 2567, 52715, 2310, 192,
	-1000, -1000, 192, 192, 33888, -1000, -1000, 70553, 70553, 26324,
	1247, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313,
	49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313,
	49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313,
	49313, 49313, 49313, 49313, 49313, 49313, 49313, 2258, 49313, 1232,
	49313, 49313, 49313, 49313, 2400, -1000, -1000, 1893, 585, 2011,
	709, -1000, -1000, -1000, 3491, 3491, 3491, 362, 362, 362,
	131386, 131386, 681, 3606, 812, -1000, 49313, -1000, 120, 58892,
	49313, 26888, -1000, 518, 12255, 2454, -1000, 515, 27484, -1000,
	-1000, -1000, 28652, 646, 41913, 49313, 1013, 131008, -1000, -1000,
	1435, 3506, 24062, 2956, 2780, 708, 893, 788, 31591, 30995,
	30399, 29803, 732, 49313, 49313, 49313, 49313, 49313, 49313, 49313,
	49313, -1000, -1000, 3511, -1000, 3506, -1000, -1000, -1000, -1000,
	3506, 1244, 1241, 3506, -1000, 3506, 3506, 8085, 8085, 41346,
	40779, 40212, 53282, 39645, 49313, 29236, 39078, 38511, -1000, 116275,
	-1, 3445, 49313, 237, -1000, 129770, -1000, 237, 237, 706,
	-30, 131008, 2570, 2570, 57230, 2421, 2142, 2142, 2142, -1000,
	907, 19489, 907, 105263, 2159, 907, 907, 293, 337, 514,
	54983, 2392, 105263, 803, 705, 17, 16, 15, -1000, -1000,
	12, 8, -1000, -1000, 95411, 703, 26888, 26324, 292, 1963,
	-39, 2585, 2584, 2582, -1000, 2581, -1000, 1763, -42, 1231,
	95411, 116275, 1273, 3604, -19, -1000, 280, -47, -1000, 1109,
	291, 3506, -1000, -1000, -1000, -1000, -1000, 3602, 3599, -1000,
	1019, 697, 695, 562, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 694, 691, 691, 691, -1000, 375, 690, 336,
	688, 686, 685, -1000, -1000, -1000, -1000, -1000, 2884, 95411,
	116275, 1269, 3598, -277, 95956, -35, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 116275, -1000, -1000, -1000, 3596, -1000,
	95411, -1000, -1000, 95411, 246, 3066, -1000, 95411, -1000, 95411,
	235, 3060, -1000, -1000, 116275, -1000, 95411, 95411, -1000, 116275,
	116275, 116275, 78369, 78369, 252, -1000, 95411, 900, -48, 1122,
	-18, -1000, -1000, -1000, 1365, -1000, 1845, -1000, -1000, -1000,
	-1000, -1000, -1000, 1413, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1103, -1000, -1000, -1000, -1000, -1000, -1000, 3498,
	3496, -2, -1000, -1000, 26324, -1000, -20, 1586, 1821, 1228,
	-1000, 81108, 2425, 3265, 3595, 2636, 3251, 1524, -1000, 1468,
	-1000, 3349, 86055, 3413, 3425, 1317, -1000, 2883, -1000, -1000,
	962, 1532, 1725, 1227, 1226, 86055, 1617, -1000, 70553, -1000,
	2639, 3343, 1423, 1408, 1423, 1423, 1402, -1000, 86055, 1698,
	1225, 1224, 1223, 2108, 1912, 1899, -1000, -1000, -1000, 1221,
	1215, 840, 1898, -1000, -22, 3410, 3424, 1313, -1000, 2882,
	1211, -1000, -1000, -1000, 3342, 95411, 26324, 1551, 1550, 1545,
	1688, 1209, -3, -1000, 3408, 1208, 1207, -1000, 1062, 5828,
	3208, -1000, 78369, 1062, 1062, 1996, 3042, 2699, 1690, -1000,
	2728, 904, 2727, -1000, -1000, -1000, 904, -4, 72205, 116275,
	287, -1000, 120, 49313, 49313, 120, 49313, 120, 3386, 3039,
	-1000, -1000, -1000, -1000, -1000, 3594, 1927, 2515, -1000, -1000,
	683, 2387, 2869, 116275, 2590, -10, 95411, -1000, 71115, 3038,
	73863, 1617, 2384, -1000, -1000, 87152, -1000, 3028, 556, 2382,
	-1000, 738, 3591, 3024, -1000, 121180, -1000, 3267, 1257, 3018,
	1071, 714, 3444, -1000, 714, 66703, -1000, 116275, -1000, 5,
	5068, 80018, -49, -50, 509, -1000, 105815, 116275, 1068, 80563,
	116275, 3219, 993, 60592, -1000, 60592, -57, -116, 2726, 1463,
	985, 985, 904, -1000, 904, -1000, 95411, 2920, -1000, -1000,
	78369, 985, 985, 985, -1000, -1000, -1000, -1000, 3590, 3589,
	3587, 3584, -1000, -1000, 994, 95411, 116275, 95411, -1000, -1000,
	1572, -1000, 286, -1000, 116275, -1000, 116275, 116275, 95411, -1000,
	994, 116275, 994, 116275, 994, 116275, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 120, -1000, -1000, 131008, -1000, 49313, -1000,
	-1000, 3582, 1578, -1000, 2918, -1000, 2915, -1000, 48, -1000,
	-1000, 1829, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3578,
	131008, -1000, 1925, -1000, -1000, -1000, -1000, 95411, 95411, 95411,
	95411, 116275, 3207, -1000, 116275, 3205, 95411, -1000, -1000, 86055,
	-1000, 2529, 2913, -1000, -1000, -1000, -1000, -1000, -1000, 1458,
	2232, -1000, 2552, -1000, 1498, -1000, -1000, -1000, 131008, 53849,
	-1000, -1000, 131008, 1787, -1000, 52148, 51581, -1000, -1000, 1639,
	95411, 2595, -1000, 2595, -231, -1000, 129396, 2551, 95411, -1000,
	-1000, -1000, -1000, -1000, 961, 767, 767, 1349, 1349, 1349,
	1349, 3359, 7238, 7166, 7078, 6968, 6968, 5410, 5410, 5410,
	5410, 5410, 6968, 4916, 362, 362, 4916, 4916, 4916, 4916,
	4916, 362, 362, 362, 6968, 6968, 6968, 362, 131386, 131275,
	11149, 49313, 49313, 1206, 1887, 585, 10112, 49313, 6921, 6921,
	6921, 6921, -1000, 2262, -1000, -1000, -1000, -1000, 2865, 679,
	53282, 53282, -1000, -1000, -1000, -1000, 28068, 49313, -1000, -1000,
	-1000, -1000, 37915, -1000, -1000, 128708, -311, 508, -1000, 285,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 507, -222, -9, -1000, 49313, 49313, 49313,
	506, -1000, 284, 49313, 116275, -1000, 124523, 798, -56, -1000,
	-59, 1436, -1000, 49313, -1000, -1000, 1203, -1000, 1202, 1198,
	1194, -1000, 675, 502, -1000, 283, -1000, 2044, 667, 662,
	49313, -1000, -1000, -1000, -1000, -1000, 128334, -1000, -1000, 128083,
	-1000, -1000, 127709, -1000, -1000, 127646, -1000, -1000, -1000, 130899,
	124460, 18755, 18317, 10951, 17882, 17415, -64, 501, -65, 500,
	955, 939, 498, 495, 494, -66, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -67, 493,
	-1000, 2863, -222, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 491, -1000, 487, -1000, 130632, -222, 476, 7506, -1000,
	53282, 53282, 53282, 53282, -1000, 474, -1000, 129145, -1000, 130521,
	37348, 37348, 37348, 447, 130243, 49313, -222, -72, -1000, -74,
	-1000, -1000, 603, -75, 1010, 36752, 56120, 26324, -1000, 1010,
	1010, 49313, -1000, 49313, 2565, -1000, -1000, -1000, -1000, 2562,
	2222, 2570, 57230, -1000, -1000, -1000, -1000, 105263, -1000, 3502,
	2637, -1000, 105263, -1000, -1000, 116275, 556, -1000, 105263, 105263,
	26324, 907, -1000, 907, 105263, 620, -1000, -1000, -1000, -1000,
	-1000, 445, 64499, -9, 279, 26324, 995, -1000, -1000, 2658,
	2658, 2658, 2658, -1000, -1000, 116275, 1190, -11, -95, 2724,
	-1000, 3468, -1000, 2017, -1000, 70553, -1000, 811, 1260, 26324,
	-1000, -1000, -1000, 659, -1000, 3506, 3506, -1000, 3506, 116275,
	2862, 210, 2713, -1000, 202, 73863, 73863, 3577, -1000, -1000,
	246, -1000, 95411, 246, 246, -1000, 95411, 95411, 2221, -1000,
	250, -1000, 247, -1000, -1000, -155, -1000, 1006, 34455, -1000,
	1365, -1000, -1000, 1520, -1000, 1909, -1000, 1240, -1000, -1000,
	-1000, -1000, 34455, -1000, 2436, 116275, 116275, 95411, -1000, 116275,
	-1000, 2093, 73863, -1000, 2374, 120635, 2358, 70553, 116275, -1000,
	-1000, 658, 975, 2549, 2547, 1064, 116275, 116275, 2542, 120090,
	119545, -1000, 3576, 116275, 1991, 49313, 3341, 2250, 2248, 120,
	120, -1000, 120, 120, 120, -1000, 657, 1363, 95411, 95411,
	116275, 73863, 95411, 1962, -1000, -1000, -1000, -1000, -1000, 86600,
	-1000, -1000, 3510, 3509, -1000, 1423, -1000, -1000, -1000, 1423,
	1617, 1778, 116275, 73863, 95411, 73863, -1000, -1000, 2119, 119000,
	118455, 1686, 116275, 1453, -1000, 840, 2034, 120, 120, -1000,
	120, 120, 120, 655, 26324, 1924, -1000, 2969, 116275, 3532,
	117910, 3531, 116275, 116275, 116275, 73863, 3295, 116275, 116275, 73863,
	-1000, 117365, 3460, 2106, 5828, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 74987, 1078, 116275, 1316,
	-1000, -1000, 1685, 1188, 1187, 86055, 2037, 1682, 1798, 116275,
	60592, 991, 60592, 2662, -1000, -1000, 23494, -1000, 131008, 131008,
	-1000, 131008, -1000, 71115, 116275, -1000, 1028, 116275, 80563, 973,
	3017, 65603, -277, 985, 78369, 95411, -10, 2590, 116275, -1000,
	-1000, 1617, 3013, 556, 2372, -1000, 78369, 3443, 3012, 654,
	3575, 3574, -1000, 95411, 2266, 2360, -1000, -1000, 116820, 3020,
	840, 116275, 1010, 57230, 1900, -1000, 63392, 1045, 116275, 1814,
	148, -1000, -1000, -1000, 30, 116275, -1000, 820, -1000, -1000,
	5068, 5068, 985, -287, 649, -1000, 888, 886, 61154, 78369,
	-80, -1000, -1000, -1000, -1000, 2358, 95411, 116275, 1303, 2656,
	116275, -83, -1000, 277, 648, -1000, 2953, -1000, -116, -1000,
	993, 60592, 2859, 2852, -1000, -1000, 1005, -1000, 1341, 985,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4, 1789, 116275, -277, -277, -41, -11, -1000, 994,
	-1000, 994, -1000, 994, -1000, 131008, -1000, -1000, 1563, 1523,
	116275, -1000, -1000, 116275, -1000, 26324, 116275, 95411, 26324, 95411,
	2912, 2911, -1000, -1000, -1000, 116275, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1089, -1000, 1787, 2227, -1000, 646, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2463, -1000,
	-16, 33888, 910, -1000, -1000, 95411, 3, 49313, 49313, 9916,
	8816, 49313, 53282, 53282, -1000, 49313, 7822, -1000, -1000, -1000,
	-1000, -1000, 2846, 645, 49313, 70553, 6706, 6291, -1000, 444,
	16500, 4916, -1000, 49313, -1000, 478, -1000, 443, 36185, -1000,
	129868, -45, -89, -1000, 20070, -222, -92, -1000, -1000, 810,
	-1000, 3052, -1000, 49313, 130145, 2435, 1831, 1762, 1607, 3506,
	3530, 22926, -1000, 67255, 1011, 2171, 127272, -1000, -1000, -1000,
	-1000, 70553, 70553, 49313, 49313, -1000, 49313, 49313, 49313, -1000,
	-1000, -1000, 3506, 919, -1000, -1000, -1000, 919, -1000, -1000,
	1423, -1000, 1423, -1000, 49313, -1000, -1000, 2844, 49313, -1000,
	70553, 70553, 53282, 53282, 53282, 53282, 53282, 53282, 53282, 53282,
	53282, 53282, 53282, 53282, 53282, 53282, 53282, 53282, 53282, 53282,
	53282, 53282, 2518, 53282, 3487, 3487, 3487, 927, -1000, 2905,
	2844, 49313, 49313, 70553, 442, 438, 433, -1000, 49313, -222,
	-1000, -1000, 563, 643, -1000, 2448, -1000, 2774, -1000, 49313,
	-1000, -81, -1000, 2392, -1000, -1000, 2774, 2774, -94, 131008,
	57230, 57230, -1000, 642, 49313, 2550, -1000, -1000, 797, -309,
	-1000, 884, -1000, -1000, -1000, -1000, -1000, -1000, 556, -1000,
	-1000, -1000, 276, 105263, 105263, 794, -1000, -97, -1000, -1000,
	-110, -1000, 3442, 432, 26324, -1000, 1010, 2682, -1000, -1000,
	-1000, -1000, -1000, -1000, -277, 116275, 116275, 1680, 2201, 3529,
	-1000, 3508, 809, 793, 271, 3506, 431, 430, 428, -277,
	116275, 116275, 1669, 116275, -1000, -1000, -1000, -1000, 246, -1000,
	-1000, -1000, 235, -1000, -1000, -1000, -1000, 2611, -1000, -18,
	-1000, -1000, -1000, 49313, -1000, -1000, 3263, 1183, 1182, -1000,
	-1000, -1000, -1000, 2840, -1000, 3010, -1000, 2357, -1000, 1051,
	-1000, 1561, -1000, 49313, 641, 2654, 640, 639, 3573, 2076,
	3570, 1066, 3006, 2221, 3004, 2221, -1000, -1000, -1000, 968,
	-1000, 131008, 2250, -1000, 638, 634, -1000, -20, 1570, 1779,
	1177, 1004, -1000, -1000, -1000, -1000, 49313, 49313, 104718, -1000,
	489, 3258, 2, -1000, -1000, -1000, 1668, 1175, 1174, -1000,
	-1000, -1000, -1000, 1617, 1624, 1170, 1169, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2350, -1000, -1000, 3003, 1003, -1000,
	2968, 2967, 934, 116275, -1000, 998, -1000, -1000, -1000, -1000,
	49313, -1000, -22, 1164, 3392, 2346, 95411, -1000, 2221, 3001,
	1158, -1000, 1157, -1000, -1000, -1000, 3407, 3396, 1166, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 74425, -1000, -1000,
	1062, 116275, 73863, 95411, 1649, -1000, -1000, 84965, 85510, 116275,
	2699, -277, 904, -1000, 2416, 904, 991, 2839, -1000, 2589,
	997, 95411, 3568, 425, -111, -24, 70553, 3440, -1000, 2240,
	677, 95411, 915, -1000, 3502, -1000, -1000, -1000, 996, -1000,
	3400, 95411, 3439, 3000, 995, 120, 95411, 3518, -1000, -1000,
	3438, 95411, 2997, 2265, 2341, 2503, 840, 79473, 995, 2162,
	-139, -1000, 1814, 35589, 3256, -117, -1000, -1000, -1000, 1010,
	66703, 57230, 49313, 3567, -119, -1000, -1000, -1000, -1000, -1000,
	102531, 102531, 78369, 78369, 78369, 985, 116275, 116275, 80563, -1000,
	-1000, 632, 116275, 116275, 626, -1000, 116275, 116275, 3566, 78369,
	-28, 625, -1000, 879, 872, 871, -1000, -1000, -1000, -1000,
	-1000, -1000, 993, -1000, -116, 60592, 120, -1000, 2188, 95411,
	-1000, 22358, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 994,
	-277, -1000, -1000, 2058, 2309, 2058, 1783, 1774, -1000, -1000,
	2209, -1000, -1000, -1000, -1000, 2598, 3264, 26324, 3385, 6921,
	49313, 49313, 6897, 5851, 5252, 6921, 49313, 49313, 70553, 6232,
	-120, 49313, 49313, -1000, 49313, 791, 131008, -1000, 3527, 49313,
	421, 420, -1000, -1000, -1000, 3504, -1000, -1000, -1000, 131008,
	49313, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 417, -1000,
	270, -1000, -1000, -1000, 123905, -1000, 49313, 413, 3339, -1000,
	412, 394, 13807, 10566, 127021, 126647, 126584, 393, -1000, -1000,
	392, 389, 131008, 2905, 131008, -1000, -1000, 933, 933, 1395,
	1395, 1395, 1395, 3487, 582, 600, 462, 551, 551, 551,
	334, 927, 927, 551, 551, 551, 927, 2836, 2452, 619,
	2036, -1000, -1000, 131008, 131008, 388, -1000, -1000, -1000, -222,
	384, 563, -1000, 2770, 3334, 131008, -1000, 57230, 2770, 2770,
	-1000, -1000, 2222, 116275, 131008, 57230, -1000, 2637, -1000, 20649,
	-1000, 26324, -1000, -1000, -1000, -1000, 3502, -1000, 64499, -1000,
	617, -1000, 268, -1000, 2682, -1000, 870, -1000, -1000, 78369,
	78369, -277, -244, 116275, -1000, -1000, 787, 3564, 808, 26324,
	383, -1000, -1000, -1000, -277, -277, 116275, -277, -1000, -1000,
	-1000, 3217, 131008, 116275, 116275, 1340, 104173, 116275, 2996, -1000,
	2107, -1000, 1064, 126210, 57785, -1000, 57785, 116275, -1000, -1000,
	-1000, -1000, 1908, 1506, 3563, 1110, -1000, 3288, 116275, -1000,
	116275, -1000, -1000, -1000, 116275, 116275, 95411, 116275, -1000, 73863,
	2976, -125, 131008, -32, -1000, 864, -1000, 1409, -1000, 21790,
	116275, 73863, 95411, 116275, 73863, 95411, 2995, 116275, 2102, -1000,
	-1000, 2966, -1000, 2975, -130, 26324, -1000, 3526, 3524, 2993,
	3298, -1000, 116275, 3522, 116275, 95411, 3215, -1000, -1000, -1000,
	-1000, -1000, -1000, 1598, 1156, 1155, 2260, -40, 2259, 2200,
	-41, 2037, 991, -77, 615, -1000, 863, -1000, -1000, 859,
	-1000, 991, -1000, 78369, 60592, 3561, 556, -1000, 2631, -1000,
	100323, 2212, 120, -1000, 3558, 103083, 614, -1000, 2177, -1000,
	784, -1000, 2458, 73863, 1617, 120, 95411, -1000, -1000, 556,
	381, -85, -1000, 3040, 1060, 26324, 95411, 2989, 2509, 840,
	79473, -1000, 1257, 2580, -1000, -131, -1000, 693, 120, 2162,
	-1000, -139, 131008, -1000, 857, -1000, -132, -1000, -1000, 380,
	-1000, 3214, 3212, -1000, 2777, 57785, 613, 612, 116275, 3211,
	-1000, -1000, -133, 2406, 2406, 78369, 60592, 78369, -1000, 993,
	904, -1000, 2320, -1000, -1000, -1000, -1000, -1000, 26324, 1529,
	-1000, 611, 610, -1000, -1000, -1000, -1000, 3264, 6921, 6921,
	49313, 49313, 49313, 6921, 6232, -145, -1000, 6921, 6921, -222,
	-1000, -1000, 129868, -1000, -1000, -1000, 131008, -1000, 21222, 2084,
	-1000, 125959, -1000, 33888, -1000, -1000, 49313, 49313, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 53282, 2835, 608, 70553,
	-1000, -1000, 377, 1008, 49313, 51014, 2392, 1008, 1008, -1000,
	-150, -1000, -1000, -1000, 3502, 268, -1000, -1000, 3557, 26324,
	-1000, 78369, -1000, -1000, 3554, -138, 807, -1000, 3551, -1000,
	-1000, 136, -1000, -1000, -1000, 2696, 3436, -1000, 1897, -1000,
	116275, -1000, 116275, -1000, 26324, 116275, 2795, 1282, -1000, 975,
	2539, 607, 53282, 1087, 95411, 966, 2762, 2756, -1000, 3457,
	3332, 2747, -153, -1000, 116275, 49313, 116275, -161, -179, 2324,
	-1000, -1000, 1085, 1277, 49313, 1084, -1000, -1000, -1000, 70553,
	605, 2221, 2221, -181, -184, -1000, -1000, -1000, 49313, 1146,
	116275, 35022, -1000, 3550, 3258, -1000, -1000, -1000, -1000, -1000,
	-1000, 116275, -1000, 116275, -1000, 49313, 1145, -1000, -1000, -1000,
	3521, 2221, 26324, 2221, -1000, 2221, 3298, 1106, 116275, 73863,
	95411, 1760, 1760, 2838, -1000, -1000, -1000, 2457, 2457, 78369,
	60592, -1000, -155, 991, -1000, 3434, 2628, 3549, -1000, -1000,
	-1000, -1000, 2531, -1000, -1000, 116275, 2522, 986, -1000, -186,
	-1000, 854, 846, 80563, 973, 932, -1000, -156, 604, -1000,
	842, -1000, -1000, -1000, -1000, 556, 3433, -1000, 3520, 599,
	588, 116275, 2255, 586, 26324, 3253, 840, 79473, -1000, 3020,
	1814, -1000, 2335, 116275, 3249, -1000, 2580, 585, -1000, 985,
	583, 581, 2776, 2776, -187, 57785, 57785, -192, 580, 985,
	-1000, -194, -1000, -1000, -1000, -1000, -1000, -163, -1000, 943,
	930, -1000, -1000, 95411, 95411, 49313, 49313, -1000, 6921, 6921,
	6921, -1000, 371, -1000, -1000, 2162, 3322, -1000, -175, 125585,
	125522, 6327, 53282, 70553, -195, -1000, -1000, 116275, 131008, -176,
	-1000, 131008, 570, 569, 504, -1000, -1000, -1000, 621, -1000,
	-1000, -1000, 116275, 3548, -1000, 116275, 103628, 116275, -1000, -1000,
	1802, -1000, -1000, -1000, 116275, 2337, -1000, -1000, -1000, 1063,
	49313, 2036, 53282, 567, 49313, -1000, -1000, -1000, 3432, 3197,
	-1000, 2601, 2834, 1853, 57785, -1000, 3264, -1000, 125148, -1000,
	1054, 1896, -1000, -1000, -1000, -1000, 131008, 53282, 3298, 57785,
	-1000, -1000, 566, 565, 131008, 564, 841, 2829, -1000, -1000,
	-1000, -1000, -1000, 131008, 561, 3392, -1000, -1000, -1000, -1000,
	2221, 95411, -1000, -1000, -1000, 1133, -1000, -1000, -1000, -1000,
	3547, 3546, 2826, 84965, -1000, -201, -1000, -1000, 1906, 120,
	2040, 2695, -1000, 2212, 560, -1000, -1000, 2239, 2608, -1000,
	103083, 34455, 34455, 361, 3431, 932, -1000, 3499, -1000, 3196,
	3196, 49313, 3422, 120, -1000, 3518, 57785, -1000, 95411, 57785,
	2253, 1989, 2479, 79473, -1000, 2503, -1000, -1000, -202, 116275,
	1814, -1000, -1000, 78369, 78369, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1054, -203, -210, -1000,
	78369, -1000, -1000, 2320, -1000, 116275, -1000, 116275, -1000, -1000,
	-211, -213, -1000, 2146, 49313, 33888, -1000, -1000, 6327, -216,
	-1000, -193, -1000, 3421, 51014, 3543, 3542, 3541, -1000, -277,
	-1000, -277, -1000, 1864, -1000, -1000, -1000, 2986, 2768, 124897,
	2036, 2456, 116275, 415, -1000, 3418, 2833, -1000, -1000, 2628,
	558, -1000, -1000, -1000, -1000, 910, 116275, 2628, 2767, 95411,
	2036, 1061, -219, 2058, 2058, 49313, 33321, 2101, 49313, -1000,
	-1000, 3298, 116275, -1000, -1000, 116275, 2241, -1000, 2806, 3490,
	-1000, 973, -1000, 2094, 116275, -1000, 3281, -1000, 3210, -1000,
	-1000, -1000, 2631, 120, -1000, -1000, -1000, -224, 131008, 120,
	-1000, 360, -229, 1060, -230, 95411, 1884, -1000, 840, -1000,
	2509, 1010, -1000, -1000, -232, -235, 1853, 1054, 2034, -237,
	-1000, -238, -245, -1000, -1000, 341, 50447, 50447, 50447, -222,
	-231, -1000, 116275, 557, -1000, -1000, -1000, -1000, -1000, 2851,
	989, -1000, 894, 1870, 339, 1088, -1000, -1000, -1000, 2034,
	116275, -1000, -1000, -1000, 988, 556, -1000, 49313, 1054, -246,
	-1000, 1044, -247, -1000, 1043, -248, -1000, 2818, -1000, -257,
	2221, -253, 234, 1760, 987, 3384, -1000, -1000, -1000, 2239,
	95411, -260, -1000, -1000, 2270, -1000, 2628, 986, -1000, -1000,
	-1000, 1054, 555, 1853, 554, 1447, 840, -1000, -1000, 1423,
	3253, 3079, 985, 985, 2628, 1853, 984, -1000, 985, -1000,
	-1000, -1000, 3033, -1000, 54416, 2204, 1772, 128771, 3033, 3033,
	-1000, -1000, 116275, 3362, -1000, 897, 896, 1486, -1000, -1000,
	-1000, -1000, -1000, -1000, 2747, -263, 3361, 2456, 131008, 2628,
	-1000, 2058, 2691, -1000, 2058, 2816, -1000, 2088, -1000, -1000,
	-1000, 2784, -1000, 2810, -1000, 1625, 3481, 2460, 552, -1000,
	116275, 1756, 1751, 3540, 2040, 2239, 1853, 57785, 2628, 57785,
	2022, -1000, 116275, -1000, 1989, 1320, -1000, -1000, 2034, 2628,
	1010, 549, -1000, -1000, 1849, 3429, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 839, -1000, 3186, -1000, 1082, 2135,
	2135, 1010, -1000, 834, 894, -1000, -1000, 548, -1000, 530,
	-1000, 2192, 116275, 2175, -1000, -1000, -1000, -1000, 116275, -1000,
	-1000, 3538, -1000, 973, -1000, 2628, -265, 2034, -268, -1000,
	-1000, -1000, -277, 1884, -1000, 1519, 984, 2034, -1000, 1761,
	-1000, -1000, 2154, 49880, 49313, -1000, 3471, -1000, -1000, 2545,
	-1000, -1000, 49313, 2747, 49313, 49313, -1000, 234, 65051, -275,
	-1000, 2239, 2034, 1054, 984, 1853, 1447, 66703, 1010, 984,
	-1000, -1000, -1000, 131008, -1000, -1000, -1000, 131008, -1000, -276,
	-288, -1000, -287, 102531, 2220, 2460, 984, 1853, 1010, 2628,
	2022, -262, -1000, 1010, 2034, 1129, -293, -1000, -1000, -1000,
	-1000, 1010, 2628, -1000, 2034, -1000, -1000, -1000, -1000, -1000,
	528, -1000, -1000, 2034, 984, 49313, 984, 1010, -299, 1010,
	-1000, 2034, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4368, 4367, 4366, 4363, 4358, 4352, 4346, 4345, 4344,
	4343, 4339, 4338, 141, 4337, 4336, 4335, 4331, 4330, 4329,
	4327, 4326, 4319, 4316, 4312, 4310, 4307, 4303, 4295, 4293,
	4292, 4290, 4288, 4287, 4285, 4284, 4283, 4281, 4279, 4275,
	4274, 4273, 4271, 4269, 4266, 4263, 4262, 4261, 4260, 4256,
	4254, 4253, 4252, 4251, 4247, 4245, 4244, 4243, 4242, 4240,
	4239, 4237, 4236, 4235, 4234, 4233, 57, 4232, 4230, 4229,
	4228, 4226, 4224, 4223, 4222, 4220, 4218, 4217, 4215, 4214,
	4213, 4212, 4208, 4207, 4206, 4205, 4204, 64, 4203, 276,
	4201, 4197, 4196, 4194, 4192, 4188, 4187, 4184, 4182, 4181,
	4180, 4179, 275, 4178, 130, 164, 4177, 4175, 3719, 4173,
	4171, 274, 4170, 4167, 4166, 4164, 290, 4163, 4162, 4161,
	4159, 4158, 4157, 4156, 4154, 4153, 4152, 4151, 95, 230,
	4150, 4149, 1486, 4147, 4145, 4144, 4143, 4141, 4139, 4138,
	4136, 4135, 4134, 253, 174, 4131, 273, 4130, 4126, 4124,
	4123, 4122, 4121, 4120, 4114, 4113, 4111, 4109, 4106, 4105,
	4104, 4103, 4101, 4099, 4098, 4097, 4095, 4092, 4091, 4088,
	4087, 4084, 4083, 4082, 4079, 4078, 4073, 4072, 4063, 4054,
	4050, 4048, 4046, 4044, 4039, 4037, 262, 170, 194, 4035,
	4034, 272, 271, 4033, 4031, 4030, 4026, 4025, 128, 11,
	35, 4022, 4021, 90, 94, 91, 107, 103, 104, 4020,
	110, 4019, 120, 68, 4014, 15, 3, 221, 249, 7238,
	241, 4013, 4012, 4011, 252, 202, 4009, 244, 4008, 4007,
	4005, 4004, 4003, 4002, 72, 53, 188, 187, 179, 177,
	86, 4000, 159, 106, 88, 58, 46, 16, 77, 215,
	19, 9, 218, 3999, 265, 8, 140, 6, 33, 3996,
	3995, 3994, 3993, 3736, 136, 3992, 269, 250, 173, 3990,
	3989, 3988, 319, 3985, 3984, 49, 3980, 178, 85, 122,
	4, 125, 3979, 156, 175, 39, 3978, 162, 60, 3977,
	161, 100, 96, 11212, 13069, 3972, 3971, 119, 66, 108,
	2635, 195, 185, 205, 92, 166, 169, 123, 223, 219,
	181, 47, 3969, 258, 3968, 3426, 78, 192, 154, 6090,
	3967, 3963, 3962, 87, 207, 112, 3961, 3959, 80, 12,
	43, 1, 2, 144, 26, 20, 21, 3958, 31, 132,
	42, 27, 3957, 29, 3956, 3954, 3953, 3952, 3949, 40,
	163, 3948, 3943, 283, 3942, 84, 55, 22, 3941, 180,
	232, 3940, 234, 133, 3939, 3937, 256, 210, 203, 3936,
	73, 238, 3933, 3932, 3929, 3927, 3926, 134, 10, 139,
	3923, 3916, 150, 3915, 52, 247, 204, 3909, 61, 3905,
	3903, 183, 111, 143, 277, 186, 235, 117, 229, 189,
	239, 3901, 3900, 3899, 222, 3898, 3897, 226, 171, 3896,
	3894, 248, 289, 97, 50, 82, 243, 83, 196, 160,
	3893, 209, 3889, 3884, 288, 190, 228, 13, 5, 98,
	129, 3883, 7, 240, 158, 224, 116, 3882, 7760, 2697,
	1978, 3881, 3878, 157, 124, 79, 118, 155, 267, 105,
	3876, 3875, 2475, 3872, 3871, 3870, 3869, 193, 3867, 3866,
	3862, 148, 168, 197, 3860, 135, 69, 51, 23, 142,
	254, 281, 109, 233, 176, 257, 3859, 3858, 3854, 199,
	3852, 81, 127, 172, 208, 263, 62, 3851, 151, 3850,
	146, 2108, 74, 147, 3847, 231, 3842, 3841, 3839, 3838,
	3836, 3834, 3833, 1878, 242, 3832, 3829, 3828, 37, 198,
	3827, 266, 165, 213, 121, 59, 3826, 99, 3643, 3825,
	583, 1154, 70, 268, 201, 264, 3824, 3309, 54, 3823,
	0, 15042, 9115, 12912, 14500, 3822, 2352, 3819, 3818, 3817,
	220, 145, 3814, 3813, 3812, 114, 3810, 89, 3808, 3807,
	76, 3806, 28, 17, 18, 32, 34, 261, 65, 3805,
	3803, 56, 137, 152, 3801, 279, 236, 3797, 3793, 3785,
	3781, 102, 3780, 45, 3779, 41, 3778, 3777, 48, 14,
	30, 3776, 3775, 217, 3774, 225, 255, 3773, 167, 3771,
	71, 138, 3770, 3767, 3766, 67, 63, 259, 93, 3765,
	282, 3764, 206, 3762, 3759, 24, 3757, 3756, 245, 115,
	113, 3755, 251, 149, 38, 214, 184, 227, 3754, 3752,
	182, 3751, 3744, 3743, 278, 3742, 3733, 36, 3732, 3731,
	3730, 25, 3729, 3725, 211, 3158, 3724, 3723, 44, 3721,
	200,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 597, 597,
	615, 615, 23, 23, 44, 44, 24, 45, 17, 598,
	598, 598, 598, 36, 25, 46, 29, 29, 29, 29,
	29, 201, 201, 201, 201, 22, 22, 40, 40, 237,
	237, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 593, 593,
	239, 239, 238, 231, 231, 232, 232, 233, 233, 599,
	599, 240, 240, 240, 242, 242, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 492, 492, 492, 525,
	525, 524, 524, 524, 523, 523, 619, 619, 620, 620,
	620, 620, 620, 131, 131, 390, 390, 390, 55, 55,
	55, 55, 55, 588, 588, 203, 203, 203, 205, 205,
	204, 204, 204, 204, 204, 78, 78, 604, 604, 605,
	605, 603, 606, 606, 606, 202, 202, 202, 127, 127,
	127, 127, 127, 127, 128, 128, 129, 129, 206, 206,
	206, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 212, 16, 16, 16, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 107, 107, 527, 527, 528,
	528, 197, 197, 198, 198, 198, 198, 199, 199, 200,
	200, 200, 69, 69, 209, 209, 211, 211, 210, 210,
	210, 210, 210, 57, 57, 57, 57, 57, 57, 57,
	58, 58, 58, 58, 58, 59, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 60, 67, 67, 67,
	67, 67, 188, 188, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 75, 75, 75,
	75, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	622, 622, 623, 623, 624, 624, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 84, 84, 351, 351, 314, 314, 85, 85,
	85, 86, 86, 87, 87, 71, 71, 586, 586, 367,
	367, 483, 483, 72, 594, 594, 594, 596, 596, 595,
	595, 89, 89, 389, 389, 90, 90, 90, 90, 90,
	90, 91, 91, 91, 91, 91, 91, 91, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 99, 99, 99, 99, 99, 100, 100, 100,
	97, 97, 97, 94, 94, 94, 93, 93, 93, 98,
	98, 98, 585, 303, 303, 96, 96, 96, 95, 95,
	95, 368, 368, 101, 101, 101, 101, 315, 102, 102,
	102, 102, 102, 102, 102, 102, 105, 105, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 485, 485, 103, 103, 103, 450, 450, 108, 108,
	108, 405, 405, 109, 109, 109, 109, 109, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 130, 130, 130,
	130, 130, 130, 130, 130, 590, 590, 360, 360, 266,
	266, 266, 266, 120, 120, 120, 120, 121, 121, 121,
	122, 122, 193, 193, 137, 137, 137, 137, 137, 136,
	136, 136, 136, 136, 136, 61, 61, 61, 62, 62,
	63, 63, 64, 64, 65, 65, 66, 66, 66, 66,
	66, 139, 139, 616, 616, 141, 138, 138, 138, 140,
	140, 140, 140, 142, 144, 144, 144, 144, 143, 143,
	143, 143, 143, 145, 145, 517, 517, 376, 376, 515,
	515, 537, 537, 516, 516, 321, 321, 321, 321, 321,
	322, 322, 322, 526, 526, 526, 526, 526, 526, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 194, 194, 195, 196, 196, 196, 196, 196,
	171, 171, 171, 187, 187, 187, 187, 187, 187, 187,
	174, 174, 174, 158, 158, 147, 147, 147, 147, 147,
	147, 147, 152, 152, 152, 152, 152, 152, 152, 152,
	148, 148, 160, 160, 160, 160, 160, 153, 153, 154,
	154, 154, 155, 155, 155, 155, 181, 181, 157, 157,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 149,
	149, 149, 149, 162, 162, 162, 162, 412, 412, 412,
	186, 186, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 184, 184,
	184, 184, 184, 184, 607, 607, 608, 608, 178, 178,
	178, 178, 178, 178, 464, 464, 172, 172, 172, 172,
	177, 177, 177, 177, 180, 180, 180, 180, 395, 395,
	169, 169, 169, 170, 170, 170, 175, 175, 176, 352,
	352, 173, 173, 179, 179, 179, 179, 150, 150, 150,
	150, 150, 150, 150, 151, 151, 151, 151, 182, 182,
	168, 168, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 626, 626, 164, 164, 164, 163, 163,
	163, 163, 166, 166, 167, 167, 167, 167, 167, 167,
	165, 156, 185, 587, 587, 583, 583, 583, 583, 583,
	583, 583, 583, 584, 584, 584, 584, 589, 589, 113,
	113, 113, 113, 113, 123, 123, 123, 123, 123, 114,
	114, 114, 114, 114, 116, 116, 115, 115, 115, 115,
	79, 79, 79, 79, 79, 15, 15, 15, 80, 80,
	257, 257, 215, 215, 215, 340, 340, 216, 216, 329,
	329, 329, 329, 213, 213, 214, 214, 81, 81, 627,
	627, 627, 600, 600, 600, 601, 601, 601, 601, 601,
	601, 323, 323, 324, 324, 430, 430, 430, 430, 430,
	327, 327, 327, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 330, 330, 241, 241, 241, 338, 339, 339,
	331, 331, 337, 336, 336, 335, 335, 334, 334, 332,
	333, 333, 333, 342, 342, 341, 344, 344, 343, 429,
	546, 546, 548, 548, 548, 548, 548, 548, 548, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 413, 413, 628, 628, 629, 630,
	544, 544, 544, 545, 540, 540, 541, 541, 541, 541,
	541, 325, 325, 326, 326, 326, 326, 542, 543, 358,
	358, 468, 547, 547, 549, 549, 551, 631, 631, 631,
	631, 631, 631, 632, 632, 632, 428, 428, 427, 427,
	349, 349, 552, 552, 552, 552, 553, 553, 553, 553,
	553, 556, 555, 554, 554, 554, 554, 554, 83, 83,
	83, 392, 392, 391, 391, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	190, 190, 269, 269, 77, 77, 77, 12, 12, 12,
	12, 12, 12, 12, 284, 284, 13, 13, 13, 602,
	602, 602, 82, 82, 82, 82, 82, 82, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 592, 592,
	591, 591, 270, 270, 634, 634, 88, 88, 88, 88,
	88, 88, 88, 88, 486, 486, 487, 487, 76, 76,
	76, 76, 76, 414, 414, 411, 411, 410, 410, 357,
	357, 466, 466, 466, 467, 274, 274, 275, 275, 234,
	234, 234, 31, 30, 21, 21, 26, 26, 27, 27,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 28,
	28, 48, 48, 48, 48, 49, 49, 49, 49, 52,
	52, 53, 53, 47, 47, 47, 47, 50, 50, 43,
	43, 54, 54, 54, 54, 54, 609, 611, 611, 610,
	610, 614, 614, 614, 614, 614, 614, 612, 612, 613,
	613, 617, 617, 618, 618, 119, 119, 124, 124, 124,
	124, 124, 125, 125, 125, 125, 126, 126, 126, 126,
	135, 135, 189, 189, 189, 189, 189, 189, 189, 56,
	56, 56, 56, 68, 68, 68, 68, 133, 636, 636,
	636, 134, 134, 134, 635, 635, 267, 267, 424, 424,
	425, 425, 637, 637, 426, 426, 426, 426, 426, 260,
	259, 261, 261, 262, 262, 74, 74, 74, 250, 250,
	249, 251, 251, 252, 252, 247, 247, 529, 529, 254,
	254, 254, 255, 255, 243, 243, 244, 244, 245, 245,
	246, 246, 258, 258, 638, 638, 111, 111, 111, 192,
	192, 313, 313, 313, 421, 421, 421, 350, 350, 281,
	281, 423, 423, 423, 423, 388, 388, 388, 191, 191,
	365, 365, 378, 378, 379, 379, 480, 480, 380, 117,
	117, 118, 118, 132, 132, 219, 219, 217, 217, 217,
	217, 217, 217, 217, 217, 224, 224, 225, 225, 226,
	226, 227, 228, 228, 228, 228, 369, 369, 229, 229,
	229, 218, 218, 218, 220, 220, 220, 220, 220, 220,
	220, 223, 223, 223, 223, 230, 230, 230, 222, 222,
	563, 563, 563, 565, 565, 567, 567, 566, 566, 562,
	562, 564, 564, 633, 633, 394, 394, 394, 347, 348,
	345, 345, 346, 346, 355, 355, 353, 354, 354, 356,
	356, 465, 465, 465, 235, 235, 235, 385, 385, 385,
	385, 386, 386, 417, 417, 415, 415, 415, 415, 416,
	416, 418, 418, 418, 419, 419, 420, 420, 382, 382,
	383, 383, 384, 384, 384, 384, 446, 446, 221, 221,
	221, 362, 362, 362, 363, 363, 436, 436, 436, 436,
	436, 436, 436, 437, 437, 435, 435, 435, 435, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 470, 471,
	471, 364, 364, 472, 422, 422, 581, 581, 581, 582,
	582, 463, 463, 473, 473, 473, 473, 473, 473, 461,
	461, 462, 462, 481, 482, 482, 398, 398, 398, 398,
	396, 396, 399, 399, 399, 399, 399, 397, 397, 474,
	474, 474, 474, 387, 387, 475, 475, 475, 475, 476,
	477, 477, 478, 478, 431, 432, 432, 488, 488, 488,
	488, 490, 361, 361, 361, 361, 361, 539, 538, 538,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 505, 505, 505, 505, 505, 505, 505, 491, 491,
	491, 491, 491, 495, 495, 495, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 496, 496, 501,
	501, 502, 502, 502, 497, 498, 503, 503, 503, 503,
	639, 639, 507, 507, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 493, 493, 493, 500, 500, 500, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 406, 406, 408, 408, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 440, 440, 440,
	440, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 557, 557, 557, 557,
	557, 557, 557, 557, 442, 442, 560, 560, 561, 561,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 568,
	568, 569, 569, 571, 571, 572, 572, 573, 574, 574,
	574, 575, 576, 576, 570, 570, 577, 577, 577, 577,
	578, 578, 579, 579, 579, 579, 579, 580, 580, 580,
	580, 580, 452, 452, 453, 453, 459, 459, 459, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 320, 320, 319, 271, 271, 271,
	271, 271, 271, 374, 374, 372, 372, 372, 375, 375,
	373, 373, 371, 371, 370, 370, 449, 449, 447, 447,
	451, 451, 400, 400, 506, 506, 506, 506, 506, 506,
	506, 506, 401, 401, 401, 409, 402, 402, 403, 403,
	403, 403, 403, 443, 444, 404, 404, 404, 445, 445,
	454, 458, 458, 457, 456, 456, 455, 455, 433, 433,
	434, 434, 381, 381, 640, 640, 377, 377, 479, 479,
	479, 479, 317, 317, 366, 366, 316, 316, 308, 308,
	309, 309, 309, 309, 359, 359, 460, 460, 508, 508,
	509, 509, 510, 510, 511, 511, 512, 513, 514, 448,
	448, 292, 291, 278, 279, 290, 289, 288, 277, 280,
	285, 286, 287, 282, 283, 299, 298, 297, 248, 253,
	304, 305, 305, 307, 307, 306, 306, 294, 295, 296,
	484, 276, 310, 310, 311, 311, 311, 312, 312, 312,
	312, 272, 272, 273, 273, 300, 300, 301, 302, 302,
	293, 293, 293, 263, 263, 263, 264, 264, 265, 265,
	522, 522, 519, 519, 519, 520, 520, 520, 521, 521,
	521, 521, 518, 518, 518, 518, 518, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 531, 531, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 533, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 536, 536,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 2, 1,
	1, 3, 1, 3, 2, 4, 3, 2, 3, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 6, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	3, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 6, 6, 6,
	6, 4, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 6, 3, 8,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 7, 7, 9, 10, 5, 2, 6, 4, 7,
	7, 7, 10, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 1, 3,
	3, 1, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 13, 16,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 2, 8, 4, 2, 3, 5, 5,
	5, 2, 2, 2, 2, 0, 1, 1, 3, 4,
	11, 12, 9, 5, 3, 1, 5, 10, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 13, 16, 3, 1, 0,
	4, 1, 0, 2, 2, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 598, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-189, -194, -195, -196, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -190, -191, -192, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 427, 439, 398, 142, 418, 403,
	-140, -141, 457, -56, -68, -134, -133, 73, 129, 412,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -621, 102, -564, -92,
	-95, -126, -625, 161, 220, -114, -115, 366, -121, -122,
	420, -124, -125, 423, 162, -63, -62, 156, -217, -219,
	-138, -139, -193, -147, -148, -149, -150, -151, -152, -153,
	-155, -181, -156, -157, -158, -159, -160, -161, -165, -184,
	-162, -163, -164, -167, -166, -168, -173, -169, -170, -171,
	-172, -174, -175, -177, -178, -179, -180, -182, -183, 462,
	-176, -185, -154, 523, 49, 477, 82, 146, 431, 21,
	-5, -6, -7, -8, -9, -10, -11, -15, -14, -54,
	-74, -76, -79, -80, -81, -88, -82, -83, -563, -93,
	-94, -97, -99, -100, -96, -98, 419, -220, -218, 595,
	538, -18, -23, -24, -19, -20, -22, -25, -21, -26,
	-27, -28, -39, -44, -45, -41, -42, -40, -43, -46,
	-47, -48, -49, -50, -51, -52, -53, -30, -36, -37,
	-31, -32, -33, -34, -35, -38, -17, -29, 559, 568,
	-223, -221, -222, -230, 449, 546, 497, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, -315,
	2, -294, -300, -301, -302, -293, -263, -533, -536, 4,
	-530, -534, 168, 230, 330, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 109, 117, 118,
	119, 120, 121, 123, 128, 129, 132, 127, 131, 133,
	135, 136, 137, 140, 141, 142, 144, 145, 147, 148,
	149, 151, 152, 154, 155, 156, 159, 157, 505, 158,
	160, 161, 162, 163, 166, 174, 175, 176, 181, 183,
	184, 188, 189, 190, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 203, 207, 209, 210, 211, 212, 213,
	219, 220, 222, 223, 224, 225, 226, 231, 232, 233,
	237, 234, 243, 244, 248, 249, 250, 252, 256, 257,
	258, 259, 260, 261, 263, 265, 264, 267, 270, 271,
	274, 278, 279, 283, 284, 280, 285, 286, 288, 289,
	292, 290, 293, 294, 291, 295, 297, 298, 299, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 296, 311,
	309, 313, 314, 315, 328, 324, 325, 319, 320, 316,
	321, 317, 318, 322, 323, 327, 332, 333, 336, 217,
	338, 339, 342, 360, 346, 347, 348, 351, 352, 355,
	358, 359, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 371, 372, 374, 375, 376, 378, 379, 380, 382,
	384, 385, 387, 388, 390, 391, 392, 393, 394, 395,
	396, 398, 400, 399, 401, 403, 405, 406, 407, 412,
	418, 414, 415, 416, 417, 419, 420, 421, 422, 423,
	425, 426, 427, 429, 430, 431, 432, 433, 435, 437,
	438, 442, 443, 459, 460, 479, 439, 440, 441, 444,
	445, 446, 447, 448, 452, 450, 451, 453, 454, 455,
	457, 458, 461, 462, 464, 465, 466, 467, 468, 469,
	470, 473, 475, 476, 477, 496, 478, 480, 484, 485,
	486, 487, 481, 482, 495, 489, 490, 492, 493, 498,
	499, 500, 501, 502, 503, 504, 506, 508, 516, 517,
	518, 520, 523, 524, 525, 526, 514, 528, 529, 532,
	533, 534, 537, 535, 536, 538, 540, 543, 544, 545,
	551, 550, 552, 555, 560, 561, 563, 564, 565, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 124,
	125, 153, 164, 165, 177, 191, 192, 204, 206, 214,
	215, 216, 238, 239, 241, 246, 268, 335, 337, 353,
	357, 373, 377, 381, 383, 397, 434, 471, 483, 488,
	509, 510, 511, 512, 519, 521, 546, 547, 548, 553,
	562, -315, 2, -294, 344, -287, 2, -263, -263, 384,
	28, 2, 28, 372, 451, 500, 502, 2, -590, -360,
	2, 28, -266, -263, 102, 202, 449, -287, 2, -590,
	-360, 25, 2, -263, 2, 358, 22, 27, 66, 77,
	98, 140, 163, 185, 188, -624, 360, 391, 437, 453,
	495, 506, 520, 2, 550, 289, 450, 497, 230, 120,
	525, 444, -602, 442, 443, 358, 389, 429, 205, 539,
	-267, 2, 439, -263, 289, 2, 598, 94, 279, 74,
	434, 454, -143, 517, -144, -145, 2, -142, 509, -517,
	444, 311, -263, 598, 598, 598, 28, -276, -263, 497,
	230, 444, 120, 493, 598, 2, 497, 363, 550, 450,
	120, 394, 230, 525, 188, 140, 27, 444, -602, 573,
	574, 289, 126, -588, 2, -583, 4, -534, -530, -309,
	-308, 497, 503, 120, -302, -293, 588, -301, 598, 598,
	598, 2, 249, 250, 393, 392, 454, 455, 598, 598,
	598, 598, 442, 2, 163, 22, 27, 66, 93, 98,
	126, 185, 188, 349, -622, 360, 391, 453, 495, 499,
	506, 520, -601, 478, 68, 417, 444, -600, -602, 289,
	525, 140, -410, 120, 279, 200, 533, 502, 500, 531,
	132, 237, 536, 535, 598, 598, -105, 2, 595, 32,
	31, -104, -108, 142, 457, -212, 497, 242, 2, -263,
	598, 598, 2, 249, 250, 442, 443, 598, 598, 186,
	-583, 2, 598, 598, 2, 249, 250, 442, 443, 242,
	2, 68, 446, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 2, -187,
	454, 478, 211, 47, 46, 74, 28, 390, 79, 364,
	121, 126, 148, 526, 203, 230, 231, 257, 93, 94,
	-412, 44, 250, 68, 249, 443, -607, 442, -464, 498,
	445, 451, 492, 261, 439, 517, 102, 540, 430, 565,
	394, 395, 490, 407, 280, 157, 187, 4, 120, 311,
	456, 509, 279, 438, 367, 84, 598, -633, 2, 497,
	-635, 2, 517, 517, 2, -635, 2, -635, 2, -635,
	2, -636, 517, 562, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, -218, -220, -219, 598, 598, 598, 598, 598,
	598, 598, -187, 454, 2, 74, 28, -353, -355, 530,
	240, 150, 350, -217, -219, 2, -563, -515, 2, -438,
	-537, -440, 586, 587, 579, 494, 67, -319, 329, 566,
	-452, 126, 531, 344, -536, -441, -454, 153, 360, 434,
	-375, 8, 9, 5, 6, 7, -272, -442, -448, 522,
	167, 334, -312, 599, 10, 595, -560, -219, -453, 37,
	206, 65, -519, -311, -273, -491, 241, -310, -293, -557,
	-558, 4, -530, -531, -520, -494, -502, -498, -499, -505,
	-263, -533, 77, 111, 112, 110, 115, 114, 282, 281,
	116, 113, 456, 539, 66, 36, 214, 215, 246, 335,
	216, 75, -559, 141, -532, 238, 239, 471, 51, 397,
	177, 125, 124, 337, 56, 54, 547, -503, 122, 509,
	510, 511, 512, 191, 192, 58, 164, 165, 357, 381,
	488, 519, 521, 204, 268, 43, 106, 187, 236, 218,
	245, 247, 251, 269, 272, 312, 326, 331, 354, 356,
	428, 463, -639, 548, 483, 69, 70, -565, 399, -566,
	-287, -565, 598, 598, 600, 598, -345, -347, -348, 2,
	28, 138, 595, 2, -469, 2, -470, -474, -219, 262,
	-473, 595, -471, 593, -294, 345, -561, 435, -557, -558,
	-272, -293, -311, 4, -530, -532, 597, -349, 595, 120,
	497, 78, 230, 163, -405, 595, -263, 28, 344, 513,
	600, -346, 388, -450, 595, 344, 186, 347, 60, 293,
	2, 2, 2, 2, 2, 214, -263, 497, 119, 2,
	260, 2, 2, 2, 2, 2, 2, 2, -368, 214,
	2, -294, 550, -368, 214, 2, -368, 214, 2, -411,
	2, 87, -277, 214, 2, -263, -303, 214, 2, -298,
	-300, -307, 214, 2, -305, -263, -528, 214, 2, -527,
	-522, 10, -521, 5, 4, -530, -534, -531, -533, 77,
	-438, 2, -132, 2, 60, -263, 550, 2, 2, 459,
	2, 595, -143, 71, 517, 43, 454, -425, 2, -426,
	-259, -260, -261, -481, -262, 248, 387, 396, 569, 130,
	329, 565, -616, 186, 578, 513, -515, -515, -376, 597,
	2, 2, 2, 2, 2, 2, -474, 214, -294, 2,
	-291, -518, 4, -530, -534, -531, -535, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 202, 205, 208, 221, 235,
	240, 242, 262, 266, 273, 281, 282, 329, 334, 340,
	344, 345, 349, 350, 370, 386, 402, 424, 449, 456,
	474, 491, 497, 507, 513, 515, 522, 530, 531, 539,
	541, 549, 554, 556, 557, 558, 559, -536, 2, -474,
	214, 2, -297, 214, -474, -300, 2, -277, 2, -290,
	-518, 2, -316, 214, -294, -296, -300, -298, 2, 2,
	2, 2, -305, 2, -527, 214, 2, 28, 28, 550,
	388, 242, 513, 600, -366, -308, -309, -514, 8, -359,
	-263, 597, -438, 2, -132, -116, 2, 182, -438, 214,
	2, -132, 214, 2, -438, 214, 2, -132, 214, 2,
	-604, 2, -527, 214, -263, 2, 293, 2, 2, 520,
	2, 98, 497, 119, 2, 416, -623, 437, 524, 2,
	2, 2, 2, 2, 2, 2, 497, -282, 2, -263,
	182, 481, -305, 214, -306, 2, 450, -634, 399, -527,
	214, 2, 550, -298, 214, 2, -298, 230, 244, -277,
	214, 2, 502, 500, 502, 500, 186, 2, 242, 2,
	242, 2, -475, 2, -476, -470, -477, 593, 345, -485,
	2, -484, -521, 546, -105, 595, -105, 595, 454, 595,
	-527, -294, -294, -438, 2, -132, -116, 2, -438, 2,
	-132, 2, -129, -527, -128, 595, 186, -438, 2, -132,
	-116, 2, -438, 2, -132, 2, -212, 182, 2, 120,
	497, -187, 2, 182, 541, 2, 8, 2, 221, -527,
	445, 395, 174, 2, 459, 2, 460, 74, -412, 565,
	74, 186, 2, 186, 2, -395, 2, 559, 388, 186,
	2, 2, -587, 2, 344, 186, 2, 186, 2, 186,
	2, 186, 2, 186, 2, -186, 455, 518, 496, 392,
	250, 2, -132, 556, -116, 250, 249, -438, 556, 2,
	-608, 182, 443, -438, 2, 516, 259, 158, 186, -395,
	2, 186, 2, 186, 2, 5, 2, 393, 479, 2,
	248, 387, 479, 2, -294, 497, 550, 450, 120, 28,
	2, 442, 2, 2, 88, 89, 186, 2, 186, 2,
	201, 186, 2, 186, 497, 565, 2, -387, -474, -424,
	-425, -424, 513, -353, -355, -187, 459, 2, -224, -385,
	-226, 182, -415, -416, -227, 273, 169, 340, -228, -394,
	28, 138, -394, -394, 60, 596, 596, 11, 12, 76,
	41, 586, 587, 588, 589, 180, 590, 591, 584, 585,
	583, 576, 577, 581, 254, 255, 95, 580, 578, 86,
	287, 436, 170, 171, 172, 173, 413, 228, 34, 229,
	14, 15, 16, -319, 33, 349, 272, 566, 218, 463,
	579, 17, 18, 19, 245, 247, 331, 50, 221, -271,
	360, -318, 494, 67, -438, -438, -438, -438, -438, -438,
	-438, -438, 356, 595, -381, -433, 593, -219, 595, 595,
	595, 595, -514, -219, -438, -452, 596, -373, 595, -219,
	-452, -447, 595, 434, 593, 595, -455, -438, 5, 5,
	5, 595, 597, -568, 560, 182, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 383, -496, 595, -495, 595, -495, -495, 551, -493,
	595, 568, 561, 595, -493, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 551, 600,
	-565, -349, 595, -377, -479, -438, 588, -377, -377, 344,
	-370, -438, 106, -398, 251, 312, 187, 269, 428, 236,
	-435, 599, -435, -463, 568, -219, -471, -293, -219, -473,
	595, -469, -463, -106, -514, -89, -102, -111, -132, -146,
	-191, -192, 588, -294, 595, 186, 595, 597, -518, 186,
	-359, -277, -294, -310, -311, -316, 2, 137, -370, -583,
	525, 444, 28, 450, -359, -266, 38, -449, -488, -489,
	-539, 599, -538, -491, -501, -497, -500, 373, 377, -520,
	54, 547, -503, 241, 4, -530, -532, 238, 239, 471,
	51, 397, 177, 125, 124, 337, 56, 509, 510, 511,
	512, 191, 192, 58, 548, 483, 69, 70, -583, 525,
	444, 28, 450, -359, 182, -525, 2, -524, -523, 116,
	456, -521, 5, 2, 153, 2, 2, 2, -263, -240,
	600, 64, 421, 153, -368, 214, -240, 153, -240, 153,
	-317, 214, -316, -240, 153, -240, 600, 153, -240, 600,
	153, 597, 600, 153, -525, 2, -411, -517, -370, 38,
	-425, 2, 126, -523, -637, 600, 271, -322, 286, 328,
	210, 345, 563, 338, 130, -526, 5, 4, -448, -460,
	126, 279, 241, -508, -510, 8, -509, 9, -511, 586,
	587, -516, -515, 109, 597, -518, -237, 414, 457, 359,
	-236, 24, 29, 142, 232, 315, 544, 159, -335, 233,
	-332, 363, 153, 475, 534, -597, -598, 441, 504, 505,
	90, 338, 457, 359, 414, 153, -391, -393, 38, 118,
	315, 358, 61, 225, 291, 292, 477, 553, 153, 457,
	359, 414, 359, 457, 24, 142, -254, -249, -598, 99,
	414, 489, 386, -598, -239, 475, 534, -597, -598, 441,
	414, -238, -337, -332, 363, 153, 599, 24, 142, 414,
	457, 359, -619, -620, 29, 414, 359, -591, -284, -562,
	221, 559, 153, -284, -284, -474, 214, -612, 182, 2,
	-605, -128, 263, 5, 10, -527, -128, -366, 600, 600,
	-518, 588, 443, 442, 153, 153, 153, 153, 182, 329,
	2, 2, 2, 2, 2, 188, -600, -624, 2, 2,
	-294, 214, -351, 344, -586, -367, 497, -294, 182, 329,
	43, -297, 214, 2, -300, 550, -591, 329, -299, 214,
	-294, 38, 595, 329, 2, -411, 2, 230, -562, 329,
	-475, -313, -294, -470, -313, 457, -287, 38, -435, -294,
	596, 600, -485, -485, -527, -200, 559, 186, 102, 595,
	595, -212, -482, 600, -481, 221, -528, -129, -527, 417,
	-527, -586, -277, 2, -294, 2, 497, 252, -527, -200,
	221, -527, -527, -527, -517, 28, 460, 2, -186, 455,
	518, 89, 460, 2, -294, 497, 120, 230, 80, -612,
	182, 2, -263, -589, 182, -584, 429, 444, 525, -583,
	-294, 120, -294, 120, -294, 120, -294, -294, 2, 2,
	2, 2, 2, 85, 2, -132, -438, 2, 85, 2,
	46, -608, 182, 2, 516, 2, 516, 2, -263, -263,
	-263, 478, 271, -294, -294, -294, -295, -300, 498, 443,
	-438, 2, -626, 2, 186, 182, 2, 497, 230, 497,
	230, 120, 186, 74, 120, 28, 497, 440, -240, 600,
	-267, -224, -385, -517, -386, -385, -225, -224, -227, 182,
	396, 535, 315, 461, 256, -416, -415, 28, -438, -420,
	176, 314, -438, -418, -440, 586, 587, -509, -511, -369,
	338, -218, -218, -218, -356, -465, -438, 386, 230, -490,
	-488, -488, -292, -518, 509, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, 272, 218, 463, 50, 221, -438, 513, -438, -438,
	-438, -438, 309, 329, 334, 522, 167, 532, 138, 338,
	-640, 491, 40, -445, -219, -374, 595, -459, 35, 474,
	28, -452, 595, 2, -433, -438, -434, -320, -318, -263,
	586, 587, 588, 589, 590, 591, 576, 577, 578, 14,
	15, 16, 581, 585, 583, 584, 180, 95, 580, 287,
	436, 86, 170, 171, 172, 173, 254, 255, 17, 18,
	19, 34, 579, -371, -370, -370, 596, 549, 28, 138,
	588, 2, 596, 600, 38, 596, -438, -371, -451, -447,
	-370, -458, -457, 556, -406, -407, 564, 296, 123, 212,
	294, -408, 448, -512, 8, -518, 588, -569, 175, 205,
	595, 596, 2, 596, 2, 596, -438, 2, 596, -438,
	2, 596, -438, 2, 596, -438, 2, 596, 2, -438,
	-438, -438, -438, -438, -438, -438, -370, 8, -512, -512,
	509, 509, -512, -512, -512, -504, 373, 374, 375, 376,
	274, 275, 276, 277, 377, 378, 379, 380, 301, 302,
	303, 304, 297, 298, 299, 300, 305, 306, 307, 308,
	196, 197, 198, 199, 192, 193, 194, 195, -504, -400,
	2, -506, -370, 4, 564, 296, 123, 212, 294, 448,
	5, -400, 2, -401, 2, -438, -370, -402, -439, -440,
	586, 587, 579, -319, -452, -403, 2, -438, -371, -438,
	57, 266, 515, -404, -438, 186, -370, -370, 2, -370,
	2, -566, 38, -370, -362, 600, 186, 38, 4, -362,
	-362, 595, 596, 600, -399, 209, 290, 285, 244, -399,
	-469, -398, 251, -396, 354, -396, -396, -463, -278, 593,
	601, -518, -463, -462, -461, 38, -287, 351, -463, -463,
	597, 596, -462, 594, -581, 595, 598, 598, 598, 598,
	598, -294, 595, -370, -518, 597, 480, 2, 596, 245,
	245, 245, 245, 435, 596, 513, -585, -303, -307, 498,
	2, 559, -104, 346, 596, 600, -361, 37, 593, 597,
	-512, 2, 2, -507, 551, 595, 595, -407, 595, 186,
	-585, -307, 498, 2, -360, 600, 513, -263, 2, -294,
	-368, -240, 153, -368, -368, -240, 600, 153, -277, -298,
	-303, -305, -307, -263, -527, -528, -240, -299, -616, 596,
	517, -426, -321, 396, 473, 415, 452, 493, 8, 9,
	8, 9, 600, -518, 600, -617, 93, 513, 78, 444,
	-256, 280, 513, -429, 214, 78, -540, -280, 93, -541,
	-263, 72, 531, 386, 185, 151, -617, 93, 386, -617,
	93, 2, 232, 93, 457, 478, 28, 60, -474, 41,
	41, 28, -615, 327, 267, 555, 186, 565, 497, 230,
	444, 513, 513, -474, -393, -488, 118, 291, 292, 60,
	-513, -508, 586, 587, -513, 60, -513, -513, -513, 559,
	-297, -474, 444, 513, 513, 513, -252, -249, 369, 405,
	405, 513, 513, -638, 578, 405, 600, 41, 41, 28,
	-615, 327, 267, 186, 513, -316, -278, 545, 42, 545,
	42, 545, 513, 42, 444, 513, 600, 42, 513, 513,
	-13, 457, 572, 419, -592, -268, 105, 321, 284, 322,
	97, 318, 96, 317, 103, 319, 104, 320, 552, 332,
	63, 316, 295, 323, -269, -270, 365, 543, 120, -527,
	-13, -13, 457, 359, 414, 153, -613, 221, 28, -602,
	221, -482, 221, -482, -308, -263, 597, -132, -438, -438,
	-132, -438, -132, 46, 153, 2, -634, 260, 595, -325,
	329, 186, -359, -483, 242, 600, -367, -583, 153, -524,
	-392, -391, 329, -299, 214, 2, 153, -349, 329, 147,
	595, 394, 2, 153, -279, 214, -264, -263, -411, -243,
	501, 153, -389, 541, -421, -132, 595, 126, 38, -421,
	-378, -379, -480, -380, -280, 595, -287, -435, -105, -484,
	596, 596, 596, -199, 348, -198, -263, 5, -212, 541,
	-324, -430, -429, -544, -545, -540, 272, 230, 531, 244,
	168, -350, -281, -280, 119, -206, 559, -128, -129, 596,
	-482, 221, 481, -200, -200, -482, -482, -294, 182, -527,
	-200, -200, -200, 2, 2, 2, 2, -395, -294, -277,
	-316, -294, 28, 597, -359, -359, -307, -303, -395, -277,
	-395, -277, -395, -277, -132, -438, 2, 454, 182, 182,
	597, -395, -352, 424, 2, 394, 120, 497, 363, 230,
	-294, -316, -294, -316, -277, 120, -277, 121, -294, -474,
	-386, -225, 345, 256, 461, -418, -419, -440, 434, 435,
	-419, 434, 435, 8, 9, 8, 9, -229, 465, 333,
	-368, 600, -234, 39, 134, 256, -294, 565, 149, -438,
	-438, 513, -640, 491, -445, 149, -438, 309, 334, 522,
	167, 532, 138, 338, 186, 595, -439, -439, 596, -372,
	-438, -438, 594, 603, 596, 597, 596, -355, 600, -353,
	-438, -370, -370, 596, 597, -370, -359, 594, 594, 600,
	596, -456, -457, 143, -438, 513, 513, 513, 513, 595,
	596, 597, -574, 355, 595, 595, -438, 596, 596, 596,
	596, 38, 600, 600, 600, 596, 600, 600, 600, 596,
	596, 596, 600, 596, 565, 565, 596, 596, 596, 596,
	600, 596, 600, 596, 186, 596, 596, -409, 370, 596,
	11, 12, 586, 587, 588, 589, 180, 590, 591, 584,
	585, 583, 576, 577, 578, 86, 287, 436, 14, 15,
	16, -319, 245, 221, -439, -439, -439, -439, 596, -443,
	-444, 186, 182, 38, -404, -404, -404, 596, 186, -370,
	596, 596, 595, -567, 289, 329, 596, -432, -431, 557,
	-479, -363, 2, -469, -289, -518, -432, -432, -370, -438,
	251, 251, -397, 541, 344, -399, -469, -462, -514, -437,
	-436, 184, 39, 134, 324, 325, 217, -462, -287, -349,
	-462, -462, -518, -463, -463, -461, 596, -582, -514, 596,
	-364, -472, -561, -355, 597, -518, -209, -562, -188, 5,
	334, -188, -188, -188, -359, 513, 513, 221, 25, 371,
	-488, 593, 594, 8, -518, 595, -512, -512, -512, -359,
	186, 186, 221, 186, -524, -524, 2, -240, -368, -240,
	-240, -316, -317, -240, -240, -240, -390, 559, -515, -425,
	529, 83, 396, 509, -515, -236, 414, -280, -280, -294,
	-304, -263, 200, 406, -524, 329, -429, 214, -242, 329,
	-488, -288, -263, 595, -413, 561, 256, 256, 541, -280,
	-288, 256, 214, -280, 214, -288, 2, -288, -593, 396,
	339, -438, 60, -333, 278, 394, 330, -237, 414, 457,
	359, -132, -132, -132, -132, -132, 595, -616, 541, 137,
	-294, -316, -294, -304, -524, -299, 457, 359, 414, 326,
	-310, -513, -513, -391, 457, 359, 414, -304, -524, -297,
	-524, 422, 126, -248, 214, -263, -248, 214, 444, -277,
	405, 565, 45, -638, -238, -132, -132, -132, -132, -132,
	595, -278, -239, 414, 5, 214, -280, 5, -280, 214,
	5, -263, -280, -304, -524, -620, 24, 142, -280, -304,
	-524, -144, 28, -187, -268, -527, 334, 537, -277, -591,
	-284, 444, 513, 513, -474, -609, -610, 202, 427, 444,
	430, -359, -128, -203, 559, -128, -197, 226, 588, -588,
	-263, 550, -263, -323, -326, -324, -280, -215, -216, 561,
	559, 153, -314, -294, 593, -200, -527, -294, -483, -305,
	-306, 153, -349, 329, -527, 38, 153, 595, 2, 2,
	-298, 344, 329, -279, 214, -244, 144, -638, -277, -432,
	-363, -388, -423, 424, 344, -350, 546, -287, -388, -365,
	600, 186, 578, 597, -350, -478, 588, -105, -105, -200,
	600, 595, 578, 578, 595, -527, -527, 596, 600, -242,
	-294, -279, 230, 230, -286, -264, 596, 600, 597, 595,
	-208, 348, -207, 145, 258, 243, 467, 468, 469, 470,
	136, 466, -482, -206, -129, 186, 186, -64, 559, 497,
	-200, 599, 430, -263, -395, -395, -395, 454, 454, -263,
	-359, -290, -277, -294, -291, -316, 182, 182, -277, 535,
	-419, 345, 283, -465, -235, 567, -294, 599, -438, -438,
	149, 149, -438, -439, -439, -438, 149, 186, 595, -438,
	-449, 33, 33, 596, 600, -434, -438, -318, 596, 549,
	-355, -355, 596, 588, -518, 599, 596, -447, 146, -438,
	507, 296, 212, 294, -408, 294, -408, -408, -512, 5,
	-518, 588, -575, -283, 595, -263, 557, -354, 350, 596,
	-490, -488, -438, -438, -438, -438, -438, -512, -493, -493,
	-508, -508, -438, -443, -438, -490, -488, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, 138, 329, 338,
	-439, -444, -443, -438, -438, -488, 596, 596, 596, -370,
	-104, 595, 289, -382, 205, -438, -482, 600, -382, -382,
	596, -469, -469, 595, -438, 251, 594, 600, 602, 578,
	-349, 597, -461, -462, 594, 596, 600, 596, 600, -422,
	38, 596, -518, -432, -211, -210, 135, 53, 107, 133,
	334, -359, -359, 444, 347, 5, 8, 593, 594, 597,
	-512, 596, 596, 596, -359, -359, 444, -359, -240, -240,
	119, 315, -438, 513, 513, 60, 221, 153, 329, 543,
	-546, -541, 151, -438, 595, 230, 595, 595, 2, -231,
	-232, -233, 142, 457, 24, -618, 2, 541, 153, -240,
	153, -240, 563, -333, 595, 595, 513, 444, -256, 513,
	559, -370, -438, -201, 126, -517, -598, 599, -598, 599,
	444, 513, 513, 444, 513, 513, 329, 153, 559, 166,
	166, 565, -248, 559, -370, 513, -492, 48, 26, 329,
	-298, -240, 153, 513, 513, 525, 457, -527, 334, -13,
	-304, -524, -299, 457, 359, 414, -590, -360, -590, 202,
	-307, -613, -482, -205, 348, -204, 145, 426, 136, 258,
	223, -482, -203, 186, 242, 559, -299, 2, 596, 596,
	600, -547, 38, 342, 342, 595, -294, -85, 559, -481,
	-514, -594, 559, 43, -297, 38, 153, -591, -132, -299,
	-486, -487, 5, 38, -294, 153, 344, 329, -245, 265,
	-638, -522, -562, -355, -388, -377, 330, 91, 596, -432,
	-379, -363, -438, 2, 596, -198, -199, -527, -527, -527,
	-200, -212, -212, -430, -327, 595, -279, -264, 595, -212,
	-281, 2, -528, 600, 595, 578, 578, 578, -206, -482,
	-128, -132, 348, -294, 588, -395, -339, -338, 363, 338,
	-339, 434, 434, 345, 176, 261, -234, -278, -438, -438,
	149, 33, 33, -438, -438, -449, 596, -438, -438, -370,
	594, 5, -438, 596, 596, 8, -438, 596, 597, -576,
	-263, -438, 596, 60, 596, 596, 600, 600, 596, 596,
	596, 596, 596, 596, 596, -444, 186, 138, 338, 595,
	596, 596, -104, -446, 208, 60, -469, -446, -446, -397,
	-359, -469, -436, -278, 593, -518, -514, -472, 595, 597,
	-210, 578, -527, -527, 559, -307, 594, 2, 593, -518,
	596, -307, 119, -280, -280, 497, 434, -248, 386, -429,
	153, -548, 93, -550, 76, 168, 102, 329, 334, 531,
	386, 72, 126, 344, 402, -628, -629, -630, 38, 570,
	571, 596, -357, -466, -561, 595, -263, -357, -359, 329,
	486, 126, 344, 329, 126, 344, 554, 119, 2, 525,
	79, -280, -288, -359, -359, -294, -304, -524, 160, 596,
	600, 578, 2, 588, 588, -304, -524, -299, -304, -524,
	-297, 153, -248, 361, 166, 160, 596, -278, 5, 5,
	153, -275, 76, -280, 5, -280, -298, 119, 444, 513,
	513, 344, 344, 347, -609, -610, -203, 600, 595, 578,
	578, -203, -528, -128, 2, -349, -340, 232, -280, -545,
	-542, -543, 386, -549, -551, 168, 386, -132, 2, -214,
	-213, -263, 5, 595, -325, 348, 594, -596, 348, -595,
	117, 136, -524, -392, -132, -299, -349, 596, 600, 147,
	-414, 541, -278, -294, 153, -246, 264, -638, -522, -243,
	-417, -415, 139, 595, 344, -132, -355, 578, 596, 596,
	119, 119, 224, 152, -357, 595, 595, -359, 119, 596,
	-207, -208, -527, -128, -527, -206, -482, -65, -66, 230,
	93, 368, -291, 497, 230, 595, 595, -234, -438, -438,
	-438, 596, -355, -518, 588, -570, 363, 596, -465, -438,
	-438, -439, 186, 595, -449, 596, -571, 558, -438, -383,
	-384, -438, 432, 108, 206, -571, -571, 596, -514, 2,
	-527, 2, 513, 593, 2, 186, 221, 38, 405, -429,
	-288, -292, -285, -263, 168, 214, 334, 554, -413, 256,
	595, -439, 535, -294, 595, 2, 213, 213, 30, 60,
	-631, 130, 235, 596, 600, -467, -274, -263, -438, -467,
	596, 596, 334, 535, 334, 554, -438, 535, -488, 595,
	-240, -240, 596, 596, -438, 513, -517, 100, -515, 2,
	-598, -248, -277, -438, 513, 5, -240, -292, -240, -240,
	-275, 525, -304, -524, -299, -614, 498, 451, 526, 445,
	189, 433, -614, 182, -204, -205, -527, -128, -203, 38,
	-330, 234, 2, -547, 256, -285, 256, -627, 559, 596,
	600, 578, 578, -323, -215, -86, -87, 514, -481, 600,
	595, 578, -349, 38, 5, 595, 595, -263, 344, 595,
	-278, -258, 92, -638, -522, -244, -388, 330, -359, 93,
	-417, -445, -200, 595, 595, -328, 81, 94, 127, 213,
	190, 231, 478, 484, 28, -328, 596, -357, -357, 596,
	595, -200, 596, 600, 28, 595, 28, 595, -294, -316,
	-370, -370, 596, -355, 60, 600, 596, 596, -439, -449,
	596, -572, -573, -283, 600, 595, 595, 458, 594, -359,
	2, -359, -248, 386, -263, -550, -285, 329, 541, -438,
	-439, -265, 595, -438, 38, 126, 235, 131, 219, -428,
	-632, 101, 487, 222, -466, -234, 596, -427, 541, 402,
	-439, -275, -357, 595, 595, 595, 578, 186, 595, -492,
	-240, -298, 513, 2, 2, 186, -590, 596, -603, 400,
	-132, -334, -335, 221, 595, -329, 344, 119, 315, -213,
	-515, -515, 596, 38, -87, 9, -595, -596, -438, 38,
	-132, -486, -357, -294, -357, 344, -250, -249, 273, -522,
	-245, 596, -288, -388, -528, -528, -427, 596, 596, -528,
	-66, -359, -359, 596, 596, -577, 394, 435, 207, -370,
	-356, 596, 600, 38, -384, 2, 2, 2, 405, 153,
	209, 596, -552, 288, -263, 596, 38, 131, 219, -330,
	595, -235, -467, -330, 209, -294, -599, 541, 596, -342,
	-341, -338, -344, -343, -338, -370, -515, 100, 361, -370,
	-275, -359, -359, 344, -606, 187, -605, 5, 10, -215,
	361, -358, -468, -280, 82, 119, -340, -132, 596, -132,
	596, 596, -414, 596, -294, -247, -529, 405, 407, -638,
	-246, -432, 596, 596, -428, -427, -336, -332, 596, 596,
	596, 596, -578, -579, 50, 528, 109, -438, -578, -578,
	-573, -575, 168, 559, -553, -556, -555, 575, 464, 187,
	362, 596, 486, 553, -336, -359, 559, -349, -438, -427,
	596, 600, 546, 596, 600, 546, 596, 186, 596, -240,
	-611, 559, -240, -614, -202, 559, 46, -329, -294, 596,
	600, 385, 132, 142, -330, -627, -427, 595, -428, 595,
	-255, -254, -638, -508, -258, 139, -200, -200, -330, -428,
	-216, 559, -200, -580, 151, -579, 382, 181, 434, 382,
	181, -580, -580, -285, 55, -555, 575, -556, 575, 535,
	132, -631, 596, 55, -552, -330, -341, 221, -343, 186,
	361, 202, 186, 442, -605, 30, -257, -256, 595, -468,
	435, 435, 2, -334, -329, -428, -357, -330, -357, -251,
	-252, -253, -359, -250, 330, 535, -336, -330, -432, 109,
	205, 508, 315, 33, 578, -554, 315, 421, 64, 457,
	-554, -432, 578, -553, 595, 595, 347, -359, 348, -359,
	2, -215, -330, 596, -336, 596, -247, 457, -216, -336,
	434, 352, -579, -438, 23, 334, 126, -438, -631, -370,
	-370, -240, -199, 595, 596, -329, -336, -427, -216, -428,
	-255, -378, -432, -216, 596, 596, -199, -241, 64, 421,
	-257, -216, -428, -432, -330, -251, -432, -432, -331, -332,
	513, 596, -432, -330, -336, 595, -336, -216, -370, -216,
	-432, 596, -432, -331,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 548, 549, 551, 552, 553, 555,
	556, 558, 560, 562, 563, 564, 566, 567, 569, 570,
	571, 572, 573, 575, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	644, 646, 0, 1392, 1394, 1396, 1398, 0, 794, 0,
	36, 37, 39, 0, -2, 333, 335, 337, 0, 364,
	366, 367, 369, 371, 372, 373, 375, -2, 0, 481,
	482, 484, 486, -2, 0, 999, 1001, 0, 633, 635,
	0, 1004, 1006, 0, 0, 655, 656, 0, 1503, -2,
	649, 651, 653, 719, 721, 723, 725, 727, 729, 731,
	733, 735, 737, 738, 740, 742, 744, 746, 748, 749,
	751, 753, 755, 756, 758, 759, 761, 763, 765, 767,
	769, 771, 773, 775, 777, 779, 781, 783, 785, -2,
	788, 789, 790, -2, -2, 0, -2, -2, -2, 1410,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 59,
	425, 427, 429, 431, 433, 436, 438, 440, 1561, 488,
	490, 492, 494, 496, 498, 500, 0, -2, 1575, 0,
	0, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 107, 108, 109, 110, 111, 112, 113, 114,
	75, 76, 77, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 105, 73, 0, 0,
	1534, 1536, 1538, 1540, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 550,
	554, 557, 559, 561, 565, 568, 574, 576, 578, 533,
	534, 537, 2267, 2285, 2286, 2287, 2290, 2291, 2292, 2293,
	2294, 2295, 2743, 2825, 2826, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 535, 536, 1181, 0, 602, 600, 2252, 603, 2542,
	605, 607, 475, 476, 477, 478, 479, 480, 0, 626,
	616, 1573, 627, 629, 630, 631, 632, 597, 595, 0,
	626, 2321, 624, 1390, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 404, 1239, 1240, 1241,
	1375, 1376, 2588, 1417, 0, 234, 645, -2, -2, -2,
	2708, -2, 677, -2, 688, 691, 692, 684, 2712, 0,
	2591, -2, 695, 1393, 1395, 1397, 792, 793, 2271, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 244, -2, -2, -2, -2,
	0, 0, 2636, 2373, 2220, 2287, 2223, 2218, 334, 336,
	338, 339, 0, 0, 0, 0, 0, 0, 365, 368,
	370, 374, -2, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1060, 1052, 1053, 1297,
	0, 0, 0, -2, 483, 485, 538, 539, 0, 1562,
	1562, 546, 547, -2, 0, 0, 0, 0, 304, 292,
	1000, 1002, 1003, 0, 0, 0, 0, 634, 636, 0,
	0, 273, 1005, 1007, 1008, 0, 0, 0, 0, 0,
	306, 0, 0, 650, 652, 654, 720, 722, 724, 726,
	728, 730, 732, 734, 736, 739, 741, 743, 745, 747,
	750, 752, 754, 757, 760, 762, 764, 766, 768, 770,
	772, 774, 776, 778, 780, 782, 784, 786, 787, 800,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 896, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 980, 0, 0, 803, 805, 806,
	807, 0, 869, 894, 895, 904, 791, 0, 1221, 1563,
	1419, 1400, 1414, 1419, 1402, 1403, 1404, 1405, 1406, 1411,
	1413, 1407, 1408, 1409, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 426, 428, 430, 432, 434, 437,
	439, 441, -2, 1532, 1533, 489, 491, 493, 495, 497,
	499, 501, 637, 0, 639, 0, 804, -2, 0, 1567,
	1567, 1567, 0, 0, 1533, 1531, 0, 642, 643, 699,
	700, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 1924, 0, 701, -2, 1957, 1959, 2683, 2515, 2708,
	2093, 1961, 1962, 1963, 1964, 1965, 0, 1967, 1968, 1969,
	1970, 1971, 1972, 0, 1974, 0, 1979, 1980, 1981, 0,
	2690, 2197, 2281, -2, 0, 0, 2696, 2277, 0, 2060,
	1997, -2, -2, 2304, 2283, 1768, 1769, 1770, 1771, 1772,
	-2, -2, 2726, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 0, 2671, 2691, 2692, 2697, 2699,
	2693, 2680, 2022, 2386, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1795, 1804, -2,
	-2, -2, -2, -2, -2, -2, 2684, 2685, 2702, 2705,
	2711, 2716, 2717, 2689, 2698, 2725, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 1796, -2, -2, -2, -2, 1550, 2555, 1553,
	1181, 1551, 1535, 1537, 0, 1539, 0, 0, 0, 1544,
	1570, 1568, 0, 1619, 1548, 1549, 1638, 1638, 1662, 0,
	1643, 0, 1662, 1562, 1689, 0, 1649, 2580, 1998, 1999,
	0, 2287, 2282, -2, -2, 2723, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 604, 606, 0, 0,
	0, 625, 1572, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 410, 411, 2691, 0, 0, 0, 416,
	0, 418, 419, 420, 421, 422, 423, 424, 203, 2691,
	506, 531, 0, 203, 2691, 509, 203, 2691, 512, 0,
	515, 1295, 203, 2691, 518, 2248, 203, 2691, 521, 523,
	2256, 203, 2691, 527, 2263, 2261, 528, 2691, 530, 309,
	307, 308, 2300, 2301, 2308, 2309, 2310, 2311, 2724, 2726,
	1386, 1387, 1388, 1389, 0, 1416, 1296, 647, 648, 0,
	672, 0, 676, 2679, -2, 0, 2600, -2, 680, 1420,
	1424, 1425, 1426, 1427, 1428, 0, 0, 0, 0, 1433,
	0, 0, 0, 0, 673, 674, 687, 693, 696, 0,
	795, 796, 797, 798, 799, 72, 0, 2691, 1689, 74,
	0, 2242, 2312, 2313, 2314, 2315, 2316, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756,
	2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766,
	2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786,
	2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796,
	2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806,
	2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816,
	2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 78, 0,
	2691, 83, 0, 2691, 0, -2, 95, 0, 106, 0,
	2245, 115, 0, 2691, 0, 2217, -2, 0, 215, 293,
	294, 295, 0, 1027, -2, 2691, 1233, 1235, 1235, 0,
	-2, 0, 0, 0, 990, 2214, 2219, 991, 2238, 992,
	2224, 0, 340, 341, 342, 343, 344, 0, 345, 2691,
	347, 348, 0, 350, 351, 2691, 353, 354, 0, 356,
	0, 256, 257, 2691, 378, 380, 0, 382, 383, 0,
	385, 0, 0, 0, 389, -2, 405, 0, 402, 392,
	393, 395, 396, 397, 398, 399, 0, 445, 443, 2253,
	0, 0, -2, 2691, 0, 1024, 0, 0, 1275, -2,
	2691, 1226, 0, 1282, 2691, 1278, 0, -2, 0, 1560,
	2691, 1437, 1056, 1057, 1058, 1059, 1701, 472, 0, 1468,
	0, 1470, 0, 1489, 1695, 1638, 0, 0, 1700, 0,
	-2, 591, 2270, -2, 541, 0, 542, 0, -2, 0,
	321, 0, 0, 1009, 1010, 1011, 1012, 1013, 1016, 1017,
	1018, 1019, 1675, 274, 276, 0, 0, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 0, 0, 657, 0,
	0, 801, 802, 0, 0, 812, 813, 814, 0, 321,
	2592, 2551, 2407, 821, 0, 824, 827, -2, 0, 0,
	0, 0, 831, 0, 836, 837, 838, 0, -2, 0,
	845, 847, 998, 849, 0, 0, 851, 0, 855, 0,
	858, 0, 860, 0, 862, -2, -2, -2, 870, 871,
	-2, 876, -2, 0, 880, -2, 0, 883, 0, 886,
	-2, 0, 896, 892, 893, 0, 0, 0, 0, 912,
	913, 0, 922, 0, 925, 926, 927, 0, 931, 932,
	0, 934, 935, 936, 937, 0, 2663, 2597, 2373, 0,
	943, -2, 949, 951, 0, -2, 0, 967, 0, 971,
	0, 0, 979, 0, 0, 808, 809, 203, 1693, 1399,
	-2, 1401, 0, -2, 0, 638, 0, 641, 1592, 1518,
	1515, 0, 1589, 1590, 1519, 0, 0, 0, 1526, 0,
	1565, 1566, 0, 0, 0, 1505, 1506, 0, 0, 0,
	0, 2099, 2100, 2101, 2102, 2115, 2103, 2104, 2114, 2112,
	2113, 2105, 2106, 2111, 2125, 2126, 2116, 2117, 2107, 2120,
	2118, 2119, 2121, 2122, 2123, 2124, 0, 0, 2130, 0,
	2108, 2109, 2110, 2138, 0, 0, 2139, 0, 2141, 0,
	2131, 2127, 2128, 2129, 0, 1903, 1905, 2205, 0, 0,
	0, 2137, 2132, 2133, 1841, 1842, 1843, 1844, 1845, 1878,
	1882, 1883, 0, 0, 1958, 2202, 2201, 1960, 0, 0,
	2153, 0, 1973, -2, 0, 2094, 2148, 0, 0, 1982,
	1983, 1984, 0, 0, 2153, 0, 0, 2196, 1994, 1995,
	1833, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1781, 0, 1783, 0, 1784, 1785, 1792, 1805,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 2177, -2, 0, 0, 0, 0, 1797, 0,
	1552, 0, 0, 1623, 2206, 2210, 2211, 1623, 1623, 0,
	0, 2154, 1686, 1686, 0, 0, 1681, 1681, 1681, 1679,
	1662, 0, 1662, 1672, 0, 1662, 1662, 0, -2, 1643,
	0, 0, 1672, 0, 1656, 579, 581, 583, 585, 586,
	587, 589, 1690, 1691, 0, 0, 0, 0, 2288, 0,
	0, 0, 0, 0, 2273, 0, 361, 0, 0, 0,
	2646, 2591, 0, -2, 609, 628, 1562, 0, 2156, 1716,
	1720, 0, 1722, 1723, 1724, 1725, 1726, 0, 0, 1717,
	-2, 1793, 1795, 1816, 2305, 2306, 2307, 1776, 1777, 1778,
	1779, 1780, 1788, 1775, 1775, 1775, 1786, 1815, 1807, 1815,
	1811, 1761, 1762, 1763, 1798, 1799, 1800, 1801, 0, 2646,
	2591, 0, -2, 618, 0, 0, 1500, 219, 221, 222,
	223, 224, 225, 406, 0, 413, 414, 415, 0, 502,
	0, 201, 202, 0, 203, 2691, 507, 0, 510, 0,
	203, 2691, 2212, 516, 0, 519, 0, 0, 525, 0,
	0, 0, 0, 0, 203, 1502, 0, 0, 0, 0,
	-2, 682, 689, 690, 0, 1422, 0, 1429, 710, 711,
	712, 1431, 1432, 0, 1434, 685, 713, 714, 715, 716,
	717, 718, 0, 2226, 2227, 2228, 2229, 2232, 2233, 0,
	0, 683, 703, 686, 0, 697, 116, 1372, 0, 0,
	159, 0, 1372, 1372, 0, 0, 0, 0, 186, 0,
	1095, 0, 0, 0, 0, 131, 144, 155, 128, 129,
	0, 0, 0, 0, 0, 0, 84, 1203, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 1219, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 103, 143, 0,
	0, 1465, 0, 138, 118, 0, 0, 131, 145, 157,
	0, 190, 192, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 226, 0, 0, 0, 1227, 0, 0,
	0, 1559, 0, 0, 0, 0, 2691, 1370, 0, 1355,
	0, 1675, 2456, -2, -2, 274, 1675, 989, 0, 0,
	2288, 2222, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 384, 386, 387, 388, 0, 1274, 0, 394, 435,
	1152, 2691, 0, 0, 462, 457, 0, 459, 0, 0,
	0, 1202, 2691, 1200, 2257, 0, 1224, 0, 1181, 2691,
	2255, 0, 0, 0, 1283, 2297, 1292, 1296, 1455, 0,
	474, 0, 1471, 1473, 0, 0, 1696, 0, 1698, 1638,
	1562, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 280, 0, 1674, 0, 0, 1675, 274, 2566,
	321, 321, 1675, 659, 1675, 661, 0, 0, 815, 816,
	0, 321, 321, 321, 822, 823, 825, 826, -2, -2,
	-2, -2, 828, 829, 919, 0, 0, 0, 918, 839,
	0, 841, 844, 848, 0, 983, 2575, 2591, 2646, 996,
	919, 2373, 919, 2373, 919, 2373, 859, 861, 864, 907,
	915, 875, 882, 0, 877, 881, 884, 887, 0, 889,
	897, -2, 0, 899, 0, 901, 0, 903, 919, 920,
	923, 930, 933, 938, 939, 940, 941, 2268, 942, -2,
	946, 947, 0, 958, 963, 964, 960, 0, 0, 0,
	0, 0, 0, 974, 975, 0, 0, 982, 1220, 0,
	1412, 1592, 1518, 640, 1509, 1591, 1510, 1517, 1520, 0,
	0, 1522, 0, 1524, 0, 1587, 1588, 1595, 1596, 0,
	1606, 1607, 1599, 0, -2, 0, 0, 1602, 1603, 1528,
	0, 1545, 1546, 1547, 1576, 1579, 1311, 0, 2825, 1837,
	1711, 1838, 1839, 2241, 0, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, -2, -2, -2, -2, -2,
	-2, -2, -2, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, -2, -2, -2, 1879, 1880, 1881,
	-2, 2140, 2142, 0, 2205, 0, -2, 0, -2, -2,
	-2, -2, 1900, 0, 1902, 1907, 1909, 1911, 0, 0,
	0, 0, 2204, 1921, 2188, 2189, 0, 0, 2096, 2097,
	2098, 1906, 0, 1925, 2203, 2200, 0, 0, 2134, 0,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 0, 2152, 1575, 1986, 0, 0, 0,
	0, 1993, 1978, 2150, 0, 2149, 0, 0, 0, 2160,
	0, 2195, 2191, 0, 2239, 1832, 1819, 1820, 1821, 1822,
	1823, 1824, 1834, 0, 2236, 2274, 2280, 2070, 0, 0,
	0, 2023, 2024, 2025, 2026, 2027, 0, 2029, 2030, 0,
	2032, 2033, 0, 2035, 2036, 0, 2038, 2039, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 0, 0,
	2042, 0, 2163, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2044, 0, 2046, 2154, 2174, 0, 0, 1926,
	0, 0, 0, 0, 2094, 0, 2049, 2154, 2182, 0,
	0, 0, 0, 0, 2154, 0, 2187, 0, 2056, 0,
	2058, 1554, 0, 0, 1706, 0, 0, 0, 2209, 1706,
	1706, 0, 1618, 0, 0, 1682, 1683, 1684, 1685, 0,
	0, 1686, 0, 1676, 1680, 1677, 1678, 1672, 1635, 0,
	0, 2243, 1672, 1641, 1671, 0, 1181, 1661, 1672, 1672,
	0, -2, 1645, 1662, 0, 0, 580, 582, 584, 588,
	590, 0, 0, 1575, -2, 0, -2, 323, 1180, 0,
	0, 0, 0, 599, 601, 0, 0, 522, 0, 0,
	615, 0, 593, 0, 596, 0, 1707, 1710, 0, 0,
	1721, 1727, 1728, 0, -2, 0, 0, 1817, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 417, 532,
	203, 504, 0, 203, 203, 513, 0, 0, 203, 524,
	203, 2264, 203, 2262, 310, 529, 1501, 237, 0, 675,
	0, 1421, 1430, 0, 707, 0, 709, 0, 2230, 2234,
	2231, 2235, 0, 698, 0, 0, 0, 0, 1371, 0,
	1318, 0, 0, 163, 2691, 0, 205, 0, 0, 1145,
	2249, 0, 1135, 0, 0, 2393, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 1204, 1205, 1207, 1214, 1216, 0,
	1210, 2237, 0, 0, 1211, 0, 1213, 1215, 1217, 0,
	0, 0, 0, 0, 0, 0, 97, 104, 0, 0,
	0, 0, 0, 0, 1464, 1465, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 2216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 1270, 1268, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 0, 0, 0, -2,
	1231, 1232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 312, 2215, 2225, 0, 1014, 1015, 346,
	349, 352, 355, 243, 0, 390, 0, 0, 1062, 1037,
	0, 0, 444, 321, 0, 0, 458, 462, 2266, 1022,
	1198, 1201, 0, 1181, 2691, 1247, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 2691, 2244, 2296, 2297, 1457,
	1465, 0, 1706, 0, 1487, 1474, 0, 0, 0, 1487,
	1491, 1492, 1494, 1495, 0, 0, 1697, 1703, 540, 592,
	1562, 1562, 321, 319, 2518, 317, 314, 316, 0, 0,
	0, 1063, 1065, 1066, 1067, 205, 0, 2297, 1135, 2445,
	2297, 0, 1477, 1479, 0, 268, 0, 277, 1675, 275,
	280, 0, 0, 0, 456, 658, 663, 810, 0, 321,
	818, 819, 820, 866, 909, 917, 962, 830, 832, 833,
	834, 0, 0, 0, 997, 993, 994, 995, 850, 919,
	853, 919, 856, 919, 879, 885, 891, 898, 0, 0,
	0, 911, 928, 0, 945, 0, 0, 0, 0, 0,
	0, 0, 968, 969, 970, 972, 977, 976, 981, 1694,
	1513, 1514, 1516, 0, 1525, 0, 0, 1601, -2, -2,
	1600, 1604, 1605, -2, -2, -2, -2, 1521, 0, 1530,
	1527, 0, 1586, 1309, 1310, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1922, 0, -2, 1901, 1904, 1908,
	1910, 1912, 0, 0, 0, 0, 0, 0, 2143, 0,
	2145, 1923, 2198, 2201, 2136, 0, 2092, 0, 0, 1574,
	1575, 1575, 0, 1992, 0, 2151, 0, 2158, 2159, 0,
	1985, 0, 2192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 2028, 2031, 2034,
	2037, 0, 0, 0, 0, 2017, 0, 0, 0, 2021,
	1787, 1773, 0, 1815, 1813, 1814, 1808, 1815, 1812, 1765,
	0, 1764, 0, 2041, 0, 2043, 2045, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1929, 1930, 1931, 1951, 2048, 2180,
	2181, 0, 0, 0, 0, 0, 0, 2054, 0, 2186,
	2055, 2057, 1562, 0, 1555, 0, 1620, 1609, 1705, 0,
	2207, 1675, 1622, 1624, 2208, 2246, 1609, 1609, 0, 2155,
	0, 0, 1666, 0, 0, 0, 1668, 1639, 0, 0,
	1633, 0, 1628, 1629, 1630, 1631, 1632, 1640, 1181, 1670,
	1642, 1646, 2274, 0, 1672, 0, 1657, 0, 1659, 1692,
	0, 1651, 1654, 0, 0, 2289, 1706, 0, 357, 362,
	363, 358, 359, 360, 608, 0, 0, 0, 0, 0,
	2157, 0, 1712, 0, 1718, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 220, 1499, 412, 503, 203, 508,
	511, 2213, 203, 517, 520, 526, 233, 0, 671, -2,
	705, 706, 708, 0, 704, 160, 1372, 0, 0, 1314,
	1316, 2260, 1320, 1326, 1329, 0, 165, 2691, 177, 0,
	1111, 0, 2247, 0, 0, 0, 0, 0, 0, 1374,
	0, 0, 2691, 203, 2691, 203, 180, 182, 185, 0,
	189, 187, 0, 1099, 0, 0, 1102, 117, 1372, 0,
	0, 120, 124, 132, 133, 136, 0, 0, 0, 142,
	0, 0, 0, 1331, 1335, 1343, 0, 0, 0, 1208,
	1209, 1212, 1218, 85, 0, 0, 0, 1339, 1341, 1347,
	96, 1443, 1444, 98, 2691, 2258, 100, 2691, 0, 1313,
	0, 0, 0, 0, 191, 122, 126, 134, 135, 137,
	0, 1349, 119, 0, 218, 0, 0, 208, 203, 2691,
	0, 210, 0, 211, 212, 227, 0, 0, 0, 1025,
	1026, 1236, 1237, 1238, 1269, 1222, 1223, 0, 1234, 1228,
	0, 0, 0, 0, 0, 1351, 1352, 0, 0, 0,
	1370, 1367, 1675, 239, 0, 1675, 247, 0, 2221, 0,
	377, 0, 0, 0, 0, 1061, 1163, 0, 1032, 0,
	0, 0, 450, 446, 0, 455, 461, 460, 466, -2,
	0, 0, 0, 0, -2, 0, 0, 1285, 1279, 1280,
	0, 0, 0, 0, 2691, 1459, 1465, 0, 1560, 1575,
	473, 1466, 1487, 0, 0, 0, 1476, 1472, 1469, 1706,
	0, 0, 0, 0, 0, 1699, 1702, 543, 544, 296,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 1068,
	1072, 0, 2297, 2297, 0, 2251, 0, 0, 0, 0,
	278, 0, 281, 0, 0, 0, 286, 287, 288, 289,
	290, 291, 280, 270, 1675, 0, 0, 660, 0, 0,
	817, 0, 840, 843, 852, 854, 857, 900, 902, 919,
	929, 952, 953, 1089, 0, 1089, 0, 0, 973, 1523,
	0, 1598, 1529, 1580, 1581, 0, 1311, 0, 1840, 1885,
	0, 0, -2, 0, 0, 1889, 0, 0, 0, -2,
	0, 0, 0, 2144, 2146, 0, 2200, 2135, 1987, 0,
	0, 0, 1991, 1975, 1976, 0, 2095, 2161, 2190, 2194,
	0, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 0, 2240,
	2275, 2279, 2068, 2069, 2073, 2254, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1810,
	0, 0, 2162, 2173, 2175, 1927, 1928, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, -2, -2, -2,
	1945, 1946, 1947, -2, -2, -2, 1952, 0, 0, 0,
	2176, 2178, 2179, 2183, 2184, 0, 2051, 2052, 2053, 2185,
	0, 1562, 1556, 1617, 0, 1704, 1621, 0, 1617, 1617,
	1569, 1664, 0, 0, 1688, 0, 1636, 0, 1637, 0,
	1669, 0, 1644, 1647, 1648, 1658, 0, 1650, 0, 1653,
	0, 1987, -2, 322, 324, 326, 0, 329, 330, 0,
	0, 611, 612, 0, 610, 594, 0, 0, 1714, 0,
	0, 1790, 1794, 1818, 620, 621, 0, 619, 505, 514,
	235, 0, 1673, 0, 0, 0, 0, 0, 0, 204,
	1109, 1144, 0, 0, 0, 1134, 0, 0, 1150, 167,
	168, 169, 0, 0, 0, 0, 178, 0, 0, 175,
	0, 184, 188, 1096, 0, 0, 0, 0, 1319, 0,
	0, 0, 139, 140, 141, 0, 146, 0, 147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1449,
	1450, 0, 1440, 0, 0, 0, 206, 0, 0, 0,
	1308, 229, 0, 0, 0, 0, 0, 1272, 1273, 1230,
	1332, 1336, 1344, 0, 0, 0, 0, 626, 0, 631,
	1369, 0, 247, 245, 0, 248, 0, 251, 252, 0,
	254, 247, 241, 0, 0, 0, 1181, 391, 1035, 1151,
	0, 1153, 0, 1033, 0, 0, 1152, 442, 0, 449,
	0, 463, 0, 0, 1202, 0, 0, 1225, 1245, 1181,
	0, 1284, 1286, 0, 1294, 0, 0, 0, 1461, 1465,
	0, 1454, 1455, 1594, 1467, 1485, -2, 0, 0, 1575,
	1493, 1490, 1496, 1497, 0, 318, 0, 313, 315, 0,
	299, 0, 0, 1064, 1069, 0, 0, 0, 0, 0,
	1478, 1480, 0, 0, 0, 0, 0, 0, 269, 280,
	1675, 305, 0, 811, 835, 910, 954, 1088, 0, 0,
	956, 0, 0, 1597, 1584, 1585, 1582, 1311, 1887, 1891,
	0, 0, 0, 1893, -2, 0, 1915, -2, -2, 2147,
	2199, 1966, 1575, 1988, 1990, 1977, 2193, 1835, 0, 2075,
	2072, 0, 2059, 0, 2012, 2013, 0, 0, 2016, 2018,
	2019, 2020, 1774, 1767, 1766, 2172, 0, 0, 0, 0,
	2050, 1557, 0, 2064, 0, 0, 1625, 2064, 2064, 1665,
	0, 1667, 1634, 1626, 0, 2275, 1660, 1652, 0, 0,
	327, 0, 331, 332, 0, 0, 1708, 1713, 0, 1719,
	1789, 0, 236, 161, 162, 1323, 1327, 1324, 0, 164,
	0, 1110, 0, 1113, 0, 0, 0, 0, 1120, 1135,
	0, 0, 0, 0, 0, 0, 1137, 0, 1136, 0,
	0, 1167, 0, 1299, 1306, 0, -2, 0, 0, 0,
	171, 194, 0, 0, 0, 0, 197, 1373, 173, 0,
	0, 203, 203, 0, 0, 1315, 1317, 1330, 0, 0,
	0, 0, 149, 0, 0, 1333, 1337, 1345, 1340, 1342,
	1348, 0, 101, 0, 1451, 0, 0, 1350, 216, 217,
	0, 203, 0, 203, 209, 203, 1308, 0, 0, 0,
	0, 0, 0, 0, 1353, 1354, 238, 0, 0, 0,
	0, 240, 311, 247, 379, 0, 1083, 0, 1163, 1155,
	1156, 1157, 0, 1162, 1164, 0, 0, 1049, 1034, 0,
	1045, 0, 0, 1062, 1037, 0, 447, 464, 0, 467,
	0, 470, 1023, 1199, 1242, 1181, 0, 1276, 0, 0,
	0, 0, 0, 0, 0, 1463, 1465, 0, 1456, 1457,
	1487, 1593, 0, 0, 0, 1475, 1594, 0, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	282, 0, 283, 284, 285, 271, 272, 662, 664, 0,
	0, 670, 1087, 0, 0, 0, 0, 1583, 1895, -2,
	-2, 1916, 0, 2276, 2278, 1575, 0, 2061, 1577, 0,
	0, -2, 0, 0, 0, 1558, 1541, 0, 1616, 1608,
	1610, 1612, 2578, 2368, 2690, 1542, 1543, 1687, 0, 1655,
	328, 613, 0, 0, 1715, 0, 0, 0, 1325, 166,
	0, 1114, 1115, 2250, 1117, 0, 1119, 1121, 1122, 1123,
	0, 1126, 0, 2299, 0, 1131, 1132, 1133, 0, 0,
	1146, 1168, 0, 1177, 0, 1301, 1311, 1305, 0, 1303,
	1179, 0, 170, 196, 172, 198, 193, 0, 1308, 0,
	174, 183, 0, 0, 121, 0, 0, 2362, 152, 150,
	148, 99, 1312, 123, 0, 218, 228, 1307, 230, 213,
	203, 0, 1334, 1338, 1346, 0, 1361, 1362, 1363, 1364,
	0, 0, 0, 0, 249, 0, 250, 253, 0, 0,
	1098, 0, 1036, 1154, 0, 1165, 1166, 1039, 0, 1038,
	0, 0, 0, 0, 0, 448, 451, 0, 454, 0,
	0, 0, 0, 0, 1287, 1285, 0, 1293, 0, 0,
	0, 1439, 0, 0, 1458, 1459, 471, 1481, 0, 0,
	1487, 1498, 298, 0, 0, 1070, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1071, 1179, 0, 0, 1143,
	0, 303, 279, 0, 666, 0, 668, 0, 955, 957,
	0, 0, 1989, 2079, 0, 0, 2014, 2015, -2, 0,
	1955, 2063, 2065, 0, 0, 0, 0, 0, 1627, 614,
	1709, 622, 1321, 0, 1328, 1112, 1116, 0, 0, 0,
	1127, 1185, 0, 0, 1138, 0, 0, 1171, 1172, 1083,
	0, 1173, 1174, 1175, 1300, 1586, 1306, 1083, 0, 0,
	195, 200, 0, 0, 0, 0, 0, 0, 0, 207,
	231, 1308, 0, 1365, 1366, 0, 0, 246, 264, 0,
	1243, 1037, 1097, 0, 0, 1047, 0, 1050, 0, 1046,
	1043, 1044, 1035, 0, 452, 453, 468, 0, 469, 0,
	1246, 0, 0, 1294, 0, 0, 1446, 1438, 1465, 1460,
	1461, 1706, 1484, 1488, 0, 0, 1177, 1179, 1094, 0,
	665, 0, 0, 965, 966, 0, 0, 0, 0, 2074,
	1578, 1956, 0, 0, 1611, 1613, 1614, 1615, 1322, 0,
	0, 1125, 1190, 0, 0, 0, 1139, 1169, 1170, 1094,
	0, 1304, 1302, 1148, 0, 1181, 176, 0, 1179, 0,
	1103, 0, 0, 1106, 0, 0, 153, 2362, 151, 0,
	203, 1358, 203, 0, 267, 0, 261, 259, 260, 1039,
	0, 0, 1159, 1161, 0, 1051, 1083, 1049, 465, 1244,
	1277, 1179, 0, 1177, 0, 1453, 1465, 1447, 1448, 0,
	1463, 0, 321, 321, 1083, 1177, 1037, 1093, 321, 667,
	669, 2071, 2091, 2080, -2, 2649, 2369, 0, 2091, 2091,
	2066, 2067, 0, 0, 1128, 1186, 1187, 0, 1182, 1183,
	1184, 2298, 1129, 1130, 1167, 0, 0, 1185, 199, 1083,
	1100, 0, 0, 1101, 0, 0, 156, 0, 158, 232,
	1356, 0, 1359, 0, 255, 0, 0, 1031, 0, 1158,
	0, 0, 0, 0, 1098, 1039, 1177, 0, 1083, 0,
	1442, 1452, 0, 1462, 1439, 0, 300, 301, 1094, 1083,
	1706, 0, 302, 2076, 0, 0, 2082, 2083, 2084, 2085,
	2086, 2077, 2078, 1118, 0, 1188, 0, 1189, 0, 0,
	0, 1706, 1176, 0, 1190, 181, 1104, 0, 1107, 0,
	154, 0, 0, 0, 262, 263, 1028, 1030, 0, 1160,
	1040, 0, 1042, 1037, 1048, 1083, 0, 1094, 0, 1435,
	1441, 1445, 2259, 1446, 1482, 0, 1037, 1094, 1142, 0,
	2088, 2089, 0, 0, 0, 1191, 0, 1194, 1195, 0,
	1192, 1147, 0, 1167, 0, 0, 1357, 203, 0, 0,
	1041, 1039, 1094, 1179, 1037, 1177, 1453, 0, 1706, 1037,
	2087, 2090, 2081, 1124, 1193, 1196, 1197, 1178, 1149, 0,
	0, 1360, 265, 0, 1086, 1031, 1037, 1177, 1706, 1083,
	1442, 1706, 1140, 1706, 1091, 0, 0, 1082, 1084, 1085,
	1029, 1706, 1083, 1290, 1094, 1436, 1483, 1141, 1105, 1090,
	0, 266, 1288, 1094, 1037, 0, 1037, 1706, 0, 1706,
	1291, 1091, 1289, 1108,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 584, 3, 590, 585, 3,
	595, 596, 588, 586, 600, 587, 597, 589, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 603, 3,
	576, 578, 577, 581, 599, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 593, 3, 594, 591, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 601, 583, 602, 579,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 580, 57919, 582,
	57920, 592, 57921, 598, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1468
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1643
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1674
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1680
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1764
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1796
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1820
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1829
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1881
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1882
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1895
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1919
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1931
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1938
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1946
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1955
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1966
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1985
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1995
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2005
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2014
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2025
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2031
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2057
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2062
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2153
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2199
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2205
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2257
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = nil
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = true
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = false
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2440
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2444
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2447
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2482
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2487
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2502
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2533
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2617
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2625
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = nil
		}
	case 268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			return unimplemented(sqllex, "alter function")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3045
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3054
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3060
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3065
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3070
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3075
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3080
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = nil
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3187
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3367
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3383
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3387
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3392
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3411
		{
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "CREATE")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3429
		{
			return unimplemented(sqllex, "create access method")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3431
		{
			return unimplemented(sqllex, "create cast")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3432
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3434
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3436
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3438
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3439
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			return unimplemented(sqllex, "create publication")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3442
		{
			return unimplemented(sqllex, "create rule")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplemented(sqllex, "create server")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3451
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3454
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3455
		{
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3458
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3459
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplemented(sqllex, "drop server")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3606
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3641
		{

			sqlVAL.union.val = nil
		}
	case 463:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "DELETE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3728
		{
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3754
		{
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "DROP")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3758
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3764
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3954
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3979
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3984
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4020
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4028
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4044
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4052
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "DELETE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "INSERT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4098
		{
			return helpWith(sqllex, "DELETE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "INSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4133
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4166
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4256
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4271
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			return helpWith(sqllex, "GRANT")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4334
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4346
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "RESET")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "RESET")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "USE")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4420
		{
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4421
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4422
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "USE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			return unimplemented(sqllex, "set from current")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4644
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4649
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4667
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = tree.Low
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = tree.Normal
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = tree.High
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SHOW")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4847
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4851
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4861
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.str = "client_encoding"
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.str = "timezone"
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4916
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4988
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5027
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5141
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5149
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = true
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = true
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = false
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5320
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5367
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = true
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = false
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5422
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5437
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = true
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = false
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5455
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5484
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5495
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5517
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5527
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5545
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5550
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5560
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5578
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5582
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5584
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5588
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5628
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5636
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5657
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5671
		{
		}
	case 965:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5680
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5703
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5715
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5784
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5791
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5798
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5931
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5983
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6032
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6033
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6034
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6073
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6176
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6215
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6231
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{

			sqlVAL.union.val = nil
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.str = ""
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = nil
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6299
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6303
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6329
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6343
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6359
		{
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6360
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6415
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6452
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6465
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.str = ""
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6733
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{

			sqlVAL.union.val = true
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = false
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6780
		{
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6783
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6883
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6894
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6921
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7001
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7002
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7005
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7006
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7078
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7162
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7171
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7179
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7195
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7205
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7211
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7214
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7217
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7219
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7232
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7257
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.str = ""
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = true
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{

			sqlVAL.union.val = true
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = false
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7340
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7354
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7366
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7378
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7388
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7398
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = nil
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7508
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7534
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7536
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7538
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7540
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7542
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7544
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7582
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7600
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7619
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7636
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7653
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7657
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = false
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = true
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = false
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = true
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = false
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7711
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7717
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7723
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7731
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.str = ""
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.str = ""
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7790
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7796
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8021
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8027
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8039
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8045
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8059
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8065
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8124
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = true
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = false
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = tree.Types
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8184
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8188
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8212
		{
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8213
		{
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8216
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8217
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8246
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8284
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8305
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8313
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8324
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8329
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8330
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8349
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8354
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8372
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8404
		{
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8445
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8447
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8451
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8540
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.str = ""
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8563
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8568
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{

		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8600
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.str = ""
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.str = ""
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.str = ""
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.str = ""
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8655
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8669
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8716
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8729
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8805
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8809
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8879
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8900
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8915
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9059
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9094
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9095
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9157
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9201
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = true
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = false
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9271
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = nil
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9285
		{
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = true
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = false
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = false
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = true
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9315
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9318
		{
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9319
		{
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9360
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9381
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9386
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9540
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9541
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9571
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9573
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9610
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9620
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9648
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9667
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9707
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9717
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9752
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9763
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9793
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9826
		{
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9828
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = nil
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = true
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = false
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.str = tree.AstFull
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.str = tree.AstRight
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.str = tree.AstInner
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9945
		{
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9946
		{
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.str = tree.AstHash
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.str = ""
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10015
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10038
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10050
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10060
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = true
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = false
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = true
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = false
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10109
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10122
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10130
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10131
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10149
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10151
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10159
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10179
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10228
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10240
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10241
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = types.Geography
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10290
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10298
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10332
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = nil
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = types.Int2
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = types.Int
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = types.Float4
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = types.Float
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10375
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10391
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = types.Bool
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = types.Float
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10424
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10430
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10452
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = types.String
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = true
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = false
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = types.Date
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10501
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10509
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10523
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10532
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10540
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10557
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = true
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = false
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = false
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = types.Interval
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10581
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10680
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = nil
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10710
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10770
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10927
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11040
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11106
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11236
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11244
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11345
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11371
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11380
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11395
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11425
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11436
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11437
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11461
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11527
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11652
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11657
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11666
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11693
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11698
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11713
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11722
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11723
		{
			return unimplemented(sqllex, "treat")
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11749
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.str = ""
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11885
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11898
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11995
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12071
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12411
		{
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12412
		{
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12484
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12565
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12581
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12590
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12618
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12635
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12777
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12784
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12792
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12854
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12874
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.str = ""
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
