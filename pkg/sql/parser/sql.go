// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}

//line sql-gen.y:960
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15156

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 5,
	-2, 1823,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	281, 519,
	-2, 0,
	-1, 75,
	8, 979,
	29, 979,
	642, 979,
	643, 979,
	-2, 0,
	-1, 76,
	8, 979,
	29, 979,
	642, 979,
	643, 979,
	-2, 0,
	-1, 78,
	1, 1673,
	139, 1673,
	269, 1673,
	356, 1673,
	419, 1673,
	429, 1673,
	623, 1673,
	655, 1673,
	-2, 0,
	-1, 79,
	1, 1673,
	655, 1673,
	-2, 0,
	-1, 85,
	262, 270,
	561, 270,
	-2, 0,
	-1, 99,
	203, 441,
	248, 1550,
	264, 1550,
	281, 441,
	421, 441,
	433, 1293,
	477, 441,
	492, 1293,
	545, 1293,
	574, 441,
	601, 1293,
	-2, 0,
	-1, 106,
	141, 1823,
	257, 1823,
	585, 1823,
	586, 1823,
	-2, 0,
	-1, 124,
	160, 1794,
	181, 1794,
	194, 1794,
	260, 1794,
	295, 1794,
	369, 1794,
	380, 1794,
	580, 1794,
	-2, 1765,
	-1, 166,
	168, 1113,
	280, 1113,
	424, 1074,
	497, 1074,
	544, 1074,
	564, 1113,
	566, 1074,
	-2, 0,
	-1, 171,
	4, 1825,
	21, 1825,
	22, 1825,
	23, 1825,
	24, 1825,
	25, 1825,
	26, 1825,
	27, 1825,
	28, 1825,
	30, 1825,
	31, 1825,
	37, 1825,
	41, 1825,
	43, 1825,
	44, 1825,
	45, 1825,
	47, 1825,
	48, 1825,
	49, 1825,
	50, 1825,
	51, 1825,
	52, 1825,
	53, 1825,
	54, 1825,
	55, 1825,
	57, 1825,
	58, 1825,
	59, 1825,
	60, 1825,
	62, 1825,
	63, 1825,
	64, 1825,
	65, 1825,
	66, 1825,
	67, 1825,
	68, 1825,
	69, 1825,
	73, 1825,
	74, 1825,
	75, 1825,
	76, 1825,
	78, 1825,
	79, 1825,
	80, 1825,
	84, 1825,
	85, 1825,
	86, 1825,
	87, 1825,
	88, 1825,
	89, 1825,
	90, 1825,
	91, 1825,
	94, 1825,
	95, 1825,
	96, 1825,
	97, 1825,
	98, 1825,
	100, 1825,
	102, 1825,
	103, 1825,
	104, 1825,
	105, 1825,
	106, 1825,
	107, 1825,
	108, 1825,
	110, 1825,
	111, 1825,
	112, 1825,
	114, 1825,
	115, 1825,
	116, 1825,
	124, 1825,
	125, 1825,
	126, 1825,
	127, 1825,
	128, 1825,
	130, 1825,
	131, 1825,
	132, 1825,
	133, 1825,
	135, 1825,
	136, 1825,
	137, 1825,
	138, 1825,
	140, 1825,
	141, 1825,
	142, 1825,
	144, 1825,
	145, 1825,
	146, 1825,
	149, 1825,
	150, 1825,
	151, 1825,
	153, 1825,
	154, 1825,
	155, 1825,
	157, 1825,
	158, 1825,
	159, 1825,
	161, 1825,
	162, 1825,
	163, 1825,
	164, 1825,
	165, 1825,
	166, 1825,
	167, 1825,
	168, 1825,
	169, 1825,
	170, 1825,
	171, 1825,
	172, 1825,
	173, 1825,
	174, 1825,
	175, 1825,
	176, 1825,
	177, 1825,
	178, 1825,
	180, 1825,
	186, 1825,
	187, 1825,
	188, 1825,
	189, 1825,
	193, 1825,
	195, 1825,
	196, 1825,
	197, 1825,
	199, 1825,
	200, 1825,
	203, 1825,
	204, 1825,
	205, 1825,
	206, 1825,
	207, 1825,
	208, 1825,
	209, 1825,
	210, 1825,
	211, 1825,
	212, 1825,
	213, 1825,
	214, 1825,
	215, 1825,
	216, 1825,
	218, 1825,
	219, 1825,
	221, 1825,
	222, 1825,
	224, 1825,
	225, 1825,
	226, 1825,
	227, 1825,
	228, 1825,
	229, 1825,
	230, 1825,
	231, 1825,
	232, 1825,
	233, 1825,
	234, 1825,
	236, 1825,
	237, 1825,
	238, 1825,
	240, 1825,
	241, 1825,
	242, 1825,
	243, 1825,
	244, 1825,
	248, 1825,
	249, 1825,
	250, 1825,
	251, 1825,
	254, 1825,
	255, 1825,
	256, 1825,
	257, 1825,
	258, 1825,
	259, 1825,
	261, 1825,
	263, 1825,
	264, 1825,
	265, 1825,
	267, 1825,
	269, 1825,
	270, 1825,
	271, 1825,
	273, 1825,
	277, 1825,
	278, 1825,
	279, 1825,
	280, 1825,
	281, 1825,
	282, 1825,
	284, 1825,
	285, 1825,
	286, 1825,
	288, 1825,
	289, 1825,
	290, 1825,
	292, 1825,
	293, 1825,
	296, 1825,
	297, 1825,
	298, 1825,
	299, 1825,
	300, 1825,
	301, 1825,
	302, 1825,
	305, 1825,
	306, 1825,
	307, 1825,
	308, 1825,
	310, 1825,
	311, 1825,
	312, 1825,
	313, 1825,
	314, 1825,
	315, 1825,
	316, 1825,
	317, 1825,
	318, 1825,
	319, 1825,
	320, 1825,
	321, 1825,
	322, 1825,
	323, 1825,
	324, 1825,
	325, 1825,
	326, 1825,
	327, 1825,
	328, 1825,
	329, 1825,
	330, 1825,
	331, 1825,
	332, 1825,
	334, 1825,
	336, 1825,
	337, 1825,
	338, 1825,
	339, 1825,
	340, 1825,
	341, 1825,
	342, 1825,
	343, 1825,
	344, 1825,
	345, 1825,
	346, 1825,
	347, 1825,
	348, 1825,
	349, 1825,
	350, 1825,
	351, 1825,
	352, 1825,
	354, 1825,
	355, 1825,
	357, 1825,
	359, 1825,
	360, 1825,
	361, 1825,
	362, 1825,
	364, 1825,
	365, 1825,
	366, 1825,
	367, 1825,
	368, 1825,
	371, 1825,
	373, 1825,
	375, 1825,
	376, 1825,
	377, 1825,
	378, 1825,
	381, 1825,
	382, 1825,
	383, 1825,
	385, 1825,
	387, 1825,
	388, 1825,
	389, 1825,
	390, 1825,
	391, 1825,
	392, 1825,
	393, 1825,
	394, 1825,
	395, 1825,
	396, 1825,
	397, 1825,
	398, 1825,
	399, 1825,
	400, 1825,
	402, 1825,
	403, 1825,
	404, 1825,
	405, 1825,
	406, 1825,
	407, 1825,
	408, 1825,
	409, 1825,
	410, 1825,
	411, 1825,
	412, 1825,
	413, 1825,
	414, 1825,
	415, 1825,
	416, 1825,
	418, 1825,
	419, 1825,
	420, 1825,
	422, 1825,
	423, 1825,
	424, 1825,
	425, 1825,
	426, 1825,
	427, 1825,
	428, 1825,
	429, 1825,
	430, 1825,
	431, 1825,
	432, 1825,
	433, 1825,
	434, 1825,
	435, 1825,
	437, 1825,
	439, 1825,
	440, 1825,
	441, 1825,
	447, 1825,
	448, 1825,
	449, 1825,
	451, 1825,
	452, 1825,
	453, 1825,
	454, 1825,
	455, 1825,
	456, 1825,
	457, 1825,
	458, 1825,
	459, 1825,
	460, 1825,
	461, 1825,
	463, 1825,
	464, 1825,
	465, 1825,
	466, 1825,
	467, 1825,
	469, 1825,
	470, 1825,
	471, 1825,
	472, 1825,
	473, 1825,
	474, 1825,
	475, 1825,
	477, 1825,
	478, 1825,
	479, 1825,
	480, 1825,
	481, 1825,
	482, 1825,
	483, 1825,
	484, 1825,
	485, 1825,
	486, 1825,
	487, 1825,
	488, 1825,
	489, 1825,
	490, 1825,
	492, 1825,
	493, 1825,
	494, 1825,
	495, 1825,
	496, 1825,
	497, 1825,
	499, 1825,
	500, 1825,
	501, 1825,
	502, 1825,
	503, 1825,
	504, 1825,
	505, 1825,
	507, 1825,
	508, 1825,
	509, 1825,
	510, 1825,
	511, 1825,
	512, 1825,
	513, 1825,
	514, 1825,
	516, 1825,
	518, 1825,
	519, 1825,
	520, 1825,
	521, 1825,
	522, 1825,
	523, 1825,
	524, 1825,
	525, 1825,
	526, 1825,
	527, 1825,
	528, 1825,
	529, 1825,
	530, 1825,
	531, 1825,
	532, 1825,
	533, 1825,
	534, 1825,
	535, 1825,
	536, 1825,
	537, 1825,
	538, 1825,
	540, 1825,
	541, 1825,
	543, 1825,
	544, 1825,
	546, 1825,
	547, 1825,
	548, 1825,
	549, 1825,
	550, 1825,
	551, 1825,
	553, 1825,
	554, 1825,
	556, 1825,
	557, 1825,
	558, 1825,
	559, 1825,
	560, 1825,
	562, 1825,
	564, 1825,
	565, 1825,
	566, 1825,
	567, 1825,
	568, 1825,
	569, 1825,
	570, 1825,
	571, 1825,
	573, 1825,
	574, 1825,
	575, 1825,
	576, 1825,
	577, 1825,
	578, 1825,
	579, 1825,
	582, 1825,
	583, 1825,
	584, 1825,
	585, 1825,
	586, 1825,
	587, 1825,
	588, 1825,
	589, 1825,
	591, 1825,
	594, 1825,
	595, 1825,
	596, 1825,
	597, 1825,
	598, 1825,
	599, 1825,
	601, 1825,
	602, 1825,
	603, 1825,
	604, 1825,
	605, 1825,
	606, 1825,
	607, 1825,
	608, 1825,
	609, 1825,
	614, 1825,
	615, 1825,
	616, 1825,
	617, 1825,
	618, 1825,
	619, 1825,
	-2, 0,
	-1, 173,
	1, 1673,
	655, 1673,
	658, 1673,
	-2, 0,
	-1, 174,
	1, 1673,
	561, 1673,
	655, 1673,
	658, 1673,
	-2, 0,
	-1, 207,
	160, 1793,
	181, 1793,
	194, 1793,
	260, 1793,
	295, 1793,
	369, 1793,
	380, 1793,
	580, 1793,
	-2, 1768,
	-1, 259,
	4, 1832,
	5, 1832,
	6, 1832,
	7, 1832,
	8, 1832,
	9, 1832,
	10, 1832,
	21, 1832,
	22, 1832,
	23, 1832,
	24, 1832,
	25, 1832,
	26, 1832,
	27, 1832,
	28, 1832,
	30, 1832,
	31, 1832,
	37, 1832,
	38, 1832,
	41, 1832,
	43, 1832,
	44, 1832,
	45, 1832,
	46, 1832,
	47, 1832,
	48, 1832,
	49, 1832,
	50, 1832,
	51, 1832,
	52, 1832,
	53, 1832,
	54, 1832,
	55, 1832,
	57, 1832,
	58, 1832,
	59, 1832,
	60, 1832,
	62, 1832,
	63, 1832,
	64, 1832,
	65, 1832,
	66, 1832,
	67, 1832,
	68, 1832,
	69, 1832,
	70, 1832,
	71, 1832,
	72, 1832,
	73, 1832,
	74, 1832,
	75, 1832,
	76, 1832,
	78, 1832,
	79, 1832,
	80, 1832,
	82, 1832,
	84, 1832,
	85, 1832,
	86, 1832,
	87, 1832,
	88, 1832,
	89, 1832,
	90, 1832,
	91, 1832,
	94, 1832,
	95, 1832,
	96, 1832,
	97, 1832,
	98, 1832,
	100, 1832,
	102, 1832,
	103, 1832,
	104, 1832,
	105, 1832,
	106, 1832,
	107, 1832,
	108, 1832,
	110, 1832,
	111, 1832,
	112, 1832,
	113, 1832,
	114, 1832,
	115, 1832,
	116, 1832,
	117, 1832,
	118, 1832,
	119, 1832,
	120, 1832,
	121, 1832,
	122, 1832,
	123, 1832,
	124, 1832,
	125, 1832,
	126, 1832,
	127, 1832,
	128, 1832,
	129, 1832,
	130, 1832,
	131, 1832,
	132, 1832,
	133, 1832,
	134, 1832,
	135, 1832,
	136, 1832,
	137, 1832,
	138, 1832,
	140, 1832,
	141, 1832,
	142, 1832,
	144, 1832,
	145, 1832,
	146, 1832,
	149, 1832,
	150, 1832,
	151, 1832,
	153, 1832,
	154, 1832,
	155, 1832,
	157, 1832,
	158, 1832,
	159, 1832,
	161, 1832,
	162, 1832,
	163, 1832,
	164, 1832,
	165, 1832,
	166, 1832,
	167, 1832,
	168, 1832,
	169, 1832,
	170, 1832,
	171, 1832,
	172, 1832,
	173, 1832,
	174, 1832,
	175, 1832,
	176, 1832,
	177, 1832,
	178, 1832,
	179, 1832,
	180, 1832,
	186, 1832,
	187, 1832,
	188, 1832,
	189, 1832,
	193, 1832,
	195, 1832,
	196, 1832,
	197, 1832,
	199, 1832,
	200, 1832,
	202, 1832,
	203, 1832,
	204, 1832,
	205, 1832,
	206, 1832,
	207, 1832,
	208, 1832,
	209, 1832,
	210, 1832,
	211, 1832,
	212, 1832,
	213, 1832,
	214, 1832,
	215, 1832,
	216, 1832,
	218, 1832,
	219, 1832,
	221, 1832,
	222, 1832,
	224, 1832,
	225, 1832,
	226, 1832,
	227, 1832,
	228, 1832,
	229, 1832,
	230, 1832,
	231, 1832,
	232, 1832,
	233, 1832,
	234, 1832,
	235, 1832,
	236, 1832,
	237, 1832,
	238, 1832,
	240, 1832,
	241, 1832,
	242, 1832,
	243, 1832,
	244, 1832,
	248, 1832,
	249, 1832,
	250, 1832,
	251, 1832,
	253, 1832,
	254, 1832,
	255, 1832,
	256, 1832,
	257, 1832,
	258, 1832,
	259, 1832,
	261, 1832,
	263, 1832,
	264, 1832,
	265, 1832,
	266, 1832,
	267, 1832,
	268, 1832,
	269, 1832,
	270, 1832,
	271, 1832,
	272, 1832,
	273, 1832,
	277, 1832,
	278, 1832,
	279, 1832,
	280, 1832,
	281, 1832,
	282, 1832,
	284, 1832,
	285, 1832,
	286, 1832,
	288, 1832,
	289, 1832,
	290, 1832,
	291, 1832,
	292, 1832,
	293, 1832,
	294, 1832,
	296, 1832,
	297, 1832,
	298, 1832,
	299, 1832,
	300, 1832,
	301, 1832,
	302, 1832,
	303, 1832,
	304, 1832,
	305, 1832,
	306, 1832,
	307, 1832,
	308, 1832,
	310, 1832,
	311, 1832,
	312, 1832,
	313, 1832,
	314, 1832,
	315, 1832,
	316, 1832,
	317, 1832,
	318, 1832,
	319, 1832,
	320, 1832,
	321, 1832,
	322, 1832,
	323, 1832,
	324, 1832,
	325, 1832,
	326, 1832,
	327, 1832,
	328, 1832,
	329, 1832,
	330, 1832,
	331, 1832,
	332, 1832,
	334, 1832,
	335, 1832,
	336, 1832,
	337, 1832,
	338, 1832,
	339, 1832,
	340, 1832,
	341, 1832,
	342, 1832,
	343, 1832,
	344, 1832,
	345, 1832,
	346, 1832,
	347, 1832,
	348, 1832,
	349, 1832,
	350, 1832,
	351, 1832,
	352, 1832,
	353, 1832,
	354, 1832,
	355, 1832,
	356, 1832,
	357, 1832,
	358, 1832,
	359, 1832,
	360, 1832,
	361, 1832,
	362, 1832,
	363, 1832,
	364, 1832,
	365, 1832,
	366, 1832,
	367, 1832,
	368, 1832,
	371, 1832,
	373, 1832,
	376, 1832,
	377, 1832,
	378, 1832,
	381, 1832,
	382, 1832,
	383, 1832,
	384, 1832,
	385, 1832,
	386, 1832,
	387, 1832,
	388, 1832,
	389, 1832,
	390, 1832,
	391, 1832,
	392, 1832,
	393, 1832,
	394, 1832,
	395, 1832,
	396, 1832,
	397, 1832,
	398, 1832,
	399, 1832,
	400, 1832,
	402, 1832,
	403, 1832,
	404, 1832,
	405, 1832,
	406, 1832,
	407, 1832,
	408, 1832,
	409, 1832,
	410, 1832,
	411, 1832,
	412, 1832,
	413, 1832,
	414, 1832,
	415, 1832,
	416, 1832,
	418, 1832,
	419, 1832,
	420, 1832,
	422, 1832,
	423, 1832,
	424, 1832,
	425, 1832,
	426, 1832,
	427, 1832,
	428, 1832,
	429, 1832,
	430, 1832,
	431, 1832,
	432, 1832,
	433, 1832,
	434, 1832,
	435, 1832,
	437, 1832,
	439, 1832,
	440, 1832,
	441, 1832,
	447, 1832,
	448, 1832,
	449, 1832,
	451, 1832,
	452, 1832,
	453, 1832,
	454, 1832,
	455, 1832,
	456, 1832,
	457, 1832,
	458, 1832,
	459, 1832,
	460, 1832,
	461, 1832,
	463, 1832,
	464, 1832,
	465, 1832,
	466, 1832,
	467, 1832,
	468, 1832,
	469, 1832,
	470, 1832,
	471, 1832,
	472, 1832,
	473, 1832,
	474, 1832,
	475, 1832,
	477, 1832,
	478, 1832,
	479, 1832,
	480, 1832,
	481, 1832,
	482, 1832,
	483, 1832,
	484, 1832,
	485, 1832,
	486, 1832,
	487, 1832,
	488, 1832,
	489, 1832,
	490, 1832,
	492, 1832,
	493, 1832,
	494, 1832,
	495, 1832,
	496, 1832,
	497, 1832,
	498, 1832,
	499, 1832,
	500, 1832,
	501, 1832,
	502, 1832,
	503, 1832,
	504, 1832,
	505, 1832,
	506, 1832,
	507, 1832,
	508, 1832,
	509, 1832,
	510, 1832,
	511, 1832,
	512, 1832,
	513, 1832,
	514, 1832,
	516, 1832,
	518, 1832,
	519, 1832,
	520, 1832,
	521, 1832,
	522, 1832,
	523, 1832,
	524, 1832,
	525, 1832,
	526, 1832,
	527, 1832,
	528, 1832,
	529, 1832,
	530, 1832,
	531, 1832,
	532, 1832,
	533, 1832,
	534, 1832,
	535, 1832,
	536, 1832,
	537, 1832,
	538, 1832,
	540, 1832,
	541, 1832,
	542, 1832,
	543, 1832,
	544, 1832,
	546, 1832,
	547, 1832,
	548, 1832,
	549, 1832,
	550, 1832,
	551, 1832,
	553, 1832,
	554, 1832,
	556, 1832,
	557, 1832,
	558, 1832,
	559, 1832,
	560, 1832,
	562, 1832,
	564, 1832,
	565, 1832,
	566, 1832,
	567, 1832,
	568, 1832,
	569, 1832,
	570, 1832,
	571, 1832,
	572, 1832,
	573, 1832,
	574, 1832,
	575, 1832,
	576, 1832,
	577, 1832,
	578, 1832,
	579, 1832,
	581, 1832,
	582, 1832,
	583, 1832,
	584, 1832,
	585, 1832,
	586, 1832,
	587, 1832,
	588, 1832,
	589, 1832,
	590, 1832,
	591, 1832,
	594, 1832,
	595, 1832,
	596, 1832,
	597, 1832,
	598, 1832,
	599, 1832,
	601, 1832,
	602, 1832,
	603, 1832,
	604, 1832,
	605, 1832,
	606, 1832,
	607, 1832,
	608, 1832,
	609, 1832,
	614, 1832,
	615, 1832,
	616, 1832,
	617, 1832,
	618, 1832,
	619, 1832,
	620, 1832,
	635, 1832,
	642, 1832,
	643, 1832,
	644, 1832,
	652, 1832,
	656, 1832,
	-2, 0,
	-1, 830,
	4, 1548,
	21, 1548,
	22, 1548,
	23, 1548,
	24, 1548,
	25, 1548,
	26, 1548,
	27, 1548,
	28, 1548,
	30, 1548,
	31, 1548,
	37, 1548,
	41, 1548,
	43, 1548,
	44, 1548,
	45, 1548,
	47, 1548,
	48, 1548,
	49, 1548,
	50, 1548,
	51, 1548,
	52, 1548,
	53, 1548,
	54, 1548,
	55, 1548,
	57, 1548,
	58, 1548,
	59, 1548,
	60, 1548,
	62, 1548,
	63, 1548,
	64, 1548,
	65, 1548,
	66, 1548,
	67, 1548,
	68, 1548,
	69, 1548,
	73, 1548,
	74, 1548,
	75, 1548,
	76, 1548,
	78, 1548,
	79, 1548,
	80, 1548,
	84, 1548,
	85, 1548,
	86, 1548,
	87, 1548,
	88, 1548,
	89, 1548,
	90, 1548,
	91, 1548,
	94, 1548,
	95, 1548,
	96, 1548,
	97, 1548,
	98, 1548,
	100, 1548,
	102, 1548,
	103, 1548,
	104, 1548,
	105, 1548,
	106, 1548,
	107, 1548,
	108, 1548,
	110, 1548,
	111, 1548,
	112, 1548,
	114, 1548,
	115, 1548,
	116, 1548,
	124, 1548,
	125, 1548,
	126, 1548,
	127, 1548,
	128, 1548,
	130, 1548,
	131, 1548,
	132, 1548,
	133, 1548,
	135, 1548,
	136, 1548,
	137, 1548,
	138, 1548,
	140, 1548,
	141, 1548,
	142, 1548,
	144, 1548,
	145, 1548,
	146, 1548,
	149, 1548,
	150, 1548,
	151, 1548,
	153, 1548,
	154, 1548,
	155, 1548,
	157, 1548,
	158, 1548,
	159, 1548,
	161, 1548,
	162, 1548,
	163, 1548,
	164, 1548,
	165, 1548,
	166, 1548,
	167, 1548,
	168, 1548,
	169, 1548,
	170, 1548,
	171, 1548,
	172, 1548,
	173, 1548,
	174, 1548,
	175, 1548,
	176, 1548,
	177, 1548,
	178, 1548,
	180, 1548,
	186, 1548,
	187, 1548,
	188, 1548,
	189, 1548,
	193, 1548,
	195, 1548,
	196, 1548,
	197, 1548,
	199, 1548,
	200, 1548,
	203, 1548,
	204, 1548,
	205, 1548,
	206, 1548,
	207, 1548,
	208, 1548,
	209, 1548,
	210, 1548,
	211, 1548,
	212, 1548,
	213, 1548,
	214, 1548,
	215, 1548,
	216, 1548,
	218, 1548,
	219, 1548,
	221, 1548,
	222, 1548,
	224, 1548,
	225, 1548,
	226, 1548,
	227, 1548,
	228, 1548,
	229, 1548,
	230, 1548,
	231, 1548,
	232, 1548,
	233, 1548,
	234, 1548,
	236, 1548,
	237, 1548,
	238, 1548,
	240, 1548,
	241, 1548,
	242, 1548,
	243, 1548,
	244, 1548,
	248, 1548,
	249, 1548,
	250, 1548,
	251, 1548,
	254, 1548,
	255, 1548,
	256, 1548,
	257, 1548,
	258, 1548,
	259, 1548,
	261, 1548,
	263, 1548,
	264, 1548,
	265, 1548,
	267, 1548,
	269, 1548,
	270, 1548,
	271, 1548,
	273, 1548,
	277, 1548,
	278, 1548,
	279, 1548,
	280, 1548,
	281, 1548,
	282, 1548,
	284, 1548,
	285, 1548,
	286, 1548,
	288, 1548,
	289, 1548,
	290, 1548,
	292, 1548,
	293, 1548,
	296, 1548,
	297, 1548,
	298, 1548,
	299, 1548,
	300, 1548,
	301, 1548,
	302, 1548,
	305, 1548,
	306, 1548,
	307, 1548,
	308, 1548,
	310, 1548,
	311, 1548,
	312, 1548,
	313, 1548,
	314, 1548,
	315, 1548,
	316, 1548,
	317, 1548,
	318, 1548,
	319, 1548,
	320, 1548,
	321, 1548,
	322, 1548,
	323, 1548,
	324, 1548,
	325, 1548,
	326, 1548,
	327, 1548,
	328, 1548,
	329, 1548,
	330, 1548,
	331, 1548,
	332, 1548,
	334, 1548,
	336, 1548,
	337, 1548,
	338, 1548,
	339, 1548,
	340, 1548,
	341, 1548,
	342, 1548,
	343, 1548,
	344, 1548,
	345, 1548,
	346, 1548,
	347, 1548,
	348, 1548,
	349, 1548,
	350, 1548,
	351, 1548,
	352, 1548,
	354, 1548,
	355, 1548,
	357, 1548,
	359, 1548,
	360, 1548,
	361, 1548,
	362, 1548,
	364, 1548,
	365, 1548,
	366, 1548,
	367, 1548,
	368, 1548,
	371, 1548,
	373, 1548,
	376, 1548,
	377, 1548,
	378, 1548,
	381, 1548,
	382, 1548,
	383, 1548,
	385, 1548,
	387, 1548,
	388, 1548,
	389, 1548,
	390, 1548,
	391, 1548,
	392, 1548,
	393, 1548,
	394, 1548,
	395, 1548,
	396, 1548,
	397, 1548,
	398, 1548,
	399, 1548,
	400, 1548,
	402, 1548,
	403, 1548,
	404, 1548,
	405, 1548,
	406, 1548,
	407, 1548,
	408, 1548,
	409, 1548,
	410, 1548,
	411, 1548,
	412, 1548,
	413, 1548,
	414, 1548,
	415, 1548,
	416, 1548,
	418, 1548,
	419, 1548,
	420, 1548,
	422, 1548,
	423, 1548,
	424, 1548,
	425, 1548,
	426, 1548,
	427, 1548,
	428, 1548,
	429, 1548,
	430, 1548,
	431, 1548,
	432, 1548,
	433, 1548,
	434, 1548,
	435, 1548,
	437, 1548,
	439, 1548,
	440, 1548,
	441, 1548,
	447, 1548,
	448, 1548,
	449, 1548,
	451, 1548,
	452, 1548,
	453, 1548,
	454, 1548,
	455, 1548,
	456, 1548,
	457, 1548,
	458, 1548,
	459, 1548,
	460, 1548,
	461, 1548,
	463, 1548,
	464, 1548,
	465, 1548,
	466, 1548,
	467, 1548,
	469, 1548,
	470, 1548,
	471, 1548,
	472, 1548,
	473, 1548,
	474, 1548,
	475, 1548,
	477, 1548,
	478, 1548,
	479, 1548,
	480, 1548,
	481, 1548,
	482, 1548,
	483, 1548,
	484, 1548,
	485, 1548,
	486, 1548,
	487, 1548,
	488, 1548,
	489, 1548,
	490, 1548,
	492, 1548,
	493, 1548,
	494, 1548,
	495, 1548,
	496, 1548,
	497, 1548,
	499, 1548,
	500, 1548,
	501, 1548,
	502, 1548,
	503, 1548,
	504, 1548,
	505, 1548,
	507, 1548,
	508, 1548,
	509, 1548,
	510, 1548,
	511, 1548,
	512, 1548,
	513, 1548,
	514, 1548,
	516, 1548,
	518, 1548,
	519, 1548,
	520, 1548,
	521, 1548,
	522, 1548,
	523, 1548,
	524, 1548,
	525, 1548,
	526, 1548,
	527, 1548,
	528, 1548,
	529, 1548,
	530, 1548,
	531, 1548,
	532, 1548,
	533, 1548,
	534, 1548,
	535, 1548,
	536, 1548,
	537, 1548,
	538, 1548,
	540, 1548,
	541, 1548,
	543, 1548,
	544, 1548,
	546, 1548,
	547, 1548,
	548, 1548,
	549, 1548,
	550, 1548,
	551, 1548,
	553, 1548,
	554, 1548,
	556, 1548,
	557, 1548,
	558, 1548,
	559, 1548,
	560, 1548,
	562, 1548,
	564, 1548,
	565, 1548,
	566, 1548,
	567, 1548,
	568, 1548,
	569, 1548,
	570, 1548,
	571, 1548,
	573, 1548,
	574, 1548,
	575, 1548,
	576, 1548,
	577, 1548,
	578, 1548,
	579, 1548,
	582, 1548,
	583, 1548,
	584, 1548,
	585, 1548,
	586, 1548,
	587, 1548,
	588, 1548,
	589, 1548,
	591, 1548,
	594, 1548,
	595, 1548,
	596, 1548,
	597, 1548,
	598, 1548,
	599, 1548,
	601, 1548,
	602, 1548,
	603, 1548,
	604, 1548,
	605, 1548,
	606, 1548,
	607, 1548,
	608, 1548,
	609, 1548,
	614, 1548,
	615, 1548,
	616, 1548,
	617, 1548,
	618, 1548,
	619, 1548,
	-2, 0,
	-1, 849,
	201, 2635,
	561, 2635,
	634, 2635,
	654, 2635,
	-2, 0,
	-1, 850,
	201, 2621,
	561, 2621,
	634, 2621,
	654, 2621,
	-2, 0,
	-1, 852,
	201, 2914,
	561, 2914,
	634, 2914,
	654, 2914,
	-2, 0,
	-1, 855,
	201, 2758,
	561, 2758,
	634, 2758,
	654, 2758,
	-2, 0,
	-1, 856,
	201, 2961,
	561, 2961,
	634, 2961,
	654, 2961,
	-2, 0,
	-1, 864,
	201, 2786,
	561, 2786,
	634, 2786,
	654, 2786,
	-2, 845,
	-1, 880,
	8, 978,
	29, 978,
	642, 978,
	643, 978,
	-2, 983,
	-1, 884,
	1, 2692,
	655, 2692,
	658, 2692,
	-2, 983,
	-1, 885,
	1, 2745,
	655, 2745,
	658, 2745,
	-2, 983,
	-1, 888,
	1, 2791,
	655, 2791,
	658, 2791,
	-2, 976,
	-1, 889,
	1, 2848,
	655, 2848,
	658, 2848,
	-2, 977,
	-1, 890,
	1, 2697,
	655, 2697,
	658, 2697,
	-2, 980,
	-1, 891,
	1, 2607,
	655, 2607,
	658, 2607,
	-2, 981,
	-1, 931,
	654, 2564,
	657, 2564,
	-2, 1209,
	-1, 932,
	654, 2566,
	657, 2566,
	-2, 1210,
	-1, 933,
	654, 2565,
	657, 2565,
	-2, 1211,
	-1, 934,
	657, 2488,
	-2, 1212,
	-1, 960,
	194, 290,
	-2, 0,
	-1, 982,
	46, 2537,
	-2, 0,
	-1, 983,
	601, 1526,
	-2, 1294,
	-1, 1000,
	4, 1966,
	21, 1966,
	22, 1966,
	23, 1966,
	24, 1966,
	25, 1966,
	26, 1966,
	27, 1966,
	28, 1966,
	30, 1966,
	31, 1966,
	37, 1966,
	41, 1966,
	43, 1966,
	44, 1966,
	45, 1966,
	47, 1966,
	48, 1966,
	49, 1966,
	50, 1966,
	51, 1966,
	52, 1966,
	53, 1966,
	54, 1966,
	55, 1966,
	57, 1966,
	58, 1966,
	59, 1966,
	60, 1966,
	62, 1966,
	63, 1966,
	64, 1966,
	65, 1966,
	66, 1966,
	67, 1966,
	68, 1966,
	69, 1966,
	73, 1966,
	74, 1966,
	75, 1966,
	76, 1966,
	78, 1966,
	79, 1966,
	80, 1966,
	84, 1966,
	85, 1966,
	86, 1966,
	87, 1966,
	88, 1966,
	89, 1966,
	90, 1966,
	91, 1966,
	94, 1966,
	95, 1966,
	96, 1966,
	97, 1966,
	98, 1966,
	100, 1966,
	102, 1966,
	103, 1966,
	104, 1966,
	105, 1966,
	106, 1966,
	107, 1966,
	108, 1966,
	110, 1966,
	111, 1966,
	112, 1966,
	114, 1966,
	115, 1966,
	116, 1966,
	124, 1966,
	125, 1966,
	126, 1966,
	127, 1966,
	128, 1966,
	130, 1966,
	131, 1966,
	132, 1966,
	133, 1966,
	135, 1966,
	136, 1966,
	137, 1966,
	138, 1966,
	140, 1966,
	141, 1966,
	142, 1966,
	144, 1966,
	145, 1966,
	146, 1966,
	149, 1966,
	150, 1966,
	151, 1966,
	153, 1966,
	154, 1966,
	155, 1966,
	157, 1966,
	158, 1966,
	159, 1966,
	161, 1966,
	162, 1966,
	163, 1966,
	164, 1966,
	165, 1966,
	166, 1966,
	167, 1966,
	168, 1966,
	169, 1966,
	170, 1966,
	171, 1966,
	172, 1966,
	173, 1966,
	174, 1966,
	175, 1966,
	176, 1966,
	177, 1966,
	178, 1966,
	180, 1966,
	186, 1966,
	187, 1966,
	188, 1966,
	189, 1966,
	193, 1966,
	195, 1966,
	196, 1966,
	197, 1966,
	199, 1966,
	200, 1966,
	203, 1966,
	204, 1966,
	205, 1966,
	206, 1966,
	207, 1966,
	208, 1966,
	209, 1966,
	210, 1966,
	211, 1966,
	212, 1966,
	213, 1966,
	214, 1966,
	215, 1966,
	216, 1966,
	218, 1966,
	219, 1966,
	221, 1966,
	222, 1966,
	224, 1966,
	225, 1966,
	226, 1966,
	227, 1966,
	228, 1966,
	229, 1966,
	230, 1966,
	231, 1966,
	232, 1966,
	233, 1966,
	234, 1966,
	236, 1966,
	237, 1966,
	238, 1966,
	240, 1966,
	241, 1966,
	242, 1966,
	243, 1966,
	244, 1966,
	248, 1966,
	249, 1966,
	250, 1966,
	251, 1966,
	254, 1966,
	255, 1966,
	256, 1966,
	257, 1966,
	258, 1966,
	259, 1966,
	261, 1966,
	263, 1966,
	264, 1966,
	265, 1966,
	267, 1966,
	269, 1966,
	270, 1966,
	271, 1966,
	273, 1966,
	277, 1966,
	278, 1966,
	279, 1966,
	280, 1966,
	281, 1966,
	282, 1966,
	284, 1966,
	285, 1966,
	286, 1966,
	288, 1966,
	289, 1966,
	290, 1966,
	292, 1966,
	293, 1966,
	296, 1966,
	297, 1966,
	298, 1966,
	299, 1966,
	300, 1966,
	301, 1966,
	302, 1966,
	305, 1966,
	306, 1966,
	307, 1966,
	308, 1966,
	310, 1966,
	311, 1966,
	312, 1966,
	313, 1966,
	314, 1966,
	315, 1966,
	316, 1966,
	317, 1966,
	318, 1966,
	319, 1966,
	320, 1966,
	321, 1966,
	322, 1966,
	323, 1966,
	324, 1966,
	325, 1966,
	326, 1966,
	327, 1966,
	328, 1966,
	329, 1966,
	330, 1966,
	331, 1966,
	332, 1966,
	334, 1966,
	336, 1966,
	337, 1966,
	338, 1966,
	339, 1966,
	340, 1966,
	341, 1966,
	342, 1966,
	343, 1966,
	344, 1966,
	345, 1966,
	346, 1966,
	347, 1966,
	348, 1966,
	349, 1966,
	350, 1966,
	351, 1966,
	352, 1966,
	354, 1966,
	355, 1966,
	357, 1966,
	359, 1966,
	360, 1966,
	361, 1966,
	362, 1966,
	364, 1966,
	365, 1966,
	366, 1966,
	367, 1966,
	368, 1966,
	371, 1966,
	373, 1966,
	376, 1966,
	377, 1966,
	378, 1966,
	381, 1966,
	382, 1966,
	383, 1966,
	385, 1966,
	387, 1966,
	388, 1966,
	389, 1966,
	390, 1966,
	391, 1966,
	392, 1966,
	393, 1966,
	394, 1966,
	395, 1966,
	396, 1966,
	397, 1966,
	398, 1966,
	399, 1966,
	400, 1966,
	402, 1966,
	403, 1966,
	404, 1966,
	405, 1966,
	406, 1966,
	407, 1966,
	408, 1966,
	409, 1966,
	410, 1966,
	411, 1966,
	412, 1966,
	413, 1966,
	414, 1966,
	415, 1966,
	416, 1966,
	418, 1966,
	419, 1966,
	420, 1966,
	422, 1966,
	423, 1966,
	424, 1966,
	425, 1966,
	426, 1966,
	427, 1966,
	428, 1966,
	429, 1966,
	430, 1966,
	431, 1966,
	432, 1966,
	433, 1966,
	434, 1966,
	435, 1966,
	437, 1966,
	439, 1966,
	440, 1966,
	441, 1966,
	447, 1966,
	448, 1966,
	449, 1966,
	451, 1966,
	452, 1966,
	453, 1966,
	454, 1966,
	455, 1966,
	456, 1966,
	457, 1966,
	458, 1966,
	459, 1966,
	460, 1966,
	461, 1966,
	463, 1966,
	464, 1966,
	465, 1966,
	466, 1966,
	467, 1966,
	469, 1966,
	470, 1966,
	471, 1966,
	472, 1966,
	473, 1966,
	474, 1966,
	475, 1966,
	477, 1966,
	478, 1966,
	479, 1966,
	480, 1966,
	481, 1966,
	482, 1966,
	483, 1966,
	484, 1966,
	485, 1966,
	486, 1966,
	487, 1966,
	488, 1966,
	489, 1966,
	490, 1966,
	492, 1966,
	493, 1966,
	494, 1966,
	495, 1966,
	496, 1966,
	497, 1966,
	499, 1966,
	500, 1966,
	501, 1966,
	502, 1966,
	503, 1966,
	504, 1966,
	505, 1966,
	507, 1966,
	508, 1966,
	509, 1966,
	510, 1966,
	511, 1966,
	512, 1966,
	513, 1966,
	514, 1966,
	516, 1966,
	518, 1966,
	519, 1966,
	520, 1966,
	521, 1966,
	522, 1966,
	523, 1966,
	524, 1966,
	525, 1966,
	526, 1966,
	527, 1966,
	528, 1966,
	529, 1966,
	530, 1966,
	531, 1966,
	532, 1966,
	533, 1966,
	534, 1966,
	535, 1966,
	536, 1966,
	537, 1966,
	538, 1966,
	540, 1966,
	541, 1966,
	543, 1966,
	544, 1966,
	546, 1966,
	547, 1966,
	548, 1966,
	549, 1966,
	550, 1966,
	551, 1966,
	553, 1966,
	554, 1966,
	556, 1966,
	557, 1966,
	558, 1966,
	559, 1966,
	560, 1966,
	562, 1966,
	564, 1966,
	565, 1966,
	566, 1966,
	567, 1966,
	568, 1966,
	569, 1966,
	570, 1966,
	571, 1966,
	573, 1966,
	574, 1966,
	575, 1966,
	576, 1966,
	577, 1966,
	578, 1966,
	579, 1966,
	582, 1966,
	583, 1966,
	584, 1966,
	585, 1966,
	586, 1966,
	587, 1966,
	588, 1966,
	589, 1966,
	591, 1966,
	594, 1966,
	595, 1966,
	596, 1966,
	597, 1966,
	598, 1966,
	599, 1966,
	601, 1966,
	602, 1966,
	603, 1966,
	604, 1966,
	605, 1966,
	606, 1966,
	607, 1966,
	608, 1966,
	609, 1966,
	614, 1966,
	615, 1966,
	616, 1966,
	617, 1966,
	618, 1966,
	619, 1966,
	-2, 0,
	-1, 1011,
	281, 519,
	-2, 0,
	-1, 1089,
	201, 1022,
	-2, 0,
	-1, 1090,
	424, 1075,
	497, 1075,
	544, 1075,
	566, 1075,
	-2, 0,
	-1, 1091,
	424, 1074,
	497, 1074,
	544, 1074,
	566, 1074,
	-2, 996,
	-1, 1095,
	1, 1127,
	651, 1127,
	653, 1127,
	655, 1127,
	658, 1127,
	-2, 0,
	-1, 1097,
	1, 1049,
	651, 1049,
	653, 1049,
	655, 1049,
	658, 1049,
	-2, 0,
	-1, 1098,
	1, 1053,
	651, 1053,
	653, 1053,
	655, 1053,
	658, 1053,
	-2, 0,
	-1, 1099,
	1, 1200,
	194, 1200,
	651, 1200,
	653, 1200,
	655, 1200,
	658, 1200,
	-2, 0,
	-1, 1107,
	1, 1080,
	651, 1080,
	653, 1080,
	655, 1080,
	658, 1080,
	-2, 0,
	-1, 1114,
	1, 1127,
	651, 1127,
	653, 1127,
	655, 1127,
	658, 1127,
	-2, 0,
	-1, 1115,
	1, 1129,
	651, 1129,
	653, 1129,
	655, 1129,
	658, 1129,
	-2, 0,
	-1, 1116,
	1, 1132,
	651, 1132,
	653, 1132,
	655, 1132,
	658, 1132,
	-2, 0,
	-1, 1124,
	1, 1163,
	651, 1163,
	653, 1163,
	655, 1163,
	658, 1163,
	-2, 0,
	-1, 1125,
	1, 1165,
	651, 1165,
	653, 1165,
	655, 1165,
	658, 1165,
	-2, 0,
	-1, 1130,
	1, 1193,
	651, 1193,
	653, 1193,
	655, 1193,
	658, 1193,
	-2, 0,
	-1, 1181,
	181, 1836,
	194, 1836,
	295, 1836,
	369, 1836,
	-2, 1772,
	-1, 1197,
	181, 1835,
	194, 1835,
	295, 1835,
	369, 1835,
	-2, 1769,
	-1, 1226,
	654, 2563,
	-2, 853,
	-1, 1255,
	5, 2555,
	652, 2553,
	-2, 2544,
	-1, 1263,
	5, 2576,
	652, 2573,
	-2, 2564,
	-1, 1264,
	5, 2577,
	652, 2574,
	-2, 2565,
	-1, 1272,
	654, 2561,
	-2, 2543,
	-1, 1273,
	652, 3071,
	-2, 2562,
	-1, 1296,
	5, 2578,
	38, 2578,
	134, 2578,
	634, 2578,
	650, 2578,
	653, 2578,
	654, 2578,
	657, 2578,
	-2, 3070,
	-1, 1297,
	5, 2041,
	-2, 3040,
	-1, 1298,
	5, 2042,
	-2, 3041,
	-1, 1299,
	5, 2043,
	-2, 3056,
	-1, 1300,
	5, 2044,
	-2, 3018,
	-1, 1301,
	5, 2045,
	-2, 3053,
	-1, 1302,
	5, 2053,
	-2, 3031,
	-1, 1303,
	5, 2040,
	-2, 3027,
	-1, 1304,
	5, 2040,
	-2, 3026,
	-1, 1305,
	5, 2040,
	-2, 3046,
	-1, 1306,
	5, 2051,
	-2, 3020,
	-1, 1307,
	5, 2056,
	-2, 3019,
	-1, 1308,
	5, 2058,
	-2, 3066,
	-1, 1311,
	5, 2080,
	-2, 3059,
	-1, 1312,
	5, 2072,
	-2, 3060,
	-1, 1313,
	5, 2080,
	-2, 3061,
	-1, 1314,
	5, 2076,
	-2, 3062,
	-1, 1315,
	5, 2026,
	-2, 3032,
	-1, 1316,
	5, 2027,
	-2, 3033,
	-1, 1317,
	5, 2028,
	-2, 3021,
	-1, 1345,
	5, 2063,
	-2, 3067,
	-1, 1346,
	5, 2064,
	-2, 3057,
	-1, 1347,
	5, 2065,
	602, 2065,
	-2, 3022,
	-1, 1348,
	5, 2066,
	602, 2066,
	-2, 3023,
	-1, 1386,
	652, 2573,
	-2, 2564,
	-1, 1387,
	652, 2574,
	-2, 2565,
	-1, 1489,
	201, 2961,
	561, 2961,
	634, 2961,
	654, 2961,
	-2, 0,
	-1, 1494,
	1, 829,
	655, 829,
	658, 829,
	-2, 1681,
	-1, 1541,
	1, 1676,
	655, 1676,
	658, 1676,
	-2, 1681,
	-1, 1643,
	389, 2538,
	451, 2538,
	499, 2538,
	644, 2538,
	-2, 2526,
	-1, 1649,
	201, 149,
	288, 149,
	354, 149,
	609, 149,
	-2, 2956,
	-1, 1650,
	201, 150,
	288, 150,
	354, 150,
	609, 150,
	-2, 2682,
	-1, 1651,
	201, 151,
	288, 151,
	354, 151,
	609, 151,
	-2, 2871,
	-1, 1657,
	656, 2538,
	-2, 2540,
	-1, 1681,
	1, 1523,
	456, 1477,
	499, 1477,
	626, 1477,
	631, 1477,
	651, 1523,
	653, 1523,
	655, 1523,
	658, 1523,
	-2, 1821,
	-1, 1687,
	217, 1620,
	239, 1620,
	467, 1620,
	-2, 0,
	-1, 1755,
	46, 2536,
	-2, 1256,
	-1, 1762,
	1, 1523,
	651, 1523,
	653, 1523,
	655, 1523,
	658, 1523,
	-2, 1821,
	-1, 1765,
	433, 1293,
	601, 1293,
	-2, 440,
	-1, 1771,
	4, 1548,
	21, 1548,
	22, 1548,
	23, 1548,
	24, 1548,
	25, 1548,
	26, 1548,
	27, 1548,
	28, 1548,
	30, 1548,
	31, 1548,
	37, 1548,
	41, 1548,
	43, 1548,
	44, 1548,
	45, 1548,
	47, 1548,
	48, 1548,
	49, 1548,
	50, 1548,
	51, 1548,
	52, 1548,
	53, 1548,
	54, 1548,
	55, 1548,
	57, 1548,
	58, 1548,
	59, 1548,
	60, 1548,
	62, 1548,
	63, 1548,
	64, 1548,
	65, 1548,
	66, 1548,
	67, 1548,
	68, 1548,
	69, 1548,
	73, 1548,
	74, 1548,
	75, 1548,
	76, 1548,
	78, 1548,
	79, 1548,
	80, 1548,
	84, 1548,
	85, 1548,
	86, 1548,
	87, 1548,
	88, 1548,
	89, 1548,
	90, 1548,
	91, 1548,
	94, 1548,
	95, 1548,
	96, 1548,
	97, 1548,
	98, 1548,
	100, 1548,
	102, 1548,
	103, 1548,
	104, 1548,
	105, 1548,
	106, 1548,
	107, 1548,
	108, 1548,
	110, 1548,
	111, 1548,
	112, 1548,
	114, 1548,
	115, 1548,
	116, 1548,
	124, 1548,
	125, 1548,
	126, 1548,
	127, 1548,
	128, 1548,
	130, 1548,
	131, 1548,
	132, 1548,
	133, 1548,
	135, 1548,
	136, 1548,
	137, 1548,
	138, 1548,
	140, 1548,
	141, 1548,
	142, 1548,
	144, 1548,
	145, 1548,
	146, 1548,
	149, 1548,
	150, 1548,
	151, 1548,
	153, 1548,
	154, 1548,
	155, 1548,
	157, 1548,
	158, 1548,
	159, 1548,
	161, 1548,
	162, 1548,
	163, 1548,
	164, 1548,
	165, 1548,
	166, 1548,
	167, 1548,
	168, 1548,
	169, 1548,
	170, 1548,
	171, 1548,
	172, 1548,
	173, 1548,
	174, 1548,
	175, 1548,
	176, 1548,
	177, 1548,
	178, 1548,
	186, 1548,
	187, 1548,
	188, 1548,
	189, 1548,
	193, 1548,
	195, 1548,
	196, 1548,
	197, 1548,
	199, 1548,
	200, 1548,
	203, 1548,
	204, 1548,
	205, 1548,
	206, 1548,
	207, 1548,
	208, 1548,
	209, 1548,
	210, 1548,
	211, 1548,
	212, 1548,
	213, 1548,
	214, 1548,
	215, 1548,
	216, 1548,
	218, 1548,
	219, 1548,
	221, 1548,
	222, 1548,
	224, 1548,
	225, 1548,
	226, 1548,
	227, 1548,
	228, 1548,
	229, 1548,
	230, 1548,
	231, 1548,
	232, 1548,
	233, 1548,
	234, 1548,
	236, 1548,
	237, 1548,
	238, 1548,
	240, 1548,
	241, 1548,
	242, 1548,
	243, 1548,
	244, 1548,
	249, 1548,
	250, 1548,
	251, 1548,
	254, 1548,
	255, 1548,
	256, 1548,
	257, 1548,
	258, 1548,
	259, 1548,
	261, 1548,
	263, 1548,
	264, 1548,
	265, 1548,
	267, 1548,
	269, 1548,
	270, 1548,
	271, 1548,
	273, 1548,
	277, 1548,
	278, 1548,
	279, 1548,
	280, 1548,
	281, 1548,
	282, 1548,
	284, 1548,
	285, 1548,
	286, 1548,
	288, 1548,
	289, 1548,
	290, 1548,
	292, 1548,
	293, 1548,
	296, 1548,
	297, 1548,
	298, 1548,
	299, 1548,
	300, 1548,
	301, 1548,
	302, 1548,
	305, 1548,
	306, 1548,
	307, 1548,
	308, 1548,
	310, 1548,
	311, 1548,
	312, 1548,
	313, 1548,
	314, 1548,
	315, 1548,
	316, 1548,
	317, 1548,
	318, 1548,
	319, 1548,
	320, 1548,
	321, 1548,
	322, 1548,
	323, 1548,
	324, 1548,
	325, 1548,
	326, 1548,
	327, 1548,
	328, 1548,
	329, 1548,
	330, 1548,
	331, 1548,
	332, 1548,
	334, 1548,
	336, 1548,
	337, 1548,
	338, 1548,
	339, 1548,
	340, 1548,
	341, 1548,
	342, 1548,
	343, 1548,
	344, 1548,
	345, 1548,
	346, 1548,
	347, 1548,
	348, 1548,
	349, 1548,
	350, 1548,
	351, 1548,
	352, 1548,
	354, 1548,
	355, 1548,
	359, 1548,
	360, 1548,
	361, 1548,
	362, 1548,
	364, 1548,
	365, 1548,
	366, 1548,
	367, 1548,
	368, 1548,
	371, 1548,
	373, 1548,
	374, 1548,
	376, 1548,
	377, 1548,
	378, 1548,
	381, 1548,
	382, 1548,
	383, 1548,
	385, 1548,
	387, 1548,
	388, 1548,
	389, 1548,
	390, 1548,
	391, 1548,
	392, 1548,
	393, 1548,
	394, 1548,
	395, 1548,
	396, 1548,
	397, 1548,
	398, 1548,
	399, 1548,
	400, 1548,
	402, 1548,
	403, 1548,
	404, 1548,
	405, 1548,
	406, 1548,
	407, 1548,
	408, 1548,
	409, 1548,
	410, 1548,
	411, 1548,
	412, 1548,
	413, 1548,
	414, 1548,
	415, 1548,
	416, 1548,
	418, 1548,
	419, 1548,
	420, 1548,
	422, 1548,
	423, 1548,
	424, 1548,
	425, 1548,
	426, 1548,
	427, 1548,
	428, 1548,
	429, 1548,
	430, 1548,
	431, 1548,
	432, 1548,
	433, 1548,
	434, 1548,
	435, 1548,
	437, 1548,
	439, 1548,
	440, 1548,
	441, 1548,
	447, 1548,
	448, 1548,
	449, 1548,
	451, 1548,
	452, 1548,
	453, 1548,
	454, 1548,
	455, 1548,
	456, 1548,
	457, 1548,
	458, 1548,
	459, 1548,
	460, 1548,
	461, 1548,
	463, 1548,
	464, 1548,
	465, 1548,
	466, 1548,
	467, 1548,
	469, 1548,
	470, 1548,
	471, 1548,
	472, 1548,
	473, 1548,
	474, 1548,
	475, 1548,
	477, 1548,
	478, 1548,
	479, 1548,
	480, 1548,
	481, 1548,
	482, 1548,
	483, 1548,
	484, 1548,
	485, 1548,
	486, 1548,
	487, 1548,
	488, 1548,
	489, 1548,
	490, 1548,
	492, 1548,
	493, 1548,
	494, 1548,
	495, 1548,
	496, 1548,
	497, 1548,
	499, 1548,
	500, 1548,
	501, 1548,
	502, 1548,
	503, 1548,
	504, 1548,
	505, 1548,
	507, 1548,
	508, 1548,
	509, 1548,
	510, 1548,
	511, 1548,
	512, 1548,
	513, 1548,
	514, 1548,
	516, 1548,
	518, 1548,
	519, 1548,
	520, 1548,
	521, 1548,
	522, 1548,
	523, 1548,
	524, 1548,
	525, 1548,
	526, 1548,
	527, 1548,
	528, 1548,
	529, 1548,
	530, 1548,
	531, 1548,
	532, 1548,
	533, 1548,
	534, 1548,
	535, 1548,
	536, 1548,
	537, 1548,
	538, 1548,
	540, 1548,
	541, 1548,
	543, 1548,
	544, 1548,
	546, 1548,
	547, 1548,
	548, 1548,
	549, 1548,
	550, 1548,
	551, 1548,
	553, 1548,
	554, 1548,
	556, 1548,
	557, 1548,
	558, 1548,
	559, 1548,
	560, 1548,
	562, 1548,
	564, 1548,
	565, 1548,
	566, 1548,
	567, 1548,
	568, 1548,
	569, 1548,
	570, 1548,
	571, 1548,
	573, 1548,
	574, 1548,
	575, 1548,
	576, 1548,
	577, 1548,
	578, 1548,
	579, 1548,
	582, 1548,
	583, 1548,
	584, 1548,
	585, 1548,
	586, 1548,
	587, 1548,
	588, 1548,
	589, 1548,
	591, 1548,
	594, 1548,
	595, 1548,
	596, 1548,
	597, 1548,
	598, 1548,
	599, 1548,
	601, 1548,
	602, 1548,
	603, 1548,
	604, 1548,
	605, 1548,
	606, 1548,
	607, 1548,
	608, 1548,
	609, 1548,
	614, 1548,
	615, 1548,
	616, 1548,
	617, 1548,
	618, 1548,
	619, 1548,
	-2, 0,
	-1, 1794,
	1, 659,
	651, 659,
	653, 659,
	655, 659,
	658, 659,
	-2, 1792,
	-1, 1797,
	4, 3065,
	11, 3065,
	12, 3065,
	14, 3065,
	15, 3065,
	16, 3065,
	17, 3065,
	18, 3065,
	19, 3065,
	21, 3065,
	22, 3065,
	23, 3065,
	24, 3065,
	25, 3065,
	26, 3065,
	27, 3065,
	28, 3065,
	30, 3065,
	31, 3065,
	34, 3065,
	35, 3065,
	37, 3065,
	39, 3065,
	41, 3065,
	43, 3065,
	44, 3065,
	45, 3065,
	47, 3065,
	48, 3065,
	49, 3065,
	50, 3065,
	51, 3065,
	52, 3065,
	53, 3065,
	54, 3065,
	55, 3065,
	57, 3065,
	58, 3065,
	59, 3065,
	60, 3065,
	62, 3065,
	63, 3065,
	64, 3065,
	65, 3065,
	66, 3065,
	67, 3065,
	68, 3065,
	69, 3065,
	72, 3065,
	73, 3065,
	74, 3065,
	75, 3065,
	76, 3065,
	78, 3065,
	79, 3065,
	80, 3065,
	81, 3065,
	84, 3065,
	85, 3065,
	86, 3065,
	87, 3065,
	88, 3065,
	89, 3065,
	90, 3065,
	91, 3065,
	92, 3065,
	94, 3065,
	95, 3065,
	96, 3065,
	97, 3065,
	98, 3065,
	100, 3065,
	101, 3065,
	102, 3065,
	103, 3065,
	104, 3065,
	105, 3065,
	106, 3065,
	107, 3065,
	108, 3065,
	110, 3065,
	111, 3065,
	112, 3065,
	113, 3065,
	114, 3065,
	115, 3065,
	116, 3065,
	124, 3065,
	125, 3065,
	126, 3065,
	127, 3065,
	128, 3065,
	130, 3065,
	131, 3065,
	132, 3065,
	133, 3065,
	135, 3065,
	136, 3065,
	137, 3065,
	138, 3065,
	140, 3065,
	141, 3065,
	142, 3065,
	144, 3065,
	145, 3065,
	146, 3065,
	149, 3065,
	150, 3065,
	151, 3065,
	153, 3065,
	154, 3065,
	155, 3065,
	157, 3065,
	158, 3065,
	159, 3065,
	161, 3065,
	162, 3065,
	163, 3065,
	164, 3065,
	165, 3065,
	166, 3065,
	167, 3065,
	168, 3065,
	169, 3065,
	170, 3065,
	171, 3065,
	172, 3065,
	173, 3065,
	174, 3065,
	175, 3065,
	176, 3065,
	177, 3065,
	178, 3065,
	182, 3065,
	183, 3065,
	184, 3065,
	185, 3065,
	186, 3065,
	187, 3065,
	188, 3065,
	189, 3065,
	192, 3065,
	193, 3065,
	195, 3065,
	196, 3065,
	197, 3065,
	199, 3065,
	200, 3065,
	202, 3065,
	203, 3065,
	204, 3065,
	205, 3065,
	206, 3065,
	207, 3065,
	208, 3065,
	209, 3065,
	210, 3065,
	211, 3065,
	212, 3065,
	213, 3065,
	214, 3065,
	215, 3065,
	216, 3065,
	218, 3065,
	219, 3065,
	221, 3065,
	222, 3065,
	224, 3065,
	225, 3065,
	226, 3065,
	227, 3065,
	228, 3065,
	229, 3065,
	230, 3065,
	231, 3065,
	232, 3065,
	233, 3065,
	234, 3065,
	235, 3065,
	236, 3065,
	237, 3065,
	238, 3065,
	239, 3065,
	240, 3065,
	241, 3065,
	242, 3065,
	243, 3065,
	244, 3065,
	246, 3065,
	247, 3065,
	249, 3065,
	250, 3065,
	251, 3065,
	253, 3065,
	254, 3065,
	255, 3065,
	256, 3065,
	257, 3065,
	258, 3065,
	259, 3065,
	261, 3065,
	263, 3065,
	264, 3065,
	265, 3065,
	266, 3065,
	267, 3065,
	268, 3065,
	269, 3065,
	270, 3065,
	271, 3065,
	272, 3065,
	273, 3065,
	275, 3065,
	276, 3065,
	277, 3065,
	278, 3065,
	279, 3065,
	280, 3065,
	281, 3065,
	282, 3065,
	284, 3065,
	285, 3065,
	286, 3065,
	288, 3065,
	289, 3065,
	290, 3065,
	291, 3065,
	292, 3065,
	293, 3065,
	294, 3065,
	296, 3065,
	297, 3065,
	298, 3065,
	299, 3065,
	300, 3065,
	301, 3065,
	302, 3065,
	305, 3065,
	306, 3065,
	307, 3065,
	308, 3065,
	309, 3065,
	310, 3065,
	311, 3065,
	312, 3065,
	313, 3065,
	314, 3065,
	315, 3065,
	316, 3065,
	317, 3065,
	318, 3065,
	319, 3065,
	320, 3065,
	321, 3065,
	322, 3065,
	323, 3065,
	324, 3065,
	325, 3065,
	326, 3065,
	327, 3065,
	328, 3065,
	329, 3065,
	330, 3065,
	331, 3065,
	332, 3065,
	334, 3065,
	335, 3065,
	336, 3065,
	337, 3065,
	338, 3065,
	339, 3065,
	340, 3065,
	341, 3065,
	342, 3065,
	343, 3065,
	344, 3065,
	345, 3065,
	346, 3065,
	347, 3065,
	348, 3065,
	349, 3065,
	350, 3065,
	351, 3065,
	352, 3065,
	354, 3065,
	355, 3065,
	358, 3065,
	359, 3065,
	360, 3065,
	361, 3065,
	362, 3065,
	364, 3065,
	365, 3065,
	366, 3065,
	367, 3065,
	368, 3065,
	371, 3065,
	373, 3065,
	376, 3065,
	377, 3065,
	378, 3065,
	379, 3065,
	381, 3065,
	382, 3065,
	383, 3065,
	385, 3065,
	387, 3065,
	388, 3065,
	389, 3065,
	390, 3065,
	391, 3065,
	392, 3065,
	393, 3065,
	394, 3065,
	395, 3065,
	396, 3065,
	397, 3065,
	398, 3065,
	399, 3065,
	400, 3065,
	402, 3065,
	403, 3065,
	404, 3065,
	405, 3065,
	406, 3065,
	407, 3065,
	408, 3065,
	409, 3065,
	410, 3065,
	411, 3065,
	412, 3065,
	413, 3065,
	414, 3065,
	415, 3065,
	416, 3065,
	418, 3065,
	419, 3065,
	420, 3065,
	422, 3065,
	423, 3065,
	424, 3065,
	425, 3065,
	426, 3065,
	427, 3065,
	428, 3065,
	429, 3065,
	430, 3065,
	431, 3065,
	432, 3065,
	433, 3065,
	434, 3065,
	435, 3065,
	437, 3065,
	439, 3065,
	440, 3065,
	441, 3065,
	447, 3065,
	448, 3065,
	449, 3065,
	450, 3065,
	451, 3065,
	452, 3065,
	453, 3065,
	454, 3065,
	455, 3065,
	456, 3065,
	457, 3065,
	458, 3065,
	459, 3065,
	460, 3065,
	461, 3065,
	463, 3065,
	464, 3065,
	465, 3065,
	466, 3065,
	467, 3065,
	468, 3065,
	469, 3065,
	470, 3065,
	471, 3065,
	472, 3065,
	473, 3065,
	474, 3065,
	475, 3065,
	476, 3065,
	477, 3065,
	478, 3065,
	479, 3065,
	480, 3065,
	481, 3065,
	482, 3065,
	483, 3065,
	484, 3065,
	485, 3065,
	486, 3065,
	487, 3065,
	488, 3065,
	489, 3065,
	490, 3065,
	492, 3065,
	493, 3065,
	494, 3065,
	495, 3065,
	496, 3065,
	497, 3065,
	499, 3065,
	500, 3065,
	501, 3065,
	502, 3065,
	503, 3065,
	504, 3065,
	505, 3065,
	506, 3065,
	507, 3065,
	508, 3065,
	509, 3065,
	510, 3065,
	511, 3065,
	512, 3065,
	513, 3065,
	514, 3065,
	516, 3065,
	518, 3065,
	519, 3065,
	520, 3065,
	521, 3065,
	522, 3065,
	523, 3065,
	524, 3065,
	525, 3065,
	526, 3065,
	527, 3065,
	528, 3065,
	529, 3065,
	530, 3065,
	531, 3065,
	532, 3065,
	533, 3065,
	534, 3065,
	535, 3065,
	536, 3065,
	537, 3065,
	538, 3065,
	540, 3065,
	541, 3065,
	542, 3065,
	543, 3065,
	544, 3065,
	546, 3065,
	547, 3065,
	548, 3065,
	549, 3065,
	550, 3065,
	551, 3065,
	553, 3065,
	554, 3065,
	556, 3065,
	557, 3065,
	558, 3065,
	559, 3065,
	560, 3065,
	562, 3065,
	564, 3065,
	565, 3065,
	566, 3065,
	567, 3065,
	568, 3065,
	569, 3065,
	570, 3065,
	571, 3065,
	573, 3065,
	574, 3065,
	575, 3065,
	576, 3065,
	577, 3065,
	578, 3065,
	579, 3065,
	582, 3065,
	583, 3065,
	584, 3065,
	585, 3065,
	586, 3065,
	587, 3065,
	588, 3065,
	589, 3065,
	591, 3065,
	594, 3065,
	595, 3065,
	596, 3065,
	597, 3065,
	598, 3065,
	599, 3065,
	601, 3065,
	602, 3065,
	603, 3065,
	604, 3065,
	605, 3065,
	606, 3065,
	607, 3065,
	608, 3065,
	609, 3065,
	614, 3065,
	615, 3065,
	616, 3065,
	617, 3065,
	618, 3065,
	619, 3065,
	620, 3065,
	622, 3065,
	632, 3065,
	633, 3065,
	634, 3065,
	635, 3065,
	636, 3065,
	637, 3065,
	639, 3065,
	640, 3065,
	641, 3065,
	642, 3065,
	643, 3065,
	644, 3065,
	645, 3065,
	646, 3065,
	647, 3065,
	650, 3065,
	653, 3065,
	654, 3065,
	656, 3065,
	657, 3065,
	-2, 0,
	-1, 1802,
	201, 2914,
	561, 2914,
	634, 2914,
	654, 2914,
	-2, 0,
	-1, 1850,
	201, 1023,
	-2, 2905,
	-1, 1851,
	201, 1024,
	-2, 2690,
	-1, 1852,
	201, 1025,
	-2, 2857,
	-1, 1857,
	424, 1075,
	497, 1075,
	544, 1075,
	566, 1075,
	-2, 0,
	-1, 1868,
	1, 1620,
	239, 1620,
	651, 1620,
	653, 1620,
	655, 1620,
	658, 1620,
	-2, 0,
	-1, 1885,
	1, 1070,
	651, 1070,
	653, 1070,
	655, 1070,
	658, 1070,
	-2, 0,
	-1, 1886,
	1, 1114,
	651, 1114,
	653, 1114,
	655, 1114,
	658, 1114,
	-2, 0,
	-1, 1887,
	1, 1122,
	651, 1122,
	653, 1122,
	655, 1122,
	658, 1122,
	-2, 0,
	-1, 1890,
	1, 1079,
	651, 1079,
	653, 1079,
	655, 1079,
	658, 1079,
	-2, 0,
	-1, 1892,
	1, 1085,
	651, 1085,
	653, 1085,
	655, 1085,
	658, 1085,
	-2, 0,
	-1, 1895,
	1, 1081,
	651, 1081,
	653, 1081,
	655, 1081,
	658, 1081,
	-2, 0,
	-1, 1900,
	1, 1095,
	651, 1095,
	653, 1095,
	655, 1095,
	658, 1095,
	-2, 0,
	-1, 1935,
	1, 2895,
	651, 2895,
	653, 2895,
	654, 2895,
	655, 2895,
	658, 2895,
	-2, 0,
	-1, 1939,
	1, 1174,
	651, 1174,
	653, 1174,
	655, 1174,
	658, 1174,
	-2, 0,
	-1, 1959,
	181, 1835,
	194, 1835,
	295, 1835,
	369, 1835,
	-2, 1773,
	-1, 2061,
	160, 1794,
	181, 1794,
	194, 1794,
	260, 1794,
	295, 1794,
	369, 1794,
	380, 1794,
	580, 1794,
	-2, 2245,
	-1, 2122,
	653, 2420,
	-2, 0,
	-1, 2158,
	160, 1794,
	181, 1794,
	194, 1794,
	260, 1794,
	295, 1794,
	369, 1794,
	380, 1794,
	580, 1794,
	-2, 1927,
	-1, 2197,
	654, 2564,
	657, 2564,
	-2, 1201,
	-1, 2198,
	654, 2566,
	657, 2566,
	-2, 1202,
	-1, 2199,
	654, 2565,
	657, 2565,
	-2, 1203,
	-1, 2200,
	657, 2488,
	-2, 1204,
	-1, 2222,
	652, 2068,
	-2, 2056,
	-1, 2254,
	201, 2911,
	654, 2911,
	657, 2911,
	-2, 0,
	-1, 2300,
	1, 831,
	655, 831,
	658, 831,
	-2, 1681,
	-1, 2477,
	239, 284,
	-2, 2572,
	-1, 2478,
	239, 285,
	-2, 348,
	-1, 2594,
	1, 1072,
	651, 1072,
	653, 1072,
	655, 1072,
	658, 1072,
	-2, 0,
	-1, 2595,
	1, 1116,
	651, 1116,
	653, 1116,
	655, 1116,
	658, 1116,
	-2, 0,
	-1, 2596,
	1, 1124,
	651, 1124,
	653, 1124,
	655, 1124,
	658, 1124,
	-2, 0,
	-1, 2597,
	1, 1176,
	651, 1176,
	653, 1176,
	655, 1176,
	658, 1176,
	-2, 0,
	-1, 2638,
	1, 1097,
	651, 1097,
	653, 1097,
	655, 1097,
	658, 1097,
	-2, 0,
	-1, 2661,
	1, 1159,
	651, 1159,
	653, 1159,
	655, 1159,
	658, 1159,
	-2, 0,
	-1, 2709,
	474, 1862,
	475, 1862,
	-2, 2101,
	-1, 2742,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2121,
	-1, 2743,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2122,
	-1, 2744,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2123,
	-1, 2745,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2124,
	-1, 2746,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2125,
	-1, 2747,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2126,
	-1, 2748,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2127,
	-1, 2749,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2128,
	-1, 2761,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2140,
	-1, 2762,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2141,
	-1, 2763,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2142,
	-1, 2767,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2149,
	-1, 2773,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2153,
	-1, 2775,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2161,
	-1, 2776,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2162,
	-1, 2777,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2163,
	-1, 2778,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2164,
	-1, 2952,
	5, 2576,
	201, 2431,
	652, 2573,
	-2, 2564,
	-1, 2953,
	201, 2432,
	-2, 2996,
	-1, 2954,
	201, 2433,
	-2, 2784,
	-1, 2955,
	201, 2434,
	-2, 2654,
	-1, 2956,
	201, 2435,
	-2, 2718,
	-1, 2957,
	201, 2436,
	-2, 2769,
	-1, 2958,
	201, 2437,
	-2, 2908,
	-1, 2959,
	201, 2438,
	-2, 2228,
	-1, 3051,
	1, 1928,
	2, 1928,
	113, 1928,
	160, 1928,
	181, 1928,
	194, 1928,
	202, 1928,
	220, 1928,
	223, 1928,
	253, 1928,
	260, 1928,
	272, 1928,
	291, 1928,
	295, 1928,
	335, 1928,
	369, 1928,
	374, 1928,
	380, 1928,
	462, 1928,
	468, 1928,
	580, 1928,
	592, 1928,
	611, 1928,
	612, 1928,
	613, 1928,
	623, 1928,
	651, 1928,
	653, 1928,
	655, 1928,
	657, 1928,
	658, 1928,
	-2, 1927,
	-1, 3064,
	652, 2545,
	-2, 2559,
	-1, 3066,
	1, 365,
	611, 365,
	658, 365,
	-2, 1821,
	-1, 3101,
	652, 2067,
	-2, 2057,
	-1, 3320,
	1, 1523,
	456, 1477,
	499, 1477,
	626, 1477,
	631, 1477,
	651, 1523,
	653, 1523,
	655, 1523,
	658, 1523,
	-2, 1821,
	-1, 3504,
	375, 1865,
	-2, 3054,
	-1, 3505,
	375, 1866,
	-2, 2892,
	-1, 3509,
	474, 2499,
	475, 2499,
	-2, 2226,
	-1, 3510,
	474, 2503,
	475, 2503,
	-2, 2227,
	-1, 3511,
	474, 2500,
	475, 2500,
	-2, 2226,
	-1, 3512,
	474, 2504,
	475, 2504,
	-2, 2227,
	-1, 3526,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2151,
	-1, 3527,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2155,
	-1, 3533,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2157,
	-1, 3765,
	1, 826,
	651, 826,
	653, 826,
	655, 826,
	658, 826,
	-2, 1681,
	-1, 3950,
	38, 2576,
	134, 2576,
	634, 2576,
	650, 2576,
	653, 2576,
	654, 2576,
	657, 2576,
	-2, 2573,
	-1, 3951,
	38, 2577,
	134, 2577,
	634, 2577,
	650, 2577,
	653, 2577,
	654, 2577,
	657, 2577,
	-2, 2574,
	-1, 3982,
	46, 2536,
	-2, 1257,
	-1, 3987,
	1, 1523,
	651, 1523,
	653, 1523,
	655, 1523,
	658, 1523,
	-2, 1821,
	-1, 4097,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2159,
	-1, 4104,
	266, 0,
	268, 0,
	358, 0,
	-2, 2178,
	-1, 4172,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2207,
	-1, 4173,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2208,
	-1, 4174,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2209,
	-1, 4178,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2213,
	-1, 4179,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2214,
	-1, 4180,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2215,
	-1, 4228,
	652, 2546,
	-2, 2560,
	-1, 4457,
	654, 3172,
	-2, 1747,
	-1, 4516,
	266, 0,
	268, 0,
	358, 0,
	-2, 2179,
	-1, 4519,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2182,
	-1, 4520,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2184,
	-1, 4644,
	654, 2561,
	-2, 1558,
	-1, 4811,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2183,
	-1, 4812,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2185,
	-1, 4823,
	266, 0,
	-2, 2218,
	-1, 5020,
	266, 0,
	-2, 2219,
	-1, 5266,
	54, 0,
	235, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 3017,
}

const sqlPrivate = 57344

const sqlLast = 155689

var sqlAct = [...]int{
	301, 5181, 5489, 5180, 1470, 5407, 5345, 5071, 3274, 3395,
	5329, 5063, 1206, 197, 5313, 3664, 4885, 5278, 5265, 1010,
	10, 4, 5252, 1009, 6, 3244, 5134, 5421, 5235, 5195,
	2474, 5116, 4640, 3968, 4499, 3969, 5192, 5279, 2517, 5171,
	5280, 2320, 5354, 4429, 4935, 4988, 4965, 5276, 4952, 5212,
	4137, 5264, 2360, 5024, 4769, 4764, 4758, 1667, 1526, 4727,
	3364, 3732, 4695, 4890, 2719, 3792, 1379, 1390, 4089, 4799,
	1462, 4832, 2164, 3795, 4005, 4449, 2984, 4441, 2269, 5101,
	2566, 1460, 786, 1467, 4971, 4354, 933, 3518, 4641, 2568,
	2790, 4621, 2543, 2331, 3174, 1697, 1968, 2209, 4774, 3953,
	1820, 3999, 3415, 2729, 4412, 4385, 3856, 3943, 1369, 4387,
	2369, 4034, 1198, 4032, 2282, 933, 861, 3798, 3384, 197,
	1547, 4828, 3352, 3381, 2720, 3379, 1254, 3939, 3780, 3647,
	3259, 3958, 3779, 3957, 3920, 3173, 1640, 3960, 3919, 3078,
	4231, 3781, 3679, 798, 3927, 3670, 3687, 4498, 4555, 3446,
	3717, 2133, 3710, 3396, 1013, 1818, 3410, 3668, 2463, 3327,
	2461, 2398, 3941, 2450, 3942, 5330, 3819, 3275, 2193, 2381,
	4198, 2726, 1692, 3646, 1693, 5025, 2069, 2108, 295, 2868,
	3044, 2039, 2803, 2530, 3502, 3409, 1757, 3046, 3289, 2514,
	857, 2440, 928, 2462, 2448, 3949, 1465, 2428, 2421, 1004,
	2870, 3365, 1259, 2348, 1509, 2352, 3024, 2134, 2280, 294,
	2859, 1541, 1264, 2153, 1865, 2787, 3083, 3041, 3784, 2327,
	1528, 2708, 2330, 2689, 2691, 3079, 1370, 834, 1795, 3389,
	1439, 1760, 2513, 2981, 1753, 3198, 2443, 1669, 2150, 1084,
	2564, 3199, 3961, 773, 2103, 1408, 3159, 796, 5135, 3043,
	1496, 1266, 2862, 3033, 1373, 2994, 1227, 1352, 935, 45,
	934, 1450, 1387, 2143, 939, 2053, 2914, 2840, 1453, 1970,
	2690, 1969, 2948, 2692, 842, 207, 1900, 877, 2471, 1885,
	1524, 208, 853, 1786, 983, 1648, 127, 935, 113, 934,
	2452, 5346, 5408, 939, 1240, 942, 1255, 791, 50, 49,
	1722, 1793, 1521, 47, 787, 1209, 800, 38, 36, 817,
	34, 1350, 923, 1375, 1975, 3556, 1950, 1540, 1703, 1105,
	4212, 3550, 2271, 4213, 942, 3666, 5500, 984, 5481, 2271,
	3023, 3733, 123, 5492, 3617, 3618, 5479, 3898, 2271, 5274,
	3023, 1985, 1986, 2271, 2271, 2271, 5478, 4858, 4855, 5443,
	3023, 870, 873, 4889, 5441, 5375, 5331, 5304, 4889, 2483,
	5332, 3023, 5302, 5299, 5296, 2016, 3023, 5300, 5297, 4854,
	5262, 4014, 5261, 1988, 2483, 2292, 2483, 5260, 5250, 5248,
	1202, 3420, 4889, 4889, 1005, 5239, 5238, 5190, 5156, 4889,
	4889, 4889, 3092, 5149, 5148, 5139, 5115, 3023, 3023, 2483,
	2483, 1696, 2041, 4851, 5112, 5093, 5022, 1367, 4889, 4712,
	3092, 1987, 84, 5002, 1008, 1007, 4967, 4474, 4908, 4907,
	4281, 4896, 2483, 2483, 4895, 2483, 4888, 4751, 4889, 4850,
	4889, 85, 4839, 4813, 1505, 4784, 2483, 3092, 4589, 3420,
	4752, 1353, 1353, 4690, 3898, 1191, 4668, 3023, 4518, 90,
	3023, 4465, 3092, 1985, 1986, 4027, 2018, 2019, 2020, 2029,
	2030, 2031, 4459, 4409, 1505, 4312, 4027, 4410, 2565, 4313,
	4280, 4223, 2518, 1182, 4281, 4224, 2022, 2016, 4015, 1181,
	4221, 1202, 2292, 4205, 4222, 1988, 4121, 3023, 4117, 4026,
	2483, 99, 3023, 4027, 3750, 3727, 2035, 3663, 4202, 2289,
	3658, 3023, 3657, 3746, 3023, 1830, 3023, 3608, 1754, 1891,
	1717, 3609, 1811, 3606, 2041, 3623, 3357, 3607, 3115, 3087,
	1405, 3898, 1993, 1987, 1197, 2289, 3598, 3596, 3567, 2483,
	3599, 3023, 3023, 1011, 2007, 1985, 1986, 3419, 3565, 2292,
	3517, 3420, 1203, 2004, 3566, 3406, 55, 3405, 122, 2553,
	3023, 2553, 3138, 3091, 106, 119, 3023, 3092, 1385, 2016,
	3076, 2996, 1415, 2292, 3023, 106, 1354, 1988, 3068, 3022,
	2552, 5157, 2483, 3023, 2553, 5026, 2015, 2017, 1356, 5017,
	1357, 5005, 3420, 4202, 259, 2995, 4762, 4712, 2289, 4669,
	4474, 2289, 4411, 4399, 3251, 3158, 2041, 2374, 2306, 2482,
	3149, 2270, 2286, 3357, 3269, 1987, 3084, 2129, 1406, 1690,
	4330, 4092, 4061, 4016, 2292, 1867, 1406, 2151, 2433, 3060,
	107, 3059, 3058, 3057, 2010, 2011, 2012, 2013, 3056, 1358,
	1355, 259, 3633, 4017, 1993, 1190, 1189, 1188, 261, 2008,
	1187, 1186, 1185, 1184, 2816, 2817, 2818, 2835, 2836, 2837,
	1180, 1179, 1178, 1177, 1176, 4573, 3472, 3023, 1175, 1174,
	1173, 1172, 1171, 1262, 1170, 2838, 1169, 1168, 1167, 1166,
	2865, 1165, 1164, 1163, 1162, 1161, 1148, 2026, 1082, 1081,
	1080, 2036, 1079, 1078, 1077, 261, 1076, 1075, 2015, 2017,
	260, 1074, 1073, 1711, 1072, 1071, 1070, 1705, 1069, 1068,
	2630, 1705, 2041, 1067, 1705, 1066, 253, 1065, 2032, 1064,
	2033, 1063, 2272, 2038, 1062, 254, 1993, 2002, 2003, 2272,
	2038, 1061, 2828, 1060, 1059, 1058, 1057, 1056, 2272, 1055,
	1054, 2824, 1053, 2272, 2272, 2272, 2024, 260, 1052, 1716,
	1051, 1050, 1049, 1704, 1048, 209, 1047, 1046, 4530, 3617,
	3618, 2008, 3635, 3636, 3637, 1035, 4776, 1034, 3555, 1033,
	1028, 1027, 1020, 1019, 1018, 1003, 1002, 1001, 959, 2866,
	2015, 2017, 958, 957, 956, 955, 946, 945, 944, 111,
	943, 905, 904, 868, 867, 866, 848, 289, 288, 1261,
	287, 286, 209, 1696, 285, 2289, 284, 283, 282, 3634,
	2034, 5029, 4256, 2289, 2289, 281, 2009, 280, 279, 278,
	277, 276, 2829, 2830, 2831, 2832, 3617, 3618, 275, 274,
	273, 2023, 2823, 2897, 272, 2289, 271, 3392, 270, 269,
	3632, 268, 2038, 2008, 267, 1472, 1264, 266, 205, 265,
	114, 1238, 264, 118, 1834, 1815, 263, 262, 3166, 4217,
	4065, 4028, 3713, 3578, 3561, 3661, 2867, 3552, 2864, 3449,
	3337, 3374, 2111, 1264, 1264, 1264, 3096, 3065, 3050, 2110,
	2111, 1407, 2040, 259, 3166, 2681, 2895, 2110, 2881, 2879,
	2154, 1012, 2333, 2995, 259, 1417, 2291, 166, 2177, 2080,
	1951, 1699, 2014, 1517, 1389, 2071, 5289, 3632, 166, 2114,
	3662, 5288, 5285, 3357, 5263, 2833, 2834, 2109, 5008, 1550,
	2292, 1982, 5247, 1264, 2038, 5120, 5014, 3125, 2009, 1264,
	1672, 1264, 1710, 5006, 1472, 1382, 2270, 261, 1681, 4422,
	3623, 2289, 2286, 2684, 4014, 1705, 4827, 1500, 261, 2826,
	4782, 4880, 4761, 4597, 4553, 4552, 2078, 4546, 2027, 1264,
	1406, 1264, 2073, 1264, 4545, 171, 1513, 1514, 1515, 2289,
	4544, 1672, 3628, 3626, 3627, 3619, 3620, 3621, 3622, 3624,
	3625, 211, 1989, 1990, 1991, 1992, 1994, 1995, 4537, 260,
	1500, 4536, 4778, 2071, 2040, 1472, 4534, 4529, 4526, 1762,
	260, 4525, 4408, 4398, 259, 253, 1658, 3623, 259, 259,
	2009, 259, 4260, 4259, 254, 4258, 253, 1672, 206, 4227,
	1694, 4193, 4192, 210, 1672, 254, 4191, 2995, 1406, 4113,
	197, 197, 4108, 1264, 3708, 1264, 3654, 3645, 1653, 2869,
	1672, 4318, 1478, 1205, 1006, 2533, 3616, 3613, 3612, 1264,
	3610, 1264, 3605, 3604, 3603, 209, 1492, 3633, 261, 3600,
	3597, 1381, 261, 261, 3577, 261, 3560, 3164, 1457, 1444,
	1447, 3553, 2025, 3551, 3407, 3051, 2040, 2852, 1494, 1767,
	1770, 2072, 1982, 2070, 1999, 2000, 2006, 2028, 2005, 2001,
	1366, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	1672, 1981, 5495, 5429, 3738, 4540, 1477, 5428, 2490, 4539,
	260, 5344, 5342, 1383, 260, 260, 2827, 260, 2488, 1789,
	1264, 1985, 1986, 1264, 3633, 939, 253, 1893, 1391, 1679,
	253, 253, 4139, 253, 5182, 254, 1548, 4423, 2038, 254,
	254, 3376, 254, 5099, 1543, 1486, 1637, 1642, 3617, 3618,
	5083, 5079, 5078, 1988, 5077, 5057, 942, 5056, 5054, 3617,
	3618, 5028, 5027, 1691, 5000, 209, 1520, 4328, 2863, 209,
	209, 2799, 209, 1531, 1532, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 2040, 2793, 3617, 3618, 5031, 1675, 4986, 1755,
	1645, 1987, 259, 1523, 259, 4983, 4982, 1533, 1534, 259,
	4963, 4962, 3105, 4904, 4875, 2038, 3659, 1835, 3163, 4825,
	4808, 4807, 4747, 4743, 4740, 4713, 4572, 1798, 1800, 1702,
	4423, 1709, 4551, 1715, 3634, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 4475, 3163, 4316, 1985, 1986, 4315, 4296,
	4295, 4293, 259, 1500, 3163, 4208, 261, 4196, 261, 4103,
	2058, 4029, 3991, 261, 1796, 3981, 3878, 3830, 1264, 3797,
	2016, 3740, 3582, 3581, 1264, 3576, 3542, 3351, 1988, 1773,
	4777, 3349, 2813, 2814, 2815, 2839, 2825, 2819, 3191, 2821,
	2822, 2820, 2807, 2808, 2809, 2810, 2811, 2812, 2117, 2116,
	2115, 3634, 5030, 1809, 2112, 1814, 261, 2041, 260, 2104,
	260, 2102, 1993, 3103, 1960, 260, 1987, 3102, 3062, 1828,
	3055, 1833, 3021, 2877, 253, 2057, 253, 2007, 2176, 2132,
	2126, 253, 2125, 254, 2124, 254, 2123, 2122, 2060, 3623,
	254, 2121, 2120, 3617, 3618, 1840, 3635, 3636, 3637, 1909,
	3623, 2119, 2118, 259, 259, 2099, 2098, 2097, 260, 1203,
	2096, 2095, 1810, 209, 2094, 3391, 4514, 2093, 2092, 2091,
	209, 2090, 2089, 2088, 253, 3623, 3375, 2087, 1829, 2086,
	1264, 1264, 1264, 254, 2085, 2084, 1264, 1892, 2073, 2059,
	3629, 3630, 3631, 1387, 2056, 1387, 1956, 3628, 3626, 3627,
	3619, 3620, 3621, 3622, 3624, 3625, 2051, 261, 261, 197,
	1550, 1485, 1412, 209, 1401, 4750, 4593, 2010, 2011, 2012,
	2013, 4522, 1264, 1787, 3632, 2199, 1472, 1993, 4255, 4220,
	4211, 1858, 1983, 2227, 2199, 3564, 1472, 3053, 1792, 1472,
	1672, 2131, 1985, 1986, 4852, 4595, 1894, 4254, 2072, 3094,
	3736, 2054, 1961, 4020, 3617, 3618, 3633, 2172, 3705, 260,
	260, 1527, 2140, 1527, 3628, 3626, 3627, 3619, 3620, 3621,
	3622, 3624, 3625, 3833, 1988, 253, 253, 1527, 2326, 1952,
	4671, 2015, 2017, 4400, 254, 254, 3245, 1512, 5420, 1965,
	1957, 2187, 1964, 1510, 2896, 1527, 2411, 1527, 2192, 1527,
	1472, 5087, 1182, 5080, 4781, 4716, 1264, 2180, 1181, 2205,
	4715, 2113, 1987, 4714, 209, 209, 4670, 1959, 4575, 2256,
	1525, 4482, 2259, 4481, 3623, 4480, 4479, 4478, 4972, 4477,
	1264, 2186, 2137, 2138, 4476, 1978, 1979, 2038, 1550, 3287,
	2161, 259, 259, 2276, 2008, 4282, 2278, 2894, 2038, 2880,
	2878, 5009, 2283, 3217, 4215, 4214, 2285, 4031, 4030, 1353,
	1511, 2288, 3902, 3900, 3899, 2363, 5007, 5281, 5371, 2105,
	2106, 5369, 1985, 1986, 1505, 4426, 5277, 1954, 2154, 2111,
	4311, 4090, 2298, 2294, 2312, 1505, 2110, 2324, 4345, 1505,
	1500, 3602, 3601, 3524, 3202, 261, 261, 2202, 3639, 2200,
	1203, 1309, 2250, 939, 1988, 1508, 2202, 2094, 2200, 2162,
	2182, 4879, 939, 2079, 3868, 3799, 1910, 2094, 2184, 1857,
	2297, 4416, 3971, 3634, 3970, 2038, 1159, 2178, 2210, 2152,
	4276, 5049, 4277, 2082, 942, 2464, 1866, 5050, 2518, 4966,
	5310, 3633, 1987, 942, 1506, 2301, 4759, 260, 260, 2159,
	2318, 2317, 5050, 4829, 1527, 2326, 2168, 3416, 3928, 4702,
	1867, 2465, 4397, 253, 253, 4351, 2410, 4342, 2534, 4321,
	4057, 2409, 254, 254, 2860, 2430, 3200, 1160, 3763, 2651,
	2562, 2181, 2498, 2130, 2221, 2014, 3666, 4141, 4899, 1385,
	2585, 1385, 4871, 3101, 2274, 2171, 2170, 2127, 5286, 3570,
	2169, 2107, 209, 209, 2167, 2166, 2156, 2165, 3988, 1672,
	1672, 2009, 2185, 1791, 2526, 1766, 1686, 1481, 1443, 5301,
	1550, 2300, 2038, 5298, 2206, 4683, 4681, 1203, 4010, 4287,
	5072, 4765, 3266, 3263, 3261, 5189, 3802, 1844, 4306, 3448,
	3388, 1823, 2420, 3911, 997, 5372, 1672, 3329, 5373, 4902,
	1365, 3767, 5412, 1993, 4898, 2334, 4877, 3737, 5351, 4084,
	4930, 1984, 4364, 2296, 1991, 1992, 1994, 1995, 1208, 4657,
	2444, 3247, 5287, 2699, 1502, 1672, 2406, 2040, 2415, 1157,
	2321, 1736, 1506, 1155, 2425, 1153, 903, 3626, 3627, 3619,
	3620, 3621, 3622, 3624, 3625, 3139, 1792, 5491, 5088, 4923,
	3619, 3620, 3621, 3622, 3624, 3625, 2644, 2865, 3634, 2475,
	2480, 4910, 900, 4705, 2642, 1908, 4704, 2417, 4362, 2338,
	1672, 2339, 1672, 2319, 1672, 4361, 2313, 3621, 3622, 3624,
	3625, 2346, 2347, 3769, 1907, 1201, 2697, 2420, 4363, 4353,
	4336, 1144, 1672, 1672, 4335, 4333, 4332, 2340, 2341, 1207,
	1729, 2368, 4320, 1512, 2344, 2345, 1672, 4279, 4655, 4278,
	998, 1507, 2380, 2557, 1688, 3917, 4652, 3916, 1672, 3870,
	3726, 1672, 1672, 1672, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 2420, 3575, 3617, 3618, 3574, 1512, 939,
	3385, 3573, 3572, 2910, 3528, 2199, 2445, 2546, 2467, 2468,
	3285, 3284, 3162, 3268, 4940, 3162, 2866, 2323, 2586, 1789,
	2418, 2545, 1502, 2545, 2403, 3257, 2522, 1264, 3160, 3832,
	942, 3160, 3617, 3618, 1503, 2695, 1511, 2481, 1495, 1842,
	840, 3249, 4900, 2469, 1504, 1200, 4872, 2484, 840, 3238,
	3237, 3229, 3228, 2527, 3227, 3207, 1906, 2322, 3206, 2909,
	3167, 2038, 2540, 2416, 3077, 2774, 1264, 2402, 2399, 2424,
	2207, 1511, 2731, 1958, 3629, 3630, 3631, 5003, 2583, 2128,
	4806, 3628, 3626, 3627, 3619, 3620, 3621, 3622, 3624, 3625,
	5413, 2560, 2454, 4401, 2453, 2454, 5352, 2453, 3799, 2457,
	4603, 2590, 1264, 2867, 1264, 2864, 2548, 2419, 2570, 1507,
	2698, 1264, 4058, 2516, 1264, 3866, 2227, 2227, 1550, 2465,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 2495, 1264, 2550, 1264,
	1264, 1264, 1264, 2537, 2683, 1202, 1382, 1796, 1382, 1796,
	2501, 3095, 1503, 2615, 2518, 1506, 3623, 2202, 3223, 2200,
	2529, 1791, 1504, 939, 995, 1264, 994, 2374, 1995, 1264,
	1264, 2696, 3110, 1779, 2542, 1778, 2701, 1264, 4651, 2576,
	3625, 1264, 2419, 1264, 1264, 1529, 1530, 1529, 1530, 2688,
	3221, 1550, 1150, 3623, 942, 1486, 4653, 1264, 1264, 1264,
	1264, 2328, 2329, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 2554, 4672, 2555, 1731, 2679, 2581, 2577, 1505, 1529,
	1530, 1529, 1530, 1529, 1530, 3109, 1949, 2699, 2419, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1777, 1264,
	1776, 2372, 1203, 1264, 1203, 2841, 2842, 2860, 2594, 1859,
	3204, 2670, 1740, 1689, 1429, 1387, 2869, 2605, 2661, 2841,
	2857, 2658, 1550, 4941, 1837, 2631, 1748, 897, 3539, 839,
	3146, 1387, 1381, 3633, 1381, 3867, 4939, 839, 1000, 999,
	3081, 4613, 5372, 4937, 1953, 1502, 2905, 1264, 1550, 2638,
	2697, 2727, 2728, 1989, 1990, 1991, 1992, 1994, 1995, 2725,
	3537, 2789, 5415, 2713, 2712, 2951, 2951, 2965, 2413, 2841,
	3633, 1732, 2985, 2987, 2789, 2730, 2724, 1867, 1472, 2993,
	1905, 2659, 1889, 3232, 1383, 2400, 1383, 3236, 4649, 3423,
	2405, 197, 3766, 3082, 2446, 2673, 4936, 1867, 3265, 3467,
	3176, 2687, 3089, 2685, 2686, 1199, 2693, 2221, 2221, 2805,
	2700, 2660, 4612, 1920, 2038, 2382, 1505, 4805, 3067, 2856,
	3190, 1182, 2649, 3063, 1182, 1182, 4938, 2716, 2602, 1472,
	2717, 2718, 1507, 3264, 3262, 3260, 3080, 2599, 2328, 2329,
	2636, 2386, 1926, 1924, 5065, 2863, 1889, 3515, 895, 1838,
	841, 2038, 3038, 3500, 1484, 2595, 2374, 4951, 841, 4070,
	3030, 3088, 3230, 1472, 1472, 2407, 5416, 3133, 2872, 5283,
	3086, 2593, 2455, 5447, 2797, 2907, 2161, 1843, 2458, 3233,
	2908, 2795, 2447, 2911, 4290, 2912, 2913, 1353, 2801, 4654,
	5414, 3189, 901, 3108, 1257, 1503, 901, 1855, 1152, 901,
	3634, 2383, 1888, 2547, 1550, 1504, 1963, 4069, 3112, 2785,
	2854, 2401, 3114, 3534, 2698, 2456, 2672, 3469, 2643, 1886,
	3029, 3179, 3142, 3120, 2596, 901, 2641, 3980, 4303, 3124,
	4317, 3131, 4377, 3161, 3037, 3850, 3042, 3634, 3128, 3048,
	3049, 2783, 1761, 3135, 3535, 3144, 4127, 3134, 3540, 2603,
	939, 5040, 939, 2227, 2947, 2989, 1500, 2991, 3231, 1203,
	2976, 3107, 2960, 3019, 3020, 3064, 1888, 3841, 5322, 1203,
	2869, 3035, 3036, 1203, 4130, 4703, 5067, 3480, 1044, 3031,
	2373, 942, 3052, 942, 3097, 2159, 5418, 3145, 1887, 2113,
	3085, 4334, 4331, 3514, 4378, 2696, 4264, 3851, 4263, 785,
	4249, 1759, 3324, 939, 1550, 4248, 4062, 3203, 2669, 3143,
	4647, 1385, 2370, 3923, 2374, 3915, 84, 2395, 2387, 3864,
	1672, 3267, 3226, 3205, 3772, 3153, 780, 1385, 4650, 3842,
	2487, 2486, 1902, 4128, 942, 85, 5384, 1472, 2680, 3507,
	3508, 3320, 4376, 5399, 5398, 3849, 3075, 5153, 3104, 2366,
	3136, 2105, 2106, 90, 4301, 3168, 3130, 5449, 1264, 1264,
	5284, 1264, 4063, 1203, 3325, 3627, 3619, 3620, 3621, 3622,
	3624, 3625, 3137, 3113, 3119, 5359, 4504, 3840, 3122, 2396,
	3123, 2377, 4503, 3129, 2371, 896, 3165, 3924, 2372, 2388,
	2389, 4721, 1472, 4007, 2779, 99, 3363, 3360, 3483, 1505,
	3224, 3476, 1765, 3619, 3620, 3621, 3622, 3624, 3625, 5424,
	1921, 5314, 3323, 3278, 1947, 2367, 2384, 3258, 2780, 2271,
	3209, 3150, 4008, 3127, 1672, 2781, 3140, 2394, 2142, 2786,
	1193, 1739, 1135, 1428, 3921, 197, 1672, 1011, 1672, 2771,
	3178, 898, 3243, 2378, 1672, 894, 2431, 2869, 3210, 2397,
	55, 5166, 122, 3536, 4863, 1672, 1672, 1195, 106, 119,
	2412, 5073, 3194, 3538, 2385, 3235, 3171, 2460, 3372, 3152,
	3239, 3181, 3184, 3863, 5282, 2172, 3208, 2414, 3355, 3862,
	3859, 1472, 3279, 1472, 3426, 3427, 4648, 3786, 3154, 3155,
	3225, 2376, 3156, 3157, 3286, 1151, 3434, 3435, 3436, 3321,
	3322, 5095, 5417, 3881, 2221, 1264, 2869, 1194, 3246, 2353,
	4007, 2408, 3414, 2671, 2354, 1761, 2411, 2146, 5254, 3413,
	5255, 3241, 3768, 3234, 107, 3335, 1918, 838, 3248, 2459,
	3255, 939, 1868, 2391, 3814, 1687, 3417, 3215, 3216, 3218,
	3219, 3220, 3222, 1410, 3482, 3162, 2601, 3272, 3273, 3271,
	4737, 2414, 5151, 3399, 3452, 1136, 3433, 1395, 3530, 2404,
	1922, 3182, 942, 2100, 3450, 3411, 3451, 1839, 2149, 5066,
	3330, 2788, 3734, 1397, 2412, 1264, 3906, 3479, 2431, 2142,
	3367, 1264, 1264, 3408, 1036, 2353, 3332, 2144, 3444, 5382,
	2354, 3334, 4636, 3418, 5358, 3813, 1264, 2413, 2390, 3424,
	5152, 1392, 4801, 4500, 3177, 2364, 2147, 3401, 4818, 5445,
	2637, 1037, 2431, 4044, 5200, 4684, 3338, 806, 3356, 3341,
	2769, 3343, 3403, 2967, 2772, 2050, 4583, 4042, 3580, 2851,
	4629, 3371, 2455, 4584, 2782, 2355, 1919, 4035, 2598, 1264,
	1264, 4390, 3066, 3034, 2784, 1264, 3394, 4406, 1398, 5450,
	2145, 4388, 3404, 2359, 1483, 3485, 3047, 3487, 1264, 1264,
	3402, 1796, 2796, 1925, 1264, 1264, 1923, 2373, 2146, 2427,
	1264, 3383, 2592, 3390, 1202, 2456, 3390, 1399, 1382, 2768,
	5422, 3421, 2392, 111, 3922, 3441, 2410, 4630, 3428, 3681,
	3429, 2409, 1045, 4143, 1382, 3481, 4582, 1854, 1856, 2426,
	781, 3457, 4302, 3459, 3330, 3461, 1962, 3463, 3464, 5431,
	3456, 2355, 3787, 1141, 1140, 1264, 1264, 1264, 4708, 2149,
	4749, 1264, 1396, 4489, 4592, 4250, 4046, 5337, 4636, 2359,
	3473, 1264, 1416, 3531, 2356, 2361, 2422, 5338, 2144, 1414,
	4392, 3443, 205, 3820, 114, 4037, 1021, 118, 1264, 4505,
	4086, 4800, 3498, 5117, 5390, 1873, 3458, 2147, 3460, 3465,
	3462, 4036, 1137, 3506, 5320, 5206, 4629, 5133, 3242, 4985,
	4622, 2371, 4707, 1026, 4706, 4391, 4447, 259, 3995, 3749,
	3496, 3495, 3497, 2148, 1222, 1012, 3074, 4738, 4620, 2512,
	782, 166, 3558, 3559, 2713, 2712, 3501, 3562, 4624, 5423,
	3822, 2145, 2423, 2139, 1381, 5110, 1413, 1404, 772, 2272,
	2356, 2361, 3488, 4931, 5357, 3490, 3516, 3563, 3523, 4045,
	1381, 5315, 4421, 4630, 2357, 3554, 4390, 2434, 947, 1972,
	4182, 261, 2441, 1972, 1973, 4549, 4388, 2648, 4501, 5425,
	1264, 1264, 1264, 1264, 2715, 783, 1967, 784, 2375, 1264,
	1264, 1264, 1038, 1039, 1264, 954, 1383, 3529, 2314, 171,
	4033, 3718, 5102, 5434, 2224, 5389, 1264, 1387, 1550, 4623,
	3821, 5321, 1383, 3826, 4386, 211, 5103, 4897, 2364, 3183,
	2479, 4846, 3909, 260, 4994, 5455, 2146, 3910, 3793, 2311,
	5047, 2770, 1264, 4448, 1264, 4357, 4337, 1138, 4288, 253,
	2357, 4286, 4802, 1387, 3996, 3673, 3674, 3680, 254, 4625,
	3986, 5104, 206, 3789, 3373, 3366, 4626, 210, 3353, 2541,
	2535, 1550, 2528, 2520, 1192, 4392, 1139, 4631, 2497, 2494,
	3656, 5118, 4979, 1387, 2148, 3824, 1550, 2149, 209, 3569,
	2362, 3282, 4126, 1971, 1733, 4272, 1420, 1971, 1472, 2351,
	4197, 847, 3211, 2435, 2364, 5172, 3032, 3166, 2705, 1393,
	4391, 4087, 4389, 2227, 5136, 2650, 2307, 1550, 3675, 5325,
	4628, 2309, 1972, 4450, 4958, 2147, 2050, 1472, 4770, 3350,
	4506, 5106, 3685, 3825, 3698, 1143, 1472, 3025, 1431, 4632,
	3751, 4043, 4038, 4039, 4040, 4041, 1203, 4956, 3707, 3711,
	4874, 3805, 5336, 3801, 3800, 1142, 5105, 3521, 1264, 3499,
	2582, 2349, 4210, 3678, 1022, 1023, 2362, 1973, 2310, 1394,
	1264, 1973, 3677, 2574, 4396, 5107, 2563, 3028, 1896, 1895,
	2363, 3725, 2492, 4047, 4244, 1890, 4886, 3073, 1472, 4183,
	3072, 5391, 3788, 3071, 2227, 4625, 3712, 3070, 3683, 3069,
	4184, 5323, 4626, 1200, 1752, 4550, 2337, 1785, 1783, 2350,
	3744, 1264, 5466, 4631, 1040, 1041, 2363, 5433, 3753, 1043,
	3027, 3755, 3756, 3667, 4507, 3026, 3759, 1472, 3760, 2358,
	3761, 3838, 3651, 3652, 3653, 3672, 1971, 5060, 4728, 3187,
	1500, 3720, 3721, 3722, 3723, 3716, 948, 949, 1472, 1771,
	1472, 3764, 3853, 3697, 3855, 3704, 4628, 4417, 3682, 2706,
	3757, 4294, 2539, 3770, 5454, 1772, 3931, 4960, 2451, 5379,
	1264, 1264, 1754, 2430, 4283, 4632, 3804, 1874, 1550, 3809,
	2430, 4861, 3811, 939, 4627, 3702, 3882, 3703, 3701, 1472,
	3212, 3213, 3869, 3892, 886, 5119, 4978, 4389, 4859, 4887,
	3447, 3328, 2148, 3714, 4882, 2358, 1472, 3684, 3735, 4273,
	3904, 4059, 3696, 1385, 942, 3776, 3777, 4054, 3699, 3700,
	5392, 3730, 3790, 3741, 3742, 3748, 3743, 4637, 4638, 3747,
	5324, 3897, 887, 3729, 3739, 3728, 3422, 3803, 4607, 3835,
	3807, 2438, 3333, 3331, 5178, 2567, 4959, 2464, 1847, 1385,
	4881, 1472, 1672, 3817, 1672, 3758, 4606, 1213, 1550, 3860,
	5186, 5061, 4869, 5169, 2221, 933, 1672, 1672, 3907, 3719,
	3951, 3765, 3754, 4556, 4199, 2876, 1024, 1025, 4849, 1385,
	1841, 4251, 1135, 1944, 3773, 3854, 2665, 5208, 5383, 3796,
	3908, 1472, 5381, 5303, 5091, 3987, 1946, 1943, 5081, 4857,
	951, 950, 4824, 2436, 1941, 1914, 1912, 1195, 3879, 1387,
	846, 3839, 4600, 4870, 1884, 3976, 4548, 3884, 3823, 3886,
	4627, 2336, 3890, 4003, 4395, 1882, 3896, 3831, 1880, 1672,
	1878, 4001, 1876, 3648, 3925, 1870, 1864, 3844, 197, 197,
	5179, 1672, 4102, 1672, 3837, 2221, 3848, 4055, 4052, 4284,
	5108, 2437, 3926, 3871, 3929, 3985, 5109, 5062, 3745, 3611,
	3541, 3354, 3256, 4637, 4638, 3852, 4023, 1784, 1782, 3874,
	3250, 3201, 952, 953, 3106, 3827, 3828, 3880, 3829, 1042,
	3994, 3893, 2449, 1862, 1781, 2678, 2674, 2584, 2573, 4012,
	2558, 2258, 4060, 2179, 2175, 3901, 3948, 3905, 3235, 1948,
	1550, 3913, 1822, 1550, 2640, 1136, 3891, 3956, 2607, 4943,
	4605, 3649, 3883, 4081, 4080, 2473, 3689, 4072, 3845, 1967,
	3471, 3470, 3846, 3903, 3847, 3431, 2694, 3865, 1901, 3997,
	2610, 2185, 3875, 3876, 3914, 3877, 2493, 935, 1264, 934,
	2257, 2255, 2083, 939, 4050, 1264, 1264, 3411, 1836, 1264,
	1264, 1264, 1349, 1264, 2875, 3209, 3411, 3933, 4763, 5275,
	3979, 4685, 1264, 2227, 4344, 4343, 4004, 3977, 4689, 3983,
	4667, 1264, 5168, 3918, 942, 3714, 1264, 4768, 2667, 3982,
	4694, 4680, 1550, 4618, 4617, 2666, 899, 2224, 2224, 4000,
	4446, 1264, 4073, 4251, 4436, 1945, 1942, 4009, 4051, 1550,
	4360, 4011, 4339, 1940, 1913, 1911, 4018, 4309, 3912, 2227,
	2227, 1264, 1264, 1883, 1264, 1264, 1264, 4307, 4079, 3690,
	4285, 2221, 3990, 4078, 1881, 4021, 4022, 1879, 3984, 1877,
	3972, 1875, 1264, 3386, 1869, 1863, 1264, 3378, 2227, 2227,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	4105, 1264, 4088, 1141, 1140, 4123, 902, 3370, 3362, 1264,
	1264, 2227, 3688, 3695, 3347, 4002, 1264, 3345, 3326, 4048,
	1382, 3126, 1861, 1780, 3121, 4053, 4155, 1264, 4156, 2491,
	4115, 4116, 197, 4066, 2489, 4067, 2639, 4068, 1387, 1387,
	2606, 1135, 1264, 4195, 2466, 1385, 4085, 2472, 2432, 2393,
	3694, 2379, 1137, 2365, 2293, 2290, 1382, 4075, 2287, 2284,
	1548, 2279, 2277, 2273, 2264, 5355, 1195, 5350, 1362, 5259,
	3894, 2191, 3519, 5373, 1550, 2441, 2315, 2303, 2304, 5059,
	3491, 1976, 2677, 3492, 1203, 3489, 1382, 1472, 1472, 3319,
	5241, 4229, 4194, 4110, 4112, 1363, 5127, 2215, 2210, 4783,
	1154, 1156, 4701, 4122, 4604, 3412, 1472, 1472, 3771, 4076,
	2199, 1472, 2332, 4129, 4131, 4132, 4138, 1738, 4082, 3162,
	4145, 4083, 930, 4996, 3162, 4216, 3188, 4989, 1725, 1419,
	1264, 4458, 2675, 2538, 2374, 3160, 4186, 4133, 4153, 4119,
	3185, 2597, 4154, 1452, 2727, 4146, 1381, 4245, 4158, 4160,
	1938, 1939, 2634, 1451, 2221, 2629, 4135, 5240, 1264, 2604,
	4152, 4658, 4696, 3283, 1136, 1194, 3691, 3692, 3693, 1860,
	4246, 4247, 875, 2727, 4161, 3520, 1522, 1985, 1986, 3192,
	2676, 4187, 1381, 4206, 4207, 1985, 1986, 1138, 5016, 4261,
	4262, 1264, 1264, 4270, 4269, 1677, 3895, 4271, 1383, 1977,
	2221, 2221, 4884, 4557, 4203, 4204, 4190, 2302, 4535, 1988,
	3818, 3193, 1381, 1364, 3193, 1519, 1139, 3214, 1980, 1479,
	1418, 5367, 5311, 290, 1452, 3344, 4356, 4433, 2521, 2221,
	2221, 1264, 1264, 1490, 1383, 3263, 3261, 1030, 3270, 1264,
	5387, 3252, 3254, 4218, 1452, 3197, 4308, 1987, 4310, 892,
	4289, 4355, 878, 878, 3195, 1987, 3253, 1917, 5177, 3196,
	1672, 1672, 2221, 1672, 1383, 5158, 5125, 4322, 5121, 4201,
	5058, 4980, 1672, 4977, 4862, 1143, 769, 1472, 4265, 4796,
	4444, 4374, 2202, 4435, 2200, 4420, 4226, 3989, 939, 3393,
	1665, 4228, 3359, 3346, 2992, 1142, 2299, 4369, 2208, 5419,
	4883, 4257, 3951, 2227, 3240, 4327, 4329, 3909, 1685, 4326,
	1684, 1678, 3910, 4219, 1196, 4352, 3731, 2227, 2451, 942,
	5453, 5123, 1141, 1140, 2224, 4359, 4358, 3617, 3618, 1985,
	1986, 1723, 3909, 5386, 1385, 1385, 4346, 3910, 2343, 3148,
	5144, 1264, 2342, 3147, 1696, 4314, 1846, 1696, 4527, 1695,
	4432, 4319, 1845, 1696, 4382, 2871, 4253, 3474, 2906, 2343,
	2342, 5318, 1672, 4368, 4379, 4380, 1916, 4443, 1264, 1915,
	4981, 1137, 4924, 4698, 4693, 4692, 1387, 1264, 3209, 4585,
	4581, 4580, 4523, 4497, 1804, 1672, 4451, 4413, 4252, 4460,
	1672, 1672, 1672, 4134, 3888, 3885, 3477, 2077, 2076, 3494,
	1819, 2682, 5438, 5400, 5245, 5162, 5161, 5160, 4428, 4403,
	4405, 5090, 1382, 1672, 4427, 1672, 5089, 5035, 5032, 4452,
	1672, 4954, 1550, 4914, 4467, 3279, 4365, 4853, 3948, 4848,
	4847, 4845, 4844, 4842, 4745, 4394, 4372, 4720, 4656, 4594,
	4579, 4455, 4578, 4470, 4383, 4464, 4407, 4305, 4297, 4415,
	4419, 3993, 3992, 1550, 3810, 3752, 1264, 1264, 3478, 3468,
	1849, 4375, 1264, 1264, 2227, 4404, 4402, 1264, 1264, 3440,
	1264, 3439, 3438, 3437, 3377, 1264, 4454, 3348, 3186, 4471,
	3117, 4434, 3099, 3098, 2800, 2668, 1264, 2635, 2628, 2627,
	2626, 2625, 4431, 2624, 4373, 2536, 2507, 2506, 2505, 2504,
	2503, 2502, 1264, 2267, 2266, 2265, 1138, 2263, 4437, 2190,
	3399, 4483, 3796, 4485, 2189, 1937, 4486, 1936, 1871, 4456,
	4491, 4453, 2063, 3411, 1747, 1746, 2068, 4384, 4461, 1745,
	4393, 1744, 4438, 4462, 4440, 1139, 1743, 1742, 1381, 4508,
	1741, 4468, 1737, 1735, 4469, 1734, 4521, 1662, 1661, 1660,
	1539, 1538, 1537, 2221, 2221, 1536, 1535, 1482, 1438, 1437,
	1436, 4517, 1435, 1387, 1434, 1433, 1432, 1430, 2221, 197,
	4487, 1387, 1425, 4494, 1424, 1550, 1550, 1423, 1550, 1422,
	4554, 1421, 1344, 4509, 2305, 1387, 1158, 4502, 1149, 5064,
	1383, 4635, 4634, 4633, 1143, 2664, 1672, 1672, 2515, 105,
	1730, 98, 2439, 4304, 5312, 5432, 5462, 2499, 5217, 4439,
	5211, 5210, 5096, 3940, 1142, 3938, 3937, 1550, 5317, 4950,
	964, 4795, 1111, 5207, 5094, 1720, 979, 5188, 3812, 3288,
	2609, 1872, 4974, 2611, 3706, 3054, 5150, 4531, 3579, 5023,
	4817, 4493, 2874, 1264, 2081, 3660, 4496, 100, 4547, 1248,
	1294, 3711, 4484, 4736, 1387, 4570, 1387, 4735, 4619, 2210,
	4291, 3959, 4732, 4731, 4562, 2212, 2214, 1212, 4587, 4588,
	2215, 2215, 1385, 1272, 1553, 4488, 2998, 3000, 5253, 4590,
	4591, 1472, 4233, 2316, 5444, 4666, 2325, 3100, 4645, 2950,
	1271, 1550, 1268, 1472, 4598, 4599, 1472, 4675, 4602, 2216,
	4678, 1382, 1382, 2218, 1270, 4565, 4567, 1269, 4558, 2217,
	4561, 1264, 4559, 4560, 1550, 2221, 4563, 2101, 1267, 4564,
	4642, 2211, 4642, 4442, 3978, 297, 297, 297, 3397, 775,
	776, 4574, 792, 775, 792, 804, 4611, 4571, 845, 4234,
	4019, 1790, 865, 4660, 1788, 1113, 2794, 872, 872, 872,
	872, 4614, 4646, 2858, 3568, 4586, 1672, 1672, 2074, 297,
	3951, 1264, 1264, 2227, 1228, 2227, 4601, 4235, 1250, 4232,
	4610, 4662, 4663, 2855, 4608, 4609, 1411, 4616, 4243, 1239,
	3686, 1017, 3665, 4006, 4241, 4225, 2704, 989, 297, 3614,
	2261, 2861, 1400, 2973, 1472, 4569, 2966, 2962, 4753, 3762,
	3387, 1955, 4831, 4659, 2052, 4700, 4682, 1550, 3398, 1516,
	1232, 2792, 1672, 2065, 3546, 4661, 2714, 4013, 3709, 3093,
	4242, 5234, 4142, 3475, 2511, 4238, 1361, 1381, 1381, 1360,
	1409, 1359, 5194, 4679, 4596, 5191, 4771, 1672, 1672, 1672,
	1672, 1672, 1672, 1672, 4691, 4718, 2429, 4739, 3954, 3955,
	4239, 2308, 3141, 2804, 3973, 4754, 4697, 4719, 4699, 1385,
	1244, 1550, 3453, 3454, 1656, 2655, 4757, 1385, 4760, 4772,
	4725, 4074, 4726, 1264, 1264, 1264, 3671, 4676, 4710, 1383,
	1383, 1385, 4709, 4418, 1749, 4891, 3948, 4722, 1256, 4711,
	4803, 1550, 2037, 3315, 3314, 5053, 1264, 4665, 4717, 1264,
	1264, 4742, 4741, 1501, 1499, 4734, 4729, 4748, 4730, 1264,
	4674, 4775, 2227, 4677, 1498, 1497, 4746, 1264, 1264, 5409,
	3281, 2442, 4300, 4299, 4298, 258, 3513, 775, 775, 1974,
	1966, 255, 4773, 4780, 1550, 297, 1672, 4766, 4788, 257,
	256, 3816, 4792, 4230, 3715, 1848, 4785, 4794, 5309, 4786,
	1385, 4324, 1385, 3930, 27, 879, 880, 4809, 881, 3151,
	2335, 1472, 1518, 4275, 26, 25, 24, 23, 128, 4687,
	48, 29, 28, 5, 22, 170, 168, 145, 165, 164,
	4756, 4804, 137, 1550, 163, 162, 161, 160, 4236, 159,
	167, 1264, 158, 157, 152, 156, 4237, 4814, 155, 4840,
	154, 4841, 153, 151, 1264, 149, 150, 144, 148, 4826,
	147, 2221, 146, 1264, 2221, 299, 2221, 143, 2227, 142,
	4820, 141, 140, 139, 138, 136, 169, 4868, 1264, 135,
	134, 1264, 212, 133, 2224, 132, 131, 130, 129, 1382,
	4744, 4837, 4838, 858, 4856, 859, 67, 1264, 66, 125,
	1264, 4240, 4865, 126, 4866, 4755, 21, 1550, 46, 16,
	71, 72, 20, 15, 41, 1472, 103, 2215, 4894, 4933,
	117, 116, 115, 42, 112, 1672, 1672, 1672, 1548, 4779,
	40, 19, 18, 17, 110, 109, 4867, 108, 4797, 2363,
	39, 37, 13, 11, 43, 2163, 1723, 14, 4905, 4906,
	7, 1387, 202, 201, 204, 4873, 200, 2210, 4815, 4864,
	203, 102, 4942, 199, 104, 2224, 198, 101, 35, 12,
	193, 4970, 4425, 4929, 4913, 2519, 93, 196, 195, 1550,
	194, 192, 1672, 4961, 4925, 191, 4927, 4917, 4928, 4918,
	4953, 4957, 4969, 190, 4915, 94, 4911, 4916, 91, 189,
	97, 4815, 96, 188, 92, 95, 4990, 33, 8, 70,
	4926, 9, 4798, 2221, 4056, 1381, 120, 4642, 1264, 1264,
	121, 44, 89, 88, 2556, 87, 4947, 4948, 86, 4945,
	32, 4999, 4944, 5001, 4976, 1264, 2227, 69, 31, 4991,
	4973, 185, 2569, 2571, 4955, 236, 235, 234, 233, 4964,
	2730, 232, 231, 230, 4975, 229, 2575, 4968, 224, 4993,
	228, 1472, 1472, 4903, 226, 1472, 1472, 1383, 1472, 1472,
	2545, 2587, 2588, 2589, 4949, 4860, 1382, 1226, 225, 227,
	223, 249, 4998, 4995, 1382, 4992, 1264, 4775, 1264, 4997,
	1264, 248, 247, 3956, 5012, 5013, 246, 245, 1382, 4934,
	1387, 239, 238, 244, 243, 242, 241, 240, 237, 4987,
	5004, 252, 82, 1264, 222, 1387, 221, 220, 218, 2221,
	5048, 214, 217, 5046, 2730, 219, 216, 215, 213, 251,
	250, 5011, 4932, 5021, 83, 183, 184, 81, 182, 181,
	5015, 2224, 180, 179, 5033, 5034, 178, 5076, 5036, 5037,
	177, 5038, 5039, 176, 80, 187, 186, 30, 2, 1,
	0, 2227, 0, 4919, 0, 0, 4642, 1382, 5045, 1382,
	5044, 0, 0, 1387, 1387, 2798, 5075, 0, 5041, 0,
	0, 4642, 0, 0, 0, 0, 0, 0, 5068, 5069,
	0, 2063, 0, 0, 1387, 0, 5098, 1387, 0, 0,
	5124, 1672, 1381, 0, 5100, 5113, 5114, 0, 0, 0,
	1381, 1672, 0, 0, 0, 0, 0, 0, 5085, 0,
	5084, 0, 5086, 0, 1381, 0, 5130, 1264, 1264, 5132,
	0, 2210, 0, 0, 0, 0, 5092, 1264, 0, 4642,
	4642, 0, 0, 0, 0, 0, 1677, 1385, 0, 0,
	5111, 0, 0, 1677, 1383, 0, 0, 0, 5137, 0,
	4642, 4973, 1383, 4642, 0, 5122, 0, 0, 5097, 0,
	5129, 0, 0, 0, 0, 0, 1383, 0, 5138, 0,
	5140, 0, 5141, 0, 0, 5145, 5143, 2221, 0, 0,
	1264, 1264, 5155, 1381, 1264, 1381, 0, 0, 1672, 1472,
	5142, 1402, 1472, 5154, 0, 5163, 5164, 0, 5159, 0,
	0, 0, 792, 5146, 0, 5147, 0, 5185, 0, 0,
	5167, 5165, 5193, 5196, 0, 0, 792, 5175, 5176, 0,
	5237, 0, 0, 0, 2224, 0, 5209, 0, 1427, 0,
	5233, 0, 0, 0, 5184, 1383, 0, 1383, 5183, 0,
	297, 0, 297, 297, 0, 1456, 297, 1466, 0, 5202,
	0, 0, 1264, 1264, 1264, 5258, 5197, 0, 1480, 0,
	5201, 0, 5256, 2353, 0, 0, 865, 0, 2354, 865,
	2224, 2224, 5204, 0, 5198, 5205, 0, 0, 0, 0,
	5242, 5082, 0, 0, 0, 5246, 1385, 5249, 5203, 0,
	1264, 0, 872, 5257, 0, 0, 0, 5290, 5295, 2224,
	2224, 1385, 2221, 0, 5270, 5271, 0, 0, 0, 5273,
	0, 5272, 0, 0, 0, 1672, 0, 0, 0, 0,
	0, 297, 0, 297, 297, 1456, 0, 297, 297, 0,
	0, 0, 2224, 0, 5292, 5236, 1466, 5126, 0, 0,
	5128, 0, 0, 5335, 2363, 0, 5334, 0, 0, 5333,
	297, 5308, 1698, 0, 0, 5293, 5341, 0, 0, 1385,
	1385, 5316, 5343, 0, 0, 0, 5306, 1264, 1718, 0,
	5326, 5327, 5319, 0, 0, 1472, 0, 1727, 5291, 5347,
	1385, 5305, 0, 1385, 5307, 5356, 0, 2324, 2324, 2355,
	5340, 5339, 0, 0, 1751, 4953, 1466, 0, 0, 5353,
	0, 297, 297, 5349, 1456, 0, 5374, 2359, 0, 0,
	0, 2709, 5366, 5362, 5363, 5348, 1264, 0, 5370, 5365,
	5368, 0, 0, 0, 0, 0, 865, 0, 297, 297,
	5380, 5377, 5193, 5376, 5378, 5196, 0, 5395, 0, 0,
	1816, 0, 5385, 1387, 0, 1387, 5396, 5405, 0, 0,
	0, 1824, 0, 5403, 0, 0, 1017, 0, 5364, 0,
	0, 5394, 0, 0, 0, 0, 0, 5393, 0, 0,
	0, 5397, 5402, 5401, 0, 5404, 5411, 5406, 0, 0,
	0, 5243, 0, 0, 1472, 5244, 0, 0, 2356, 2361,
	0, 0, 0, 0, 5427, 0, 0, 0, 0, 0,
	5436, 5426, 0, 0, 1382, 0, 0, 5440, 0, 4642,
	0, 4642, 0, 5437, 0, 0, 0, 2215, 0, 0,
	1264, 1264, 0, 0, 5448, 0, 0, 0, 0, 1264,
	1264, 5435, 0, 5439, 5446, 0, 0, 297, 5451, 0,
	5460, 5442, 0, 5410, 5456, 197, 0, 5465, 0, 5471,
	5469, 5467, 10, 5475, 5464, 5473, 6, 5476, 5472, 2968,
	3280, 0, 0, 297, 5477, 0, 0, 5430, 5236, 0,
	5480, 5474, 5468, 0, 0, 1472, 5470, 5485, 2357, 5486,
	5490, 5487, 0, 5484, 5482, 0, 5483, 0, 5493, 0,
	0, 0, 5488, 0, 0, 0, 1264, 0, 2215, 0,
	0, 0, 5490, 5501, 0, 5457, 5458, 0, 0, 5459,
	5497, 0, 5499, 0, 0, 0, 0, 0, 1226, 1226,
	1226, 5494, 0, 2224, 2224, 0, 0, 0, 0, 5496,
	1381, 0, 2364, 0, 0, 0, 0, 293, 2224, 0,
	0, 3543, 3544, 0, 0, 0, 0, 0, 0, 0,
	3399, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 1382, 0,
	0, 0, 5498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 3399, 3425, 0, 0, 0, 0, 3774,
	0, 0, 0, 0, 2362, 3432, 0, 0, 0, 0,
	0, 3306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 1382, 1382, 3617, 3618,
	0, 3635, 3636, 3637, 0, 3296, 3294, 3775, 0, 1385,
	0, 1385, 0, 3298, 3300, 3290, 0, 1382, 0, 0,
	1382, 4513, 0, 0, 0, 0, 0, 0, 0, 4044,
	0, 0, 0, 0, 0, 775, 0, 0, 0, 0,
	0, 0, 0, 4042, 2215, 0, 0, 0, 0, 1381,
	0, 0, 0, 4035, 0, 2224, 297, 3316, 297, 1985,
	1986, 0, 297, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 1677, 1677, 0, 1698, 1456, 1466, 297, 3632,
	297, 2188, 0, 2016, 0, 0, 1985, 1986, 297, 0,
	792, 1988, 0, 3641, 3642, 3643, 3644, 297, 0, 0,
	0, 1383, 0, 2358, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 2268, 1383, 0, 1988, 0,
	2041, 0, 1381, 1381, 0, 0, 0, 297, 0, 1987,
	0, 0, 0, 0, 297, 0, 1985, 1986, 0, 0,
	2007, 0, 4046, 1381, 0, 0, 1381, 2041, 0, 2004,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	2016, 4037, 0, 0, 0, 0, 0, 865, 1988, 0,
	0, 0, 0, 0, 1383, 1383, 0, 4036, 0, 3623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1383, 0, 2041, 1383, 0,
	0, 0, 0, 0, 0, 872, 1987, 872, 0, 3292,
	0, 0, 0, 0, 0, 0, 0, 872, 872, 0,
	3308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 4045, 0, 2215, 0, 0,
	1993, 0, 0, 0, 3307, 3297, 3295, 3299, 3301, 3291,
	3293, 3309, 3311, 3639, 1677, 1677, 1677, 1677, 0, 0,
	0, 0, 3303, 3305, 3313, 0, 0, 1993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2215, 2215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 2017, 3633, 0, 0, 3317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2215, 2215, 0, 0, 0, 1993, 0, 0,
	0, 2015, 2017, 2002, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2215, 0, 0, 0, 0,
	0, 2224, 0, 0, 2224, 0, 2224, 2008, 1985, 1986,
	0, 0, 0, 0, 2029, 2030, 2031, 0, 0, 0,
	297, 2015, 2017, 0, 297, 0, 1382, 2038, 1382, 0,
	0, 0, 2016, 0, 2008, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 0, 0, 0, 0, 4043, 4038, 4039,
	4040, 4041, 3503, 297, 0, 1634, 0, 0, 0, 2041,
	0, 0, 0, 3310, 0, 0, 0, 0, 1987, 0,
	1219, 0, 297, 0, 2008, 0, 0, 0, 2038, 2007,
	0, 0, 0, 297, 0, 0, 0, 0, 2004, 4047,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3634, 0, 2038, 297, 0, 297, 0,
	0, 0, 775, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 865, 0, 0, 0,
	1017, 0, 0, 0, 0, 2968, 2968, 3318, 2014, 0,
	0, 0, 1381, 2224, 1381, 0, 3302, 3304, 3312, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 1456, 297, 2009, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 1226, 0, 0, 865, 1993,
	0, 0, 0, 1634, 0, 297, 0, 0, 0, 0,
	0, 2009, 0, 2608, 1383, 0, 1383, 0, 297, 297,
	0, 297, 0, 297, 0, 297, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 5213, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 2036, 0, 0, 0,
	2040, 0, 2645, 2015, 2017, 2646, 0, 2647, 0, 0,
	0, 2009, 5218, 0, 0, 0, 0, 0, 0, 2224,
	0, 0, 297, 297, 297, 297, 297, 2040, 0, 3629,
	3630, 3631, 2002, 2003, 0, 0, 3628, 3626, 3627, 3619,
	3620, 3621, 3622, 3624, 3625, 0, 2215, 2215, 0, 0,
	0, 2024, 845, 5228, 0, 0, 865, 0, 0, 0,
	0, 2215, 0, 4098, 4099, 0, 2008, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2968, 2968, 2968,
	2968, 0, 0, 0, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5224, 0, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 1634, 3934, 3935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	1461, 2806, 0, 4162, 4163, 4164, 4165, 4166, 4167, 4168,
	4169, 4170, 4171, 4172, 4173, 4174, 4175, 4176, 4177, 4178,
	4179, 4180, 4181, 0, 4185, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 5221, 0, 0, 0, 2224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4025,
	0, 0, 0, 0, 0, 0, 0, 2014, 2215, 0,
	0, 4049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 775, 1677, 1677, 0, 5214, 1643, 0,
	0, 1657, 1461, 2009, 0, 0, 5226, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 775, 0, 0,
	0, 0, 0, 0, 297, 0, 775, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 1466,
	0, 0, 0, 0, 0, 297, 0, 297, 1698, 2040,
	0, 0, 5227, 0, 0, 1461, 1461, 0, 0, 0,
	0, 0, 2224, 0, 1677, 1677, 1677, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 0, 1677, 0, 5232, 0, 0,
	0, 0, 0, 0, 0, 297, 1466, 0, 297, 792,
	0, 792, 0, 0, 0, 0, 0, 0, 3116, 0,
	0, 0, 0, 0, 297, 0, 0, 297, 0, 0,
	0, 297, 0, 297, 0, 0, 0, 2025, 1456, 0,
	297, 297, 0, 1466, 1466, 3132, 0, 0, 0, 0,
	297, 0, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 0,
	5219, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	175, 5229, 0, 1634, 0, 0, 0, 0, 0, 84,
	0, 52, 51, 0, 872, 872, 5225, 0, 872, 872,
	0, 0, 0, 0, 0, 5231, 0, 3175, 85, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 90, 5222, 0, 0,
	0, 0, 0, 297, 5220, 0, 0, 73, 0, 0,
	0, 0, 5230, 0, 54, 0, 173, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 865, 0,
	0, 0, 0, 865, 2215, 53, 0, 2215, 99, 2215,
	0, 0, 0, 0, 5215, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 74, 0, 0,
	3276, 1698, 0, 85, 0, 57, 0, 0, 0, 0,
	63, 0, 0, 0, 5223, 79, 0, 0, 5216, 0,
	0, 90, 0, 55, 0, 122, 0, 0, 0, 0,
	0, 106, 119, 0, 0, 0, 297, 3336, 0, 0,
	75, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 0, 0, 1698, 0, 0, 297,
	0, 0, 3276, 1634, 0, 0, 58, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3382, 0, 0, 0, 0, 0, 107, 0, 0,
	84, 3175, 0, 775, 0, 1011, 0, 2968, 2968, 0,
	0, 0, 1017, 3175, 0, 0, 2215, 0, 55, 85,
	122, 0, 0, 0, 0, 0, 106, 119, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 90, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4366, 4367, 0, 0, 0, 297, 1456, 297, 0, 0,
	0, 0, 4370, 0, 0, 0, 0, 3455, 297, 0,
	0, 1456, 0, 1456, 1657, 1456, 0, 0, 76, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 2968, 2968, 2968,
	2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968,
	2968, 2968, 2968, 2968, 2968, 2968, 2968, 0, 2968, 0,
	0, 1011, 2215, 297, 297, 297, 297, 1456, 1657, 1634,
	1456, 0, 0, 297, 0, 0, 122, 0, 297, 0,
	0, 0, 106, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3617, 3618, 111, 3635, 3636, 3637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 59, 4466, 0, 297, 0, 0,
	2569, 4472, 4473, 0, 0, 0, 0, 0, 0, 3617,
	3618, 62, 3635, 3636, 3637, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 107, 0,
	0, 0, 4107, 0, 64, 205, 0, 114, 0, 0,
	118, 0, 0, 0, 0, 0, 60, 0, 0, 1634,
	174, 0, 0, 0, 0, 3632, 0, 0, 61, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 111, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	3632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	2215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 1698, 0, 0, 0, 0,
	205, 0, 114, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 3623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 3090, 0, 211, 0,
	0, 0, 0, 1012, 0, 0, 260, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	3623, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 3640, 0, 0, 206, 4576, 4577, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 2500, 0, 3639,
	0, 209, 2021, 0, 3, 2215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 171, 114, 0,
	0, 118, 0, 0, 0, 0, 0, 2525, 0, 0,
	0, 0, 4823, 211, 3639, 0, 1249, 124, 0, 0,
	297, 260, 3633, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 253, 0, 1012,
	0, 0, 0, 0, 0, 166, 254, 0, 0, 0,
	206, 0, 0, 0, 0, 210, 297, 3633, 0, 0,
	0, 775, 0, 0, 0, 0, 775, 0, 0, 775,
	0, 0, 775, 775, 0, 0, 1801, 0, 775, 0,
	0, 0, 0, 0, 0, 261, 297, 0, 0, 0,
	0, 1226, 0, 0, 4876, 0, 0, 0, 297, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 297, 0,
	0, 0, 0, 171, 0, 0, 2569, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 260, 2038, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 297,
	297, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 206, 0, 0, 0,
	0, 210, 0, 1677, 0, 0, 0, 0, 0, 2656,
	2657, 0, 0, 3175, 3175, 297, 0, 3782, 3785, 3634,
	0, 0, 209, 0, 3175, 0, 2188, 4787, 0, 4789,
	4790, 4791, 0, 4793, 0, 3175, 2188, 0, 3175, 2188,
	0, 0, 2188, 0, 1183, 3782, 0, 0, 0, 0,
	0, 0, 0, 0, 3634, 0, 1204, 297, 297, 3785,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 0,
	3785, 0, 297, 0, 3858, 1677, 3858, 0, 0, 0,
	0, 0, 1456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1371, 0,
	0, 0, 0, 0, 0, 3175, 0, 3175, 5020, 3889,
	3175, 3785, 0, 0, 3175, 0, 4843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3785, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5052, 0, 1456, 0, 3629, 3630, 3631, 0, 0,
	297, 0, 3628, 3626, 3627, 3619, 3620, 3621, 3622, 3624,
	3625, 0, 0, 1634, 0, 0, 5074, 0, 297, 0,
	0, 3936, 0, 0, 3952, 3175, 0, 0, 297, 0,
	3629, 3630, 3631, 0, 0, 906, 1466, 3628, 3626, 3627,
	3619, 3620, 3621, 3622, 3624, 3625, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 0, 3382, 0, 0,
	1456, 917, 297, 0, 0, 3175, 1634, 775, 2021, 0,
	0, 0, 0, 0, 3175, 0, 0, 0, 0, 0,
	0, 1634, 919, 0, 2021, 4946, 0, 0, 0, 0,
	0, 0, 1461, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 918, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 4064, 0, 0, 0, 2021, 0, 0,
	0, 0, 0, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4071, 0, 0, 1461,
	1698, 0, 1677, 1226, 1456, 297, 0, 297, 0, 0,
	911, 0, 0, 1456, 0, 1226, 1456, 927, 0, 0,
	0, 0, 0, 0, 1985, 1986, 0, 1677, 0, 0,
	0, 0, 916, 0, 1461, 1461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 2016, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 1985, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 1986, 2021, 0,
	0, 0, 0, 2021, 0, 2041, 915, 2016, 0, 0,
	0, 0, 0, 0, 1987, 1988, 2968, 2021, 0, 0,
	2016, 0, 2021, 840, 4140, 2007, 0, 0, 1988, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 2041, 0, 0, 0, 0, 0,
	0, 913, 0, 1987, 0, 0, 0, 2041, 0, 0,
	0, 1643, 0, 0, 2007, 0, 1987, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 0, 2021, 0,
	0, 0, 4512, 0, 2021, 0, 0, 0, 2968, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 926, 2010, 2011, 2012, 2013, 0,
	0, 297, 297, 1634, 0, 1993, 0, 0, 0, 0,
	0, 4101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2569, 0, 0, 4096, 0, 775, 775, 0, 0,
	0, 0, 0, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 2010, 2011, 2012,
	2013, 0, 0, 0, 0, 0, 0, 1993, 0, 2015,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 2003,
	3617, 3618, 0, 3635, 3636, 3637, 0, 0, 2015, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	912, 2015, 2017, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 0, 2008, 0, 0, 0, 0, 2002, 2003, 0,
	0, 0, 0, 2021, 0, 0, 0, 0, 0, 0,
	2002, 2003, 0, 0, 0, 1634, 2021, 0, 1634, 0,
	0, 1657, 839, 124, 0, 0, 865, 0, 0, 0,
	0, 2008, 1461, 0, 0, 0, 0, 0, 922, 0,
	0, 3632, 2968, 0, 2008, 910, 0, 0, 0, 0,
	0, 0, 0, 4338, 0, 0, 4340, 4341, 0, 0,
	0, 0, 2972, 3858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 2021, 0, 297, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 1657, 0,
	1657, 0, 3276, 0, 0, 2968, 0, 1634, 907, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 3785,
	0, 297, 2038, 0, 1634, 792, 792, 1466, 0, 0,
	2968, 0, 0, 0, 0, 2038, 0, 0, 914, 0,
	0, 0, 0, 2014, 0, 0, 124, 0, 124, 0,
	124, 3623, 0, 841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 909, 0, 297, 3382, 0, 2009,
	3382, 2188, 0, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 2014, 4430, 0, 3276, 0, 0, 297, 0,
	924, 925, 297, 921, 297, 2014, 0, 0, 0, 297,
	0, 0, 0, 1204, 124, 124, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3175, 297,
	124, 2009, 124, 0, 0, 3639, 0, 0, 0, 0,
	1017, 3175, 0, 0, 0, 2040, 124, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 297, 0, 0, 0, 3785, 0, 3633, 3132,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994,
	1995, 0, 0, 4532, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1183, 0, 0, 297, 0, 0, 0,
	0, 0, 1698, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 297, 0,
	0, 0, 0, 0, 0, 3634, 0, 0, 0, 0,
	0, 0, 0, 0, 2061, 0, 0, 0, 2067, 0,
	0, 0, 1466, 1466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1466, 1466, 0,
	297, 1466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3175, 3175, 0, 3782, 0, 0, 3858, 3175,
	0, 0, 0, 0, 0, 0, 0, 4644, 0, 4644,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3175, 0, 2188, 0, 0, 0, 3782, 0, 1698,
	1698, 297, 3785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3785, 0, 297, 3785, 0,
	297, 0, 0, 3858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3175, 0, 3175, 297, 0, 2155,
	0, 2158, 0, 124, 3617, 3618, 0, 3635, 3636, 3637,
	0, 0, 0, 2021, 0, 0, 0, 0, 0, 0,
	0, 3629, 3630, 3631, 0, 0, 0, 4106, 3628, 3626,
	3627, 3619, 3620, 3621, 3622, 3624, 3625, 1634, 0, 0,
	0, 0, 0, 2021, 3175, 3175, 0, 0, 0, 0,
	3382, 3382, 0, 0, 0, 0, 0, 3782, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 1634, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 2021, 3632, 2525, 0, 2021, 2943,
	2944, 2945, 2946, 2939, 2940, 2941, 2942, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 0,
	0, 0, 0, 0, 2021, 0, 2021, 2021, 2021, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 2972, 2972,
	0, 0, 0, 0, 0, 0, 0, 0, 2919, 2920,
	2921, 2922, 0, 2021, 0, 3623, 0, 0, 0, 0,
	1634, 1634, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 2931, 2932, 2933, 2934, 2927, 2928, 2929, 2930,
	2935, 2936, 2937, 2938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 2021, 0, 1461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3175, 2188, 0, 2188, 0, 0, 4430, 1226, 3639,
	0, 0, 0, 0, 2021, 0, 297, 2021, 0, 0,
	2021, 0, 0, 2021, 0, 0, 4892, 0, 4892, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2915, 2916, 2917, 2918,
	2923, 2924, 2925, 2926, 0, 0, 0, 0, 0, 0,
	0, 0, 3633, 865, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 3858, 1698, 0, 1698, 1456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 3785, 0, 297,
	0, 1657, 0, 0, 0, 2021, 0, 0, 3638, 0,
	2972, 2972, 2972, 2972, 0, 0, 2021, 0, 2021, 0,
	0, 0, 0, 2021, 0, 0, 0, 175, 0, 0,
	0, 4430, 0, 0, 4644, 0, 84, 1698, 52, 51,
	0, 3175, 0, 2038, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 4984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 73, 0, 1204, 0, 1204, 0,
	0, 54, 0, 173, 0, 0, 0, 0, 0, 297,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 4140, 0, 0, 0, 0, 0, 3634,
	2141, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 56, 74, 0, 0, 0, 0, 0,
	0, 0, 57, 0, 0, 3858, 5043, 63, 0, 0,
	0, 0, 5463, 4430, 0, 0, 1634, 0, 0, 0,
	55, 0, 122, 0, 0, 0, 0, 0, 106, 119,
	0, 0, 124, 4644, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4644, 4644, 1634, 0,
	0, 0, 1183, 0, 0, 1183, 1183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4644, 0, 297,
	4644, 0, 0, 0, 0, 3629, 3630, 3631, 0, 0,
	2188, 0, 3628, 3626, 3627, 3619, 3620, 3621, 3622, 3624,
	3625, 1698, 0, 1698, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 1986, 0,
	0, 0, 0, 2791, 0, 76, 0, 0, 0, 0,
	0, 0, 1634, 0, 1466, 0, 0, 0, 0, 0,
	0, 2016, 1211, 1204, 0, 0, 0, 0, 5173, 1988,
	0, 0, 0, 2061, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 0, 4892, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	2021, 2021, 0, 2021, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 3175, 0, 0, 0, 0, 2007, 0,
	0, 0, 1461, 111, 1634, 0, 0, 2004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 1371, 0, 0, 0, 0, 0, 0, 62, 0,
	0, 0, 0, 65, 0, 0, 0, 2158, 0, 0,
	0, 4140, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 64, 205, 0, 114, 4095, 0, 118, 0, 5315,
	0, 0, 0, 60, 0, 0, 1698, 174, 0, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 2010, 2011,
	2012, 2013, 0, 0, 0, 124, 0, 259, 1993, 0,
	0, 0, 2525, 0, 0, 68, 0, 2021, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5328, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 2015, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2021, 2021, 4430,
	2972, 2972, 0, 0, 2021, 0, 0, 0, 0, 171,
	0, 2002, 2003, 0, 3638, 3638, 0, 0, 2021, 2021,
	0, 0, 0, 0, 0, 211, 0, 0, 2021, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 2008, 0, 0, 0, 253,
	0, 0, 0, 0, 2021, 0, 3175, 0, 254, 0,
	0, 0, 206, 0, 0, 0, 4644, 210, 4644, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972,
	2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972,
	0, 2972, 3638, 3638, 3638, 3638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3175, 0,
	0, 0, 0, 0, 0, 0, 1226, 2021, 0, 0,
	0, 0, 0, 0, 0, 3276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 1986, 0,
	0, 3175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3276, 2014, 0, 0, 0,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 124, 0, 0, 124, 0, 124, 0,
	0, 0, 2009, 0, 1461, 0, 0, 0, 0, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 2022, 2016, 0, 0, 0, 0, 2007, 0,
	0, 1988, 0, 0, 0, 0, 0, 2004, 0, 0,
	124, 0, 2035, 124, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	2041, 0, 0, 0, 2525, 0, 2021, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 1461, 0, 0, 0, 3532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1260, 0, 0, 0, 2010, 2011,
	2012, 2013, 0, 2021, 2021, 0, 124, 0, 1993, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990,
	1991, 1992, 1994, 1995, 0, 0, 296, 296, 296, 0,
	2010, 2011, 2012, 2013, 0, 0, 1475, 0, 0, 0,
	1993, 0, 2015, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 1211, 1211, 1211, 0, 0, 0, 0,
	0, 2002, 2003, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 2036, 0, 940,
	0, 0, 0, 0, 2015, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 84, 0,
	0, 0, 0, 1647, 2032, 0, 2033, 0, 0, 1663,
	0, 0, 0, 2002, 2003, 0, 0, 85, 0, 2791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 0, 90, 0, 0, 0, 1700,
	2061, 1706, 0, 1712, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2021, 2021, 2034, 0, 2021, 3638,
	3638, 2021, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 2021, 1807, 0, 1812, 0, 2023, 0, 1011,
	0, 0, 0, 0, 0, 2021, 1384, 0, 2038, 1826,
	0, 1831, 55, 0, 122, 0, 2014, 0, 0, 0,
	106, 119, 0, 0, 0, 0, 0, 0, 2021, 2021,
	2021, 2021, 2021, 0, 0, 0, 0, 0, 2021, 0,
	2021, 0, 2009, 3638, 3638, 3638, 3638, 3638, 3638, 3638,
	3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638,
	3638, 3638, 3638, 0, 0, 0, 3638, 0, 2014, 2021,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1897, 2021, 0, 1903, 0, 0, 107, 0, 0, 0,
	2021, 0, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1371, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 1371,
	2040, 0, 0, 0, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 2001, 2021, 1998, 1996, 1997, 1989, 1990,
	1991, 1992, 1994, 1995, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 2021, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 111, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 3592, 0, 0, 0, 3593, 0, 0, 0, 0,
	0, 84, 0, 0, 1985, 1986, 0, 0, 1461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 205, 0, 114, 0, 2016, 118,
	0, 0, 0, 0, 0, 0, 1988, 0, 90, 0,
	0, 0, 124, 124, 0, 124, 0, 0, 0, 0,
	2135, 2135, 2135, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 2021, 2041, 0, 1012, 0, 0,
	0, 0, 0, 166, 1987, 0, 0, 0, 0, 0,
	99, 0, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 124,
	124, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 2021, 261, 0, 0, 2021, 2021, 0, 0,
	2021, 2021, 1011, 0, 0, 2021, 0, 0, 0, 2021,
	0, 0, 0, 0, 2021, 0, 0, 122, 0, 0,
	0, 171, 0, 106, 119, 0, 0, 0, 0, 2972,
	0, 0, 3525, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 2011, 2012, 2013, 0,
	0, 253, 0, 0, 0, 1993, 0, 0, 0, 0,
	254, 0, 0, 0, 206, 0, 0, 0, 0, 210,
	1211, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2972, 0, 0, 0, 1371, 0, 0, 1204, 2015,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 2003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2021,
	0, 296, 0, 296, 296, 0, 0, 296, 0, 0,
	0, 0, 2008, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2021, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 296, 0, 296, 296, 0, 0, 296, 296,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 2021, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 2021, 2021, 3638, 2972, 0, 205, 0, 114,
	0, 2021, 118, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 2009,
	1012, 0, 0, 0, 0, 0, 166, 3638, 2972, 296,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 2021, 2972, 0, 0, 124, 0, 0, 0,
	2021, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 2021, 0, 2021, 1371, 1371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 2632, 296, 0,
	0, 0, 0, 254, 0, 0, 0, 206, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 3638, 0, 209, 0, 0, 2662, 0, 0, 2005,
	2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2021, 3638, 0, 0, 2021, 0, 0, 0,
	0, 0, 2703, 0, 2707, 0, 0, 0, 0, 0,
	0, 2721, 0, 0, 1211, 3638, 0, 0, 0, 0,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 0, 2773, 0, 2775,
	2776, 2777, 2778, 0, 0, 825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 0, 2802, 808, 0, 0, 0,
	0, 809, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 2853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2883, 2886, 2889,
	2892, 0, 0, 2898, 2899, 2900, 2901, 2902, 2903, 2904,
	0, 0, 0, 0, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 811, 0, 0, 0, 0,
	0, 2964, 0, 2975, 2977, 2982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 812, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 2157, 0, 1384,
	0, 0, 0, 296, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	2157, 296, 1371, 0, 0, 0, 0, 0, 0, 940,
	2021, 0, 813, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 0, 814, 807, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 815, 0, 0, 0, 0, 816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 1371,
	0, 0, 0, 2021, 0, 0, 0, 1371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 837, 0, 818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 838, 0, 819, 0, 0, 0,
	0, 296, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3339, 3340,
	0, 3342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 0, 296, 0, 124, 0, 0, 0,
	820, 0, 0, 0, 0, 835, 836, 0, 833, 0,
	0, 0, 0, 296, 0, 828, 0, 0, 821, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 296,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 822, 124, 829, 0,
	0, 0, 0, 0, 0, 0, 0, 823, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 0, 0, 0, 0, 832, 0,
	0, 0, 0, 0, 296, 0, 124, 0, 0, 0,
	0, 0, 0, 841, 0, 0, 0, 0, 0, 0,
	0, 2999, 0, 0, 826, 3466, 296, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 940,
	296, 0, 296, 0, 296, 0, 296, 0, 296, 0,
	0, 2022, 2016, 0, 0, 0, 2997, 0, 0, 0,
	1988, 3001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3002, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 296, 296, 296, 296, 296, 1987, 0,
	0, 2042, 2043, 0, 0, 0, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 1211, 0, 2004, 0,
	0, 0, 0, 0, 3003, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 3004, 0, 0, 0, 0, 0, 3526,
	3527, 0, 0, 0, 0, 3533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3547, 3548, 0, 0, 0, 0,
	2853, 0, 3005, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3571, 2026, 0, 3006, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 0, 3583, 0,
	0, 0, 3007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3008, 2032, 0, 2033, 0, 0, 0, 0,
	0, 0, 2002, 2003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3009, 0, 1384,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 2008, 0, 2791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 1388, 0, 0, 0, 0, 940, 0, 940, 2982,
	2982, 2982, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 2038, 3010, 0,
	0, 0, 0, 0, 3676, 0, 296, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 296, 0,
	0, 0, 296, 0, 296, 0, 0, 0, 1388, 0,
	0, 296, 296, 0, 0, 1388, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 2014, 124, 0,
	0, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	3011, 3012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3018, 0, 0,
	0, 0, 0, 2027, 124, 0, 0, 124, 1211, 0,
	296, 1388, 0, 0, 0, 0, 0, 0, 3014, 0,
	1211, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 3015, 0, 0, 0, 0, 296, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 825, 0, 0, 0, 0,
	0, 3815, 0, 0, 0, 3016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 296, 0, 0,
	0, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	3872, 3873, 0, 0, 810, 0, 0, 940, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 811, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 124, 0,
	0, 0, 124, 0, 0, 0, 0, 812, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 814, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 296, 0,
	0, 815, 0, 0, 0, 0, 816, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1388, 0, 1388, 0, 0, 0,
	0, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 0, 296, 296, 296, 296, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 2228, 0, 0, 0, 0, 0,
	0, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 827, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2721, 0,
	0, 0, 0, 0, 0, 4093, 4094, 0, 0, 4097,
	0, 0, 0, 4100, 0, 0, 0, 0, 0, 0,
	0, 0, 4104, 0, 0, 0, 0, 0, 0, 0,
	0, 4111, 0, 0, 0, 0, 3676, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 1388,
	0, 4124, 0, 818, 0, 0, 0, 0, 0, 0,
	0, 2022, 2016, 0, 0, 0, 0, 0, 0, 124,
	1988, 4147, 4148, 0, 4149, 4150, 4151, 0, 0, 0,
	0, 2035, 0, 0, 838, 0, 819, 0, 0, 0,
	0, 0, 4157, 0, 0, 0, 4159, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 2004, 4188,
	4189, 0, 839, 0, 0, 0, 0, 0, 0, 0,
	820, 0, 0, 0, 0, 835, 836, 4200, 833, 0,
	0, 0, 0, 0, 0, 828, 0, 0, 821, 0,
	0, 0, 4209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031,
	0, 0, 0, 0, 0, 0, 822, 0, 829, 2010,
	2011, 2012, 2013, 0, 2022, 2016, 0, 823, 0, 1993,
	1388, 1388, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 824, 2035, 0, 0, 0, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4274, 1384, 2041, 841, 0, 0, 0, 1388, 0, 0,
	0, 1987, 2026, 0, 826, 0, 2036, 0, 0, 0,
	0, 0, 2007, 2015, 2017, 0, 0, 0, 4292, 0,
	0, 2004, 0, 0, 0, 0, 1388, 1384, 0, 0,
	0, 0, 0, 2032, 0, 2033, 0, 0, 0, 0,
	0, 0, 2002, 2003, 0, 0, 0, 0, 0, 0,
	0, 0, 4323, 0, 0, 0, 0, 2157, 0, 0,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 1388, 0, 1388, 0, 1388, 2008, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4347, 4348, 1388, 1388, 0, 0, 0, 0, 0,
	0, 0, 2010, 2011, 2012, 2013, 0, 1388, 0, 0,
	0, 0, 1993, 0, 0, 0, 296, 0, 0, 1388,
	296, 296, 1388, 1388, 1388, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 296, 2038, 0, 2036,
	0, 0, 0, 0, 0, 0, 2015, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 2033, 0,
	0, 0, 0, 0, 0, 2002, 2003, 0, 296, 296,
	0, 2135, 296, 0, 0, 0, 0, 0, 0, 2157,
	0, 0, 0, 0, 2024, 0, 0, 2014, 0, 0,
	0, 0, 0, 296, 0, 0, 0, 0, 2135, 2008,
	0, 0, 0, 0, 0, 0, 0, 4463, 0, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2228, 2228, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 2034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	2038, 0, 0, 0, 0, 0, 4510, 4511, 0, 0,
	0, 296, 4515, 4516, 0, 0, 0, 4519, 4520, 0,
	0, 0, 0, 0, 0, 4524, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 4528, 0, 0, 296,
	0, 0, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4533, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 0, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 2009, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 1388, 0, 0, 0,
	2849, 0, 0, 1388, 2850, 0, 2027, 0, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 0, 0, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 2016, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 296, 0, 296, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 1211, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998,
	1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0,
	0, 4688, 0, 0, 0, 0, 0, 4538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1388, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 4723, 4724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2228, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 2036, 0, 0,
	0, 0, 1384, 1384, 2015, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 0, 0,
	0, 0, 0, 2002, 2003, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4810, 4811, 4812, 0, 2008, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2721, 0, 0, 4821,
	4822, 0, 0, 0, 0, 0, 0, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 4830, 4833, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 2022, 2016, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 1388, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 1388, 1987, 1388,
	0, 0, 0, 0, 0, 1388, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 1388, 1388, 2004, 0,
	0, 0, 0, 0, 4893, 0, 0, 0, 0, 0,
	0, 0, 0, 4901, 0, 0, 0, 0, 2014, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 4909, 0,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 0, 0, 4920, 0, 0,
	4922, 0, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 296, 0, 296, 0, 0, 0, 0,
	296, 0, 2026, 0, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 0, 932, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 2033, 0, 0, 0, 0,
	0, 0, 2002, 2003, 0, 0, 0, 932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 2024, 0, 296, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 2008, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5051, 0, 0, 0,
	5055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 2014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 2721, 0,
	0, 0, 0, 0, 0, 0, 0, 4833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 2027, 0, 0, 0, 0, 1388, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2157, 0,
	2157, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 1211, 0, 0, 1388, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 0, 296, 0,
	0, 296, 0, 0, 1388, 0, 0, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 2228, 0, 0, 0, 1388, 0,
	0, 0, 5269, 5269, 5269, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 0,
	5294, 0, 0, 0, 4109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 2228, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 2016, 0, 5269, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 298,
	298, 298, 0, 0, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 1388,
	0, 1987, 0, 298, 0, 0, 5388, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 1388, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 1388, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 2010, 2011, 2012, 2013, 0, 0, 0, 0,
	5269, 5452, 1993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1388, 0, 0, 0, 0, 2026, 0, 0, 0, 2036,
	0, 0, 1388, 0, 1388, 0, 2015, 2017, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 2033, 0,
	0, 0, 0, 0, 0, 2002, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 2157, 0, 0, 0, 0,
	0, 0, 0, 0, 2024, 0, 296, 0, 0, 0,
	0, 1388, 0, 0, 1388, 0, 0, 0, 0, 2008,
	0, 0, 0, 0, 0, 0, 0, 1985, 1986, 0,
	2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 2016, 0, 0, 0, 0, 0, 0, 0, 1988,
	296, 296, 0, 0, 0, 0, 0, 0, 2034, 0,
	2035, 0, 0, 0, 2228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 2023,
	0, 1551, 0, 1388, 0, 0, 0, 1987, 0, 0,
	2038, 0, 1673, 0, 0, 0, 0, 0, 2007, 0,
	1388, 0, 0, 0, 0, 0, 0, 2004, 0, 0,
	2228, 2228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 2157, 0, 0, 0, 0, 2228,
	2228, 0, 0, 0, 0, 0, 0, 0, 0, 2157,
	2014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2228, 0, 0, 296, 2009, 0, 0, 1673,
	0, 0, 0, 0, 0, 0, 1673, 0, 2010, 2011,
	2012, 2013, 0, 0, 0, 0, 0, 0, 1993, 1388,
	1388, 0, 1673, 0, 0, 0, 2027, 2157, 2157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2157, 0,
	296, 2157, 0, 0, 0, 1388, 0, 0, 0, 0,
	0, 2026, 2040, 0, 0, 2036, 0, 0, 0, 0,
	0, 0, 2015, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 2033, 0, 0, 0, 0, 0,
	0, 2002, 2003, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 296, 0,
	2025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998,
	1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3595, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 1388, 0, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2014, 0, 0, 0,
	0, 0, 0, 0, 2228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2228, 0,
	0, 0, 2009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 298, 0, 298, 298, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 1388, 0, 2040, 0,
	0, 1388, 1388, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1388, 0, 1388, 2198, 0, 0,
	0, 1388, 0, 1388, 0, 0, 2198, 2157, 0, 2157,
	0, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 1554, 298, 298, 0,
	0, 298, 298, 0, 1388, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 2228, 2025, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 0, 1999, 2000,
	2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990,
	1991, 1992, 1994, 1995, 0, 0, 0, 0, 1554, 0,
	0, 0, 0, 3594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 298, 0, 0, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1265, 1554, 0, 0, 0, 0, 0,
	0, 1554, 298, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1388, 0, 0, 1554, 0, 0,
	0, 0, 1388, 0, 0, 0, 1388, 1388, 0, 1388,
	0, 0, 0, 0, 0, 0, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1388, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1388, 0, 1388, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 1673, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1551, 0, 0, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1388, 1388, 0,
	0, 0, 0, 0, 2228, 0, 2228, 1673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 1673, 1388, 1673, 0, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 1673, 0, 0, 1388, 1388,
	1388, 1388, 1388, 1388, 1388, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1673, 0, 1388, 1673, 1673, 1673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2198, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 298, 298, 298, 1388, 0, 1388, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 0, 1388, 0, 965, 0, 298, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1377, 2228,
	0, 0, 0, 0, 0, 1985, 1986, 0, 2018, 2019,
	2020, 2029, 2030, 2031, 967, 0, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 2016,
	0, 0, 0, 0, 0, 1554, 0, 1988, 1388, 0,
	0, 0, 968, 0, 0, 0, 0, 969, 2035, 0,
	292, 292, 771, 0, 0, 0, 1388, 1388, 1388, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	990, 0, 0, 1551, 0, 1987, 0, 970, 0, 0,
	0, 0, 1388, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 988, 0, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1388, 0, 0, 1388, 0, 0, 0, 963, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 971, 0, 0, 1551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 992, 0,
	0, 0, 0, 840, 0, 0, 0, 2228, 0, 0,
	1551, 0, 0, 0, 0, 0, 2010, 2011, 2012, 2013,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 1554, 1554, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 1388, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 0, 1554, 991, 0, 1388, 298, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 0,
	2032, 0, 2033, 0, 0, 0, 298, 0, 0, 2002,
	2003, 0, 1554, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 0, 2024, 0,
	0, 0, 2228, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 298, 2008, 1388, 1388, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 1554,
	0, 1554, 985, 0, 0, 1388, 1551, 0, 1388, 0,
	0, 0, 1388, 972, 0, 0, 0, 0, 0, 1554,
	1554, 0, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 1554, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 1554, 973, 0, 1554, 1554,
	1554, 0, 0, 2023, 0, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 298, 298, 0, 298, 0, 298, 0, 298,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 960, 1551, 0, 982, 1388,
	0, 0, 1552, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 1673, 1674, 2014, 0, 298, 298, 298, 298,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 980, 0, 0,
	2009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 975, 0, 0, 0,
	976, 995, 0, 994, 0, 0, 0, 977, 0, 0,
	2027, 0, 0, 0, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 0, 0, 987, 0,
	0, 0, 0, 0, 996, 0, 993, 0, 0, 0,
	1674, 0, 0, 841, 0, 0, 2040, 1674, 0, 0,
	0, 0, 0, 0, 0, 0, 1673, 0, 0, 0,
	0, 0, 0, 1674, 0, 0, 1388, 0, 1673, 0,
	1673, 0, 0, 0, 0, 0, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1999, 2000, 2006, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 1985, 1986, 0, 2018, 2019, 2020,
	2029, 2030, 2031, 0, 1388, 0, 1388, 0, 0, 0,
	0, 0, 298, 0, 0, 1554, 0, 2022, 2016, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 2035, 0, 298,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 298,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 298, 0, 0, 0, 298, 0, 298, 0, 0,
	0, 0, 0, 0, 298, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1442, 0, 1442, 1442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 2011, 2012, 2013, 0,
	0, 1554, 0, 0, 0, 1993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 2026, 0,
	0, 0, 2036, 0, 0, 0, 1545, 0, 0, 2015,
	2017, 298, 1655, 1552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 2033, 0, 0, 0, 0, 0, 0, 2002, 2003,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	298, 1554, 0, 0, 0, 0, 0, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 2008, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 1806, 0, 0, 0, 0, 0,
	0, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 1552, 2023, 1551, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 1551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 1554, 0, 0, 0, 1551,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 1554, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 0, 0, 0, 0, 0, 298,
	0, 298, 1927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 2009,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 298, 298, 298,
	298, 0, 0, 0, 0, 0, 0, 298, 0, 2022,
	2016, 0, 298, 0, 0, 2040, 0, 0, 1988, 0,
	0, 0, 1674, 1674, 0, 0, 0, 0, 0, 2035,
	0, 0, 0, 1552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 0, 0, 2041, 0, 0,
	0, 298, 0, 0, 0, 0, 1987, 0, 0, 1674,
	1551, 0, 0, 0, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1674, 0,
	0, 0, 0, 2025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 2000, 2006, 2028, 2005,
	2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3590, 0, 0, 1674, 1673, 1674, 1673, 1674, 0, 0,
	1551, 0, 0, 0, 0, 0, 0, 932, 1673, 1673,
	0, 0, 0, 0, 0, 1674, 1674, 2010, 2011, 2012,
	2013, 0, 0, 0, 0, 0, 0, 1993, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 1674, 1674, 1674, 2173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2183, 0, 1655, 0, 0, 0, 0,
	2026, 1673, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 2015, 2017, 1673, 0, 1673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 2033, 0, 0, 0, 0, 0, 0,
	2002, 2003, 1442, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1551, 0, 2008, 1551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1552, 0, 0, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1551, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1554, 0,
	0, 1551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 1552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 2014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 2009, 0, 298, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 1552, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1552, 0, 0, 0, 0, 1551, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 298, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2198, 0, 0, 0, 298, 2509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1554, 0, 0, 0, 0,
	0, 2544, 0, 2544, 0, 2025, 0, 0, 0, 2551,
	0, 0, 0, 0, 0, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3589, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2579, 0,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 1554,
	0, 1554, 0, 0, 0, 1554, 0, 1552, 0, 0,
	2600, 0, 298, 1554, 1554, 0, 0, 1554, 0, 0,
	0, 0, 298, 0, 2616, 0, 2618, 0, 2620, 0,
	2622, 0, 2623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 1673, 0, 1673, 298, 0, 0, 0,
	0, 0, 0, 0, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 2652, 2653, 2654,
	0, 0, 0, 0, 0, 0, 0, 0, 1554, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 0, 0, 1554, 0, 298,
	1554, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 0, 0,
	0, 0, 1673, 1673, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 1673, 0, 1673, 0, 0,
	0, 0, 1673, 0, 1551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 0, 1554,
	0, 0, 0, 0, 0, 1551, 0, 0, 0, 1674,
	0, 1674, 0, 0, 0, 0, 1554, 1674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1674, 1674,
	0, 0, 0, 0, 0, 0, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	2016, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3061, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 1551, 1551, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1673, 1673,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 3118,
	0, 0, 1442, 0, 0, 0, 1442, 0, 1442, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 2011, 2012,
	2013, 0, 0, 0, 0, 2532, 0, 1993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 0, 0, 0, 2036, 0, 1551, 0, 0, 0,
	0, 2015, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 2033, 0, 0, 0, 0, 0, 0,
	2002, 2003, 0, 0, 0, 0, 0, 0, 1673, 1673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2008, 0, 0, 1554, 1554, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 1655, 0, 0, 0, 298, 0, 0, 0, 1551,
	0, 0, 0, 0, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 1673,
	1673, 1673, 1673, 1673, 1673, 1673, 0, 0, 0, 0,
	298, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	298, 0, 0, 1551, 0, 2038, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 298, 0, 298, 0,
	0, 0, 0, 298, 3358, 0, 0, 0, 0, 1554,
	0, 1552, 0, 1551, 0, 2532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 0, 0, 1554, 1554, 1554,
	0, 0, 0, 0, 0, 2014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1551, 0, 1673, 0,
	1554, 0, 1554, 0, 1552, 0, 298, 1554, 0, 1554,
	3430, 2009, 0, 0, 0, 0, 0, 0, 0, 1552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3442, 0, 3445, 0, 0, 0, 0, 0, 0, 0,
	1554, 2027, 0, 0, 0, 1551, 0, 0, 0, 0,
	1552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3484, 1655,
	3486, 1655, 0, 0, 0, 0, 0, 0, 3493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1673, 1673,
	0, 0, 0, 0, 1442, 0, 0, 0, 0, 0,
	0, 0, 3522, 0, 0, 2025, 0, 0, 0, 0,
	0, 0, 1554, 1554, 0, 1554, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 1554, 1554, 0, 0, 0, 0, 0,
	0, 1551, 2850, 0, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 0,
	0, 1552, 0, 0, 298, 0, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	2016, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2035,
	0, 0, 0, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 1554, 0,
	0, 298, 0, 0, 298, 1674, 1987, 1674, 0, 0,
	0, 1552, 0, 0, 0, 0, 0, 2007, 0, 1674,
	1674, 1554, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 1554, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 2010, 2011, 2012,
	2013, 0, 0, 0, 1554, 298, 0, 1993, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 1554, 1554, 1554, 1554, 1554, 1554,
	1554, 0, 0, 1552, 0, 0, 1552, 0, 0, 0,
	2026, 0, 0, 0, 2036, 0, 0, 0, 1554, 0,
	0, 2015, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 2033, 0, 0, 0, 0, 1554, 0,
	2002, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 3724, 0, 0, 0, 0, 0, 0,
	1673, 0, 0, 0, 2008, 1552, 0, 0, 0, 0,
	0, 1554, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1442, 0, 0, 0, 1655, 1655, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	3778, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3834, 3836, 0, 0, 2532, 1673, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 2014, 0, 0, 0, 0,
	0, 0, 1554, 1554, 1554, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 0, 0, 0, 0, 0, 0, 0, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 2022, 2016, 0, 0, 1554, 0, 0, 1554,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 0, 2040, 0, 0,
	2041, 0, 0, 298, 298, 0, 2022, 2016, 0, 1987,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 2035, 0, 0, 2004,
	0, 0, 0, 3974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 1674, 1674, 0, 1674, 0, 5174, 0,
	2010, 2011, 2012, 2013, 0, 1674, 0, 0, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 2011, 2012, 2013, 0, 0,
	4077, 0, 1655, 2026, 1993, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 0, 0, 0, 1554, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 1554, 0,
	4091, 0, 0, 2002, 2003, 1674, 0, 2026, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 2015, 2017,
	0, 0, 2024, 0, 0, 0, 0, 0, 1674, 0,
	0, 0, 0, 1674, 1674, 1674, 0, 2008, 2032, 0,
	2033, 0, 0, 0, 0, 0, 0, 2002, 2003, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 1674, 0,
	0, 0, 0, 1674, 0, 1552, 2024, 0, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 1554, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 1552, 1552,
	0, 1552, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 1674,
	1674, 0, 0, 0, 0, 0, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 5170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 0, 0, 2532, 0, 0, 1674,
	1674, 0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 0, 0, 0, 5070, 0, 0, 0, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	0, 4414, 0, 0, 0, 0, 0, 0, 0, 0,
	1552, 4424, 2022, 2016, 0, 1674, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 2532, 0, 2532,
	0, 0, 2035, 0, 4445, 0, 0, 0, 0, 0,
	1674, 1674, 1674, 1674, 1674, 1674, 1674, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1552, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1552, 1985, 1986, 4490, 2018, 2019,
	2020, 2029, 2030, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 2016,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 2035, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 1987, 0, 0, 0, 0,
	1993, 0, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 2004, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 0, 0,
	0, 0, 0, 2002, 2003, 0, 0, 0, 0, 0,
	1552, 0, 0, 0, 0, 0, 2010, 2011, 2012, 2013,
	0, 0, 2024, 0, 0, 0, 1993, 0, 1674, 1674,
	1674, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 1552, 0, 0, 1674, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 2033, 0, 0, 0, 4664, 2023, 0, 2002,
	2003, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 2532, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 2022, 2016, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 2038, 2532, 0, 0, 1987, 0,
	0, 0, 0, 0, 2027, 0, 4767, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2014, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 0, 0, 0, 0,
	2009, 0, 0, 0, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 0, 0, 1993,
	2027, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 2040, 0, 0, 0,
	0, 5019, 2026, 0, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 2033, 0, 0, 0, 0,
	0, 4878, 2002, 2003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 0, 2008, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1999, 2000, 2006, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 0, 0, 0, 0, 0, 5018, 0, 0,
	0, 0, 0, 0, 2532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 1674, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	2544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5010, 1655, 0, 2014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 5131, 0, 0, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 0,
	4819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	0, 0, 5187, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 1555,
	314, 315, 1556, 1557, 1558, 0, 1559, 715, 1560, 1561,
	1562, 316, 1563, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 1564, 720, 329, 330, 331, 332, 333, 334, 335,
	1565, 1566, 5251, 336, 721, 722, 723, 1567, 337, 338,
	724, 1568, 1635, 1569, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 1570, 348, 349, 350, 347, 351, 1571,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 1572,
	360, 361, 362, 1328, 363, 364, 365, 1573, 1574, 1576,
	1575, 1577, 1578, 1579, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 1580, 376, 378, 372, 374, 1581,
	377, 375, 379, 1582, 380, 381, 382, 1583, 1584, 383,
	384, 385, 1585, 386, 387, 388, 1586, 389, 390, 391,
	1587, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 1588,
	303, 1589, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 1590, 411, 412, 413, 1591, 414,
	415, 1592, 1329, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 1593, 428, 733,
	1594, 734, 429, 1595, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 1331, 437, 438, 439, 1596,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 1597, 1330, 738, 448, 530, 449, 739, 740,
	1598, 741, 1599, 450, 451, 453, 1332, 742, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 1600, 463, 465, 464, 1601, 467, 743,
	466, 1335, 468, 469, 1336, 1602, 470, 471, 472, 473,
	474, 475, 478, 1603, 1604, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1605, 305, 1339, 524,
	525, 526, 527, 1606, 744, 528, 745, 531, 532, 1607,
	0, 533, 0, 534, 1608, 1609, 536, 537, 538, 1610,
	1611, 539, 540, 746, 1340, 541, 1341, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 1612, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 1613, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 1614, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 1615, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 1616, 628, 629, 627, 630, 631, 632, 1617, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 1618, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 1619,
	665, 666, 0, 660, 651, 1620, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 1621, 675, 758, 759, 760,
	761, 1622, 687, 1623, 676, 678, 679, 680, 681, 762,
	682, 763, 1624, 683, 684, 685, 686, 677, 688, 689,
	1625, 1626, 690, 691, 693, 695, 696, 692, 694, 697,
	1627, 698, 1628, 0, 699, 700, 701, 764, 765, 766,
	1629, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	1630, 1631, 1632, 1633, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 0, 0, 0, 0, 0,
	3039, 0, 0, 0, 0, 0, 0, 0, 0, 3040,
	306, 307, 309, 308, 310, 311, 312, 313, 1555, 314,
	315, 1556, 1557, 1558, 0, 1559, 715, 1560, 1561, 1562,
	316, 1563, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	1564, 720, 329, 330, 331, 332, 333, 334, 335, 1565,
	1566, 0, 336, 721, 722, 723, 1567, 337, 338, 724,
	1568, 1635, 1569, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 1570, 348, 349, 350, 347, 351, 1571, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 1572, 360,
	361, 362, 1328, 363, 364, 365, 1573, 1574, 1576, 1575,
	1577, 1578, 1579, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 1580, 376, 378, 372, 374, 1581, 377,
	375, 379, 1582, 380, 381, 382, 1583, 1584, 383, 384,
	385, 1585, 386, 387, 388, 1586, 389, 390, 391, 1587,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 1588, 303,
	1589, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 1590, 411, 412, 413, 1591, 414, 415,
	1592, 1329, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 1593, 428, 733, 1594,
	734, 429, 1595, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 1331, 437, 438, 439, 1596, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 1597, 1330, 738, 448, 530, 449, 739, 740, 1598,
	741, 1599, 450, 451, 453, 1332, 742, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 1600, 463, 465, 464, 1601, 467, 743, 466,
	1335, 468, 469, 1336, 1602, 470, 471, 472, 473, 474,
	475, 478, 1603, 1604, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1605, 305, 1339, 524, 525,
	526, 527, 1606, 744, 528, 745, 531, 532, 1607, 0,
	533, 0, 534, 1608, 1609, 536, 537, 538, 1610, 1611,
	539, 540, 746, 1340, 541, 1341, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	1612, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 1613, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 1614, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 1615, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	1616, 628, 629, 627, 630, 631, 632, 1617, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 1618, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 1619, 665,
	666, 0, 660, 651, 1620, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 1621, 675, 758, 759, 760, 761,
	1622, 687, 1623, 676, 678, 679, 680, 681, 762, 682,
	763, 1624, 683, 684, 685, 686, 677, 688, 689, 1625,
	1626, 690, 691, 693, 695, 696, 692, 694, 697, 1627,
	698, 1628, 0, 699, 700, 701, 764, 765, 766, 1629,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1630,
	1631, 1632, 1633, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 4118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4120, 306, 307, 309, 308,
	310, 311, 312, 313, 1555, 314, 315, 1556, 1557, 1558,
	0, 1559, 715, 1560, 1561, 1562, 316, 1563, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 1564, 720, 329, 330,
	331, 332, 333, 334, 335, 1565, 1566, 0, 336, 721,
	722, 723, 1567, 337, 338, 724, 1568, 1635, 1569, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 1570, 348,
	349, 350, 347, 351, 1571, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 1572, 360, 361, 362, 1328, 363,
	364, 365, 1573, 1574, 1576, 1575, 1577, 1578, 1579, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 1580,
	376, 378, 372, 374, 1581, 377, 375, 379, 1582, 380,
	381, 382, 1583, 1584, 383, 384, 385, 1585, 386, 387,
	388, 1586, 389, 390, 391, 1587, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 1588, 303, 1589, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 1590,
	411, 412, 413, 1591, 414, 415, 1592, 1329, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 1593, 428, 733, 1594, 734, 429, 1595, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	1331, 437, 438, 439, 1596, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 1597, 1330, 738,
	448, 530, 449, 739, 740, 1598, 741, 1599, 450, 451,
	453, 1332, 742, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 1600, 463,
	465, 464, 1601, 467, 743, 466, 1335, 468, 469, 1336,
	1602, 470, 471, 472, 473, 474, 475, 478, 1603, 1604,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1605, 305, 1339, 524, 525, 526, 527, 1606, 744,
	528, 745, 531, 532, 1607, 0, 533, 0, 534, 1608,
	1609, 536, 537, 538, 1610, 1611, 539, 540, 746, 1340,
	541, 1341, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 1612, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 1613, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 1614, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 1615, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 1616, 628, 629, 627,
	630, 631, 632, 1617, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 1618, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 1619, 665, 666, 0, 660, 651,
	1620, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	1621, 675, 758, 759, 760, 761, 1622, 687, 1623, 676,
	678, 679, 680, 681, 762, 682, 763, 1624, 683, 684,
	685, 686, 677, 688, 689, 1625, 1626, 690, 691, 693,
	695, 696, 692, 694, 697, 1627, 698, 1628, 0, 699,
	700, 701, 764, 765, 766, 1629, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1630, 1631, 1632, 1633, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4568, 306, 307, 309, 308,
	310, 311, 312, 313, 1555, 314, 315, 1556, 1557, 1558,
	0, 1559, 715, 1560, 1561, 1562, 316, 1563, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 1564, 720, 329, 330,
	331, 332, 333, 334, 335, 1565, 1566, 0, 336, 721,
	722, 723, 1567, 337, 338, 724, 1568, 1635, 1569, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 1570, 348,
	349, 350, 347, 351, 1571, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 1572, 360, 361, 362, 1328, 363,
	364, 365, 1573, 1574, 1576, 1575, 1577, 1578, 1579, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 1580,
	376, 378, 372, 374, 1581, 377, 375, 379, 1582, 380,
	381, 382, 1583, 1584, 383, 384, 385, 1585, 386, 387,
	388, 1586, 389, 390, 391, 1587, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 1588, 303, 1589, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 1590,
	411, 412, 413, 1591, 414, 415, 1592, 1329, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 1593, 428, 733, 1594, 734, 429, 1595, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	1331, 437, 438, 439, 1596, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 1597, 1330, 738,
	448, 530, 449, 739, 740, 1598, 741, 1599, 450, 451,
	453, 1332, 742, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 1600, 463,
	465, 464, 1601, 467, 743, 466, 1335, 468, 469, 1336,
	1602, 470, 471, 472, 473, 474, 475, 478, 1603, 1604,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1605, 305, 1339, 524, 525, 526, 527, 1606, 744,
	528, 745, 531, 532, 1607, 0, 533, 0, 534, 1608,
	1609, 536, 537, 538, 1610, 1611, 539, 540, 746, 1340,
	541, 1341, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 1612, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 1613, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 1614, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 1615, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 1616, 628, 629, 627,
	630, 631, 632, 1617, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 1618, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 1619, 665, 666, 0, 660, 651,
	1620, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	1621, 675, 758, 759, 760, 761, 1622, 687, 1623, 676,
	678, 679, 680, 681, 762, 682, 763, 1624, 683, 684,
	685, 686, 677, 688, 689, 1625, 1626, 690, 691, 693,
	695, 696, 692, 694, 697, 1627, 698, 1628, 0, 699,
	700, 701, 764, 765, 766, 1629, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1630, 1631, 1632, 1633, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4566, 306, 307, 309, 308,
	310, 311, 312, 313, 1555, 314, 315, 1556, 1557, 1558,
	0, 1559, 715, 1560, 1561, 1562, 316, 1563, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 1564, 720, 329, 330,
	331, 332, 333, 334, 335, 1565, 1566, 0, 336, 721,
	722, 723, 1567, 337, 338, 724, 1568, 1635, 1569, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 1570, 348,
	349, 350, 347, 351, 1571, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 1572, 360, 361, 362, 1328, 363,
	364, 365, 1573, 1574, 1576, 1575, 1577, 1578, 1579, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 1580,
	376, 378, 372, 374, 1581, 377, 375, 379, 1582, 380,
	381, 382, 1583, 1584, 383, 384, 385, 1585, 386, 387,
	388, 1586, 389, 390, 391, 1587, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 1588, 303, 1589, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 1590,
	411, 412, 413, 1591, 414, 415, 1592, 1329, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 1593, 428, 733, 1594, 734, 429, 1595, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	1331, 437, 438, 439, 1596, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 1597, 1330, 738,
	448, 530, 449, 739, 740, 1598, 741, 1599, 450, 451,
	453, 1332, 742, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 1600, 463,
	465, 464, 1601, 467, 743, 466, 1335, 468, 469, 1336,
	1602, 470, 471, 472, 473, 474, 475, 478, 1603, 1604,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1605, 305, 1339, 524, 525, 526, 527, 1606, 744,
	528, 745, 531, 532, 1607, 0, 533, 0, 534, 1608,
	1609, 536, 537, 538, 1610, 1611, 539, 540, 746, 1340,
	541, 1341, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 1612, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 1613, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 1614, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 1615, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 1616, 628, 629, 627,
	630, 631, 632, 1617, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 1618, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 1619, 665, 666, 0, 660, 651,
	1620, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	1621, 675, 758, 759, 760, 761, 1622, 687, 1623, 676,
	678, 679, 680, 681, 762, 682, 763, 1624, 683, 684,
	685, 686, 677, 688, 689, 1625, 1626, 690, 691, 693,
	695, 696, 692, 694, 697, 1627, 698, 1628, 0, 699,
	700, 701, 764, 765, 766, 1629, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1630, 1631, 1632, 1633, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4816,
	306, 307, 309, 308, 310, 311, 312, 313, 1555, 314,
	315, 1556, 1557, 1558, 0, 1559, 715, 1560, 1561, 1562,
	316, 1563, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	1564, 720, 329, 330, 331, 332, 333, 334, 335, 1565,
	1566, 0, 336, 721, 722, 723, 1567, 337, 338, 724,
	1568, 1635, 1569, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 1570, 348, 349, 350, 347, 351, 1571, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 1572, 360,
	361, 362, 1328, 363, 364, 365, 1573, 1574, 1576, 1575,
	1577, 1578, 1579, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 1580, 376, 378, 372, 374, 1581, 377,
	375, 379, 1582, 380, 381, 382, 1583, 1584, 383, 384,
	385, 1585, 386, 387, 388, 1586, 389, 390, 391, 1587,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 1588, 303,
	1589, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 1590, 411, 412, 413, 1591, 414, 415,
	1592, 1329, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 1593, 428, 733, 1594,
	734, 429, 1595, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 1331, 437, 438, 439, 1596, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 1597, 1330, 738, 448, 530, 449, 739, 740, 1598,
	741, 1599, 450, 451, 453, 1332, 742, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 1600, 463, 465, 464, 1601, 467, 743, 466,
	1335, 468, 469, 1336, 1602, 470, 471, 472, 473, 474,
	475, 478, 1603, 1604, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1605, 305, 1339, 524, 525,
	526, 527, 1606, 744, 528, 745, 531, 532, 1607, 0,
	533, 0, 534, 1608, 1609, 536, 537, 538, 1610, 1611,
	539, 540, 746, 1340, 541, 1341, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	1612, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 1613, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 1614, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 1615, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	1616, 628, 629, 627, 630, 631, 632, 1617, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 1618, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 1619, 665,
	666, 0, 660, 651, 1620, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 1621, 675, 758, 759, 760, 761,
	1622, 687, 1623, 676, 678, 679, 680, 681, 762, 682,
	763, 1624, 683, 684, 685, 686, 677, 688, 689, 1625,
	1626, 690, 691, 693, 695, 696, 692, 694, 697, 1627,
	698, 1628, 0, 699, 700, 701, 764, 765, 766, 1629,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1630,
	1631, 1632, 1633, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4673, 306, 307, 309, 308, 310, 311,
	312, 313, 1555, 314, 315, 1556, 1557, 1558, 0, 1559,
	715, 1560, 1561, 1562, 316, 1563, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 1564, 720, 329, 330, 331, 332,
	333, 334, 335, 1565, 1566, 0, 336, 721, 722, 723,
	1567, 337, 338, 724, 1568, 1635, 1569, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 1570, 348, 349, 350,
	347, 351, 1571, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 1572, 360, 361, 362, 1328, 363, 364, 365,
	1573, 1574, 1576, 1575, 1577, 1578, 1579, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 1580, 376, 378,
	372, 374, 1581, 377, 375, 379, 1582, 380, 381, 382,
	1583, 1584, 383, 384, 385, 1585, 386, 387, 388, 1586,
	389, 390, 391, 1587, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 1588, 303, 1589, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 1590, 411, 412,
	413, 1591, 414, 415, 1592, 1329, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	1593, 428, 733, 1594, 734, 429, 1595, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 1331, 437,
	438, 439, 1596, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 1597, 1330, 738, 448, 530,
	449, 739, 740, 1598, 741, 1599, 450, 451, 453, 1332,
	742, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 1600, 463, 465, 464,
	1601, 467, 743, 466, 1335, 468, 469, 1336, 1602, 470,
	471, 472, 473, 474, 475, 478, 1603, 1604, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1605,
	305, 1339, 524, 525, 526, 527, 1606, 744, 528, 745,
	531, 532, 1607, 0, 533, 0, 534, 1608, 1609, 536,
	537, 538, 1610, 1611, 539, 540, 746, 1340, 541, 1341,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 1612, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	1613, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 1614,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 1615, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 1616, 628, 629, 627, 630, 631,
	632, 1617, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	1618, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 1619, 665, 666, 0, 660, 651, 1620, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 1621, 675,
	758, 759, 760, 761, 1622, 687, 1623, 676, 678, 679,
	680, 681, 762, 682, 763, 1624, 683, 684, 685, 686,
	677, 688, 689, 1625, 1626, 690, 691, 693, 695, 696,
	692, 694, 697, 1627, 698, 1628, 0, 699, 700, 701,
	764, 765, 766, 1629, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 1630, 1631, 1632, 1633, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4492, 306, 307,
	309, 308, 310, 311, 312, 313, 1555, 314, 315, 1556,
	1557, 1558, 0, 1559, 715, 1560, 1561, 1562, 316, 1563,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 1564, 720,
	329, 330, 331, 332, 333, 334, 335, 1565, 1566, 0,
	336, 721, 722, 723, 1567, 337, 338, 724, 1568, 1635,
	1569, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	1570, 348, 349, 350, 347, 351, 1571, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 1572, 360, 361, 362,
	1328, 363, 364, 365, 1573, 1574, 1576, 1575, 1577, 1578,
	1579, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 1580, 376, 378, 372, 374, 1581, 377, 375, 379,
	1582, 380, 381, 382, 1583, 1584, 383, 384, 385, 1585,
	386, 387, 388, 1586, 389, 390, 391, 1587, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 1588, 303, 1589, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 1590, 411, 412, 413, 1591, 414, 415, 1592, 1329,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 1593, 428, 733, 1594, 734, 429,
	1595, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 1331, 437, 438, 439, 1596, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 1597,
	1330, 738, 448, 530, 449, 739, 740, 1598, 741, 1599,
	450, 451, 453, 1332, 742, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	1600, 463, 465, 464, 1601, 467, 743, 466, 1335, 468,
	469, 1336, 1602, 470, 471, 472, 473, 474, 475, 478,
	1603, 1604, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1605, 305, 1339, 524, 525, 526, 527,
	1606, 744, 528, 745, 531, 532, 1607, 0, 533, 0,
	534, 1608, 1609, 536, 537, 538, 1610, 1611, 539, 540,
	746, 1340, 541, 1341, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 1612, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 1613, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 1614, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 1615,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 1616, 628,
	629, 627, 630, 631, 632, 1617, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 1618, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 1619, 665, 666, 0,
	660, 651, 1620, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 1621, 675, 758, 759, 760, 761, 1622, 687,
	1623, 676, 678, 679, 680, 681, 762, 682, 763, 1624,
	683, 684, 685, 686, 677, 688, 689, 1625, 1626, 690,
	691, 693, 695, 696, 692, 694, 697, 1627, 698, 1628,
	0, 699, 700, 701, 764, 765, 766, 1629, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 1630, 1631, 1632,
	1633, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4136, 306, 307, 309, 308, 310, 311, 312, 313,
	1555, 314, 315, 1556, 1557, 1558, 0, 1559, 715, 1560,
	1561, 1562, 316, 1563, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 1564, 720, 329, 330, 331, 332, 333, 334,
	335, 1565, 1566, 0, 336, 721, 722, 723, 1567, 337,
	338, 724, 1568, 1635, 1569, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 1570, 348, 349, 350, 347, 351,
	1571, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	1572, 360, 361, 362, 1328, 363, 364, 365, 1573, 1574,
	1576, 1575, 1577, 1578, 1579, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 1580, 376, 378, 372, 374,
	1581, 377, 375, 379, 1582, 380, 381, 382, 1583, 1584,
	383, 384, 385, 1585, 386, 387, 388, 1586, 389, 390,
	391, 1587, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	1588, 303, 1589, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 1590, 411, 412, 413, 1591,
	414, 415, 1592, 1329, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 1593, 428,
	733, 1594, 734, 429, 1595, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 1331, 437, 438, 439,
	1596, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 1597, 1330, 738, 448, 530, 449, 739,
	740, 1598, 741, 1599, 450, 451, 453, 1332, 742, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 1600, 463, 465, 464, 1601, 467,
	743, 466, 1335, 468, 469, 1336, 1602, 470, 471, 472,
	473, 474, 475, 478, 1603, 1604, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1605, 305, 1339,
	524, 525, 526, 527, 1606, 744, 528, 745, 531, 532,
	1607, 0, 533, 0, 534, 1608, 1609, 536, 537, 538,
	1610, 1611, 539, 540, 746, 1340, 541, 1341, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 1612, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 1613, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 1614, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 1615, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 1616, 628, 629, 627, 630, 631, 632, 1617,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 1618, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	1619, 665, 666, 0, 660, 651, 1620, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 1621, 675, 758, 759,
	760, 761, 1622, 687, 1623, 676, 678, 679, 680, 681,
	762, 682, 763, 1624, 683, 684, 685, 686, 677, 688,
	689, 1625, 1626, 690, 691, 693, 695, 696, 692, 694,
	697, 1627, 698, 1628, 0, 699, 700, 701, 764, 765,
	766, 1629, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 1630, 1631, 1632, 1633, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3932, 306, 307, 309, 308,
	310, 311, 312, 313, 1555, 314, 315, 1556, 1557, 1558,
	0, 1559, 715, 1560, 1561, 1562, 316, 1563, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 1564, 720, 329, 330,
	331, 332, 333, 334, 335, 1565, 1566, 0, 336, 721,
	722, 723, 1567, 337, 338, 724, 1568, 1635, 1569, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 1570, 348,
	349, 350, 347, 351, 1571, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 1572, 360, 361, 362, 1328, 363,
	364, 365, 1573, 1574, 1576, 1575, 1577, 1578, 1579, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 1580,
	376, 378, 372, 374, 1581, 377, 375, 379, 1582, 380,
	381, 382, 1583, 1584, 383, 384, 385, 1585, 386, 387,
	388, 1586, 389, 390, 391, 1587, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 1588, 303, 1589, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 1590,
	411, 412, 413, 1591, 414, 415, 1592, 1329, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 1593, 428, 733, 1594, 734, 429, 1595, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	1331, 437, 438, 439, 1596, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 1597, 1330, 738,
	448, 530, 449, 739, 740, 1598, 741, 1599, 450, 451,
	453, 1332, 742, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 1600, 463,
	465, 464, 1601, 467, 743, 466, 1335, 468, 469, 1336,
	1602, 470, 471, 472, 473, 474, 475, 478, 1603, 1604,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1605, 305, 1339, 524, 525, 526, 527, 1606, 744,
	528, 745, 531, 532, 1607, 0, 533, 0, 534, 1608,
	1609, 536, 537, 538, 1610, 1611, 539, 540, 746, 1340,
	541, 1341, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 1612, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 1613, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 1614, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 1615, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 1616, 628, 629, 627,
	630, 631, 632, 1617, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 1618, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 1619, 665, 666, 0, 660, 651,
	1620, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	1621, 675, 758, 759, 760, 761, 1622, 687, 1623, 676,
	678, 679, 680, 681, 762, 682, 763, 1624, 683, 684,
	685, 686, 677, 688, 689, 1625, 1626, 690, 691, 693,
	695, 696, 692, 694, 697, 1627, 698, 1628, 0, 699,
	700, 701, 764, 765, 766, 1629, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1630, 1631, 1632, 1633, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2873,
	306, 307, 309, 308, 310, 311, 312, 313, 1555, 314,
	315, 1556, 1557, 1558, 0, 1559, 715, 1560, 1561, 1562,
	316, 1563, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	1564, 720, 329, 330, 331, 332, 333, 334, 335, 1565,
	1566, 0, 336, 721, 722, 723, 1567, 337, 338, 724,
	1568, 1635, 1569, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 1570, 348, 349, 350, 347, 351, 1571, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 1572, 360,
	361, 362, 1328, 363, 364, 365, 1573, 1574, 1576, 1575,
	1577, 1578, 1579, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 1580, 376, 378, 372, 374, 1581, 377,
	375, 379, 1582, 380, 381, 382, 1583, 1584, 383, 384,
	385, 1585, 386, 387, 388, 1586, 389, 390, 391, 1587,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 1588, 303,
	1589, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 1590, 411, 412, 413, 1591, 414, 415,
	1592, 1329, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 1593, 428, 733, 1594,
	734, 429, 1595, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 1331, 437, 438, 439, 1596, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 1597, 1330, 738, 448, 530, 449, 739, 740, 1598,
	741, 1599, 450, 451, 453, 1332, 742, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 1600, 463, 465, 464, 1601, 467, 743, 466,
	1335, 468, 469, 1336, 1602, 470, 471, 472, 473, 474,
	475, 478, 1603, 1604, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1605, 305, 1339, 524, 525,
	526, 527, 1606, 744, 528, 745, 531, 532, 1607, 0,
	533, 0, 534, 1608, 1609, 536, 537, 538, 1610, 1611,
	539, 540, 746, 1340, 541, 1341, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	1612, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 1613, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 1614, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 1615, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	1616, 628, 629, 627, 630, 631, 632, 1617, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 1618, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 1619, 665,
	666, 0, 660, 651, 1620, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 1621, 675, 758, 759, 760, 761,
	1622, 687, 1623, 676, 678, 679, 680, 681, 762, 682,
	763, 1624, 683, 684, 685, 686, 677, 688, 689, 1625,
	1626, 690, 691, 693, 695, 696, 692, 694, 697, 1627,
	698, 1628, 0, 699, 700, 701, 764, 765, 766, 1629,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1630,
	1631, 1632, 1633, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 1546, 0, 1549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2485, 306, 307, 309, 308, 310, 311,
	312, 313, 1555, 314, 315, 1556, 1557, 1558, 0, 1559,
	715, 1560, 1561, 1562, 316, 1563, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 1564, 720, 329, 330, 331, 332,
	333, 334, 335, 1565, 1566, 0, 336, 721, 722, 723,
	1567, 337, 338, 724, 1568, 1635, 1569, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 1570, 348, 349, 350,
	347, 351, 1571, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 1572, 360, 361, 362, 1328, 363, 364, 365,
	1573, 1574, 1576, 1575, 1577, 1578, 1579, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 1580, 376, 378,
	372, 374, 1581, 377, 375, 379, 1582, 380, 381, 382,
	1583, 1584, 383, 384, 385, 1585, 386, 387, 388, 1586,
	389, 390, 391, 1587, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 1588, 303, 1589, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 1590, 411, 412,
	413, 1591, 414, 415, 1592, 1329, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	1593, 428, 733, 1594, 734, 429, 1595, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 1331, 437,
	438, 439, 1596, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 1597, 1330, 738, 448, 530,
	449, 739, 740, 1598, 741, 1599, 450, 451, 453, 1332,
	742, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 1600, 463, 465, 464,
	1601, 467, 743, 466, 1335, 468, 469, 1336, 1602, 470,
	471, 472, 473, 474, 475, 478, 1603, 1604, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1605,
	305, 1339, 524, 525, 526, 527, 1606, 744, 528, 745,
	531, 532, 1607, 0, 533, 0, 534, 1608, 1609, 536,
	537, 538, 1610, 1611, 539, 540, 746, 1340, 541, 1341,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 1612, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	1613, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 1614,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 1615, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 1616, 628, 629, 627, 630, 631,
	632, 1617, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	1618, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 1619, 665, 666, 0, 660, 651, 1620, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 1621, 675,
	758, 759, 760, 761, 1622, 687, 1623, 676, 678, 679,
	680, 681, 762, 682, 763, 1624, 683, 684, 685, 686,
	677, 688, 689, 1625, 1626, 690, 691, 693, 695, 696,
	692, 694, 697, 1627, 698, 1628, 0, 699, 700, 701,
	764, 765, 766, 1629, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 1630, 1631, 1632, 1633, 710, 711, 768,
	712, 713, 714, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 1555, 314,
	315, 1556, 1557, 1558, 0, 1559, 715, 1560, 1561, 1562,
	316, 1563, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	1564, 720, 329, 330, 331, 332, 333, 334, 335, 1565,
	1566, 0, 336, 721, 722, 723, 1567, 337, 338, 724,
	1568, 1635, 1569, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 1570, 348, 349, 350, 347, 351, 1571, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 1572, 360,
	361, 362, 1328, 363, 364, 365, 1573, 1574, 1576, 1575,
	1577, 1578, 1579, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 1580, 376, 378, 372, 374, 1581, 377,
	375, 379, 1582, 380, 381, 382, 1583, 1584, 383, 384,
	385, 1585, 386, 387, 388, 1586, 389, 390, 391, 1587,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 1588, 303,
	1589, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 1590, 411, 412, 413, 1591, 414, 415,
	1592, 1329, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 1593, 428, 733, 1594,
	734, 429, 1595, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 1331, 437, 438, 439, 1596, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 1597, 1330, 738, 448, 530, 449, 739, 740, 1598,
	741, 1599, 450, 451, 453, 1332, 742, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 1600, 463, 465, 464, 1601, 467, 743, 466,
	1335, 468, 469, 1336, 1602, 470, 471, 472, 473, 474,
	475, 478, 1603, 1604, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1605, 305, 1339, 524, 525,
	526, 527, 1606, 744, 528, 745, 531, 532, 1607, 0,
	533, 0, 534, 1608, 1609, 536, 537, 538, 1610, 1611,
	539, 540, 746, 1340, 541, 1341, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	1612, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 1613, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 1614, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 1615, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	1616, 628, 629, 627, 630, 631, 632, 1617, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 1618, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 1619, 665,
	666, 0, 660, 651, 1620, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 1621, 675, 758, 759, 760, 761,
	1622, 687, 1623, 676, 678, 679, 680, 681, 762, 682,
	763, 1624, 683, 684, 685, 686, 677, 688, 689, 1625,
	1626, 690, 691, 693, 695, 696, 692, 694, 697, 1627,
	698, 1628, 0, 699, 700, 701, 764, 765, 766, 1629,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1630,
	1631, 1632, 1633, 710, 711, 768, 712, 713, 714, 2848,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 2845, 314, 315, 0,
	0, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 2846, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 2844, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 2847, 0, 0, 0, 0, 0, 0, 0, 1247,
	2843, 0, 1205, 1245, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 259, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 261, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 1797, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 253, 710, 711, 768, 712, 713, 714,
	1221, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 2066, 2064, 0, 0, 1245, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 259, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 261, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 1797, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 253, 710, 711, 768, 712, 713, 714,
	1221, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 2066, 3545, 0, 0, 1245, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 259, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 261, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 1797, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 253, 710, 711, 768, 712, 713, 714,
	1221, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 2066, 2064, 0, 0, 1245, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 2978, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 2983, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 2979, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 2980, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 2893, 0, 1263, 1235, 1236,
	1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 306, 307, 309, 308, 310, 311,
	312, 313, 1247, 314, 315, 0, 1245, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 371, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 1252, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	305, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 688, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 2891, 0, 2890, 1245,
	1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 1287, 1251, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 1300, 0, 327, 1307, 328, 1306, 0, 1317, 329,
	330, 331, 332, 333, 334, 335, 1253, 1286, 1218, 336,
	1347, 1348, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 1310, 371, 373, 1304, 1303,
	1223, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 1229,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 1242, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 1302, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 1315, 1316, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 1252, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1288, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 1297, 1298, 0, 1258, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1220, 305, 1339, 524, 525, 526, 527, 1243,
	1291, 528, 1305, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 1230, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 1301, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	1231, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	1299, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 1346, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 1217, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 1311, 1312, 1313, 1314, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 1241, 683,
	684, 685, 686, 677, 688, 689, 0, 1224, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 1308, 1345, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 1221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 1214, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 2888,
	0, 2887, 1245, 1263, 1235, 1236, 1237, 1233, 1234, 1246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 1287, 1251, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 1300, 0, 327, 1307, 328, 1306,
	0, 1317, 329, 330, 331, 332, 333, 334, 335, 1253,
	1286, 1218, 336, 1347, 1348, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 1310, 371,
	373, 1304, 1303, 1223, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 1229, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 1242, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 1302, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 1315, 1316, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	1252, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1288, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 1297, 1298, 0,
	1258, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1220, 305, 1339, 524, 525,
	526, 527, 1243, 1291, 528, 1305, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 1230,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 1301,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 1231, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 1299, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 1346, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 1217, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 1311, 1312, 1313, 1314,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 1241, 683, 684, 685, 686, 677, 688, 689, 0,
	1224, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 1308, 1345, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 1214, 1215, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 2885, 0, 2884, 1245, 1263, 1235, 1236, 1237,
	1233, 1234, 1246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 1214, 1215, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 2882, 0, 1899, 1245, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1898, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	1210, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 1214, 1215, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	1218, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 1223, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1220, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 1225, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	1217, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 1224,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1221, 0,
	0, 0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 1216, 0, 0, 0, 0, 0, 0,
	1214, 1215, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 5199, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 1225, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 0, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 2723, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 2722, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 0,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 4912, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 1225, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 1225, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 0, 0, 1263, 1235, 1236,
	1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 306, 307, 309, 308, 310, 311,
	312, 313, 1247, 314, 315, 0, 1245, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 371, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 1252, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	4457, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 688, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 2136, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 1247, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 2136, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 1247, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 4114, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	0, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 1214, 1215, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	1218, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 1223, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 2983,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1220, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	1217, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 1224,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1221, 0,
	0, 0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 1216, 0, 0, 0, 0, 0, 0,
	1214, 1215, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 1247, 2064, 0, 2988, 1245, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 2986,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 2974, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 2963, 0, 1263, 1235, 1236,
	1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 306, 307, 309, 308, 310, 311,
	312, 313, 1247, 314, 315, 0, 1245, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 371, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 1252, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	305, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 688, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1221, 0, 0, 0, 0, 2961, 0,
	2952, 2959, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 306, 307, 309,
	308, 310, 311, 312, 313, 1247, 314, 315, 0, 1245,
	0, 0, 0, 1287, 1251, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 1300, 0, 327, 1307, 328, 1306, 0, 1317, 329,
	330, 331, 332, 333, 334, 335, 1253, 1286, 1218, 336,
	1347, 1348, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 1310, 2955, 373, 1304, 1303,
	1223, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 1229,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 1242, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 1302, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 1315, 1316, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 1252, 429, 0,
	430, 431, 432, 433, 434, 2956, 436, 1288, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 1297, 1298, 0, 1258, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 2957, 488, 2954, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1220, 305, 1339, 524, 525, 526, 527, 1243,
	1291, 528, 1305, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 1230, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 1301, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	1231, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 2958, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	1299, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 1346, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 1217, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 1311, 1312, 1313, 1314, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 1241, 683,
	684, 685, 686, 677, 688, 689, 0, 1224, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 1308, 1345, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 2953, 714, 1221, 0, 0, 0,
	0, 2949, 0, 2952, 2959, 1236, 1237, 1233, 1234, 1246,
	0, 1216, 0, 0, 0, 0, 0, 0, 1214, 1215,
	306, 307, 309, 308, 310, 311, 312, 313, 1247, 314,
	315, 0, 1245, 0, 0, 0, 1287, 1251, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 1300, 0, 327, 1307, 328, 1306,
	0, 1317, 329, 330, 331, 332, 333, 334, 335, 1253,
	1286, 1218, 336, 1347, 1348, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 1310, 2955,
	373, 1304, 1303, 1223, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 1229, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 1242, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 1302, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 1315, 1316, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	1252, 429, 0, 430, 431, 432, 433, 434, 2956, 436,
	1288, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 1297, 1298, 0,
	1258, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 2957, 488, 2954, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1220, 305, 1339, 524, 525,
	526, 527, 1243, 1291, 528, 1305, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 1230,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 1301,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 1231, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 2958, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 1299, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 1346, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 1217, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 1311, 1312, 1313, 1314,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 1241, 683, 684, 685, 686, 677, 688, 689, 0,
	1224, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 1308, 1345, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 2953, 714, 1221,
	0, 0, 0, 0, 0, 0, 1263, 1235, 1236, 1237,
	1233, 1234, 1246, 0, 1216, 0, 0, 0, 0, 0,
	0, 1214, 1215, 306, 307, 309, 308, 310, 311, 312,
	313, 1247, 314, 315, 0, 1245, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 1214, 1215, 0, 0, 0, 0,
	0, 0, 2072, 0, 1247, 0, 0, 0, 1245, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 2702, 314, 315, 0, 0, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	2663, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 1214, 1215, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	1218, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 1223, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1220, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	1217, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 1224,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1221, 0,
	0, 0, 0, 2633, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 1216, 0, 0, 0, 0, 0, 0,
	1214, 1215, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 1904, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 1832,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 1827, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 1813, 0, 1263, 1235, 1236,
	1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 306, 307, 309, 308, 310, 311,
	312, 313, 1247, 314, 315, 0, 1245, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 371, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 1252, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	305, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 688, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1221, 0, 0, 0, 0, 1808, 0,
	1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 306, 307, 309,
	308, 310, 311, 312, 313, 1247, 314, 315, 0, 1245,
	0, 0, 0, 1287, 1251, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 1300, 0, 327, 1307, 328, 1306, 0, 1317, 329,
	330, 331, 332, 333, 334, 335, 1253, 1286, 1218, 336,
	1347, 1348, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 1310, 371, 373, 1304, 1303,
	1223, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 1229,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 1242, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 1302, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 1315, 1316, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 1252, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1288, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 1297, 1298, 0, 1258, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1220, 305, 1339, 524, 525, 526, 527, 1243,
	1291, 528, 1305, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 1230, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 1301, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	1231, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	1299, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 1346, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 1217, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 1311, 1312, 1313, 1314, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 1241, 683,
	684, 685, 686, 677, 688, 689, 0, 1224, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 1308, 1345, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 1221, 0, 0, 0,
	0, 1714, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246,
	0, 1216, 0, 0, 0, 0, 0, 0, 1214, 1215,
	306, 307, 309, 308, 310, 311, 312, 313, 1247, 314,
	315, 0, 1245, 0, 0, 0, 1287, 1251, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 1300, 0, 327, 1307, 328, 1306,
	0, 1317, 329, 330, 331, 332, 333, 334, 335, 1253,
	1286, 1218, 336, 1347, 1348, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 1310, 371,
	373, 1304, 1303, 1223, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 1229, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 1242, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 1302, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 1315, 1316, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	1252, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1713, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 1297, 1298, 0,
	1258, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1220, 305, 1339, 524, 525,
	526, 527, 1243, 1291, 528, 1305, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 1230,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 1301,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 1231, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 1299, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 1346, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 1217, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 1311, 1312, 1313, 1314,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 1241, 683, 684, 685, 686, 677, 688, 689, 0,
	1224, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 1308, 1345, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1221,
	0, 0, 0, 0, 1708, 0, 1263, 1235, 1236, 1237,
	1233, 1234, 1246, 0, 1216, 0, 0, 0, 0, 0,
	0, 1214, 1215, 306, 307, 309, 308, 310, 311, 312,
	313, 1247, 314, 315, 0, 1245, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1707, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 1701, 0, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0,
	0, 0, 0, 0, 1214, 1215, 306, 307, 309, 308,
	310, 311, 312, 313, 1247, 314, 315, 0, 1245, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	1664, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 1214, 1215, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	1218, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 1223, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1220, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	1217, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 1224,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1221, 0,
	0, 0, 0, 1646, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 1216, 0, 0, 0, 0, 0, 0,
	1214, 1215, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 1650, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	1651, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 1649, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 1476, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 0,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 5268, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 5267, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 0, 0, 1263, 1235, 1236,
	1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 306, 307, 309, 308, 310, 311,
	312, 313, 1247, 314, 315, 0, 1245, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 5266, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 5268,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 371, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 1252, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	305, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 5267, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1221, 0, 0, 0, 0, 0, 0,
	1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 306, 307, 309,
	308, 310, 311, 312, 313, 1247, 314, 315, 0, 1245,
	0, 0, 0, 1287, 1251, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 1300, 0, 327, 1307, 328, 1306, 0, 1317, 329,
	330, 331, 332, 333, 334, 335, 1253, 1286, 1218, 336,
	1347, 1348, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 4835, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 1310, 371, 373, 1304, 1303,
	1223, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 1229,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 1242, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 1302, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 1315, 1316, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 4836, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1288, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 1297, 1298, 0, 1258, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1220, 305, 1339, 524, 525, 526, 527, 1243,
	1291, 528, 1305, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 1230, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 1301, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 4834, 608,
	1231, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	1299, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 1346, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 1217, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 1311, 1312, 1313, 1314, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 1241, 683,
	684, 685, 686, 677, 688, 689, 0, 1224, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 1308, 1345, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 1221, 0, 0, 0,
	0, 0, 0, 1263, 1235, 1236, 1237, 3511, 3512, 1246,
	0, 1216, 0, 0, 0, 0, 0, 0, 1214, 1215,
	306, 307, 309, 308, 310, 311, 312, 313, 1247, 314,
	315, 0, 1245, 0, 0, 0, 1287, 1251, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 1300, 0, 327, 1307, 328, 1306,
	0, 1317, 329, 330, 331, 332, 333, 334, 335, 1253,
	1286, 1218, 336, 1347, 1348, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 1310, 371,
	373, 1304, 1303, 1223, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 1229, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 1242, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 1302, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 1315, 1316, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	1252, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1288, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 1297, 1298, 0,
	1258, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1220, 305, 1339, 524, 525,
	526, 527, 1243, 1291, 528, 1305, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 1230,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 1301,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 1231, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 1299, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 1346, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 1217, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 1311, 1312, 1313, 1314,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 1241, 683, 684, 685, 686, 677, 688, 689, 0,
	1224, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 1308, 1345, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1221,
	0, 0, 0, 0, 0, 0, 1263, 1235, 1236, 1237,
	3509, 3510, 1246, 0, 1216, 0, 0, 0, 0, 0,
	0, 1214, 1215, 306, 307, 309, 308, 310, 311, 312,
	313, 1247, 314, 315, 0, 1245, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 0, 0, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0,
	0, 0, 0, 0, 1214, 1215, 306, 307, 309, 308,
	310, 311, 312, 313, 1247, 314, 315, 0, 1245, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	0, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 2710, 2711, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	0, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 0, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 2971, 0, 0, 0, 0, 0, 0,
	2969, 2970, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 0, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 0, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 3504, 3505, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 2328, 2329, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 0, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	5268, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	0, 1290, 0, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 0, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 5267, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 2990,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 0, 1286, 0,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 0, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 1676,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 1247,
	0, 0, 0, 1245, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 0, 1286, 0,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 0, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1205, 0, 1386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 1247,
	0, 0, 1287, 1245, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 1286, 0, 336, 721,
	722, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 1372, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 0, 305, 1339, 524, 525, 526, 527, 0, 1291,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	1378, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 753,
	1380, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 259, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	261, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 1797, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 253, 710,
	711, 768, 712, 713, 714, 1386, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 1376, 0, 2160, 1287, 0,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 1286, 0, 336, 721, 722, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 1372, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 0, 305, 1339,
	524, 525, 526, 527, 0, 1291, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 1378, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 753, 1380, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 259, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 261, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 1797, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 253, 710, 711, 768, 712, 713,
	714, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3669, 0, 1386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1376, 0, 2160, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	1287, 0, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 1286, 0, 336, 721, 722, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 1372, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 0,
	305, 1339, 524, 525, 526, 527, 0, 1291, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 1378, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 753, 1380, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1368, 0, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 1376, 0, 1374, 0, 0, 1287, 0,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 1286, 0, 336, 721, 722, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 1372, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 0, 305, 1339,
	524, 525, 526, 527, 0, 1291, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 1378, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 753, 1380, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 1376, 0, 1374, 1287, 0, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 1286, 0,
	336, 721, 722, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	1372, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 0, 305, 1339, 524, 525, 526, 527,
	0, 1291, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 1378, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 753, 1380, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 1376, 0, 1374,
	1287, 0, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 1286, 0, 336, 721, 722, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 0,
	305, 1339, 524, 525, 526, 527, 0, 1291, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 4643, 1287, 0, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	1286, 0, 336, 721, 722, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1288, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 0, 305, 1339, 524, 525,
	526, 527, 0, 1291, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 753, 1380, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 2816,
	2817, 2818, 2835, 2836, 2837, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	2838, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 2056, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 2041, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 2828, 0, 348,
	349, 350, 347, 351, 0, 352, 2824, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 2829, 2830, 2831,
	2832, 407, 408, 409, 730, 0, 0, 2823, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	2833, 2834, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 2826, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 2827, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 2040, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 0, 1671, 2813, 2814, 2815,
	2839, 2825, 2819, 0, 2821, 2822, 2820, 2807, 2808, 2809,
	2810, 2811, 2812, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 1635, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 1332, 742,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 0, 0,
	1339, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 259, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 261, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 1797,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 253, 710, 711, 768, 712,
	713, 714, 0, 1794, 254, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 209, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 1635, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 1332, 742, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 0, 0, 1339,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 259, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 261, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 1797, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 253, 710, 711, 768, 712, 713,
	714, 1671, 1670, 254, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 209, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 1635,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 1332, 742, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 0, 0, 1339, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1671, 1670, 0,
	0, 0, 0, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 1821,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 1635, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 1332,
	742, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 0,
	0, 1339, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1671, 1670, 0, 0, 0, 0, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 4024, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 1635, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 1332, 742, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 0, 0, 1339, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 2572, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1671,
	2477, 0, 0, 0, 0, 2478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 1821, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 1635, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 1332, 742, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 2476,
	465, 464, 0, 467, 743, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 0, 0, 1339, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1671, 1670, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 1821, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 1635, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 1332, 742, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 0, 0, 1339,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1205, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 1803, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	259, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 261, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 1797, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 253, 710, 711, 768, 712, 713, 714, 0,
	0, 254, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 209, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 305, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 3277, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 2174, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 300, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 5461, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 300,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 1791, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 305, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 3975, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 3950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 3400, 0, 0, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 0, 2232, 0, 327, 2222, 328, 2238,
	0, 2245, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 2248, 2249, 0, 0, 337, 338, 0,
	0, 1635, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 1310, 371,
	373, 2236, 2235, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 0, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 0, 0, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 2234, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 2243, 2244, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 0, 0,
	0, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	0, 0, 0, 529, 1331, 437, 438, 439, 3944, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 1330, 3946, 448, 530, 449, 2229, 2230, 0,
	2225, 0, 450, 451, 453, 1332, 0, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 0, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 0, 0, 1339, 524, 525,
	526, 527, 0, 0, 528, 2237, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 3945, 1340, 541, 1341, 0, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 2219, 556, 557, 558, 2220, 559, 560,
	561, 0, 562, 0, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 2233,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 0, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 0,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 2231, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 2247, 654,
	655, 656, 657, 0, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 2239, 2240, 2241, 2242,
	0, 687, 0, 676, 678, 679, 680, 681, 0, 682,
	0, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 0, 2223, 2246, 3947,
	703, 702, 704, 705, 706, 0, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 0, 712, 713, 714, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 2213, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 4139, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 2559, 1287, 0, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 1286, 0,
	336, 721, 722, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 0, 305, 1339, 524, 525, 526, 527,
	0, 1291, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 2226, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 0, 2232, 0,
	327, 2222, 328, 2238, 0, 2245, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 2248, 2249, 0,
	0, 337, 338, 0, 0, 1635, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 1310, 371, 373, 2236, 2235, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 0, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 2234, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 2243,
	2244, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 0, 0, 0, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 0, 0, 0, 529, 1331, 437,
	438, 439, 3944, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 1330, 3946, 448, 530,
	449, 2229, 2230, 0, 2225, 0, 450, 451, 453, 1332,
	0, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 0, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 0,
	0, 1339, 524, 525, 526, 527, 0, 0, 528, 2237,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 3945, 1340, 541, 1341,
	0, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 2219, 556, 557,
	558, 2220, 559, 560, 561, 0, 562, 0, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 2233, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 0, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 0, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 2231, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 2247, 654, 655, 656, 657, 0, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	2239, 2240, 2241, 2242, 0, 687, 0, 676, 678, 679,
	680, 681, 0, 682, 0, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	0, 2223, 2246, 3947, 703, 702, 704, 705, 706, 0,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 0,
	712, 713, 714, 1032, 0, 931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 2213,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 938, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 1029, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 305, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 1031, 0, 660, 651, 936, 667, 668, 669,
	670, 671, 937, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 2197, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 4268, 314, 315, 0,
	0, 0, 0, 0, 715, 941, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 2204, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 4267, 622, 623, 624, 625, 626, 0, 2201,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 2203, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 4266, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 2197, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 2253, 314, 315, 0, 0, 0, 0, 0,
	715, 941, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	2204, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	305, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 2252, 622,
	623, 624, 625, 626, 0, 2254, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 2203, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 2251, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 2197, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 2196, 314,
	315, 0, 0, 0, 0, 0, 715, 941, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 2204, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 305, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 2195, 622, 623, 624, 625, 626,
	0, 2201, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 2203, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 2194, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 929,
	0, 931, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 941, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 938, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 936, 667, 668, 669, 670, 671, 937, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 3950, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 941, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 0, 2232, 0,
	327, 2222, 328, 2238, 0, 2245, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 2248, 2249, 0,
	0, 337, 338, 0, 0, 1635, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 1310, 371, 373, 2236, 2235, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 0, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 0,
	0, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 2234, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 2243,
	2244, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 0, 0, 0, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 0, 0, 0, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 1330, 0, 448, 530,
	449, 2229, 2230, 0, 2225, 0, 450, 451, 453, 1332,
	0, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 0, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 0,
	0, 1339, 524, 525, 526, 527, 0, 0, 528, 2237,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 0, 1340, 541, 1341,
	0, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 2219, 556, 557,
	558, 2220, 559, 560, 561, 0, 562, 0, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 2233, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 0, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 0, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 2231, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 2247, 654, 655, 656, 657, 0, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	2239, 2240, 2241, 2242, 0, 687, 0, 676, 678, 679,
	680, 681, 0, 682, 0, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	0, 2223, 2246, 0, 703, 702, 704, 705, 706, 0,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 0,
	712, 713, 714, 931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 2213,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 938, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 305, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 936, 667, 668, 669, 670, 671,
	937, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 3111,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 941, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 2197, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 941, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	2204, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	305, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 2612, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 2613, 622,
	623, 624, 625, 626, 0, 2201, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 2203, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 2614, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 2226, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 941, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 0, 2232, 0, 327, 2222, 328, 2238,
	0, 2245, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 2248, 2249, 0, 0, 337, 338, 0,
	0, 1635, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 1310, 371,
	373, 2236, 2235, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 0, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 2234, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 2243, 2244, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 0, 0,
	0, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	0, 0, 0, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 1330, 0, 448, 530, 449, 2229, 2230, 0,
	2225, 0, 450, 451, 453, 1332, 0, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 0, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 0, 0, 1339, 524, 525,
	526, 527, 0, 0, 528, 2237, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 0, 1340, 541, 1341, 0, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 2219, 556, 557, 558, 2220, 559, 560,
	561, 0, 562, 0, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 2233,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 0, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 0,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 2231, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 2247, 654,
	655, 656, 657, 0, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 2239, 2240, 2241, 2242,
	0, 687, 0, 676, 678, 679, 680, 681, 0, 682,
	0, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 0, 2223, 2246, 0,
	703, 702, 704, 705, 706, 0, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 0, 712, 713, 714, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 2213, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 305, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 941,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 1671,
	1670, 0, 0, 0, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4495, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 1635, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 1332, 742, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 0, 0, 1339, 524, 525, 526, 527, 4371, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 2496, 0, 1671, 1670, 0,
	0, 0, 0, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 1635, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1724, 736, 737, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 1332,
	742, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 0,
	0, 1339, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 2262, 0, 1671, 1670, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 1635, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 1332, 742, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 0, 0, 1339,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1853, 0, 1671, 1670, 0, 0, 0, 0, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 1635, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 1851, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 1332, 742, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 0, 0, 1339, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 1852, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 1850, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1721,
	0, 1671, 1670, 0, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 1635,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1724, 736,
	737, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 1332, 742, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 0, 0, 1339, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1666, 0, 1671,
	1670, 0, 0, 0, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 1635, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 1332, 742, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 0, 0, 1339, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1671, 1670, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 1635, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 1332, 742, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 0, 0, 1339,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 1671, 1670, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 1635,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 1332, 742, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 0, 0, 1339, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 1671, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 1635, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 1332,
	742, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 0,
	0, 1339, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 3176, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 3967, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	3180, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 3966,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 3179, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 3963, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 3965, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 3962, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 3178, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	3964, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 3176, 337, 338, 724, 0, 0, 3170, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 3172, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 3180, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 3179, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 3169, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 3178, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 3177, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1934, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 1933, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	1931, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 1932, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	305, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 1935, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 1930, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 1928, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 1929, 702, 704, 705, 706, 767,
	707, 708, 709, 1639, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1641, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 305, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 1378, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 1636, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1638, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 305, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 1378, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1542,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1544, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 1378, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 803, 0, 300,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 801, 312, 313, 790, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 793, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 799, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 795, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 802, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 789, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 790, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 793, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	794, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 795, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 788, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 790, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 793, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 794, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	795, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 790, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 793, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 4381, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 795, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 305, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 1378, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 300, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	3843, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 3369, 0, 300,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 3368, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 305, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 2580, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	305, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 2524, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 2523, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 305, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 2508, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	2510, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 305, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 2470, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 305, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	1378, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1769, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1768, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	305, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 1659, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 305, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 1652, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1654, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 305, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1459,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1458, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 1449, 0, 300,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1448, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 305, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1446, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1445, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	305, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 1441, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1440, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 305, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 770, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 305, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 291,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 300, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	305, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 793, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 794, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	795, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 2621, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 305, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 2619, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 305, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 300, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 2617, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 305, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 300, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 2531, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	305, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	2281, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 305, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 2275, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 305, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1016, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 1015, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 1014, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 893, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 882, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 891, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 884,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	890, 415, 886, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	887, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 885, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	888, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 889,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 883,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 876, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 882, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	891, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 884, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 890, 415,
	886, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 887, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 885, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 888, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 889, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 883, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 3966, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 4733, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1487, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 1490,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 1488,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 864, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 863, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 862, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 1491,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	860, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 1487, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 1490, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 1488, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 864, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	863, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 862, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 1491, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 860, 759,
	760, 761, 0, 687, 0, 676, 1489, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 871, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 869, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 779,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 778, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 777, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 300, 3277, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 5042, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	3783, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 4615, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 300, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 4325, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 300, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 3045, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 3277, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 3361, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 2414, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 863, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	862, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 860, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	2591, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 2578, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1825,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 1817, 0, 300,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 854, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 850, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 855, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 864, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 863, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 862, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 1802,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	860, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 1775, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1774, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 1758, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1756, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1750,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 1728, 0, 300,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1726, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1719, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 1680, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 1644, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 1493,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 863, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 862, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 860, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 1464, 0, 300,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1463, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 1455, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1454, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 1403, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 874,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 854, 0, 300,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 850, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 849, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 855, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 864,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 863, 605, 606, 607, 608, 851,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	862, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 852, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 860, 759, 760, 761, 0, 687, 0, 676,
	856, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 843, 0, 300, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 844, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 805, 0, 300, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 735, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 797, 0, 300, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 774,
	0, 300, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 300, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	3998, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 863, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	862, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 860, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 3887, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 300, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 3861, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 300, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 3857, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	3808, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 3806, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 633, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 3794, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 300, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 3791, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 300, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 3380, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 300, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 0, 742, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 0, 541, 0, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 844, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 764, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 300,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 715, 0, 2549, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 716,
	717, 0, 327, 718, 328, 719, 0, 720, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 721,
	722, 723, 0, 337, 338, 724, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 369, 370, 0, 371, 373, 725, 726, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 727, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 728, 729, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 730, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 731, 732, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 733, 0, 734, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 735, 736, 737, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 738,
	448, 530, 449, 739, 740, 0, 741, 0, 450, 451,
	453, 0, 742, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 743, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 744,
	528, 745, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 0,
	541, 0, 747, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 750, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 752, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 753,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 0, 0, 754, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 755,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 756, 654, 655, 656, 657, 757,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 758, 759, 760, 761, 0, 687, 0, 676,
	678, 679, 680, 681, 762, 682, 763, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 764, 765, 766, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 300, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 716, 717, 0, 327, 718,
	328, 719, 0, 720, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 721, 722, 723, 0, 337,
	338, 724, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 369, 370,
	0, 371, 373, 725, 726, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 727, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 728, 729, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	730, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 731, 732, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	733, 0, 734, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1426, 736, 737, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 738, 448, 530, 449, 739,
	740, 0, 741, 0, 450, 451, 453, 0, 742, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	743, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 744, 528, 745, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 0, 541, 0, 747, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 750, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 752, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 753, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 0,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 755, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	756, 654, 655, 656, 657, 757, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 758, 759,
	760, 761, 0, 687, 0, 676, 678, 679, 680, 681,
	762, 682, 763, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 764, 765,
	766, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 300, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 0, 327, 718, 328, 719, 0, 720,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 721, 722, 723, 0, 337, 338, 724, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 733, 0, 734, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 738, 448, 530, 449, 739, 740, 0, 741, 0,
	450, 451, 453, 0, 742, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 743, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 744, 528, 745, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 0, 541, 0, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	1351, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 0, 633, 754, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 758, 759, 760, 761, 0, 687,
	0, 676, 678, 679, 680, 681, 762, 682, 763, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 764, 765, 766, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 300, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 716, 717, 0,
	327, 718, 328, 719, 0, 720, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 721, 722, 723,
	0, 337, 338, 724, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	369, 370, 0, 371, 373, 725, 726, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 727, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 728,
	729, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 730, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 731,
	732, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 733, 0, 734, 0, 0, 430, 431, 432,
	433, 434, 435, 436, 735, 736, 737, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 738, 448, 530,
	449, 739, 740, 0, 741, 0, 450, 451, 453, 0,
	742, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 743, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 744, 528, 745,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 0, 541, 0,
	747, 542, 543, 535, 544, 545, 546, 0, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 750, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	0, 574, 575, 752, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 753, 0, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 0, 633, 754, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 755, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 756, 654, 655, 656, 657, 757, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	758, 759, 760, 761, 0, 687, 0, 676, 678, 679,
	680, 681, 762, 682, 763, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	764, 765, 766, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 1764, 0, 1471, 0, 710, 711, 768,
	712, 713, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 323, 324, 325, 326, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 0, 336, 0, 0, 0, 0, 337,
	338, 0, 0, 0, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 0,
	0, 0, 0, 0, 1473, 366, 367, 368, 369, 370,
	0, 371, 373, 0, 0, 0, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 0, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	0, 0, 0, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1763, 0, 0, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 0,
	445, 446, 447, 0, 0, 0, 448, 530, 449, 0,
	0, 0, 0, 0, 450, 451, 453, 0, 0, 0,
	452, 454, 455, 0, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	0, 466, 0, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 0, 0, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 0, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 0, 522, 510, 0, 0, 0,
	524, 525, 526, 527, 0, 0, 528, 0, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 0, 0, 541, 0, 0, 542,
	543, 535, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 0, 556, 557, 558, 0,
	559, 560, 561, 0, 562, 0, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 0, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 0,
	604, 605, 606, 607, 608, 0, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1474,
	633, 0, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 0, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	0, 654, 655, 656, 657, 0, 661, 662, 663, 664,
	0, 665, 666, 0, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 0, 0,
	0, 0, 0, 687, 0, 676, 678, 679, 680, 681,
	0, 682, 0, 0, 683, 684, 685, 686, 677, 688,
	689, 0, 0, 690, 691, 693, 695, 696, 692, 694,
	697, 0, 698, 0, 0, 699, 700, 701, 0, 0,
	0, 0, 703, 702, 704, 705, 706, 0, 707, 708,
	709, 1683, 0, 1471, 0, 710, 711, 0, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 323,
	324, 325, 326, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 0, 0, 0, 0, 337, 338, 0,
	0, 0, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 1473, 366, 367, 368, 369, 370, 0, 371,
	373, 0, 0, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 0, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 0, 0,
	0, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1682, 0, 0, 529, 0, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 0, 0, 448, 530, 449, 0, 0, 0,
	0, 0, 450, 451, 453, 0, 0, 0, 452, 454,
	455, 0, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 0, 466,
	0, 468, 469, 0, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 0, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 0, 522, 510, 0, 0, 0, 524, 525,
	526, 527, 0, 0, 528, 0, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 0, 0, 541, 0, 0, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 0, 556, 557, 558, 0, 559, 560,
	561, 0, 562, 0, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 0, 604, 605,
	606, 607, 608, 0, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1474, 633, 0,
	634, 615, 616, 635, 636, 0, 637, 638, 639, 640,
	641, 642, 643, 0, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 0, 654,
	655, 656, 657, 0, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 0, 0, 0, 0,
	0, 687, 0, 676, 678, 679, 680, 681, 0, 682,
	0, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 0, 0, 0, 0,
	703, 702, 704, 705, 706, 0, 707, 708, 709, 1469,
	0, 1471, 0, 710, 711, 0, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 323, 324, 325,
	326, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 0,
	336, 0, 0, 0, 0, 337, 338, 0, 0, 0,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 0, 0, 0, 0, 0,
	1473, 366, 367, 368, 369, 370, 0, 371, 373, 0,
	0, 0, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	0, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 0, 0, 0, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1468, 0,
	0, 529, 0, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 0, 445, 446, 447, 0,
	0, 0, 448, 530, 449, 0, 0, 0, 0, 0,
	450, 451, 453, 0, 0, 0, 452, 454, 455, 0,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 0, 466, 0, 468,
	469, 0, 0, 470, 471, 472, 473, 474, 475, 478,
	0, 0, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 0, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	0, 522, 510, 0, 0, 0, 524, 525, 526, 527,
	0, 0, 528, 0, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	0, 0, 541, 0, 0, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 0, 556, 557, 558, 0, 559, 560, 561, 0,
	562, 0, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 0, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 0, 604, 605, 606, 607,
	608, 0, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1474, 633, 0, 634, 615,
	616, 635, 636, 0, 637, 638, 639, 640, 641, 642,
	643, 0, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 0, 654, 655, 656,
	657, 0, 661, 662, 663, 664, 0, 665, 666, 0,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 0, 0, 0, 0, 0, 687,
	0, 676, 678, 679, 680, 681, 0, 682, 0, 0,
	683, 684, 685, 686, 677, 688, 689, 0, 0, 690,
	691, 693, 695, 696, 692, 694, 697, 0, 698, 0,
	0, 699, 700, 701, 0, 0, 0, 0, 703, 702,
	704, 705, 706, 0, 707, 708, 709, 2295, 0, 1471,
	0, 710, 711, 0, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 0,
	0, 0, 0, 337, 338, 0, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 1473, 366,
	367, 368, 369, 370, 0, 371, 373, 0, 0, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 0, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 0, 0, 0, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 0, 0, 0, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 0,
	448, 530, 449, 0, 0, 0, 0, 0, 450, 451,
	453, 0, 0, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 0, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 0,
	528, 0, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 0, 0,
	541, 0, 0, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 0,
	556, 557, 558, 0, 559, 560, 561, 0, 562, 0,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 0,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1474, 633, 0, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 0,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 0, 654, 655, 656, 657, 0,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 0, 0, 0, 0, 0, 687, 0, 676,
	678, 679, 680, 681, 0, 682, 0, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 0, 0, 0, 0, 703, 702, 704, 705,
	706, 0, 707, 708, 709, 2260, 0, 1471, 0, 710,
	711, 0, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 323, 324, 325, 326, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 0, 336, 0, 0, 0,
	0, 337, 338, 0, 0, 0, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 0, 0, 0, 0, 0, 1473, 366, 367, 368,
	369, 370, 0, 371, 373, 0, 0, 0, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 0, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 0, 0, 0, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 0, 0, 0, 529, 0, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 0, 445, 446, 447, 0, 0, 0, 448, 530,
	449, 0, 0, 0, 0, 0, 450, 451, 453, 0,
	0, 0, 452, 454, 455, 0, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 0, 466, 0, 468, 469, 0, 0, 470,
	471, 472, 473, 474, 475, 478, 0, 0, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 0, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 0, 522, 510, 0,
	0, 0, 524, 525, 526, 527, 0, 0, 528, 0,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 0, 0, 541, 0,
	0, 542, 543, 535, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 0, 556, 557,
	558, 0, 559, 560, 561, 0, 562, 0, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 0, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 0, 604, 605, 606, 607, 608, 0, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1474, 633, 0, 634, 615, 616, 635, 636, 0,
	637, 638, 639, 640, 641, 642, 643, 0, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 0, 654, 655, 656, 657, 0, 661, 662,
	663, 664, 0, 665, 666, 0, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	0, 0, 0, 0, 0, 687, 0, 676, 678, 679,
	680, 681, 0, 682, 0, 0, 683, 684, 685, 686,
	677, 688, 689, 0, 0, 690, 691, 693, 695, 696,
	692, 694, 697, 0, 698, 0, 0, 699, 700, 701,
	0, 0, 0, 0, 703, 702, 704, 705, 706, 1471,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 0,
	712, 713, 714, 0, 0, 0, 306, 307, 309, 308,
	310, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 323, 324, 325, 326, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 0, 336, 0,
	0, 0, 0, 337, 338, 0, 0, 0, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 1473, 366,
	367, 368, 369, 370, 0, 371, 373, 0, 0, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 0, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 0, 0, 0, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 0, 0, 0, 529,
	0, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 0, 445, 446, 447, 0, 0, 0,
	448, 530, 449, 0, 0, 0, 0, 0, 450, 451,
	453, 0, 0, 0, 452, 454, 455, 0, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 0, 466, 0, 468, 469, 0,
	0, 470, 471, 472, 473, 474, 475, 478, 0, 0,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	0, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 0, 522,
	510, 0, 0, 0, 524, 525, 526, 527, 0, 0,
	528, 0, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 0, 0,
	541, 0, 0, 542, 543, 535, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 0,
	556, 557, 558, 0, 559, 560, 561, 0, 562, 0,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 0, 604, 605, 606, 607, 608, 0,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1474, 633, 0, 634, 615, 616, 635,
	636, 0, 637, 638, 639, 640, 641, 642, 643, 0,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 0, 654, 655, 656, 657, 0,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 0, 0, 0, 0, 0, 687, 0, 676,
	678, 679, 680, 681, 0, 682, 0, 0, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 0, 698, 0, 0, 699,
	700, 701, 0, 0, 0, 0, 703, 702, 704, 705,
	706, 0, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 0, 712, 713, 714, 1985, 1986, 0, 2018, 2019,
	2020, 2029, 2030, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 2016,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 2022, 2016, 0, 1987, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 2035, 1985, 1986, 2004, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 2022, 2016, 0, 1987,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 2035, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 2010, 2011, 2012, 2013,
	0, 0, 0, 2004, 0, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 2026,
	1993, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 2033, 0, 2010, 2011, 2012, 2013, 0, 2002,
	2003, 0, 0, 2026, 1993, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 2032, 0, 2033, 0, 0, 0,
	0, 0, 0, 2002, 2003, 0, 0, 2026, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 2015, 2017,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 2032, 0,
	2033, 0, 2034, 0, 0, 0, 0, 2002, 2003, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 2024, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 2014, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	2009, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 0, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 0, 0, 2040, 0, 0, 2022,
	2016, 0, 0, 0, 2027, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 2035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	2040, 0, 0, 0, 0, 0, 1987, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 1999, 2000, 2006, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 0, 0, 0, 0, 0, 4639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 2010, 2011, 2012,
	2013, 4543, 0, 0, 0, 0, 0, 1993, 0, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 0, 0, 0, 4542, 0, 0, 0, 0,
	2026, 0, 1985, 1986, 2036, 2018, 2019, 2020, 2029, 2030,
	2031, 2015, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2016, 0, 0, 0,
	0, 2032, 0, 2033, 1988, 0, 0, 0, 0, 0,
	2002, 2003, 0, 0, 0, 2035, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0, 2024,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 2022,
	2016, 0, 1987, 0, 2008, 0, 0, 0, 1988, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 2035,
	0, 0, 2004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2014, 0, 2010, 2011, 2012,
	2013, 0, 0, 0, 0, 0, 2026, 1993, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 2009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 2033,
	0, 0, 0, 0, 0, 0, 2002, 2003, 0, 0,
	2026, 2027, 1985, 1986, 2036, 2018, 2019, 2020, 2029, 2030,
	2031, 2015, 2017, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2016, 0, 0, 0,
	2008, 2032, 0, 2033, 1988, 0, 0, 2040, 0, 0,
	2002, 2003, 0, 0, 0, 2035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 2008, 0, 0, 0, 0, 2034,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 2025, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 2023, 0, 0, 0, 4541, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 2027, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 2009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 2033,
	0, 0, 0, 2040, 0, 0, 2002, 2003, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2008, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	2023, 0, 0, 0, 4144, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 0, 3587, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 2022, 2016, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 1985, 1986, 1987,
	2018, 2019, 2020, 2029, 2030, 2031, 0, 2027, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	2022, 2016, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2035, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 2004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 2026, 3586, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 2010, 2011,
	2012, 2013, 0, 0, 0, 0, 0, 0, 1993, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 0, 0,
	0, 0, 0, 2002, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 0, 2036, 0, 2008, 0, 0,
	0, 0, 2015, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 2033, 0, 0, 0, 0, 0,
	0, 2002, 2003, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 2014, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 2016, 0, 2014, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 0, 0, 0, 0, 0,
	2040, 0, 2009, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 2027, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 3585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 2011, 2012, 2013, 0, 0, 0, 0, 0,
	0, 1993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1999, 2000,
	2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990,
	1991, 1992, 1994, 1995, 2026, 0, 0, 0, 2036, 3584,
	0, 0, 0, 0, 0, 2015, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 2033, 0, 0,
	0, 0, 0, 0, 2002, 2003, 0, 0, 0, 0,
	1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 0, 2024, 2444, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 2016, 0, 0, 0, 2008, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 2010, 2011, 2012, 2013, 0, 2022, 2016, 0, 0,
	0, 1993, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 2035, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 2026, 2027, 0, 0, 2036, 0,
	0, 0, 0, 0, 2007, 2015, 2017, 0, 2374, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 2033, 0, 0,
	0, 2040, 0, 0, 2002, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2372, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 2023, 0,
	3549, 0, 0, 0, 0, 0, 0, 2026, 0, 2038,
	0, 2036, 0, 0, 0, 0, 0, 0, 2015, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	2033, 0, 0, 0, 0, 0, 0, 2002, 2003, 0,
	0, 0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 2024, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 2022, 2016, 0, 0,
	0, 2008, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 2035, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 2446, 0,
	0, 0, 0, 1987, 0, 2027, 0, 0, 0, 0,
	2034, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2373, 2014, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 0, 0, 1993, 5361, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 2027, 1985,
	1986, 2036, 2018, 2019, 2020, 2029, 2030, 2031, 2015, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 2016, 0, 0, 0, 0, 2032, 0,
	2033, 1988, 0, 0, 2040, 0, 0, 2002, 2003, 0,
	0, 0, 2035, 0, 0, 2371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2024, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 2008, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 5360, 0, 0, 0, 0,
	1993, 0, 3649, 0, 0, 0, 0, 0, 0, 3648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 0, 0,
	0, 0, 0, 2002, 2003, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2016, 0, 2014, 0,
	0, 3519, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	1985, 1986, 1987, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 0, 2007, 2027, 0, 0, 0, 0, 0,
	0, 0, 2004, 2022, 2016, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 3520, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 2026, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 2010, 2011, 2012, 2013, 0, 0, 0, 0, 0,
	0, 1993, 0, 4921, 0, 0, 0, 2032, 0, 2033,
	0, 0, 0, 0, 0, 0, 2002, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 2036, 0,
	2008, 0, 0, 0, 0, 2015, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 2033, 0, 0,
	0, 0, 0, 0, 2002, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 2016, 0, 2014,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 0, 0,
	0, 0, 0, 2040, 0, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 2027, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 2026, 0, 1985,
	1986, 2036, 2018, 2019, 2020, 2029, 2030, 2031, 2015, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 2016, 0, 0, 0, 0, 2032, 0,
	2033, 1988, 0, 0, 0, 0, 0, 2002, 2003, 0,
	0, 0, 2035, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 2024, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 2022, 2016, 0, 1987,
	0, 2008, 0, 0, 0, 1988, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 2035, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 2023, 1202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 0, 2026, 1993, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 0, 0,
	0, 0, 0, 2002, 2003, 0, 0, 2026, 2027, 1985,
	1986, 2036, 2018, 2019, 2020, 2029, 2030, 2031, 2015, 2017,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 2016, 0, 0, 0, 2008, 2032, 0,
	2033, 1988, 0, 0, 2040, 0, 0, 2002, 2003, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2024, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 2008, 0, 0, 0, 0, 2034, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 0, 4349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 0, 0,
	2040, 0, 0, 2002, 2003, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4686,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2016, 0, 2014, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	1985, 1986, 1987, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 0, 2007, 2027, 0, 0, 0, 0, 0,
	0, 0, 2004, 2022, 2016, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 2026, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 2010, 2011, 2012, 2013, 0, 0, 0, 0, 0,
	0, 1993, 0, 0, 0, 0, 0, 2032, 0, 2033,
	3655, 0, 0, 0, 0, 0, 2002, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 2036, 0,
	2008, 0, 0, 0, 0, 2015, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 2033, 0, 0,
	0, 0, 0, 0, 2002, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 2016, 0, 2014,
	0, 3650, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 0, 0,
	0, 0, 0, 2040, 0, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 4125, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 2027, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 2026, 0, 1985,
	1986, 2036, 2018, 2019, 2020, 2029, 2030, 2031, 2015, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 2016, 0, 0, 0, 0, 2032, 0,
	2033, 1988, 0, 0, 0, 0, 0, 2002, 2003, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2024, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 2008, 0, 0, 0, 0, 0, 0, 1985, 1986,
	2007, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 2016, 0, 0, 0, 3588, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 2023, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 2032, 0, 2033, 0, 0, 1993,
	0, 0, 0, 2002, 2003, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 2026, 0, 2040, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 2033, 0, 0, 0, 0,
	0, 0, 2002, 2003, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 2008, 0, 2038, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 3615,
	0, 0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 1985, 1986, 0, 2018, 2019,
	2020, 2029, 2030, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 2022, 2016,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 1985, 1986, 2004, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 2016, 2025, 2040,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 2035, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 2010, 2011, 2012, 2013,
	0, 0, 0, 2004, 0, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 2026,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 2033, 0, 2010, 2011, 2012, 2013, 0, 2002,
	2003, 0, 0, 0, 1993, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 2015, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	2033, 0, 2034, 0, 0, 0, 0, 2002, 2003, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 2024, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 2014, 2022, 2016, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 2035, 0, 0, 0, 0,
	2009, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	1985, 1986, 2004, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 2016, 0, 2040, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 0, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 2007, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	2004, 0, 0, 1993, 0, 0, 0, 2561, 0, 0,
	0, 0, 0, 0, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 1999, 2000, 2006, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 0, 0, 0, 0, 2026, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 2033,
	0, 2010, 2011, 2012, 2013, 0, 2002, 2003, 0, 0,
	0, 1993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	2008, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 0, 0, 2026, 0, 0, 0, 2036, 0,
	0, 0, 0, 0, 0, 2015, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 2002, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 0, 2008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 1106, 0, 1089, 1088,
	0, 2040, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 1090, 0,
	0, 0, 0, 1093, 0, 0, 0, 0, 1147, 0,
	1118, 0, 0, 0, 0, 0, 0, 0, 1103, 1104,
	0, 0, 0, 0, 0, 0, 0, 0, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1136, 1095, 0, 2025,
	0, 0, 0, 1096, 0, 0, 0, 0, 0, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 1133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1109,
	1107, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 1119, 0, 0, 1141, 1140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1144, 1132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 0, 1146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1092, 0, 0, 0, 0, 1127, 1128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1138, 1125,
	0, 0, 0, 0, 0, 0, 0, 1145, 1120, 0,
	0, 1112, 1110, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 1116, 0, 0, 1085, 0, 1139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1131, 0, 0, 1129, 0, 1117,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1143, 0, 0, 0,
	0, 0, 0, 0, 1121, 0, 1122, 0, 0, 0,
	0, 0, 0, 0, 0, 1098, 1142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1126,
}

var sqlPact = [...]int{
	6619, -1000, -1000, -1000, -1000, -1000, -1000, 192, -1000, -1000,
	191, 187, 184, 182, 179, 176, 174, 173, 171, 169,
	165, -1000, -1000, 164, 163, 156, 155, -1000, 154, 153,
	-1000, 152, -1000, -1000, 150, -1000, 143, 142, 141, -1000,
	-1000, 139, -1000, 136, -1000, -1000, -1000, -1000, 135, 133,
	132, 106367, 105759, 106973, 2564, 134297, 116077, 2427, 95433, 133689,
	94825, 133081, 2359, 11183, 132473, 3079, 131, -1000, 131865, 130,
	129, 128, -1000, 115469, 131257, 113039, 112431, 2030, 1790, 1764,
	-1000, 127, 126, -1000, 7673, 80767, 125, 123, 122, 121,
	2956, 120, -1000, 119, 118, -1000, 117, 113, -1000, 15803,
	1583, -1000, 112, 111, 110, -1000, 382, 111823, 109, 108,
	107, 2874, 106, 105, 78341, 104, 102, 100, 2712, 3197,
	-1000, -1000, 2335, -1000, -1000, 92, 91, 89, 87, 86,
	85, 83, 77, 75, 74, 72, 71, 70, -1000, 69,
	68, 66, 59, 56, -1000, 54, 52, 50, -1000, 48,
	-1000, 44, 43, 41, 40, 39, 37, 36, 32, 31,
	29, 28, 27, 25, 24, 23, 155069, -1000, -1000, 21,
	-1000, 2080, 1763, 1761, 1757, 1041, 20, 19, 18, 17,
	16, 14, 13, 12, 11, 9, 7, 6, 5, 4,
	3, -1, -2, -3, -4, -5, -1000, 140, -12, -13,
	-14, -15, -18, -19, -20, 2558, 3925, -1000, 1655, 1031,
	1252, 35488, 3338, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 143387, 134903, -25, -77, -26, -1000, 3706,
	1078, 64231, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 240, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 466, 2604, 742, -1000, -1000, -1000, 130649, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2563, -41, 96039, -1000,
	2253, -1000, -1000, -1000, -1000, -1000, 740, -1000, 2562, 2492,
	361, 2485, 96039, -1000, -1000, -1000, 3796, 3671, 2761, 4219,
	4217, 4215, 4212, 4210, 142781, 2018, 4205, 2837, 4204, 4203,
	4202, 4200, 4198, 4197, 4196, -1000, 105151, 1097, 104543, 103935,
	3791, 130043, 103327, 129435, 145817, 54274, 1030, 3795, -1000, -1000,
	-1000, -1000, -1000, -1000, 134903, -1000, 1096, -1000, -1000, 4195,
	2282, 739, 114861, -1000, -1000, 128827, 1906, -1000, -1000, -1000,
	966, 1272, 37980, 37980, 37980, 239, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3798, -1000, -1000, -1000, -1000, 134903, 3073,
	3073, 1471, 1433, 1433, 3073, 3073, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4194, 4193, 4190, 4189, 4188, 1485,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 94217, 27823, 93609,
	93001, 128219, 53651, 102719, 102111, 4187, 4186, 4185, 53028, 88745,
	61747, 3922, 127611, 145209, 3921, 3919, 1095, 2245, 1582, -1000,
	-1000, -1000, -1000, -1000, -1000, -48, 84425, 3985, 134903, -1000,
	237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 52405, 741,
	51782, 691, 51159, 508, 127003, -1000, -1000, -1000, -1000, -1000,
	88127, 3670, -1000, 126395, 1627, 2759, 4183, 4181, 1191, 4180,
	3653, 2016, 4178, 4175, 4174, 4169, 4167, 4163, 4162, 1611,
	125787, 2990, 125179, 1939, 144601, 2079, 1094, 101503, 106973, 2981,
	124571, 1580, 1515, -1000, -1000, -1000, -1000, 3462, 3186, 3185,
	1401, -1000, -1000, -1000, -1000, -1000, 67931, 10028, 6714, -1000,
	-1000, 12333, 123963, 71011, 106973, 106973, -1000, -1000, -1000, -1000,
	-1000, -1000, 50536, 510, 49913, 843, 123355, -1000, -1000, 68547,
	3281, 1130, -1000, -1000, -1000, -1000, -1000, 122747, 49290, 503,
	48667, 842, 134903, -1000, 3334, 2152, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3358, 1715, 3984, 3089, 87509,
	2325, 1520, 3730, 3461, 3414, 1614, 2242, 3413, 4156, 2883,
	3410, 3408, 3406, 3403, 3392, 1852, 2894, 507, 2888, 34865,
	3314, 1979, 48044, 1646, 1594, 3384, 3383, 4004, 3854, 2231,
	2241, 2271, 2270, 92393, 4155, 4153, 3696, 3382, 3375, 3147,
	3374, 2103, -1000, 3278, 1571, 236, -1000, -1000, -1000, -1000,
	-1000, -1000, 236, 1555, -1000, -1000, -1000, -1000, -1000, 97251,
	-1000, -1000, 1485, -1000, -1000, -1000, 1382, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1655, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3677, -1000, 2334, -1000, -1000, -1000, 2782, 3692,
	3692, 3692, 3794, 438, 419, -1000, 140, 906, 1164, -1000,
	-1000, 154162, -1000, -1000, 54897, 54897, 54897, 54897, 54897, 54897,
	54897, 54897, 2369, -1000, 734, -1000, -1000, 781, -1000, 722,
	653, 588, -1000, -1000, -1000, -1000, -1000, -1000, 717, -1000,
	-1000, -1000, -1000, -1000, -1000, 3979, -1000, 30990, -1000, -1000,
	-1000, 421, 716, 54897, -1000, -1000, 4033, 4032, 941, -1000,
	235, 999, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3328, 713, 712, -1000, 707, 705,
	701, 700, 699, -1000, 697, -1000, 696, 695, 692, 689,
	688, 685, 684, 683, -1000, 2279, -1000, -1000, -1000, -1000,
	-1000, -1000, 639, 637, 637, 637, -1000, 1079, -1000, -1000,
	-1000, 255, 632, 247, 628, 627, 626, -1000, 680, 679,
	670, 669, 665, 664, 662, 660, 658, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1075, -1000, -1000, -1000, -1000, 1398,
	-50, 134903, -1000, 466, -50, -1000, -1000, 657, -1000, 39244,
	39244, 39244, -1000, -1000, 2559, 54897, -1000, 2596, -1000, -39,
	-39, 936, 66079, -1000, 62981, 936, 393, 793, 72235, -1000,
	3273, -1000, -1000, 656, 234, -1000, -1000, -1000, -1000, 28439,
	3272, 134903, 134903, 134903, 106973, 106973, 106973, 134903, 4152, 4147,
	3565, 54897, -1000, -1000, 80159, 147635, 107579, 1379, -49, -1000,
	-1000, 3899, 83809, 79553, 3327, 147635, 3326, 3270, 147033, 86891,
	4145, -1000, -1000, -1000, -1000, -1000, 3541, 4143, 4142, 4141,
	-1000, 134903, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 269,
	3540, -1000, -1000, 111215, 269, 3539, -1000, 269, 3538, -1000,
	110609, -1000, -1000, 2480, 3536, -1000, -1000, 275, 3535, -1000,
	-1000, -1000, 274, 3532, -1000, -1000, 232, -118, 3531, -1000,
	-1000, -1000, -1000, -1000, -1000, 154162, -1000, -1000, -1000, 146425,
	-1000, 3690, -1000, 134903, -1000, 54897, -1000, -1000, 3897, 1623,
	3713, 3827, -1000, -1000, -59, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2803, 2793, 1189, 2621, -1000, 3577, 1626, 37980,
	3636, -1000, -1000, -1000, -1000, -1000, 228, 28439, 3145, -1000,
	-1000, 134903, -1000, 134903, 3073, 3073, -1000, -1000, -1000, 3992,
	3991, 3073, 3073, 134903, 134903, -1000, -1000, -1000, -1000, -1000,
	-1000, -59, -1000, 2690, 3530, 1961, -1000, 2611, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2122, 3528, -1000,
	2206, 3526, 2058, -1000, -1000, 2190, -1000, 150572, 1509, -1000,
	-1000, -1000, -1000, 2348, 3525, -38, -1000, -1000, 2932, -1000,
	-1000, -1000, -1000, 150419, -1000, 3223, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1846, -1000, -1000, 2306, 2208,
	-1000, 1376, 3521, -1000, 3088, 3088, 100895, 3493, 70395, 68547,
	84425, -58, -1000, -1000, -1000, -1000, -1000, -128, -1000, 27199,
	154162, -1000, -1000, -1000, -1000, 1978, 154162, 945, -1000, -1000,
	3511, -1000, 154162, 935, -1000, -1000, 3506, -1000, 2891, -1000,
	3322, -1000, -1000, -1000, 2703, 86273, 2702, 1049, -1000, 106973,
	2236, 4139, -1000, 4138, -1000, -1000, 4137, -1000, 4136, 4135,
	4134, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 100289, 2545,
	-1000, -1000, 1438, 1005, 89361, -1000, 2697, 3822, -1000, 99681,
	1093, -1000, 1028, 2696, -1000, 1506, 110003, 996, 2694, -1000,
	4133, 3771, 2994, 1028, 2693, -1000, -1000, -1000, -1000, -1000,
	1043, -1000, 73447, -1000, 73447, -1000, 1834, -1000, 142175, -39,
	106973, 3979, -1000, -83, -1000, -1000, -1000, 1078, -1000, 67312,
	-1000, 67312, 114253, 89361, 1005, 3269, 76501, 154074, -1000, 1047,
	-1000, -1000, 154162, -1000, -1000, -1000, 2885, -1000, -189, 3086,
	-1000, 89361, 69779, 3267, 2882, -1000, 154162, -1000, -1000, -1000,
	-1000, 154162, -1000, -1000, -1000, 89361, 1438, -1000, 122139, 99073,
	-1000, -1000, 1561, 2867, -1000, -1000, -1000, 68547, 3266, 1431,
	89361, 89361, 89361, -1000, 121531, -1000, -1000, 2299, 1788, 3686,
	2265, 106973, -1000, 2131, -1000, -1000, -1000, 3714, 3486, 134903,
	-1000, -1000, 3316, -1000, 83203, 109397, -1000, 108791, -1000, 108185,
	-1000, 106973, -1000, 106973, -1000, 4131, 4129, 4128, -1000, -1000,
	4127, -1000, 4126, 3705, -1000, 698, 47421, 154162, 3702, -1000,
	4125, 2221, 3314, 154162, -1000, 3482, 1792, 1784, 134903, -1000,
	-1000, 134903, -1000, 134903, -1000, -1000, -1000, 2598, 1728, -1000,
	-1000, 2802, -1000, -1000, -1000, 1046, -1000, -1000, 106973, 106973,
	106973, 106973, 106973, 1665, -1000, 46798, -1000, -1000, 3364, 4123,
	1893, -1000, 2098, -1000, 3265, 3693, -1000, 3264, 1560, 1988,
	221, 4037, 221, -1000, -1000, 276, -1000, -1000, 141569, -1000,
	2782, -1000, 134903, -1000, 2778, 3305, 3312, 1476, 2595, 2921,
	-1000, 46175, 2900, 58635, 2607, 140, -1000, -1000, 140, 140,
	36734, -1000, -1000, 37980, 906, 83809, 83809, 28439, 1385, 54897,
	54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897,
	54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897,
	54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897,
	54897, 54897, 54897, 54897, 54897, 2515, 54897, 1374, 54897, 54897,
	54897, 54897, 2192, -1000, -1000, 2162, 521, 2275, 653, -1000,
	-1000, -1000, 3958, 3958, 3958, 1541, 1541, 1541, 13358, 13358,
	509, 4122, 781, -1000, 54897, -1000, 93, 66685, 54897, 29057,
	-1000, 419, 12697, 2720, -1000, 414, 29710, -1000, -1000, -1000,
	30990, 588, 45522, 54897, 1044, 154162, -1000, -1000, 1657, 3987,
	26575, 3347, 3135, 651, 877, 876, 34212, 33559, 32906, 32253,
	874, 821, 54897, 54897, 54897, 54897, 54897, 54897, 54897, 54897,
	-1000, -1000, 3990, -1000, 3987, -1000, -1000, -1000, -1000, 3987,
	1372, 1316, 3987, -1000, 3987, 3987, 8562, 8562, 44899, 44276,
	43653, 59258, 43030, 54897, 31630, 42407, 41784, -1000, 61127, 134903,
	-50, 3895, 54897, 360, -1000, 11777, -1000, 360, 360, 650,
	-84, 154162, 2893, 2893, 64847, 2814, 2389, 2389, 2389, -1000,
	936, 20920, 936, 119713, 2405, 936, 936, 214, 258, 412,
	62365, 2596, 119713, 766, 648, -27, -32, -33, -1000, -1000,
	-34, -36, -1000, -1000, 106973, 646, 29057, 28439, 213, 2246,
	-85, 2913, 2911, 2907, 2904, -1000, 2901, 2542, -1000, -1000,
	-1000, 2001, -93, 1373, 106973, 134903, 1677, -1000, -1000, -1000,
	-1000, 84425, -51, 84425, 134903, -94, -1000, 147635, 6830, -100,
	-1000, 1391, 212, 3987, -1000, -1000, -1000, -1000, -1000, 4121,
	4120, -1000, 1071, 645, 641, 540, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 639, 637, 637, 637, -1000, 255,
	632, 247, 628, 627, 626, -1000, -1000, -1000, -1000, -1000,
	3253, 106973, 134903, 1569, 82597, 96039, -118, 107579, 147635, -43,
	-1000, -1000, -1000, -1000, 134903, -1000, -1000, -1000, 4118, -1000,
	106973, -1000, -1000, 106973, 269, 3501, -1000, 106973, -1000, 106973,
	260, 3498, -1000, -1000, 134903, -1000, 106973, 106973, -1000, 134903,
	134903, 134903, 147635, 147635, 253, -1000, 106973, 906, -101, 1210,
	-59, -1000, -1000, -1000, -1000, 1485, -1000, 1923, -1000, -1000,
	-1000, -1000, -1000, -1000, 1619, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 941, -1000, -1000, -1000, -1000, 3974, 3970,
	-57, -1000, -1000, 28439, -1000, 2115, -1000, -1000, -1000, -1000,
	134903, 134903, -1000, -1000, 134903, 134903, -1000, -1000, -62, 1802,
	572, 1369, -1000, 91785, 2592, 3681, 4116, 2969, 3667, 1822,
	-1000, 1726, 616, -1000, 3790, 97251, 3851, 3856, 1368, -1000,
	3250, -1000, -1000, -1000, 955, 1892, 1968, 1367, 1364, 97251,
	2206, -1000, 83809, -1000, 2957, 3793, 1433, 1469, 1433, 1433,
	1467, 1435, -1000, 97251, 1967, 1363, 1361, 1360, -1000, -1000,
	1853, 1774, -1000, -1000, 120925, 1682, -1000, 1359, 1358, 136115,
	3915, 3677, 2438, 832, 2199, -1000, 1463, 1350, 3249, -1000,
	-1000, -63, 3838, 3853, 1368, -1000, 3241, 1334, -1000, -1000,
	-1000, 3787, 106973, 28439, 1669, 1668, 1667, 1966, 1322, -53,
	-1000, 3833, 1725, -1000, 1438, 1438, 116683, 134903, 3933, 89361,
	-1000, 2733, -1000, -1000, -1000, 3726, 3724, -1000, -1000, 1320,
	1319, -1000, 1020, 5533, 3602, -1000, 147635, 1020, 1020, 2043,
	3495, 3042, 1698, -1000, 3084, 931, 3083, -1000, -1000, -1000,
	931, -58, 84425, 134903, 206, -1000, 93, 54897, 54897, 93,
	54897, 93, -1000, 3816, 3494, 3894, -1000, 3491, 4115, 609,
	-1000, 2828, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 605,
	2692, 3240, 134903, 246, -1000, 106973, -1000, 3893, 120319, -1000,
	3485, 147635, 2206, 2689, -1000, -1000, 98465, -1000, 3484, 2212,
	466, 2688, -1000, 704, 4112, 3454, -1000, 140963, -1000, 3690,
	1321, 3450, 1128, 693, 3890, -1000, 693, 74663, -1000, 134903,
	-1000, -39, 2416, 90573, -106, -108, 411, -1000, 134903, 134903,
	3619, 2218, 2211, -1000, 1024, 68547, -1000, 68547, -116, -1000,
	-189, 3077, 1692, 68547, -1000, 1005, -141, 931, -1000, 931,
	-1000, 106973, 3311, -1000, 89361, 68547, -1000, 1005, 1005, 1005,
	-1000, -1000, -1000, -1000, 4111, 4110, 4109, 4107, -1000, -1000,
	1027, 106973, 134903, 106973, -1000, 3041, 1690, -1000, 205, -1000,
	147635, -1000, 147635, 134903, 106973, -1000, 1027, 134903, 1027, 134903,
	1027, 134903, 1027, 1027, -1000, -1000, -1000, -1000, -1000, 93,
	-1000, -1000, 154162, -1000, 54897, -1000, -1000, 1705, 4097, 1851,
	-1000, 3307, -1000, 3306, -1000, 2, -1000, -1000, 3989, 2069,
	-1000, 4031, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4096, 154162, -1000, 2280, -1000, -1000, -1000, -1000, 106973,
	106973, 106973, 106973, 134903, 3598, -1000, 134903, 3592, 3596, 106973,
	-1000, 4035, -1000, -1000, 97251, -1000, 2778, 3305, -1000, -1000,
	-1000, -1000, -1000, -1000, 1840, 2507, -1000, 2862, -1000, 1779,
	-1000, -1000, -1000, 154162, 59881, -1000, -1000, 154162, 1995, -1000,
	58012, 57389, -1000, -1000, 1915, 106973, 2923, -1000, 2923, -117,
	-1000, 151481, 2860, 106973, -57, 37980, -1000, -1000, -1000, -1000,
	-1000, 954, 1100, 1100, 1411, 1411, 1411, 1411, 3806, 524,
	330, 5755, 5977, 5977, 1215, 1215, 1215, 1215, 1215, 5977,
	5705, 1541, 1541, 5705, 5705, 5705, 5705, 5705, 1541, 1541,
	1541, 5977, 5977, 5977, 1541, 13358, 154491, 10453, 54897, 54897,
	1313, 2149, 521, 9746, 54897, 5678, 5678, 5678, 5678, -1000,
	2011, -1000, -1000, -1000, -1000, 3239, 604, 59258, 59258, -1000,
	-1000, -1000, -1000, 30350, 54897, -1000, -1000, -1000, -1000, 41131,
	-1000, -1000, 150149, -340, 410, -1000, 203, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	408, -107, 101, -1000, 54897, 54897, 54897, 403, -1000, 200,
	54897, 134903, -1000, 17965, 764, -113, -1000, -125, 1527, -1000,
	54897, -1000, -1000, 1311, -1000, 1310, 1306, 1303, -1000, 603,
	401, -1000, 199, -1000, 2373, 601, 600, 54897, -1000, -1000,
	-1000, -1000, -1000, 149736, -1000, -1000, 149668, -1000, -1000, 149251,
	-1000, -1000, 149025, -1000, -1000, -1000, -1000, -1000, 153657, 17025,
	16523, 15854, 9798, 14686, 14380, -126, 397, -127, 396, 953,
	952, 391, 390, 389, -140, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -146, 387, -1000,
	3238, -107, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	385, -1000, 384, -1000, 153578, -107, 383, 7003, -1000, 59258,
	59258, 59258, 59258, 374, -1000, 151068, -1000, 153352, 40508, 40508,
	40508, 373, 152939, 54897, -107, -151, -1000, -153, -1000, -1000,
	-1000, -1000, 544, -156, 1055, 39244, 63613, 28439, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1055,
	1055, 54897, -1000, 54897, 2880, -1000, -1000, -1000, -1000, 2871,
	2445, 2893, 64847, -1000, -1000, -1000, -1000, 119713, -1000, 3979,
	3456, -1000, 119713, -1000, -1000, 134903, 466, -1000, 119713, 119713,
	28439, 936, -1000, 936, 119713, 785, -1000, -1000, -1000, -1000,
	-1000, 371, 77117, 101, 198, 28439, 1028, -1000, -1000, 2986,
	2986, 2986, 2986, 2986, 106973, -1000, -1000, 147635, 1289, -55,
	-66, 3076, 3074, -58, 84425, -58, -128, 3930, -282, -1000,
	2300, -1000, 83809, -1000, 780, 1086, 28439, -1000, -1000, -1000,
	599, -1000, 3987, 3987, -1000, 3987, 147635, 3237, 302, 3070,
	3066, -1000, 2535, 293, -118, 147635, 4093, -1000, -1000, 269,
	-1000, 106973, 269, 269, -1000, 106973, 106973, 2480, -1000, 275,
	-1000, 274, -1000, -1000, -118, -1000, 1045, 37980, -1000, 1485,
	-1000, -1000, 1643, -1000, 2223, -1000, 1256, -1000, -1000, 37980,
	-1000, 3624, -1000, 1970, -1000, -1000, -1000, -1000, 5138, 134903,
	134903, 106973, -1000, 117895, 134903, -1000, 2402, 147635, -1000, 2687,
	140357, 2662, 139751, 83809, -1000, -1000, 597, 980, 2857, 2856,
	1124, 134903, 134903, 2854, 139145, 138539, -1000, 4092, 134903, 2296,
	54897, 117895, 3786, 2573, 2614, 93, 93, -1000, 93, -1000,
	-1000, 595, 1307, 106973, 106973, 134903, 147635, 106973, 2008, -1000,
	-1000, -1000, -1000, -1000, 97857, -1000, -1000, 1433, -1000, -1000,
	-1000, 1433, -1000, 1433, 2206, 1976, 134903, 147635, 106973, 147635,
	137933, 2171, 137327, 2170, -1000, -1000, 2164, 1964, 134903, -1000,
	-1000, -1000, -1000, -1000, 1546, -1000, 832, 1288, 3232, 54897,
	54897, 2314, 93, 93, -1000, 93, 594, 28439, 2182, -1000,
	3261, 134903, 4030, 136721, 4029, 134903, 134903, 134903, 147635, 3685,
	134903, -1000, -141, -54, -136, -1000, 910, 909, -128, -1000,
	3933, -1000, 908, 2282, 134903, 147635, -1000, 136115, 5533, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2310, 3007, 1135, 134903,
	1376, -1000, -1000, 1960, 1286, 1284, 97251, 2347, 1958, 2047,
	147635, 68547, 1025, 68547, 3003, -1000, -1000, 25951, -1000, 154162,
	154162, -1000, 154162, -1000, 81989, 89361, 89361, 134903, -1000, 75279,
	134903, 91179, 989, 3447, 74055, -128, 1005, 1438, 3360, 1866,
	-136, 593, 134903, -1000, -1000, 2206, 3445, 466, 2684, -1000,
	147635, 1087, 3888, 3439, 590, 4090, 4089, -1000, 106973, 2534,
	2678, -1000, -1000, 135509, 3416, 832, 134903, 1055, 64847, 2178,
	-1000, 71629, 1111, 134903, 2061, 277, -1000, -1000, -1000, -21,
	134903, -1000, 789, -1000, -1000, 2416, 2416, 1005, 69163, -164,
	-1000, 197, 589, 904, 903, -1000, 2612, -1000, -189, -1000,
	89361, 1024, 68547, 3227, -189, 3058, 3226, -1000, -1000, 1037,
	-1000, 1437, 3052, 1005, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -44, -1000, 1951, 2022, 134903,
	-118, -118, -69, -1000, -1000, 196, -55, -1000, 1027, -1000,
	1027, -1000, 1027, -1000, -1000, -1000, 154162, -1000, -1000, -1000,
	1841, 1793, 134903, -1000, 3303, -1000, 134903, -1000, -1000, 28439,
	134903, 106973, 28439, 106973, 3300, 3299, -1000, -1000, -1000, 134903,
	-1000, -1000, 134903, -1000, -1000, -1000, -1000, -1000, -1000, 1154,
	-1000, 1995, 2505, -1000, 588, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2786, -1000, -56, 36734, 940, -1000,
	-1000, 106973, -45, -57, 54897, 54897, 9326, 7855, 54897, 59258,
	59258, -1000, 54897, 7842, -1000, -1000, -1000, -1000, -1000, 3221,
	587, 54897, 83809, 8673, 7038, -1000, 369, 13687, 5705, -1000,
	54897, -1000, 630, -1000, 366, 39885, -1000, 151962, 0, -165,
	-1000, 21559, -107, -167, -1000, -1000, 778, -1000, 3489, -1000,
	54897, 152871, 2754, 2147, 2088, 1911, 3987, 4028, 25327, -1000,
	75895, 1056, 2443, 148981, -1000, -1000, -1000, -1000, 83809, 83809,
	54897, 54897, -1000, 54897, 54897, 54897, -1000, -1000, -1000, 3987,
	944, -1000, -1000, -1000, 944, -1000, -1000, 1433, -1000, 1433,
	-1000, 54897, -1000, -1000, 3212, 54897, -1000, 83809, 83809, 59258,
	59258, 59258, 59258, 59258, 59258, 59258, 59258, 59258, 59258, 59258,
	59258, 59258, 59258, 59258, 59258, 59258, 59258, 59258, 59258, 2813,
	59258, 3956, 3956, 3956, 1138, -1000, 3297, 3212, 54897, 54897,
	83809, 363, 359, 358, -1000, 54897, -107, -1000, -1000, 10431,
	585, -1000, 2769, -1000, 3134, -1000, 54897, -1000, -159, -1000,
	2596, -1000, -1000, 3134, 3134, -170, 154162, 64847, 64847, -1000,
	583, 54897, 2870, -1000, -1000, 759, -337, -1000, 901, -1000,
	-1000, -1000, -1000, -1000, -1000, 900, -1000, 466, -1000, -1000,
	-1000, 195, 119713, 119713, 758, -1000, -173, -1000, -1000, -182,
	-1000, 3887, 356, 28439, -1000, 1055, 4265, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2898, -282, 147635, 147635, 1950, 1945,
	-58, 2478, -1000, 3144, 4023, -1000, 3988, 777, 757, 148,
	3987, 352, 350, 349, -118, 147635, 147635, 1943, 1941, 78947,
	147635, -1000, -1000, -1000, 269, -1000, -1000, -1000, 260, -1000,
	-1000, -1000, -1000, 2949, -1000, -59, -1000, -1000, -1000, 54897,
	-1000, 997, -1000, -1000, 3676, 582, 1278, 1276, -1000, -183,
	-1000, 891, -1000, -1000, -1000, -1000, -1000, 3190, -1000, 3437,
	-1000, 2675, -1000, 1115, 2672, 2153, -1000, 54897, 579, 2993,
	578, 577, 4086, 2333, 4085, 1126, 3434, 2480, 3424, 2480,
	-1000, -1000, -1000, 943, -1000, 154162, -188, -1000, 2573, -1000,
	576, 573, -1000, -62, 1799, 546, 1271, 1036, -1000, -1000,
	54897, 54897, 119107, -1000, 501, 3678, -46, -1000, -1000, -1000,
	1937, 1265, 1264, -1000, -1000, -1000, -1000, -1000, 2206, 1936,
	1263, 1259, -1000, -1000, -1000, -1000, -1000, 2670, -1000, 134903,
	-1000, 3419, 134903, 134903, 1034, -1000, 3367, 3366, 949, 134903,
	54897, 54897, 152458, 152232, -1000, 1032, -1000, -1000, 54897, -1000,
	-63, 1258, 3839, 2669, 106973, -1000, 2480, 3417, 1244, -1000,
	1237, -1000, -1000, -1000, 3831, 3830, 1243, -1000, 116683, 89361,
	89361, 3933, 68547, -1000, -1000, -1000, 3967, -1000, -1000, -1000,
	-1000, 85655, -1000, -1000, 1020, 134903, 147635, 106973, 1973, -1000,
	-1000, 96039, 96645, 134903, 3042, -118, 931, -1000, 2626, 931,
	1025, 3203, -1000, 2892, -1000, -1000, 1029, 340, -64, -1000,
	1329, 81373, 77723, -1000, 2394, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4084, 339, -190, -65, 83809, -1000, -1000, -1000,
	-1000, 2662, 106973, 134903, 1353, 2989, 134903, 134903, 3886, -1000,
	2581, 558, 106973, 942, -1000, 3979, -1000, -1000, -1000, 134903,
	39244, 116683, -1000, 3821, 106973, 3884, 3411, 1028, 106973, 93,
	106973, 4002, -1000, -1000, 3881, 106973, 3407, 2532, 2667, 2817,
	832, 89967, 1028, 2424, -74, -1000, 2061, 38603, 3674, -191,
	-1000, -1000, -1000, 1055, 74663, 64847, 54897, 4083, -202, -1000,
	-1000, -1000, -1000, -1000, 89361, 1005, 134903, 134903, 4081, 89361,
	89361, 89361, -67, 571, -1000, 880, 875, 873, -1000, -1000,
	-1000, -1000, -1000, -1000, 872, 871, 869, 867, 1024, -1000,
	-1000, -189, 68547, 1024, 68547, 93, -1000, 2475, 106973, 68547,
	-1000, 24703, 134903, 3041, -1000, 85031, -1000, -1000, -1000, -1000,
	-1000, 1027, 4018, -128, -1000, -1000, -1000, 2339, 2601, 2339,
	2038, 2032, -1000, -1000, -1000, 2504, -1000, -1000, -1000, -1000,
	2922, 3672, 28439, 3814, 5678, 54897, 54897, 7803, 5617, 1312,
	5678, 54897, 54897, 83809, 154579, -205, 54897, 54897, -1000, 54897,
	750, 154162, -1000, 4017, 54897, 338, 335, -1000, -1000, -1000,
	3980, -1000, -1000, -1000, 154162, 54897, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 334, -1000, 94, -1000, -1000, -1000, 143993,
	-1000, 54897, 333, 3784, -1000, 328, 325, 12850, 442, 148755,
	148332, 148288, 307, -1000, -1000, 301, 294, 154162, 3297, 154162,
	-1000, -1000, 1163, 1163, 1423, 1423, 1423, 1423, 3956, 1854,
	1891, 1127, 805, 805, 805, 323, 1138, 1138, 805, 805,
	805, 1138, 3195, 2818, 560, 8069, -1000, -1000, 154162, 154162,
	292, -1000, -1000, -1000, -107, 291, 10431, -1000, 3130, 3779,
	154162, -1000, 64847, 3130, 3130, -1000, -1000, 2445, 134903, 154162,
	64847, -1000, 3456, -1000, 22825, 22195, -1000, 28439, -1000, -1000,
	-1000, -1000, 3979, -1000, 77117, -1000, 554, -1000, 1, -1000,
	4265, -1000, 864, -1000, -1000, 89361, 89361, 4080, 4078, -1000,
	4016, 4015, 2400, 4014, 2986, -1000, -282, -175, 134903, 134903,
	-1000, 2477, -1000, 745, 4077, 775, 28439, 290, -1000, -1000,
	-1000, -118, -118, 134903, 134903, 3191, 106973, 134903, 1424, -118,
	-1000, -1000, -1000, 3618, 154162, 3296, 3108, 3090, 134903, 134903,
	-1000, 117895, 37980, 1697, 118501, 134903, 3401, -1000, 3400, -1000,
	1124, 2819, 148244, 65463, -1000, 65463, 134903, -1000, -1000, -1000,
	-1000, 2084, 1712, 4076, 1174, -1000, 3717, 134903, -1000, 134903,
	-1000, -1000, -1000, 117895, -1000, 134903, 134903, 106973, 134903, -1000,
	147635, 3379, -207, 154162, -68, -1000, 862, -1000, 1458, -1000,
	24079, 134903, 147635, 106973, 134903, 147635, 106973, 3398, 1109, 134903,
	-1000, 1108, 2353, -1000, -1000, 3363, -1000, 154162, 152188, 93,
	54897, 3377, -210, 28439, -1000, 4010, 4009, 3397, 3721, -1000,
	134903, 4008, 134903, 106973, 3616, -1000, -1000, -1000, 1026, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1920, 1235, 1232, 2530,
	2528, 2471, -69, 2347, 1025, -70, 553, -1000, 859, -1000,
	-1000, 856, 851, 1025, -1000, 89361, 68547, 4075, 2057, 75279,
	54897, 54897, 83809, -1000, 83809, -1000, -1000, -1000, 2968, -1000,
	113645, 91179, 2500, -1000, -1000, 552, 134903, 134903, 551, -1000,
	93, -1000, 4072, 117895, 550, -1000, 2472, -1000, 744, -1000,
	-1000, 226, -213, 147635, 2206, 93, 106973, -1000, 466, 1013,
	466, 289, -71, -1000, 3381, 1119, 28439, 106973, 3394, 2823,
	832, 89967, -1000, 1321, 2921, -1000, -72, -1000, 608, 93,
	2424, -1000, -74, 154162, -1000, 850, 287, -1000, 3613, -1000,
	-1000, -218, -1000, -1000, 5528, 5528, 89361, 68547, 89361, 89361,
	89361, 68547, 89361, -1000, 1024, 3880, -1000, -189, -1000, 2633,
	-1000, 1005, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28439, 1702, -1000, 549, 548, -1000, -1000, -1000, -1000, 3672,
	5678, 5678, 54897, 54897, 54897, 5678, 154579, -220, -1000, 5678,
	5678, -107, -1000, -1000, 151962, -1000, -1000, -1000, 154162, -1000,
	23455, 2344, -1000, 20217, -1000, 36734, -1000, -1000, 54897, 54897,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 59258, 3181,
	547, 83809, -1000, -1000, 283, 1021, 54897, 56766, 2596, 1021,
	1021, -1000, -221, -1000, -1000, -1000, 3979, -1000, 3979, 1,
	-1000, -1000, 4071, 28439, -1000, 89361, -1000, -1000, -1000, -1000,
	-1000, 4070, 4069, 2648, 4068, 4067, -1000, -1000, -1000, 3356,
	-132, -158, -1000, 774, -1000, 4065, -1000, -1000, 168, 147,
	147635, 3178, 146, 3039, -1000, 93, -1000, -1000, -1000, -1000,
	-1000, -1000, 3022, 3875, -1000, 2145, -1000, 134903, 134903, -1000,
	134903, -1000, 28439, 134903, 3162, 1309, -1000, 980, 2853, 542,
	59258, 1151, 106973, 939, 3100, 3054, -1000, 3909, 3778, 3027,
	-227, -1000, 134903, 54897, 134903, -229, -232, 2644, -1000, -1000,
	1149, 1305, 54897, 1144, -1000, -1000, -1000, 83809, 541, 2480,
	2480, -1000, -234, -235, -1000, -1000, -1000, 54897, 1230, 134903,
	37357, -1000, 4061, 3678, -1000, -1000, -1000, -1000, -1000, -1000,
	134903, 134903, -1000, 134903, 134903, -1000, 54897, -1000, 151549, 54897,
	1218, -1000, -1000, -1000, 4007, 2480, 28439, 2480, -1000, 2480,
	3721, 1165, 2570, 134903, 147635, 106973, 1680, 1680, 3295, -1000,
	-1000, -1000, 2811, 2811, 89361, 68547, 68547, -1000, -75, 1025,
	-1000, 1787, -1000, 154162, 154162, -1000, -1000, 2341, 4059, -1000,
	-1000, -1000, -1000, 2850, -1000, -1000, -1000, 134903, 2827, 3085,
	65463, 539, 538, 134903, 1006, -1000, -237, 91179, 989, 946,
	-1000, 73447, -1000, -1000, -1000, -1000, 466, 3874, -1000, 2936,
	3872, -1000, 4005, 534, 533, 134903, 2525, 526, 28439, 3669,
	832, 89967, -1000, 3416, 2061, -1000, 2657, 134903, 3664, -1000,
	2921, 521, 1005, 502, 1005, -1000, -240, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1396, 1024, -76, -1000,
	894, 879, -1000, -1000, -1000, 106973, 106973, 54897, 54897, -1000,
	5678, 5678, 5678, -1000, 263, -1000, -1000, 2424, 3764, -1000,
	-78, 19904, 19798, 738, 59258, 83809, -247, -1000, -1000, 134903,
	154162, -82, -1000, 154162, 500, 499, 300, -1000, -1000, -1000,
	631, 525, -1000, -1000, -1000, -1000, 4056, -1000, -1000, -1000,
	147635, 147635, 4055, -1000, 147635, 147635, -118, 147635, 147635, 1896,
	-1000, 117289, 134903, -1000, -1000, 2153, 2683, -1000, -1000, 134903,
	2664, -1000, -1000, -1000, 1019, 54897, 8069, 59258, 496, 54897,
	-1000, 495, 493, 3871, 3585, -1000, 2965, 3201, 2166, 65463,
	-1000, 3672, -1000, 19152, -1000, 1118, 2155, -1000, -1000, -1000,
	-1000, 154162, 59258, 3721, 65463, -1000, -1000, 492, 490, 154162,
	489, 849, 3177, -1000, -1000, -1000, -1000, -128, -128, -1000,
	154162, 93, 154162, 488, 3839, -1000, -1000, -1000, -1000, 2480,
	106973, 847, -1000, -1000, -1000, 1217, -1000, -1000, -1000, -1000,
	4054, 4049, 3173, 96039, -1000, -248, -1000, -1000, -1000, 2197,
	83809, -1000, 989, -1000, -1000, 2500, 481, -1000, 1004, 2906,
	2906, -249, 65463, 65463, -257, 2509, 2935, -1000, 262, 3869,
	946, -1000, 3952, -1000, 1055, -1000, 3867, 93, 3610, -1000,
	93, -1000, 4002, 65463, -1000, 106973, 65463, 2523, 2264, 2799,
	89967, -1000, 2817, -1000, -1000, -258, 134903, 2061, -1000, -1000,
	89361, -1000, -1000, 3976, -1000, 2633, -1000, 134903, -1000, 134903,
	-1000, -1000, -259, -260, -1000, 2255, 54897, 36734, -1000, -1000,
	738, -265, -1000, -86, -1000, 3866, 56766, 4045, 4044, 4043,
	-1000, -1000, -1000, -282, -282, -1000, -118, -118, -118, -118,
	134903, -1000, 2142, -1000, 2662, -1000, -1000, 3389, -1000, 3119,
	475, 19108, 8069, 2775, 134903, 18635, 2206, 2206, -1000, 3859,
	3184, -1000, -1000, 2314, 472, -1000, -1000, -1000, -1000, 940,
	134903, 1004, 3116, 106973, 8069, 1123, -266, 2339, 2339, 54897,
	36111, 2352, -1000, 54897, -1000, -1000, 3721, 68547, 147635, -1000,
	-1000, 147635, 2521, -1000, 3165, 3967, 6166, -1000, 2509, 134903,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1118, -267, -268, -1000, -1000, 3710, -1000, 3604,
	2968, 93, -1000, -1000, -1000, 93, -1000, 4042, 1013, 259,
	-274, 1119, -275, 106973, 2209, -1000, 832, -1000, 2823, 1055,
	3561, -1000, -276, -1000, -1000, -1000, -281, -283, -1000, -1000,
	251, 56143, 56143, 56143, -107, -117, -1000, 134903, 470, -1000,
	-1000, -1000, -1000, -1000, -1000, 138, -1000, -1000, 3359, 934,
	-1000, 918, 2097, 249, 1146, 248, 243, -1000, -1000, -1000,
	3027, -1000, 134903, -1000, -1000, -1000, 934, 466, -1000, 54897,
	1118, -289, -1000, 1106, -290, -1000, 1102, -291, -1000, 3172,
	-1000, -296, 2480, -1000, -282, 253, 1680, 1007, 3813, -1000,
	2488, 6166, -1000, 3996, 89967, -1000, -1000, -1000, 2520, 2638,
	-1000, -1000, -1000, -1000, 1908, 3045, -1000, 2809, 1449, 1449,
	134903, -1000, -1000, 2785, -297, -1000, -1000, 2166, 1118, 2314,
	2716, -1000, 2341, 1006, -1000, -1000, -1000, -1000, 1118, 450,
	2166, 449, 1661, 832, -1000, -1000, 1433, 3669, 3559, 1381,
	1005, -1000, -1000, -1000, 3544, -1000, 60504, 2531, 2031, 150842,
	3544, 3544, -1000, -1000, 147635, 134903, 1004, 3802, -1000, 922,
	919, 1587, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1055, -298, -1000, 2775, 154162, 1004, -1000, 2339, 3010, -1000,
	2339, 3171, -1000, 2327, -1000, -1000, -1000, -1000, 3167, -1000,
	1984, 3942, -1000, -1000, 3836, 54897, -1000, -1000, -1000, -1000,
	2632, 2510, 3035, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1004, 134903, 2314, 2166, 1004, 1999, 1998, 4041, 989,
	2509, 2166, 65463, 2314, 65463, 2304, -1000, 134903, -1000, 2264,
	1375, -1000, 1821, -1000, -1000, 2076, 3905, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -118, -1000, -1000, 834, -1000, 3572,
	-1000, 1140, 2470, 2470, -1000, -1000, 918, -1000, -1000, 445,
	-1000, 441, -1000, 147635, 2461, -1000, -1000, -1000, 154162, 2942,
	2630, -1000, -1000, -1000, -1000, 1004, 2314, 1055, -1000, 4040,
	-1000, 2509, -1000, 2314, -299, 1004, -304, 2350, -1000, -1000,
	-128, 2209, -1000, 1804, 74663, 2013, -1000, -1000, 2397, 55520,
	54897, -1000, 3936, -1000, -1000, 2881, -1000, 3027, 54897, 54897,
	253, 72841, 9026, -1000, 2937, 1055, 1004, -1000, -1000, 2785,
	1004, 1118, 1055, 2166, -1000, 832, 1661, 74663, -286, -1000,
	-1000, -1000, 154162, -1000, -1000, -1000, -1000, -307, -317, -1000,
	-136, 116683, -330, -1000, -1000, -1000, -1000, -1000, 1055, -1000,
	1055, 2166, -1000, 2314, 147635, 2304, -286, -1000, 2314, 1216,
	-320, -1000, -1000, -1000, 2314, 1004, -1000, -1000, -1000, -1000,
	-1000, 440, -1000, 1004, 1055, 54897, 1055, -1000, -327, -1000,
	2314, -1000,
}

var sqlPgo = [...]int{
	0, 4949, 4948, 21, 4947, 4946, 4945, 4944, 4943, 4940,
	4936, 4933, 4932, 4929, 4928, 4927, 161, 4926, 4925, 4924,
	4920, 4919, 4918, 4917, 4916, 4915, 4912, 4911, 4908, 4907,
	4906, 4904, 4902, 4901, 4898, 4897, 4896, 4895, 4894, 4893,
	4892, 4891, 4887, 4886, 4882, 4881, 4871, 4870, 4869, 4868,
	4854, 4850, 4848, 4845, 4843, 4842, 4841, 4838, 4837, 4836,
	4835, 4831, 4828, 4827, 4820, 4818, 4815, 4813, 4812, 4811,
	4810, 4806, 4804, 4802, 69, 4801, 4799, 4798, 4797, 4795,
	4794, 4793, 4792, 4790, 4789, 4788, 4785, 4783, 4775, 4771,
	4770, 4768, 4767, 4766, 4762, 4761, 84, 4760, 310, 4759,
	4758, 4757, 4756, 4754, 4753, 4751, 4750, 4746, 4744, 4743,
	4742, 4740, 308, 4737, 23, 199, 4735, 4734, 19, 4733,
	4732, 307, 4731, 4730, 4727, 4725, 4724, 318, 4723, 4722,
	4721, 4720, 4714, 288, 4713, 4712, 4711, 4710, 4706, 4704,
	100, 155, 4703, 4702, 259, 4701, 4700, 4699, 4698, 4696,
	4693, 4689, 286, 290, 4688, 4686, 4685, 282, 190, 4683,
	303, 4678, 4677, 4676, 4675, 4673, 4672, 4670, 4669, 4666,
	4665, 4664, 4663, 4662, 4661, 4659, 4657, 4652, 4650, 4648,
	4647, 4646, 4645, 4643, 4642, 4640, 4638, 4635, 4634, 4633,
	4632, 4630, 4629, 4627, 4626, 4625, 4624, 4622, 4619, 4618,
	4617, 4616, 4615, 279, 239, 150, 4614, 4613, 4612, 4611,
	4610, 299, 298, 4608, 4607, 4606, 4605, 4604, 3812, 4603,
	4602, 4600, 4599, 4598, 4596, 4595, 4594, 4593, 167, 8,
	38, 4591, 4588, 144, 109, 105, 102, 111, 113, 4585,
	4584, 140, 4583, 154, 141, 4581, 128, 132, 33, 35,
	332, 281, 7306, 275, 4580, 4579, 4571, 273, 224, 4570,
	269, 4569, 4566, 4565, 4564, 4563, 4562, 87, 68, 236,
	4561, 4560, 163, 194, 205, 203, 197, 198, 78, 65,
	118, 101, 75, 54, 22, 106, 248, 26, 5, 292,
	4559, 291, 6, 165, 10, 45, 4555, 4554, 4544, 4543,
	4313, 123, 4535, 297, 274, 188, 4534, 4533, 4532, 841,
	4528, 4525, 62, 277, 268, 130, 125, 135, 156, 4524,
	175, 193, 43, 4523, 187, 73, 4516, 4511, 120, 103,
	9924, 15858, 4505, 4504, 136, 81, 183, 5537, 209, 178,
	225, 218, 149, 196, 186, 4503, 70, 4502, 172, 174,
	202, 296, 4500, 92, 4494, 3863, 114, 208, 181, 6060,
	4493, 4492, 4491, 99, 4489, 122, 4488, 4487, 79, 31,
	2, 1, 166, 48, 52, 3, 4486, 34, 147, 59,
	36, 4475, 29, 4472, 4471, 4470, 4469, 56, 4466, 67,
	185, 4464, 4463, 315, 4462, 112, 64, 32, 4461, 95,
	245, 4459, 255, 157, 4458, 4457, 216, 230, 4456, 76,
	267, 4454, 4453, 4451, 4450, 4449, 316, 151, 9, 153,
	4448, 4444, 170, 4442, 71, 270, 223, 4441, 74, 4440,
	4439, 201, 60, 169, 314, 214, 253, 142, 263, 206,
	272, 4437, 4436, 4433, 233, 4432, 4431, 252, 179, 4429,
	4427, 261, 319, 117, 55, 96, 271, 98, 221, 184,
	4426, 229, 4425, 4423, 317, 211, 250, 47, 7, 11,
	131, 133, 4422, 15, 265, 182, 238, 146, 4420, 9150,
	2753, 3337, 256, 4419, 173, 129, 90, 148, 176, 294,
	97, 4416, 4413, 2914, 4408, 4404, 4398, 4394, 210, 4393,
	4386, 41, 180, 249, 213, 4385, 124, 88, 63, 28,
	145, 108, 313, 152, 254, 226, 283, 4384, 4381, 4380,
	207, 4368, 80, 240, 234, 4364, 228, 301, 77, 4363,
	195, 4361, 171, 2324, 85, 177, 4358, 244, 4357, 4349,
	4347, 4344, 4343, 4339, 4332, 1581, 266, 4330, 4329, 4327,
	58, 220, 4326, 219, 200, 280, 72, 93, 222, 116,
	217, 126, 251, 237, 57, 4, 4324, 83, 4323, 3010,
	89, 4318, 0, 15383, 11201, 14377, 4317, 4316, 13852, 4314,
	4655, 4307, 4306, 4305, 242, 94, 4303, 4302, 4301, 137,
	4300, 104, 4298, 4297, 91, 4293, 39, 17, 27, 40,
	37, 789, 663, 4290, 4289, 66, 158, 12, 4287, 311,
	257, 4285, 4284, 4282, 4280, 121, 4279, 53, 4278, 50,
	4277, 4276, 51, 18, 42, 4275, 4274, 232, 189, 3762,
	192, 168, 4273, 139, 4272, 4271, 4270, 82, 160, 4269,
	4268, 285, 235, 241, 110, 4267, 284, 4266, 227, 4265,
	4264, 30, 4263, 4262, 276, 138, 134, 61, 278, 159,
	44, 4261, 4260, 4259, 164, 4258, 4256, 4255, 127, 4253,
	4252, 107, 4251, 4250, 49, 4248, 162, 4247, 14, 4246,
	4245, 4244, 300, 204, 246, 4243, 4242, 191, 4241, 4240,
	309, 4239, 4238, 3816, 302, 4235, 46, 4233, 4232, 4231,
	16, 4229, 4228, 231, 3566, 4226, 4224, 25, 4222, 215,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 14, 14, 10, 10,
	10, 10, 11, 11, 11, 11, 11, 58, 58, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 41, 43, 42, 36, 36, 37, 37,
	38, 39, 39, 44, 46, 45, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 22, 22, 47,
	47, 23, 23, 49, 49, 24, 24, 50, 50, 641,
	641, 641, 642, 642, 643, 643, 643, 27, 52, 20,
	21, 21, 21, 21, 644, 644, 644, 644, 40, 28,
	53, 33, 33, 33, 33, 33, 231, 231, 231, 231,
	26, 26, 48, 48, 275, 275, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 640, 640, 277, 277,
	276, 264, 264, 265, 265, 266, 266, 645, 645, 278,
	278, 278, 279, 279, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 534, 534, 534, 565, 565, 565,
	565, 567, 567, 686, 686, 687, 687, 687, 687, 687,
	143, 143, 430, 430, 430, 62, 62, 62, 62, 62,
	630, 630, 233, 233, 233, 235, 235, 234, 234, 234,
	234, 234, 86, 86, 651, 651, 650, 682, 682, 649,
	649, 652, 652, 652, 232, 232, 232, 83, 83, 103,
	103, 139, 139, 139, 139, 139, 139, 139, 139, 140,
	140, 141, 141, 661, 661, 661, 236, 236, 236, 238,
	238, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 243, 19, 19, 19, 122, 122,
	122, 122, 122, 122, 122, 117, 117, 569, 569, 570,
	570, 227, 227, 228, 228, 228, 228, 229, 229, 230,
	230, 230, 77, 77, 240, 240, 242, 242, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 65, 65, 65, 65, 65, 66, 66, 66, 66,
	66, 66, 67, 67, 67, 67, 67, 67, 68, 68,
	75, 75, 75, 75, 75, 75, 75, 75, 205, 205,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 82, 82, 82, 82, 82, 92,
	662, 662, 663, 663, 677, 666, 666, 667, 667, 668,
	668, 668, 669, 669, 669, 669, 669, 676, 676, 676,
	676, 676, 671, 670, 672, 672, 673, 673, 674, 674,
	674, 674, 674, 675, 675, 675, 675, 675, 675, 675,
	675, 675, 675, 675, 675, 675, 675, 675, 675, 675,
	665, 678, 679, 679, 680, 680, 681, 681, 681, 688,
	688, 688, 688, 688, 688, 688, 688, 688, 688, 688,
	688, 688, 688, 688, 688, 688, 689, 689, 690, 690,
	691, 691, 691, 691, 691, 691, 691, 691, 691, 691,
	691, 691, 691, 691, 691, 691, 691, 691, 691, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 93, 93, 391,
	391, 354, 354, 94, 94, 94, 95, 95, 96, 96,
	79, 79, 79, 627, 627, 628, 634, 692, 692, 525,
	525, 524, 524, 98, 98, 429, 429, 99, 99, 99,
	99, 99, 99, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 109, 109, 109, 109,
	109, 110, 110, 110, 107, 107, 107, 104, 104, 104,
	102, 102, 102, 108, 108, 108, 633, 340, 340, 106,
	106, 106, 105, 105, 105, 407, 407, 111, 111, 111,
	111, 355, 112, 112, 112, 112, 112, 112, 112, 112,
	115, 115, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 527, 527, 5, 5, 270,
	270, 269, 269, 269, 269, 6, 6, 6, 273, 273,
	272, 271, 113, 113, 113, 491, 491, 118, 118, 118,
	445, 445, 119, 119, 119, 119, 119, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 637, 637, 400, 400, 303, 303, 303, 303, 131,
	131, 131, 131, 132, 132, 132, 132, 133, 133, 213,
	213, 149, 149, 149, 149, 148, 148, 148, 148, 148,
	148, 148, 148, 69, 69, 69, 70, 70, 71, 71,
	72, 72, 73, 73, 74, 74, 74, 74, 74, 152,
	152, 32, 32, 32, 32, 153, 153, 683, 683, 155,
	151, 151, 151, 151, 151, 151, 151, 150, 150, 154,
	154, 154, 154, 156, 158, 158, 158, 158, 158, 157,
	157, 157, 157, 157, 159, 159, 559, 559, 415, 415,
	557, 557, 581, 581, 558, 558, 361, 361, 361, 361,
	361, 362, 362, 362, 568, 568, 568, 568, 568, 568,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 214, 214, 214, 215,
	215, 220, 220, 221, 221, 221, 222, 222, 222, 219,
	219, 219, 216, 216, 217, 217, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 225, 225, 223, 223,
	224, 224, 694, 694, 693, 693, 226, 226, 226, 226,
	226, 186, 186, 186, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 416, 416, 189,
	189, 189, 173, 173, 161, 161, 161, 161, 161, 161,
	161, 161, 239, 239, 239, 239, 166, 166, 166, 166,
	166, 166, 166, 166, 167, 167, 167, 162, 162, 175,
	175, 175, 175, 175, 168, 168, 169, 169, 169, 170,
	170, 170, 170, 197, 197, 172, 172, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 163, 163, 163, 163,
	177, 177, 177, 177, 452, 452, 452, 203, 203, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 200, 200, 200, 200, 200,
	200, 653, 653, 654, 654, 654, 193, 193, 193, 193,
	193, 193, 505, 505, 187, 187, 187, 187, 192, 192,
	192, 192, 195, 195, 195, 195, 435, 435, 184, 184,
	184, 185, 185, 185, 190, 190, 202, 191, 392, 392,
	188, 188, 194, 194, 194, 194, 196, 196, 196, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 165,
	165, 165, 165, 198, 198, 183, 183, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 695, 695,
	179, 179, 179, 178, 178, 178, 178, 181, 181, 182,
	182, 182, 182, 182, 182, 182, 180, 171, 201, 635,
	635, 631, 631, 631, 631, 631, 631, 631, 631, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 632, 632,
	632, 632, 632, 636, 636, 123, 123, 123, 123, 123,
	123, 123, 134, 134, 134, 134, 134, 134, 134, 137,
	137, 124, 124, 124, 124, 124, 124, 124, 127, 127,
	125, 125, 125, 125, 126, 126, 87, 87, 87, 87,
	87, 18, 18, 18, 88, 88, 294, 294, 248, 248,
	248, 379, 379, 249, 249, 369, 369, 369, 369, 244,
	244, 245, 245, 246, 247, 247, 89, 89, 696, 696,
	696, 646, 646, 646, 647, 647, 647, 647, 647, 647,
	363, 363, 364, 364, 471, 471, 471, 471, 471, 367,
	367, 367, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 377, 378, 378, 370, 370, 376, 375, 375, 374,
	374, 373, 373, 371, 372, 372, 372, 381, 381, 380,
	383, 383, 382, 470, 590, 590, 592, 592, 592, 592,
	592, 592, 592, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	453, 453, 697, 697, 698, 699, 588, 588, 588, 589,
	584, 584, 585, 585, 585, 585, 585, 365, 365, 366,
	366, 366, 366, 586, 587, 398, 398, 509, 591, 591,
	593, 593, 595, 700, 700, 700, 700, 700, 700, 701,
	701, 701, 469, 469, 468, 468, 467, 467, 389, 389,
	596, 596, 596, 596, 597, 597, 597, 597, 597, 600,
	599, 598, 598, 598, 598, 598, 91, 91, 91, 432,
	432, 431, 431, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 210, 210, 306, 306, 306, 85, 85, 85, 15,
	15, 15, 15, 15, 15, 15, 321, 321, 16, 16,
	16, 16, 648, 648, 648, 90, 90, 90, 90, 90,
	90, 387, 387, 387, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	639, 639, 638, 638, 307, 307, 703, 703, 97, 97,
	97, 97, 97, 97, 97, 97, 528, 528, 529, 529,
	84, 84, 84, 84, 84, 454, 454, 451, 451, 450,
	450, 397, 397, 507, 507, 507, 508, 311, 311, 312,
	312, 267, 267, 267, 35, 34, 25, 25, 29, 29,
	30, 30, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 31, 31, 55, 55, 55, 55, 56, 56, 56,
	56, 59, 59, 60, 60, 54, 54, 54, 54, 57,
	57, 51, 51, 61, 61, 61, 61, 61, 655, 657,
	657, 656, 656, 660, 660, 660, 660, 660, 660, 658,
	658, 342, 342, 659, 659, 684, 684, 685, 685, 130,
	130, 135, 135, 135, 135, 135, 136, 136, 136, 136,
	138, 138, 138, 138, 147, 147, 206, 206, 206, 206,
	206, 206, 206, 63, 63, 76, 76, 145, 705, 705,
	705, 146, 146, 146, 207, 207, 207, 207, 208, 208,
	209, 209, 704, 704, 304, 304, 464, 464, 465, 465,
	706, 706, 466, 466, 466, 466, 466, 297, 296, 298,
	298, 299, 299, 81, 81, 81, 287, 287, 286, 288,
	288, 289, 289, 284, 284, 571, 571, 291, 291, 291,
	292, 292, 280, 280, 281, 281, 282, 282, 283, 283,
	295, 295, 566, 566, 707, 707, 121, 121, 121, 212,
	212, 353, 353, 353, 461, 461, 461, 390, 390, 318,
	318, 463, 463, 463, 463, 463, 428, 428, 428, 211,
	211, 405, 405, 418, 418, 419, 419, 521, 521, 420,
	128, 128, 129, 129, 144, 144, 252, 252, 250, 250,
	250, 250, 250, 250, 250, 250, 257, 257, 258, 258,
	259, 259, 260, 261, 261, 261, 261, 408, 408, 262,
	262, 262, 251, 251, 251, 253, 253, 253, 253, 253,
	253, 253, 256, 256, 256, 256, 263, 263, 263, 255,
	255, 607, 607, 607, 609, 609, 611, 611, 610, 610,
	606, 606, 608, 608, 702, 702, 434, 434, 434, 386,
	388, 384, 384, 385, 385, 395, 395, 393, 394, 394,
	396, 396, 506, 506, 506, 268, 268, 268, 425, 425,
	425, 425, 426, 426, 457, 457, 455, 455, 455, 455,
	456, 456, 458, 458, 458, 459, 459, 460, 460, 422,
	422, 423, 423, 424, 424, 424, 424, 487, 487, 254,
	254, 254, 402, 402, 402, 403, 403, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 478, 478,
	476, 476, 476, 476, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 511, 512, 512, 404, 404, 513, 462,
	462, 625, 625, 625, 626, 626, 504, 504, 514, 514,
	514, 514, 514, 514, 502, 502, 503, 503, 522, 523,
	523, 438, 438, 438, 438, 436, 436, 439, 439, 439,
	439, 439, 437, 437, 515, 515, 515, 515, 427, 427,
	516, 516, 516, 516, 517, 518, 518, 519, 519, 472,
	473, 473, 530, 530, 530, 530, 532, 401, 401, 401,
	401, 401, 583, 582, 582, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 547, 547, 547, 547,
	547, 547, 547, 533, 533, 533, 533, 533, 537, 537,
	537, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 538, 538, 543, 543, 544, 544, 544, 539,
	540, 545, 545, 545, 545, 708, 708, 549, 549, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 535, 535,
	535, 542, 542, 542, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 446, 446, 448,
	448, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 481, 481, 481, 481, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 601, 601, 601, 601, 601, 601, 601, 601, 483,
	483, 604, 604, 605, 605, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 612, 612, 613, 613,
	615, 615, 616, 616, 617, 618, 618, 618, 619, 620,
	620, 614, 614, 621, 621, 621, 621, 622, 622, 623,
	623, 623, 623, 623, 624, 624, 624, 624, 624, 493,
	493, 494, 494, 500, 500, 500, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 360, 360, 359, 308, 308, 308, 308, 308, 308,
	413, 413, 411, 411, 411, 414, 414, 412, 412, 410,
	410, 409, 409, 490, 490, 488, 488, 492, 492, 440,
	440, 548, 548, 548, 548, 548, 548, 548, 548, 441,
	441, 441, 449, 442, 442, 443, 443, 443, 443, 443,
	484, 485, 444, 444, 444, 486, 486, 495, 499, 499,
	498, 497, 497, 496, 496, 474, 474, 475, 475, 421,
	421, 709, 709, 417, 417, 520, 520, 520, 520, 577,
	577, 357, 357, 406, 406, 356, 356, 348, 348, 349,
	349, 349, 349, 399, 399, 501, 501, 550, 550, 551,
	551, 552, 552, 553, 553, 554, 555, 556, 489, 489,
	329, 328, 315, 316, 327, 326, 325, 314, 317, 322,
	323, 324, 319, 320, 336, 335, 334, 285, 290, 341,
	343, 343, 346, 346, 347, 345, 344, 344, 331, 332,
	333, 526, 313, 350, 350, 351, 351, 351, 352, 352,
	352, 352, 309, 309, 310, 310, 337, 337, 338, 339,
	339, 330, 330, 330, 300, 300, 300, 301, 301, 302,
	302, 564, 564, 561, 561, 561, 562, 562, 562, 664,
	563, 563, 563, 563, 560, 560, 560, 560, 560, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	573, 573, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	575, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 580, 580,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 4, 6, 9, 6, 8,
	4, 4, 5, 9, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 1,
	0, 3, 3, 0, 4, 6, 0, 6, 4, 4,
	4, 5, 7, 6, 8, 7, 9, 8, 2, 1,
	3, 1, 3, 3, 3, 0, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 12,
	2, 0, 1, 0, 1, 1, 0, 1, 3, 1,
	3, 3, 3, 3, 2, 2, 1, 1, 1, 1,
	2, 1, 1, 1, 1, 0, 1, 2, 2, 2,
	1, 1, 1, 4, 5, 1, 1, 1, 1, 3,
	3, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	1, 2, 1, 1, 3, 0, 1, 4, 0, 4,
	3, 3, 4, 3, 4, 4, 4, 7, 3, 3,
	4, 3, 3, 3, 3, 3, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 1, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 10, 5, 1, 3, 3, 1, 1, 0, 2,
	0, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 4, 3, 1,
	2, 3, 2, 2, 2, 4, 6, 3, 1, 2,
	2, 7, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 7, 4, 7,
	8, 8, 9, 11, 11, 6, 2, 6, 9, 4,
	7, 7, 10, 7, 10, 10, 10, 13, 5, 5,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 4, 4, 3, 4, 1, 1, 1, 1, 5,
	4, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 1, 2, 2, 2, 9,
	2, 1, 0, 1, 1, 0, 1, 2, 0, 2,
	2, 0, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 3, 5,
	7, 3, 3, 3, 4, 8, 6, 4, 5, 5,
	5, 3, 0, 1, 1, 1, 4, 4, 3, 4,
	4, 3, 4, 4, 1, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 5, 7, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 5, 3, 5, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 7, 5, 2, 0,
	3, 3, 4, 3, 3, 3, 5, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 3, 4,
	5, 4, 4, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 4, 3, 4, 4, 5, 1, 1,
	10, 10, 3, 5, 5, 5, 3, 5, 6, 4,
	4, 5, 5, 2, 6, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 12, 15, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 1,
	1, 1, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 3, 6, 4,
	2, 3, 5, 5, 5, 2, 5, 5, 2, 2,
	2, 0, 1, 1, 3, 4, 10, 11, 9, 5,
	3, 1, 5, 9, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 6, 1, 3, 1, 2, 0,
	1, 2, 3, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 3, 0, 4, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 2, 3,
	1, 4, 2, 3, 2, 2, 4, 7, 3, 4,
	6, 5, 7, 5, 5, 3, 3, 0, 2, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 8, 11,
	5, 4, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 11,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	16, 19, 15, 18, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 2, 4, 2, 3, 1, 0, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 6, 8, 8, 4, 7, 3,
	0, 7, 10, 1, 1, 1, 1, 2, 2, 3,
	0, 3, 0, 3, 0, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 2, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 14, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 7, 10, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 655, -3, -207, -114, -111, -77, -75,
	-118, -119, -99, -120, -113, -142, -147, -128, -129, -130,
	-143, -149, -206, -214, -215, -216, -217, -226, -208, -209,
	-4, -62, -64, -78, -98, -100, -112, -122, -121, -123,
	-131, -139, -134, -117, -69, -144, -148, -160, -210, -211,
	-212, 33, 32, 106, 85, 164, 137, 146, 217, 415,
	467, 479, 432, 151, 455, 437, -154, -155, 499, -63,
	-76, -146, -145, 78, 138, 181, 319, 447, 53, 156,
	-7, -15, -32, -19, 30, 49, -65, -66, -67, -68,
	67, -85, -80, -93, -86, -79, -82, -83, -688, 109,
	-608, -101, -105, -138, -103, -691, 172, 238, -124, -125,
	-126, 397, -132, -133, 458, -135, -136, -137, 461, 173,
	-71, -70, 166, -250, -252, -151, -150, -152, -213, -161,
	-162, -163, -164, -165, -167, -168, -170, -197, -171, -172,
	-173, -174, -175, -176, -180, -200, -177, -178, -179, -182,
	-181, -183, -188, -184, -185, -186, -187, -189, -190, -192,
	-193, -194, -195, -196, -198, -199, 505, -191, -201, -169,
	-202, 573, 522, 87, 471, 21, -8, -9, -10, -11,
	-12, -13, -14, -18, -17, -61, -5, -6, -81, -84,
	-87, -88, -89, -97, -90, -91, -92, -607, -102, -104,
	-107, -109, -110, -106, -108, 456, 626, -253, -251, 652,
	631, 589, -166, -22, -27, -23, -24, -26, -28, -25,
	-29, -30, -31, -47, -52, -49, -50, -48, -51, -53,
	-54, -55, -56, -57, -58, -59, -60, -34, -40, -41,
	-35, -36, -37, -38, -39, -42, -43, -44, -45, -46,
	-20, -21, -33, 613, 622, -256, -254, -255, -263, 491,
	597, 545, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	-355, 2, -331, -337, -338, -339, -330, -300, -575, -580,
	4, -572, -578, 180, 248, 357, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 45,
	47, 48, 49, 50, 51, 52, 53, 57, 59, 63,
	64, 65, 66, 67, 68, 69, 73, 78, 79, 84,
	85, 86, 87, 88, 89, 90, 91, 97, 94, 95,
	96, 98, 100, 102, 103, 104, 105, 106, 107, 108,
	110, 111, 112, 114, 115, 116, 124, 125, 126, 127,
	128, 130, 137, 131, 138, 141, 135, 140, 136, 142,
	144, 145, 146, 149, 150, 151, 153, 154, 155, 157,
	158, 159, 161, 162, 164, 165, 166, 169, 167, 170,
	168, 171, 172, 173, 174, 175, 178, 186, 187, 188,
	193, 195, 196, 197, 199, 200, 203, 204, 205, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 218, 222,
	224, 225, 226, 227, 228, 229, 230, 236, 237, 238,
	240, 241, 242, 243, 244, 249, 250, 251, 255, 257,
	263, 264, 269, 265, 270, 271, 273, 277, 278, 279,
	280, 281, 282, 284, 286, 285, 290, 288, 292, 293,
	296, 297, 298, 299, 300, 301, 305, 306, 302, 307,
	308, 310, 311, 314, 312, 315, 316, 313, 317, 320,
	321, 322, 323, 324, 325, 326, 327, 328, 329, 330,
	331, 318, 319, 334, 332, 336, 337, 338, 339, 340,
	355, 350, 351, 352, 344, 345, 341, 346, 342, 343,
	347, 348, 354, 349, 359, 360, 361, 362, 365, 234,
	256, 367, 368, 371, 373, 390, 376, 377, 378, 381,
	382, 385, 388, 389, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 402, 403, 405, 406, 407, 409,
	410, 411, 413, 415, 416, 418, 419, 420, 422, 423,
	424, 425, 426, 427, 428, 429, 431, 432, 434, 433,
	435, 437, 439, 440, 441, 447, 448, 455, 449, 451,
	452, 453, 454, 456, 457, 458, 459, 460, 461, 465,
	463, 464, 466, 467, 469, 470, 471, 472, 473, 475,
	477, 478, 482, 483, 484, 502, 503, 525, 479, 480,
	481, 485, 486, 487, 488, 489, 490, 494, 492, 493,
	495, 496, 497, 499, 501, 504, 505, 507, 508, 509,
	510, 511, 512, 513, 516, 518, 519, 520, 521, 522,
	523, 544, 524, 526, 530, 531, 532, 533, 527, 528,
	543, 535, 536, 537, 538, 540, 541, 546, 547, 548,
	549, 550, 551, 553, 554, 556, 564, 577, 565, 566,
	567, 568, 570, 573, 574, 575, 576, 562, 578, 579,
	582, 583, 587, 584, 588, 585, 586, 589, 591, 594,
	595, 596, 602, 601, 603, 604, 605, 607, 608, 609,
	614, 615, 617, 618, 619, 37, 54, 55, 58, 60,
	62, 74, 75, 76, 80, 132, 133, 163, 176, 177,
	189, 206, 207, 219, 221, 231, 232, 233, 254, 258,
	259, 261, 267, 289, 364, 366, 383, 387, 404, 408,
	412, 414, 430, 474, 500, 514, 529, 534, 557, 558,
	559, 560, 569, 571, 597, 598, 599, 606, 616, -355,
	2, -331, 374, -324, 2, -300, -300, 415, 29, 2,
	29, 403, 493, 548, 550, 2, -637, -400, 541, 2,
	29, -303, -300, 109, 217, 491, -324, 2, -637, 217,
	-400, 26, 541, 2, -300, 2, 388, 175, 23, 28,
	71, 82, 104, 149, 174, 198, 203, -690, 390, 423,
	477, 495, 543, 554, 570, 2, 601, 311, 492, 545,
	248, 127, 575, 485, -648, 482, 483, 388, 421, 469,
	220, 590, -304, 2, 479, -300, 311, 2, 655, 100,
	79, 474, 496, -157, 2, 301, 565, -158, -159, -156,
	557, -559, 485, 469, 334, -300, 655, 655, 655, 29,
	-313, 2, -300, -313, 2, -218, 2, -313, -693, -225,
	-224, -223, 22, 448, 188, 282, 201, 239, 339, 418,
	199, 51, -218, 2, 545, 248, 485, 127, 541, -704,
	2, 565, -704, 2, 655, 655, 2, 545, 394, 601,
	492, 127, 427, 248, 575, 203, 149, 28, 73, 49,
	551, 630, 485, -648, 627, 628, 311, 134, -630, 2,
	-629, 4, -578, -572, -349, -348, 545, 551, 127, -339,
	-330, 644, -338, 655, 655, 655, 655, 2, 270, 271,
	425, 424, 496, 497, 29, 655, 655, 655, 655, 655,
	482, 175, 2, 174, -662, 23, 28, 71, 99, 104,
	134, 198, 390, 423, 495, 543, 547, 554, 570, -647,
	524, 73, 485, -646, -648, 379, 311, 575, 149, -450,
	127, 301, 215, 583, 550, 548, 581, 141, 257, 586,
	585, 655, 655, 655, -115, 2, 652, 33, 32, -114,
	-118, 151, 499, -243, 545, 262, 2, -300, 655, 655,
	655, 2, 270, 271, 482, 483, 29, 655, 655, 201,
	-629, 541, 2, 655, 655, 655, 2, 29, 270, 271,
	482, 483, 262, 2, 73, 487, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 2, -204, 496, 524, 227, 50, 49,
	79, 29, 422, 84, 395, 128, 134, 158, 576, 218,
	248, 249, 278, 99, 100, -452, 47, 271, 73, 270,
	483, -653, 482, -505, 546, 486, 493, 540, 91, 282,
	479, 565, 567, 109, 591, 470, 619, 427, 428, 538,
	441, 535, 302, 167, 202, 4, 127, 334, 469, 498,
	286, 285, 577, 557, 301, 478, 398, 89, 655, -702,
	2, 545, 565, 2, -704, 2, -704, 2, -705, 565,
	616, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, -251, -253, -252, 655, 655, 655, 655, 655, 655,
	655, -204, 496, 2, 79, 29, 29, -393, -395, 580,
	260, 160, 380, -250, -252, 2, -607, 577, 496, -557,
	2, -479, -581, -481, 642, 643, 635, 542, 72, -359,
	356, 620, -493, 134, 581, 374, -580, -482, -495, 163,
	390, 474, -414, 8, 9, 5, 6, 7, -309, -483,
	-489, 572, 179, 363, -352, 656, 10, 652, -604, -252,
	-494, 38, 221, 70, -561, -351, -310, -533, 261, -350,
	-330, -601, -602, 4, -572, -573, -562, -536, -544, -540,
	-541, -547, -300, -575, 82, 118, 119, 117, 122, 121,
	304, 303, 123, 120, 498, 590, 71, 37, 231, 232,
	267, 364, 233, 80, -603, 150, -574, 258, 259, 514,
	55, 430, 189, 133, 132, 366, 60, 58, 598, -545,
	129, 557, 558, 559, 560, 206, 207, 62, 176, 177,
	387, 412, 534, 569, 571, 219, 289, 46, 113, 202,
	253, 235, 266, 268, 272, 291, 294, 335, 353, 358,
	384, 386, 468, 506, -708, 599, 529, 74, 75, 194,
	-609, 433, -610, -324, -609, 655, 655, 657, 655, -384,
	-386, -388, 2, 29, 147, 652, 2, -510, 2, -511,
	-515, -252, 283, -514, 652, -512, 650, -331, 375, -605,
	475, -601, -602, -309, -330, -351, 4, -572, -574, 654,
	-389, 652, 127, 485, 545, 83, 248, 99, 174, 203,
	-445, 652, -300, 29, 374, 561, 657, -637, -400, -385,
	420, -491, 652, 374, 377, 201, 377, -637, 64, 98,
	315, 2, 2, 2, 2, 2, 231, -300, 545, 126,
	2, 281, 2, 2, 2, 2, 2, 2, 2, -407,
	231, 2, -331, 601, -407, 231, 2, -407, 231, 2,
	-451, 2, 93, -314, 231, 2, -300, -340, 231, 2,
	-335, -337, -346, 231, 2, -343, -300, -567, 231, 2,
	-565, 4, -572, 123, 498, -479, 2, -144, 2, 64,
	-300, 601, 2, 502, 2, 652, -157, 2, 76, 565,
	46, 496, -158, 2, -465, 2, -466, -296, -297, -298,
	-522, -299, 269, 419, 429, 623, 139, 356, 619, -683,
	201, 634, 561, -557, -557, -557, -415, 654, -220, 57,
	-313, -694, -693, -694, -555, 29, -550, 8, -551, 642,
	643, -555, -555, -694, -694, 2, 2, 2, 2, 2,
	-464, -465, 2, -515, 231, -331, 2, -328, -560, 4,
	-572, -578, -573, -579, -575, 29, 32, 33, 34, 36,
	38, 39, 40, 42, 61, 70, 71, 77, 81, 83,
	93, 99, 109, 117, 118, 120, 119, 121, 122, 123,
	134, 139, 143, 147, 148, 152, 156, 160, 179, 181,
	194, 198, 201, 217, 220, 223, 239, 252, 260, 262,
	283, 287, 295, 303, 304, 356, 363, 369, 374, 375,
	379, 380, 401, 417, 436, 462, 491, 498, 517, 539,
	545, 555, 561, 563, 572, 580, 581, 590, 592, 600,
	610, 611, 612, 613, -580, 82, 2, -515, 231, 2,
	-334, 231, -515, -337, 2, -314, 2, -479, -641, 553,
	170, 449, 2, -356, 231, -331, -333, -337, -335, 2,
	2, 2, 2, -479, 2, -569, 2, -564, 10, -563,
	5, 4, -572, -578, -573, -482, 2, -493, 29, -343,
	2, -565, 231, 2, 29, 29, 601, 420, 262, 561,
	657, -406, -348, -349, -556, 4, 8, -399, -300, 654,
	-479, 2, -144, -127, 2, 194, -479, 231, 2, -144,
	231, 2, -479, 231, 2, -144, 231, 2, -300, 2,
	-649, 2, -682, -569, 231, 98, 231, -300, 2, 203,
	-689, 477, 574, 315, 2, 2, 570, 2, 104, 545,
	126, 2, 2, 2, 2, 2, 2, 2, 545, -319,
	2, -300, 194, -524, 262, -343, 231, -344, 2, 492,
	-703, 433, -565, 231, 2, 453, 601, -335, 231, 2,
	-335, 248, 264, -314, 231, 2, 550, 548, 550, 548,
	201, 2, 262, 2, 262, 2, -516, 2, -517, -511,
	-518, 650, 375, -527, 2, -526, -563, 597, -115, 652,
	-115, 652, 496, 652, -569, -331, -331, -479, 2, -144,
	-127, 2, -479, 2, -144, 2, -300, 2, -141, -569,
	-140, 652, 201, 591, -300, 2, -479, 2, -144, -127,
	2, -479, 2, -144, 2, -243, 194, 2, 127, 545,
	-204, 2, 194, 592, 2, 8, 2, 239, -239, -569,
	486, 186, 428, 2, 502, 2, 503, 79, -452, 619,
	79, 201, 2, 201, 2, -435, 2, 613, 420, 201,
	2, 2, -635, 2, 374, 201, 2, 201, 2, 201,
	2, 201, 2, 201, 2, -203, 497, 566, 544, 424,
	271, 2, -144, 610, -127, 271, 270, -479, 610, 2,
	-654, 194, 483, -479, 2, 564, 280, 168, 201, -435,
	2, 201, 2, 201, 2, 5, 2, 43, 425, 525,
	2, 269, 419, 525, 2, 523, 2, -331, 545, 601,
	492, 127, 203, 29, 2, 482, 2, 2, 94, 95,
	201, 2, 201, 2, 216, 201, 2, 441, 201, 545,
	-416, 654, -416, 619, 2, -427, -515, -464, 561, -393,
	-395, -204, 502, 2, -257, -425, -259, 194, -455, -456,
	-260, 295, 181, 369, -261, -434, 29, 147, -434, -434,
	64, 653, 653, -683, 577, 11, 12, 81, 43, 642,
	643, 644, 645, 192, 646, 647, 640, 641, 639, 632,
	633, 637, 275, 276, 101, 636, 634, 92, 309, 476,
	182, 183, 184, 185, 450, 246, 35, 247, 14, 15,
	16, -359, 34, 379, 294, 620, 235, 506, 635, 17,
	18, 19, 266, 268, 358, 54, 239, -308, 390, -358,
	542, 72, -479, -479, -479, -479, -479, -479, -479, -479,
	386, 652, -421, -474, 650, -252, 652, 652, 652, 652,
	-556, -252, -479, -493, 653, -412, 652, -252, -493, -488,
	652, 474, 650, 652, -496, -479, 5, 5, 5, 652,
	654, -612, 614, 194, 652, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 652,
	414, -538, 652, -537, 652, -537, -537, 602, -535, 652,
	622, 615, 652, -535, 652, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 602, 551, 657,
	-609, -389, 652, -417, -520, -479, 644, -417, -417, 374,
	-409, -479, 113, -438, 272, 335, 202, 291, 468, 253,
	-476, 656, -476, -504, 622, -252, -512, -330, -252, -514,
	652, -510, -504, -116, -556, -98, -112, -121, -144, -160,
	-211, -212, 644, -331, 652, 201, 652, 654, -560, 201,
	-399, -314, -343, -331, -350, -351, -356, -325, -300, 2,
	2, 146, -409, -631, 575, 485, 29, 4, -578, -572,
	-349, 492, -348, 545, 127, -567, -303, 561, 39, -490,
	-530, -531, -583, 656, -582, -533, -543, -539, -542, 404,
	408, -562, 58, 598, -545, 261, 4, -572, -574, 258,
	259, 514, 55, 430, 189, 133, 132, 366, 60, 557,
	558, 559, 560, 206, 207, 62, 599, 529, 74, 75,
	-631, 575, 485, 29, 492, 194, -567, 194, 201, -567,
	2, -569, 2, 2, 163, 2, 2, 2, -300, -278,
	657, 69, 459, 163, -407, 231, -278, 163, -278, 163,
	-357, 231, -356, -278, 163, -278, 657, 163, -278, 657,
	163, 654, 657, 163, -567, 2, -451, -559, -409, 39,
	-465, 2, 134, 4, 5, -706, 657, 293, -362, 308,
	355, 226, 375, 617, 367, 139, -568, 5, 4, -489,
	-501, 134, 301, 261, -550, -552, 9, -553, 642, 643,
	-558, -557, 116, 654, -560, -221, 256, 41, -313, -313,
	-694, -694, 8, 8, -694, -694, -313, -313, -275, 451,
	499, 389, -274, 25, 30, 151, 250, 340, 595, 169,
	-374, 251, 456, -371, 394, 163, 518, 584, -641, -644,
	481, 553, 170, 449, 96, 367, 499, 389, 451, 163,
	-431, -433, 39, 125, 340, 388, 65, 242, 313, 314,
	522, 457, 606, 163, 499, 389, 451, 389, -16, -289,
	25, 151, -291, -286, 499, 30, -644, 105, 451, 631,
	626, 456, 400, 537, 417, -644, -641, 288, -643, 609,
	354, -277, 518, 584, -641, -644, 481, 451, -276, -376,
	-371, 394, 163, 656, 25, 151, 451, 499, 389, -686,
	-687, 30, -270, -269, 25, 151, 499, 587, -273, 239,
	-272, 25, -153, -133, -152, 456, 499, -153, 2, 451,
	389, -638, -321, -606, 239, 613, 163, -321, -321, -515,
	231, -658, 194, 2, -651, -140, 284, 5, 10, -569,
	-140, -406, 657, 657, -560, 644, 483, 482, 163, 163,
	163, 163, 271, 194, 356, -682, 2, 356, 613, -677,
	-337, -690, 2, 2, 2, 2, 2, 2, 2, -331,
	231, -391, 374, -627, -628, -692, 545, -230, 613, -569,
	356, 46, -334, 231, 2, -337, 601, -638, 356, -646,
	-336, 231, -331, 39, 652, 356, 2, -451, 2, 248,
	-606, 356, -516, -353, -331, -511, -353, 499, -324, 39,
	-476, -331, 653, 657, -527, -527, -569, -230, 201, 652,
	-243, 613, 613, 271, -523, 657, -522, 239, -570, -569,
	-141, -569, 454, 201, 271, -569, -627, -314, 2, -331,
	2, 545, 273, -140, 201, 239, -230, -569, -569, -569,
	-559, 29, 503, 2, -203, 497, 566, 95, 503, 2,
	-331, 545, 127, 248, 85, -658, 194, 2, -300, -636,
	194, -632, 469, 485, 575, -631, -331, 127, -331, 127,
	-331, 127, -331, -331, 2, 2, 2, 2, 2, 90,
	2, -144, -479, 2, 90, 2, 49, 519, -654, 194,
	2, 564, 2, 564, 2, -300, -300, -300, 369, 524,
	293, 613, -331, -331, -331, -332, -337, -337, 486, 546,
	576, 483, -479, 2, -695, 2, 201, 194, 2, 545,
	248, 545, 248, 127, 201, 79, 127, 29, 201, 545,
	480, 654, 4, -278, 657, -304, -257, -425, -559, -426,
	-425, -258, -257, -260, 194, 429, 585, 340, 504, 277,
	-456, -455, 29, -479, -460, 188, 339, -479, -458, -481,
	642, 643, -551, -553, -408, 367, -251, -251, -251, -396,
	-506, -479, 417, 248, -558, -683, -532, -530, -530, -329,
	-560, 557, -479, -479, -479, -479, -479, -479, -479, -479,
	-479, -479, -479, -479, -479, -479, -479, -479, -479, -479,
	-479, -479, -479, -479, -479, -479, -479, -479, -479, -479,
	-479, -479, -479, -479, -479, -479, -479, -479, 294, 235,
	506, 54, 239, -479, 561, -479, -479, -479, -479, 332,
	356, 363, 572, 179, 582, 147, 367, -709, 539, 42,
	-486, -252, -413, 652, -500, 36, 517, 29, -493, 652,
	2, -474, -479, -475, -360, -358, -300, 642, 643, 644,
	645, 646, 647, 632, 633, 634, 14, 15, 16, 637,
	641, 639, 640, 192, 101, 636, 309, 476, 92, 182,
	183, 184, 185, 275, 276, 17, 18, 19, 35, 635,
	-410, -409, -409, 653, 600, 29, 147, 644, 2, 653,
	657, 39, 653, -479, -410, -492, -488, -409, -499, -498,
	610, -446, -447, 618, 318, 130, 229, 316, -448, 489,
	-554, 8, -560, 644, -613, 187, 220, 652, 653, 2,
	653, 2, 653, -479, 2, 653, -479, 2, 653, -479,
	2, 653, -479, 2, 653, 2, 653, 2, -479, -479,
	-479, -479, -479, -479, -479, -409, 8, -554, -554, 557,
	557, -554, -554, -554, -546, 404, 405, 406, 407, 296,
	297, 298, 299, 408, 409, 410, 411, 324, 325, 326,
	327, 320, 321, 322, 323, 328, 329, 330, 331, 211,
	212, 213, 214, 207, 208, 209, 210, -546, -440, 2,
	-548, -409, 4, 618, 318, 130, 229, 316, 489, 5,
	-440, 2, -441, 2, -479, -409, -442, -480, -481, 642,
	643, 635, -359, -443, 2, -479, -410, -479, 61, 287,
	563, -444, -479, 201, -409, -409, 2, -409, 2, -482,
	2, -610, 39, -409, -402, 657, 201, 39, -577, 4,
	-576, 44, 66, 107, 136, 175, 237, 255, 265, 290,
	391, 463, 464, 490, 521, 536, 568, 608, 500, -402,
	-402, 652, 653, 657, -439, 224, 312, 307, 264, -439,
	-510, -438, 272, -436, 384, -436, -436, -504, -315, 650,
	659, -560, -504, -503, -502, 39, -324, 381, -504, -504,
	654, 653, -503, 651, -625, 652, 655, 655, 655, 655,
	655, -331, 652, -409, -560, 654, 526, 2, 653, 266,
	266, 266, 266, 266, 374, 475, 653, 561, -633, -340,
	-346, 493, 546, -406, 657, -406, -399, 613, -567, -114,
	376, 653, 657, -401, 38, 650, 654, -554, 2, 2,
	-549, 602, 652, 652, -447, 652, 201, -633, -346, 546,
	493, 2, -637, -400, -567, 561, -300, 2, -331, -407,
	-278, 163, -407, -407, -278, 657, 163, -314, -335, -340,
	-343, -346, -300, -565, -567, -278, -336, -683, 653, 565,
	-466, -361, 429, 516, 452, 494, 541, 9, 9, 657,
	-560, -222, 484, 340, -313, -313, -313, -313, 657, -684,
	99, 561, 83, 652, 485, -293, 302, 561, -470, 231,
	83, -584, 99, -317, -585, -300, 77, 581, 417, 198,
	161, -684, 99, 417, -684, 99, 2, 250, 99, 499,
	524, 652, 29, 64, -515, 43, 43, 29, -642, -643,
	288, 201, 619, 545, 248, 485, 561, 561, -515, -433,
	-530, 125, 313, 314, 64, -555, -555, 64, -555, -555,
	-555, 613, -555, 613, -334, -515, 485, 561, 561, 561,
	439, 535, 439, 535, -286, -158, 535, 561, 561, -158,
	29, -204, 460, 134, -707, 634, 439, 288, -643, 561,
	201, 657, 43, 43, 29, -642, 201, 561, -356, -315,
	596, 45, 596, 45, 596, 561, 45, 485, 561, 657,
	45, -269, -627, -627, -229, -228, -300, 5, -399, -272,
	-569, -271, 338, 79, 561, 561, -16, 499, -639, -305,
	112, 346, 306, 347, 103, 343, 102, 342, 110, 344,
	111, 345, 603, 359, 604, 360, 68, 341, 317, 348,
	520, 349, 605, 361, -306, -307, 154, 396, 594, 127,
	-565, -16, -16, 499, 389, 451, 163, -659, 239, 29,
	-648, 239, -523, 239, -523, -348, -300, 654, -144, -479,
	-479, -144, -479, -144, 49, 163, 39, 163, 2, 652,
	281, 652, -365, 356, 201, -399, -524, 657, -331, 39,
	-229, 378, 163, -565, -432, -431, 356, -336, 231, 2,
	163, -703, -389, 356, 157, 652, 427, 2, 163, -316,
	231, -301, -300, -451, -280, 549, 163, -429, 592, -461,
	-144, 652, 134, 39, -461, -418, -419, -521, -420, -317,
	652, -324, -476, -115, -526, 653, 653, 653, -243, -390,
	-318, -317, 126, 431, 431, -236, 613, -140, -141, 653,
	657, -523, 239, 527, -141, -569, -230, -230, -523, -523,
	-331, 194, -569, -140, -230, -230, -230, 2, 2, 2,
	2, -435, -331, -314, -356, -331, -342, 239, 29, 654,
	-567, -567, -346, -347, -345, -300, -340, -435, -314, -435,
	-314, -435, -314, -435, -435, -144, -479, 524, 2, 496,
	194, 194, 654, -435, 8, -392, 462, 5, 2, 427,
	127, 545, 394, 248, -331, -356, -331, -356, -314, 127,
	-314, 128, 127, -331, 4, -515, -426, -258, 375, 277,
	504, -458, -459, -481, 474, 475, -459, 474, 475, 8,
	9, 8, 9, -262, 508, 362, -407, 657, -267, 40,
	143, 277, -331, -558, 619, 159, -479, -479, 561, -709,
	539, -486, 159, -479, 332, 363, 572, 179, 582, 147,
	367, 201, 652, -480, -480, 653, -411, -479, -479, 651,
	661, 653, 654, 653, -395, 657, -393, -479, -409, -409,
	653, 654, -409, -399, 651, 651, 657, 653, -497, -498,
	152, -479, 561, 561, 561, 561, 652, 653, 654, -618,
	385, 652, 652, -479, 653, 653, 653, 653, 39, 657,
	657, 657, 653, 657, 657, 657, 653, 653, 653, 657,
	653, 619, 619, 653, 653, 653, 653, 657, 653, 657,
	653, 201, 653, 653, -449, 401, 653, 11, 12, 642,
	643, 644, 645, 192, 646, 647, 640, 641, 639, 632,
	633, 634, 92, 309, 476, 14, 15, 16, -359, 266,
	239, -480, -480, -480, -480, 653, -484, -485, 201, 194,
	39, -444, -444, -444, 653, 201, -409, 653, 653, 652,
	-611, 311, 356, 653, -473, -472, 611, -520, -403, 2,
	-510, -326, -560, -473, -473, -409, -479, 272, 272, -437,
	592, 374, -439, -510, -503, -556, -478, -477, 196, 40,
	143, 350, 351, 352, 234, 197, -503, -324, -389, -503,
	-503, -560, -504, -504, -502, 653, -626, -556, 653, -404,
	-513, -605, -395, 654, -560, -240, -606, -205, 5, 363,
	-205, -205, -205, -205, -331, -567, 561, 561, 239, 239,
	-406, 26, -657, 613, 402, -530, 650, 651, 8, -560,
	652, -554, -554, -554, -567, 201, 201, 239, 239, 374,
	201, -565, 2, -278, -407, -278, -278, -356, -357, -278,
	-278, -278, -430, 613, -557, -465, 579, 88, 429, 557,
	-557, 124, 484, -274, 451, 499, -317, -317, -331, -247,
	-246, -244, -300, 5, -341, -300, 215, 440, -565, 356,
	-470, 231, -279, 356, 231, -325, -530, 652, -453, 615,
	277, 277, 592, -317, -325, 277, 231, -317, 231, -325,
	2, -325, -640, 429, 368, -479, -245, -244, 64, -372,
	300, 427, 357, -275, 451, 499, 389, -144, -144, -144,
	652, -683, 592, 146, -331, -356, -331, -341, -565, -336,
	499, 389, 451, 353, -350, -555, -555, -555, -431, 499,
	389, 451, -341, -565, -334, -565, -285, 231, -300, 439,
	-285, 231, 439, 439, 485, -314, 439, 619, 48, -707,
	561, 201, -479, -479, -276, -144, -144, -144, 652, -315,
	-277, 451, 5, 231, -317, 5, -317, 231, 5, -300,
	-317, -341, -565, -687, 25, 151, -317, -230, 657, 634,
	634, -273, 634, -341, -565, -305, 396, -651, 363, 5,
	10, 588, -314, -638, -321, 485, 561, 561, -515, -655,
	-656, 217, 467, 485, 470, -567, -140, -233, 613, -140,
	-227, 243, 644, -630, -569, -569, -300, -666, -667, -668,
	-669, -676, -664, -671, 239, 383, 254, 600, -561, -530,
	4, -572, -300, -363, -366, -364, -317, -471, -470, -588,
	-589, -584, 294, 248, 581, 264, 180, 99, -248, -249,
	615, 613, 163, -354, -331, 650, -230, -628, -525, 180,
	491, 652, -343, -344, 163, -389, 356, -565, 601, 39,
	163, 652, 2, 2, -335, 374, 356, -316, 231, -281,
	153, -707, -314, -473, -403, -428, -463, 462, 374, -390,
	597, -324, -428, -405, 657, 201, 634, 654, -390, -519,
	644, -115, -115, -230, 652, -569, 653, 657, 654, 652,
	634, 634, -238, 378, -237, 155, 279, 263, 510, 511,
	512, 513, 145, 509, 131, 337, 244, 551, -523, -569,
	-236, -141, 201, -523, 239, 201, -72, 613, 545, 239,
	-230, 656, 485, 470, -300, 654, -435, -435, -435, 496,
	496, -300, 194, -399, -327, -560, -314, -331, -328, -356,
	194, 194, -314, -314, 585, -459, 375, 305, -506, -268,
	621, -331, 656, -479, -479, 159, 159, -479, -480, -480,
	-479, 159, 201, 652, -479, -490, 34, 34, 653, 657,
	-475, -479, -358, 653, 600, -395, -395, 653, 644, -560,
	656, 653, -488, 156, -479, 555, 318, 229, 316, -448,
	316, -448, -448, -554, 5, -560, 644, -619, -320, 652,
	-300, 611, -394, 380, 653, -532, -530, -479, -479, -479,
	-479, -479, -554, -535, -535, -550, -550, -479, -484, -479,
	-532, -530, -480, -480, -480, -480, -480, -480, -480, -480,
	-480, -480, -480, -480, -480, -480, -480, -480, -480, -480,
	-480, -480, 147, 356, 367, -480, -485, -484, -479, -479,
	-530, 653, 653, 653, -409, -114, 652, 311, -422, 220,
	-479, -523, 657, -422, -422, 653, -510, -510, 652, -479,
	272, 651, 657, 660, 634, 634, -389, 654, -502, -503,
	651, 653, 657, 653, 657, -462, 39, 653, -560, -473,
	-242, -241, 144, 57, 114, 142, 363, 371, 200, 225,
	426, 159, 195, 153, 266, -657, -567, -567, 485, 485,
	377, 217, 5, 8, 650, 651, 654, -554, 653, 653,
	653, -567, -567, 485, 485, -631, 575, 485, 29, -567,
	-278, -278, 126, 340, -479, -219, 613, 615, 561, 561,
	653, 657, 634, 64, 239, 163, 356, 594, 356, -585,
	161, -590, -479, 652, 248, 652, 652, 2, -264, -265,
	-266, 151, 499, 25, -685, 2, 592, 163, -278, 163,
	-278, 617, 653, 657, -372, 652, 652, 561, 485, -293,
	561, 613, -409, -479, -231, 134, -559, -644, 656, -644,
	656, 485, 561, 561, 485, 561, 561, 356, -300, 163,
	-300, -300, 613, 178, 178, 619, -285, -479, -479, 194,
	561, 613, -409, 561, -534, 52, 27, 356, -335, -278,
	163, 561, 561, 575, 499, -228, -569, -569, -140, -651,
	-569, 363, -16, -341, -565, -336, 499, 389, 451, -637,
	-637, 217, -346, -659, -523, -235, 378, -234, 155, 466,
	145, 279, 244, -523, -233, 201, 262, 613, 653, 657,
	134, 634, -664, -671, -676, -671, 383, 2, 653, 653,
	657, 657, -591, -279, -331, -316, 248, 248, -323, -301,
	39, 371, 371, 652, -331, -94, 613, -522, -556, -322,
	-300, -417, -229, 46, -334, 39, 163, -638, -336, -144,
	-336, -528, -529, 5, 39, -331, 163, 374, 356, -282,
	286, -707, -564, -606, -395, -428, -417, 357, 97, 653,
	-473, -419, -403, -479, 2, 653, -569, -230, -243, -318,
	2, -570, -569, -569, 657, 652, 634, 634, 634, 634,
	634, 634, 634, -236, -523, -140, -236, -141, -144, 378,
	-331, -140, 644, -341, -342, 644, -435, 5, -378, -377,
	394, 367, -378, 474, 474, 375, 188, 282, -267, -315,
	-479, -479, 159, 34, 34, -479, -479, -490, 653, -479,
	-479, -409, 651, 5, -479, 653, 653, 8, -479, 653,
	654, -620, -300, -479, 653, 64, 653, 653, 657, 657,
	653, 653, 653, 653, 653, 653, 653, -485, 201, 147,
	367, 652, 653, 653, -114, -487, 223, 64, -510, -487,
	-487, -437, -399, -510, -477, -315, 650, -315, 650, -560,
	-556, -513, 652, 654, -241, 634, -569, -569, 2, 2,
	5, 5, 426, 356, 363, 5, -205, -657, -657, 613,
	-346, -346, 377, 651, 2, 650, -560, 653, -346, -346,
	201, -633, -346, 546, 126, 194, 228, 228, -317, -317,
	-246, -557, 545, 474, -285, 417, -470, 163, 163, -592,
	99, -594, 81, 180, 109, 356, 363, 581, 417, 77,
	134, 374, 436, -697, -698, -699, 39, 624, 625, 653,
	-397, -507, -605, 652, -300, -397, -399, 356, 532, 134,
	374, 356, 134, 374, 607, 126, 2, 575, 84, -317,
	-325, -244, -399, -399, -331, -341, -565, 171, 653, 657,
	634, 2, 644, 644, -341, -565, -336, -341, -565, -334,
	163, 597, -285, 597, 392, 178, 561, -144, -479, 171,
	653, -315, 5, 5, 163, -312, 81, -317, 5, -317,
	-335, 126, 613, 485, 561, 561, 374, 374, 377, -655,
	-656, -233, 657, 652, 634, 634, 634, -233, -570, -140,
	2, 464, -668, -479, -479, -671, -671, -379, 250, -317,
	-589, -586, -587, 417, -471, -593, -595, 180, 417, -367,
	652, -316, -301, 652, -144, 2, -247, 652, -365, 378,
	651, 201, 653, -565, -432, -144, -336, -389, -387, 613,
	-389, 653, 657, 157, -454, 592, -315, -331, 163, -283,
	285, -707, -564, -280, -457, -455, 148, 652, 374, -144,
	-395, 634, 653, 126, 653, -237, -238, -569, -140, -569,
	-569, -569, -140, -569, -236, -661, 39, -523, -73, -74,
	248, 99, 399, -230, -328, 545, 248, 652, 652, -267,
	-479, -479, -479, 653, -395, -560, 644, -614, 394, 653,
	-506, -479, -479, -480, 201, 652, -490, 653, -615, 612,
	-479, -423, -424, -479, 472, 115, 221, -615, -615, 653,
	-556, -556, 2, -569, 2, 2, 363, 2, 2, 2,
	561, 561, 650, 2, 201, 201, -567, 201, 201, 239,
	-144, 239, 39, 439, -470, -325, -325, -329, -322, 180,
	231, 363, 607, -453, 277, 652, -480, 585, -331, 652,
	2, 230, 230, 31, 64, -700, 139, 252, 653, 657,
	-508, -311, -300, -479, -508, 653, 653, 363, 585, 363,
	607, -479, 585, -530, 652, -278, -278, 653, 653, -479,
	561, -559, 106, -557, 2, -644, -285, -399, -399, -314,
	-479, 194, -479, 561, 5, -278, -329, -278, -278, -312,
	575, 373, -341, -565, -336, -660, 546, 493, 576, 486,
	204, 473, -660, 194, -234, -235, -569, -140, -140, -233,
	-663, 500, -373, -374, 2, -591, 277, -322, 277, 241,
	162, -397, 652, 652, -399, -696, 613, 653, -363, -248,
	-95, -96, 562, -522, -634, -353, -389, 39, 340, 126,
	39, 5, 652, 652, -300, 374, 652, -315, -295, 98,
	-707, -564, -281, -428, 357, -399, 99, -457, -486, -230,
	652, -230, 653, 551, -236, 657, 29, 652, 29, 652,
	-331, -356, -409, -409, 653, -395, 64, 657, 653, 653,
	-480, -490, 653, -616, -617, -320, 657, 652, 652, 501,
	651, 651, 2, -567, -567, 2, -567, -567, -567, -567,
	485, -285, 417, -300, -585, -594, -322, 356, -249, 592,
	613, -479, -480, -302, 652, -479, 652, 652, 39, 134,
	252, 140, 236, -469, -701, 108, 533, 240, -507, -267,
	653, -468, 592, 436, -480, -312, -397, 652, 652, 652,
	634, 201, -144, 652, -534, -278, -335, 634, 561, 2,
	2, 201, -637, 653, -650, 434, -670, -671, -248, 652,
	-249, -368, 86, 100, 135, 230, 205, 249, 524, 530,
	29, -368, 653, -397, -397, 653, -369, 374, 126, 340,
	653, 39, -96, 9, -473, 39, -144, 126, -144, -528,
	-397, -331, -397, 374, -287, -286, 295, -564, -282, 653,
	-325, -428, -570, -556, 4, -74, -399, -399, 653, 653,
	-621, 427, 475, 222, -409, -396, 653, 657, 39, -424,
	2, 2, 2, -657, -657, -346, 439, -279, 163, 224,
	653, -596, 310, -300, 653, -432, -432, 39, 140, 236,
	-375, -371, 652, -268, -508, -249, 224, -331, -645, 592,
	653, -381, -380, -377, -383, -382, -377, -409, -557, 106,
	392, -409, -312, -140, -567, -567, 374, -652, 202, -651,
	-672, -673, -674, 39, 281, 568, 612, -675, 66, 464,
	528, 237, 521, 608, 175, 490, 290, 356, 107, 475,
	536, 499, 391, -369, -398, -509, -317, -468, 653, 653,
	87, 126, -379, -144, -144, 2, -387, 653, 653, -454,
	653, -331, -284, -571, 439, 441, -707, -283, -473, 148,
	653, 653, 653, 653, -622, -623, 54, 578, 116, -479,
	-622, -622, -617, -619, 201, 180, -467, 622, -597, -600,
	-599, 629, 507, 202, 393, 653, 532, 606, 653, 653,
	-700, -399, -467, -389, -479, -468, 653, 657, 597, 653,
	657, 597, 653, 201, 653, -278, -657, -278, -660, -232,
	613, 49, -681, -678, 53, 463, -674, -665, 5, -564,
	374, 363, 490, 136, 265, 290, -501, -501, -300, -294,
	-293, 653, 657, -469, -468, -375, 416, 141, 151, -373,
	-696, -468, 652, -469, 652, -292, -291, -707, -550, -295,
	148, 357, 585, -230, -624, 161, -623, 413, 193, 474,
	413, 193, -624, -624, -567, -322, -249, 59, -599, 629,
	-600, 629, 585, 141, -473, 653, -596, -249, -380, 239,
	-382, 201, 392, 201, 482, -651, 31, 44, -479, 363,
	374, 136, 265, -249, -509, -375, -469, -249, 475, 475,
	2, -248, -369, -469, -397, -375, -397, -288, -289, -290,
	-399, -287, 357, 585, 499, 116, 220, 556, 340, 34,
	634, -598, 340, 459, 69, 499, -598, -597, 652, 652,
	-567, 378, -680, 255, 363, -249, -375, -473, 2, -369,
	-375, 653, -249, 653, -566, 389, -284, 499, -418, 474,
	382, -623, -479, 24, 363, 134, -700, -409, -409, -278,
	-229, 652, -679, 156, -3, -678, 255, -473, -249, -294,
	-249, -468, -473, -469, -707, -292, -418, -473, 653, 653,
	-229, 658, -473, -473, -469, -375, -565, -288, -473, -370,
	-371, 561, 653, -375, -249, 652, -249, -473, -409, -473,
	653, -370,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1664, 1666,
	662, 663, 665, 666, 667, 669, 670, 672, 674, 676,
	677, 678, 680, 681, 683, 684, 685, 686, 687, 689,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 781, 783, 0, 1646,
	1648, 1650, 1652, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 382, 384, 386, 388,
	0, 420, 422, 423, 425, 427, 428, 430, 432, -2,
	0, 593, 594, 596, 598, 600, -2, 0, 1225, 1227,
	1229, 0, 769, 771, 0, 1232, 1234, 1236, 0, 0,
	793, 794, 0, 1764, -2, 785, 787, 789, 791, 870,
	872, 874, 876, 878, 880, 882, 884, 886, 888, 889,
	891, 893, 895, 897, 899, 900, 902, 904, 906, 907,
	909, 910, 912, 914, 916, 918, 920, 922, 924, 926,
	928, 930, 932, 934, 936, 938, -2, 941, 942, 943,
	945, -2, 0, -2, -2, 1660, 51, 53, 55, 57,
	59, 61, 63, 65, 67, 69, 71, 73, 539, 541,
	543, 545, 547, 550, 552, 554, 556, 1822, 602, 604,
	606, 608, 610, 612, 614, 0, 0, -2, 1836, 0,
	0, 0, 1034, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 129, 130, 131, 132, 133, 134, 135,
	88, 89, 90, 92, 93, 94, 95, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	126, 127, 86, 0, 0, 1795, 1797, 1799, 1801, -2,
	0, 0, 8, 12, 14, 16, 18, 20, 22, 24,
	26, 28, 30, 32, 36, 38, 40, 42, 1665, 1667,
	664, 668, 671, 673, 675, 679, 682, 688, 690, 692,
	647, 648, 651, 2538, 2556, 2557, 2558, 2561, 2562, 2563,
	2564, 2565, 2566, 3090, 3171, 3172, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852,
	2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872,
	2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882,
	2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892,
	2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902,
	2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912,
	2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922,
	2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932,
	2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942,
	2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952,
	2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962,
	2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972,
	2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982,
	2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992,
	2993, 2994, 2995, 2996, 2997, 3016, 3017, 3018, 3019, 3020,
	3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030,
	3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040,
	3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050,
	3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060,
	3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 649,
	650, 1419, 0, 731, 729, 2521, 732, 2846, 734, 736,
	587, 588, 589, 590, 591, 592, 0, 762, 2949, 746,
	1834, 763, 765, 766, 767, 768, 726, 724, 0, 767,
	762, 2594, 2949, 760, 1644, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 518, 1482,
	1483, 1484, 1629, 1630, 2901, 1675, 0, 261, 782, -2,
	-2, 3054, -2, 824, 825, -2, -2, 839, 843, 834,
	3059, 0, 2904, 2887, -2, 846, 1647, 1649, 1651, 946,
	947, 948, 2542, 952, 950, 962, 963, 966, 0, 983,
	-2, 0, 2590, 2869, -2, -2, 984, 985, -2, -2,
	-2, -2, 964, 965, 0, 0, 0, 0, 0, 1677,
	1669, 1672, 1670, 1671, 46, 48, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, -2, -2, -2, -2, 0, 0, 2955, 2652, 2489,
	2558, 2492, 2487, 383, 385, 387, 389, 390, 0, 0,
	0, 0, 0, 0, 0, 421, 424, 426, 429, 431,
	-2, 0, 433, 0, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 1291, 1292, 1549, 0, 0, 0,
	-2, 595, 597, 599, 652, 653, 0, 1823, 1823, 660,
	661, -2, 0, 0, 0, 0, 344, 334, 1226, 1228,
	1230, 1231, 0, 0, 0, 0, 0, 770, 772, 0,
	0, 2949, 308, 1233, 1235, 1237, 1238, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 786, 788, 790, 792,
	871, 873, 875, 877, 879, 881, 883, 885, 887, 890,
	892, 894, 896, 898, 901, 903, 905, 908, 911, 913,
	915, 917, 919, 921, 923, 925, 927, 929, 931, 933,
	935, 937, 939, 940, 991, 0, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	1103, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 0, 1196, 0, 0, 994, 997, 998, 999, 1000,
	1001, 1002, 1003, 0, 1076, 1101, 1102, 1112, 944, 0,
	1462, 1824, 1677, 1654, 1655, 1656, 1661, 1663, 1657, 1658,
	1659, 52, 54, 56, 58, 60, 62, 64, 66, 68,
	70, 72, 74, 540, 542, 544, 546, 548, 551, 553,
	555, -2, 1793, 1794, 603, 605, 607, 609, 611, 613,
	615, 773, 0, 776, 0, 996, 775, -2, 0, 1828,
	1828, 1828, 0, 0, 1794, 1792, 0, 0, 0, 779,
	780, 850, 851, 2101, 0, 0, 0, 0, 0, 0,
	0, 0, 2361, 2189, 0, 852, -2, 2222, 2224, 3028,
	2818, 3054, 2360, 2226, 2227, 2228, 2229, 2230, 0, 2232,
	2233, 2234, 2235, 2236, 2237, 0, 2239, 0, 2244, 2245,
	2246, 0, 3035, 2464, 2552, -2, 0, 0, 3042, 2548,
	0, 2327, 2262, -2, -2, 2575, 2554, 2033, 2034, 2035,
	2036, 2037, -2, -2, 3073, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 0, 3016, 3036, 3037,
	3043, 3045, 3038, 3025, 2287, 2667, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2060,
	2069, -2, -2, -2, -2, -2, -2, -2, 3029, 3030,
	3048, 3051, 3058, 3063, 3064, 3034, 3044, 3072, 3074, 3075,
	3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085,
	3086, 3087, 3088, 3089, 2061, -2, -2, -2, -2, 0,
	1811, 2862, 1814, 1419, 1812, 1796, 1798, 0, 1800, 0,
	0, 0, 1805, 1831, 1829, 0, 1880, 1809, 1810, 1903,
	1903, 1927, 0, 1908, 0, 1927, 1823, 1954, 0, 1914,
	2892, 2263, 2264, 0, 2558, 2553, -2, -2, 3070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 733, 735, 0, 0, 0, 0, 762, 761,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 522, 523, 524, 525, 3036, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 536, 537, 538, 231,
	3036, 620, 645, 0, 231, 3036, 623, 231, 3036, 626,
	0, 629, 1547, 231, 3036, 632, 2517, 231, 3036, 635,
	637, 2525, 231, 3036, 641, 2532, 2530, 642, 0, 644,
	251, 247, 248, 249, 250, 1640, 1641, 1642, 1643, 0,
	1674, 1548, 784, 0, 810, 0, 822, 823, 3024, -2,
	0, 2914, 827, 828, -2, 830, 1678, 1682, 1683, 1684,
	1685, 1686, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 817, 818, 837, 838, 844, 847, 0, 955, 951,
	967, 0, 982, 0, 983, 983, 2506, 2497, 2498, 0,
	0, 983, 983, 0, 0, 986, 987, 988, 989, 990,
	1668, -2, 85, 0, 3036, 1954, 87, 0, 2511, 2584,
	2585, 2586, 2587, 2588, 3071, 3091, 3092, 3093, 3094, 3095,
	3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105,
	3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115,
	3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125,
	3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135,
	3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145,
	3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155,
	3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165,
	3166, 3167, 3168, 3169, 3170, 3073, 91, 0, 3036, 96,
	0, 3036, 0, -2, 112, 0, 128, 0, 155, -2,
	-2, -2, 136, 0, 3036, 0, 2486, -2, 0, 243,
	335, 336, 337, 0, 708, 0, 717, 347, 348, 2571,
	2572, 2580, 2581, 2582, 2583, 0, 813, 2361, 0, 0,
	1263, -2, 0, 1475, 1477, 1477, 0, -2, 0, 0,
	0, 1214, 2483, 2488, 1215, 1216, 2507, 1217, 2493, 0,
	391, 392, 393, 394, 395, 0, 396, 3036, 398, 399,
	0, 401, 402, 3036, 404, 405, 0, 407, 0, 409,
	0, 283, 289, 287, 3036, 0, 3036, 435, 438, 0,
	519, 0, 516, 0, 500, 501, 0, 503, 0, 0,
	0, 508, 509, 511, 512, 513, 514, 515, 0, 560,
	558, 2522, 578, 361, 0, -2, 3036, 0, 1260, 0,
	0, 1527, -2, 0, 1468, -2, 0, 1534, 3036, 1530,
	0, -2, 0, 1821, 3036, 1695, 1295, 1296, 1297, 1298,
	1966, 584, 0, 1728, 0, 1730, 0, 1750, 1960, 1903,
	0, 0, 1965, 0, -2, 705, 2541, -2, 655, 0,
	656, 0, -2, 0, 361, 0, 0, 1241, 1243, 1244,
	1246, 1247, 1250, 1251, 1252, 1253, 0, 1255, 1940, 309,
	311, 0, 0, 0, 0, 1240, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 0, 578, 795, 0, 0,
	992, 993, 0, 0, 1011, 1012, 1013, 0, 0, 361,
	-2, -2, -2, 1021, 0, 1028, 1031, -2, 0, 0,
	0, 0, 1038, 0, 1043, 1044, 1045, 0, -2, 0,
	1052, 1054, 1224, 1056, 0, 0, 1058, 0, 1062, 0,
	1065, 0, 1067, 0, 1069, -2, -2, -2, 1077, 1078,
	-2, 1083, -2, 0, 1087, -2, 0, 1090, 0, 1093,
	-2, 0, 1103, 1099, 1100, 0, 0, 0, 0, 1120,
	1121, 0, 1130, 0, 1133, 1134, 1135, 0, 0, 1140,
	1141, 0, 1143, 1144, 1145, 1147, 1148, 1149, 0, 2986,
	2911, 2652, 2699, 0, 1158, -2, 1164, 1166, 0, -2,
	0, 1182, 0, 1186, 0, 0, 1195, 0, 0, 0,
	995, 0, 1004, 1005, 1006, 231, 1958, 1653, 0, -2,
	0, 774, 0, 778, 1853, 1779, 1776, 0, 1850, 1851,
	1780, 0, 0, 0, 1787, 0, 1826, 1827, 0, 0,
	0, 1766, 1767, 0, 0, 0, 0, 0, 0, 2366,
	2367, 2368, 2369, 2382, 2370, 2371, 2381, 2379, 2380, 2372,
	2373, 2378, 2392, 2393, 2383, 2384, 2374, 2387, 2385, 2386,
	2388, 2389, 2390, 2391, 0, 0, 2397, 0, 2375, 2376,
	2377, 2405, 0, 0, 2406, 0, 2408, 0, 2398, 2394,
	2395, 2396, 0, 2168, 2170, 2472, 0, 0, 0, 2404,
	2399, 2400, 2106, 2107, 2108, 2109, 2110, 2143, 2147, 2148,
	0, 0, 2223, 2469, 2468, 2225, 0, 0, 2420, 0,
	2238, -2, 0, 2361, 2415, 0, 0, 2247, 2248, 2249,
	0, 0, 2420, 0, 0, 2463, 2259, 2260, 2098, 0,
	0, 2329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 2046, 0, 2048, 0, 2049, 2050, 2057, 2070, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	0, 2444, -2, 0, 0, 0, 0, 2062, 0, 0,
	1813, 0, 0, 1884, 2473, 2477, 2478, 1884, 1884, 0,
	0, 2421, 1951, 1951, 0, 0, 1946, 1946, 1946, 1944,
	1927, 0, 1927, 1937, 0, 1927, 1927, 0, -2, 1908,
	0, 0, 1937, 0, 1921, 693, 695, 697, 699, 700,
	701, 703, 1955, 1956, 0, 0, 0, 0, 2559, 0,
	0, 0, 0, 0, 0, 2544, 0, 0, 2516, 416,
	417, 0, 0, 0, 2968, 2904, 0, -2, -2, -2,
	-2, 2911, 0, 0, 2652, 738, 764, 0, 1823, 0,
	2423, 1981, 1985, 0, 1987, 1988, 1989, 1990, 1991, 0,
	0, 1982, -2, 2058, 2060, 2081, 2576, 2577, 2578, 2041,
	2042, 2043, 2044, 2045, 2053, 2040, 2040, 2040, 2051, 2080,
	2072, 2080, 2076, 2026, 2027, 2028, 2063, 2064, 2065, 2066,
	0, 2968, 2904, 0, -2, 0, 749, 0, 0, 0,
	1761, 299, 300, 520, 0, 527, 528, 529, 0, 616,
	0, 229, 230, 0, 231, 3036, 621, 0, 624, 0,
	231, 3036, 2481, 630, 0, 633, 0, 0, 639, 0,
	0, 0, 0, 0, 231, 1763, 0, 0, 0, 0,
	-2, 832, 840, 841, 842, 0, 1680, 0, 1687, 861,
	862, 863, 1689, 1690, 0, 1692, 835, 864, 865, 866,
	867, 868, 869, 0, 2495, 2496, 2501, 2502, 0, 0,
	833, 854, 836, 0, 848, 958, 953, 954, 968, 969,
	0, 0, 2499, 2500, 0, 0, 974, 975, 137, 1626,
	0, 0, 184, 0, 1626, 1626, 0, 0, 0, 0,
	212, 0, 0, 1329, 0, 0, 0, 0, 155, 169,
	180, 149, 150, 151, 0, 0, 0, 0, 0, 0,
	97, 1441, 0, 1444, 0, 0, 0, 0, 0, 0,
	0, 1457, 1460, 0, 0, 0, 0, 0, 114, 115,
	0, 0, 120, 121, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 1725, 0, 159, 155, 0, 0, 154,
	156, 139, 0, 0, 155, 170, 182, 0, 218, 220,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	253, 0, 707, 709, 578, 578, 0, 0, 715, 0,
	718, 0, 811, 815, 816, 0, 0, 812, 814, 0,
	0, 1469, 0, 0, 0, 1820, 0, 0, 0, 0,
	3036, 1624, 0, 1607, 0, 1940, 2746, -2, -2, 309,
	1940, 1213, 0, 0, 2559, 2491, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 298, 0, 0, 0,
	444, 0, 510, 499, 502, 504, 505, 506, 549, 1388,
	3036, 0, 0, 582, 573, 0, 577, 0, 0, 581,
	0, 0, 1440, 3036, 1438, 2526, 0, 1466, 0, 1526,
	1419, 3036, 2524, 0, 0, 0, 1535, 2568, 1544, 1548,
	1713, 0, 586, 0, 1731, 1733, 0, 0, 1961, 0,
	1963, 1903, 1823, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 1254, 318, 0, 1939, 0, 0, 349,
	1940, 309, 2875, 0, 1239, 361, 361, 1940, 797, 1940,
	799, 0, 0, 1014, 0, 0, 1017, 361, 361, 361,
	1026, 1027, 1029, 1030, -2, -2, -2, -2, 1032, 1033,
	1127, 0, 0, 0, 1126, 1622, 0, 1048, 1051, 1055,
	0, 1199, 2887, 2904, 2968, 1222, 1127, 2652, 1127, 2652,
	1127, 2652, 1127, 1127, 1071, 1115, 1123, 1082, 1089, 0,
	1084, 1088, 1091, 1094, 0, 1096, 1104, 0, -2, 0,
	1107, 0, 1109, 0, 1111, 1127, 1128, 1131, 0, 1139,
	1142, 0, 1150, 1151, 1152, 1153, 2539, 1154, 1155, 1156,
	1157, -2, 1161, 1162, 0, 1173, 1178, 1179, 1175, 0,
	0, 0, 0, 0, 0, 1189, 1190, 0, 0, 0,
	1198, 0, 1007, 1461, 0, 1662, 1853, 1779, 777, 1770,
	1852, 1771, 1778, 1781, 0, 0, 1783, 0, 1785, 0,
	1848, 1849, 1856, 1857, 0, 1867, 1868, 1860, 0, -2,
	0, 0, 1863, 1864, 1789, 0, 1806, 1807, 1808, 1837,
	1840, 1563, 0, 3171, 820, 0, 2102, 1976, 2103, 2104,
	2510, 0, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, -2, -2, -2, -2, -2, -2, -2, -2,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, -2, -2, -2, 2144, 2145, 2146, -2, 2407, 2409,
	0, 2472, 0, -2, 0, -2, -2, -2, -2, 2165,
	0, 2167, 2172, 2174, 2176, 0, 0, 0, 0, 2471,
	2186, 2455, 2456, 0, 0, 2363, 2364, 2365, 2171, 0,
	2190, 2470, 2467, 0, 0, 2401, 0, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	0, 2419, 1836, 2251, 0, 0, 0, 0, 2258, 2243,
	2417, 0, 2416, 0, 0, 0, 2427, 0, 2462, 2458,
	0, 2508, 2097, 2084, 2085, 2086, 2087, 2088, 2089, 2099,
	0, 2505, 2545, 2551, 2337, 0, 0, 0, 2288, 2289,
	2290, 2291, 2292, 0, 2294, 2295, 0, 2297, 2298, 0,
	2300, 2301, 0, 2303, 2304, 2305, 2306, 2307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 0, 0, 2309,
	0, 2430, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2311, 0, 2313, 2421, 2441, 0, 0, 2191, 0,
	0, 0, 0, 0, 2316, 2421, 2449, 0, 0, 0,
	0, 0, 2421, 0, 2454, 0, 2323, 0, 2325, 1035,
	1036, 1815, 0, 0, 1971, 0, 0, 0, 2476, 2479,
	2480, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006,
	3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 1971,
	1971, 0, 1879, 0, 0, 1947, 1948, 1949, 1950, 0,
	0, 1951, 0, 1941, 1945, 1942, 1943, 1937, 1900, 0,
	0, 2512, 1937, 1906, 1936, 0, 1419, 1926, 1937, 1937,
	0, -2, 1910, 1927, 0, 0, 694, 696, 698, 702,
	704, 0, 0, 1836, -2, 0, -2, 363, 1418, 0,
	0, 0, 0, 0, 0, 728, 730, 0, 0, 636,
	0, 0, 0, 1205, 0, 1207, 1208, 0, 1610, 722,
	0, 725, 0, 1972, 1975, 0, 0, 1986, 1992, 1993,
	0, -2, 0, 0, 2082, 0, 0, 0, 0, 0,
	0, 759, 0, 0, 758, 0, 0, 531, 646, 231,
	618, 0, 231, 231, 627, 0, 0, 231, 638, 231,
	2533, 231, 2531, 252, 643, 1762, 264, 0, 819, 0,
	1679, 1688, 0, 858, 0, 860, 0, 2503, 2504, 0,
	849, 0, 956, 0, 970, 971, 972, 973, 0, 0,
	0, 0, 1625, 0, 0, 1570, 0, 0, 188, 3036,
	0, 233, 0, 0, 1381, 2518, 0, 1371, 0, 0,
	2675, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 152,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 1442,
	1443, 1445, 1452, 1454, 0, 1448, 1449, 0, 1451, 1453,
	1455, 0, 1458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 1478, 0, 0, 0, 1479,
	1480, 1481, 1701, 1702, 0, 1724, 1725, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 2485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 710, 361, 712, 713, 357, 354, 356, 714, 719,
	0, 720, 0, 0, 0, 0, 1471, 0, 1522, 1520,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 0, 0, 0, 0,
	-2, 1473, 1474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 352, 2484, 2494, 0, 1248, 1249,
	397, 400, 403, 406, 270, 0, 0, 0, 437, 446,
	0, 1301, 1273, 0, 0, 559, 361, 578, 580, 0,
	359, 2821, 2537, 1258, 1436, 1439, 0, 1419, 3036, 1490,
	0, 0, 0, 0, 0, 0, 0, 1533, 0, 0,
	3036, 2513, 2567, 2568, 1715, 1725, 0, 1971, 0, 1748,
	1734, 0, 0, 0, 1748, 1752, 1753, 1755, 1756, 0,
	0, 1962, 1968, 654, 706, 1823, 1823, 361, 0, 0,
	1737, 1739, 0, 0, 0, 301, 0, 312, 1940, 310,
	0, 318, 0, 0, 1940, 309, 0, 572, 796, 801,
	1009, 0, 0, 361, 1018, 1019, 1020, 1073, 1117, 1125,
	1177, 1037, 1039, 1040, 1041, 0, 1046, 0, 0, 0,
	1223, 1218, 1219, 1220, 2534, 2530, 1221, 1057, 1127, 1060,
	1127, 1063, 1127, 1066, 1068, 1086, 1092, 1105, 1098, 1106,
	0, 0, 0, 1119, 0, 1137, 0, 1146, 1160, 0,
	0, 0, 0, 0, 0, 0, 1183, 1184, 1185, 1187,
	1192, 1191, 0, 1197, 1008, 1959, 1774, 1775, 1777, 0,
	1786, 0, 0, 1862, -2, -2, 1861, 1865, 1866, -2,
	-2, -2, -2, 1782, 0, 1791, 1788, 0, 1847, 1561,
	1562, 0, 0, 821, 0, 0, -2, -2, 0, 0,
	0, 2187, 0, -2, 2166, 2169, 2173, 2175, 2177, 0,
	0, 0, 0, 0, 0, 2410, 0, 2412, 2188, 2465,
	2468, 2403, 0, 2359, 0, 0, 1835, 1836, 1836, 0,
	2257, 0, 2418, 0, 2425, 2426, 0, 2250, 0, 2459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2261,
	0, 0, 0, 0, 2293, 2296, 2299, 2302, 0, 0,
	0, 0, 2282, 0, 0, 0, 2286, 2052, 2038, 0,
	2080, 2078, 2079, 2073, 2080, 2077, 2030, 0, 2029, 0,
	2308, 0, 2310, 2312, 0, 0, 2314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2194, 2195, 2196, 2216, 2315, 2447, 2448, 0, 0,
	0, 0, 0, 0, 2321, 0, 2453, 2322, 2324, 1823,
	0, 1816, 0, 1881, 1870, 1970, 0, 2474, 1940, 1883,
	1885, 2475, 2515, 1870, 1870, 0, 2422, 0, 0, 1931,
	0, 0, 0, 1933, 1904, 0, 0, 1898, 0, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1905, 1419, 1935, 1907,
	1911, 2545, 0, 1937, 0, 1922, 0, 1924, 1957, 0,
	1916, 1919, 0, 0, 2560, 1971, 0, 410, 418, 419,
	411, 412, 413, 414, 0, 1610, 0, 0, 0, 0,
	1206, 0, 745, 0, 0, 2424, 0, 1977, 0, 1983,
	0, 0, 0, 0, 747, 0, 0, 0, 0, 0,
	0, 1760, 526, 617, 231, 622, 625, 2482, 231, 631,
	634, 640, 260, 0, 809, -2, 856, 857, 859, 0,
	855, 961, 957, 185, 1626, 0, 0, 0, 1566, 0,
	1284, 0, 1279, 1280, 1568, 2529, 1572, 1578, 1581, 0,
	190, 3036, 202, 0, 3036, 0, 1345, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 3036, 231, 3036, 231,
	206, 208, 211, 0, 217, 213, 0, 1281, 0, 1333,
	0, 0, 1336, 138, 1626, 0, 0, 141, 145, 157,
	0, 0, 0, 167, 0, 0, 0, 1583, 1587, 1595,
	0, 0, 0, 1446, 1447, 1450, 1456, 1459, 98, 0,
	0, 0, 1591, 1593, 1599, 113, 116, 3036, 2527, 0,
	118, 3036, 0, 0, 0, 1565, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 143, 147, 158, 0, 1601,
	140, 0, 246, 0, 0, 236, 231, 3036, 0, 238,
	0, 239, 240, 254, 0, 0, 0, 711, 0, 0,
	0, 716, 0, 1261, 1262, 1521, 0, 1464, 1465, 284,
	285, 0, 1476, 1470, 0, 0, 0, 0, 0, 1603,
	1604, 0, 0, 0, 1624, 1619, 1940, 266, 0, 1940,
	274, 0, 2490, 0, 288, 297, 434, 0, 445, 447,
	449, 0, 0, 456, 457, 458, 459, 461, 2579, 462,
	-2, -2, 0, 0, 0, 1300, 1399, 1302, 1304, 1305,
	1306, 233, 0, 2568, 1371, 2734, 2568, 0, 0, 1268,
	0, 0, 0, 565, 561, 0, 570, 574, 575, 0,
	0, 0, -2, 0, 0, 0, 0, -2, 0, 0,
	0, 1537, 1531, 1532, 0, 0, 0, 0, 3036, 1717,
	1725, 0, 1821, 1836, 585, 1726, 1748, 0, 0, 0,
	1736, 1732, 1729, 1971, 0, 0, 0, 0, 0, 1964,
	1967, 657, 658, 338, 0, 361, 0, 0, 0, 0,
	0, 0, 316, 0, 319, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 0, 0, 0, 0, 318, 350,
	303, 1940, 0, 318, 0, 0, 798, 0, 0, 0,
	1016, 0, 0, 1622, 1050, 0, 1059, 1061, 1064, 1108,
	1110, 1127, 0, 1138, 1167, 2514, 1168, 1323, 0, 1323,
	0, 0, 1188, 1194, 1784, 0, 1859, 1790, 1841, 1842,
	0, 1563, 0, 2105, 2150, 0, 0, -2, 0, 0,
	2154, 0, 0, 0, -2, 0, 0, 0, 2411, 2413,
	0, 2467, 2402, 2252, 0, 0, 0, 2256, 2240, 2241,
	0, 2362, 2428, 2457, 2461, 0, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 0, 2509, 2546, 2550, 2335, 2336, 2340,
	2523, 0, 0, 0, 2265, 0, 0, 0, 0, 0,
	0, 0, 0, 2071, 2075, 0, 0, 2429, 2440, 2442,
	2192, 2193, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, -2, -2, -2, 2210, 2211, 2212, -2, -2,
	-2, 2217, 0, 0, 0, 2443, 2445, 2446, 2450, 2451,
	0, 2318, 2319, 2320, 2452, 0, 1823, 1817, 1878, 0,
	1969, 1882, 0, 1878, 1878, 1830, 1929, 0, 0, 1953,
	0, 1901, 0, 1902, 0, 0, 1934, 0, 1909, 1912,
	1913, 1923, 0, 1915, 0, 1918, 0, 2252, -2, 362,
	364, 366, 0, 369, 370, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 737, 1610, 1610, 0, 0,
	739, 0, 723, 0, 0, 1979, 0, 0, 2055, 2059,
	2083, 751, 753, 0, 0, 0, 2968, 2904, 0, 750,
	619, 628, 262, 0, 1938, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 232, 0, 1380,
	0, 1343, 0, 0, 1370, 0, 0, 1386, 192, 193,
	194, 0, 0, 0, 0, 204, 0, 0, 200, 0,
	210, 216, 215, 0, 1330, 0, 0, 0, 0, 1571,
	0, 0, 0, 164, 165, 166, 0, 171, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 1707, 1708, 0, 1698, 161, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 1560, 256,
	0, 0, 0, 0, 0, 358, 353, 355, 0, 1463,
	1524, 1525, 1472, 1584, 1588, 1596, 0, 0, 0, 0,
	0, 767, 1623, 0, 274, 272, 0, 275, 0, 278,
	279, 0, 0, 274, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 0, 454, 460, 507, 1271, 1387,
	0, 0, 1389, 1307, 1311, 0, 2568, 2568, 0, 2520,
	0, 1269, 0, 0, 1388, 557, 0, 564, 0, 579,
	2519, 0, 0, 0, 1440, 0, 0, 1467, 1419, 1493,
	1419, 0, 1536, 1538, 0, 1546, 0, 0, 0, 1719,
	1725, 0, 1712, 1713, 1855, 1727, 1746, -2, 0, 0,
	1836, 1754, 1751, 1757, 1758, 0, 0, 341, 0, 1738,
	1740, 0, 1242, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 318, 315, 305, 1940, 345, 0,
	1010, 361, 1042, 1621, 1047, 2535, 1118, 1136, 1169, 1322,
	0, 0, 1171, 0, 0, 1858, 1845, 1846, 1843, 1563,
	2152, 2156, 0, 0, 0, 2158, -2, 0, 2180, -2,
	-2, 2414, 2466, 2231, 1836, 2253, 2255, 2242, 2460, 2100,
	0, 2342, 2339, 0, 2326, 0, 2277, 2278, 0, 0,
	2281, 2283, 2284, 2285, 2039, 2032, 2031, 2439, 0, 0,
	0, 0, 2317, 1818, 0, 2331, 0, 0, 1886, 2331,
	2331, 1930, 0, 1932, 1899, 1887, 0, 1896, 0, 2546,
	1925, 1917, 0, 0, 367, 0, 371, 372, 373, 374,
	376, 0, 0, 0, 0, 0, 415, 740, 741, 0,
	0, 0, 1609, 1973, 1978, 0, 1984, 2054, 0, 0,
	0, 0, 0, 0, 263, 0, 959, 960, 186, 187,
	1285, 1283, 1575, 1579, 1576, 0, 189, 0, 0, 1344,
	0, 1347, 0, 0, 0, 0, 1354, 1371, 0, 0,
	0, 0, 0, 0, 1373, 0, 1372, 0, 0, 1403,
	0, 1551, 1558, 0, -2, 0, 0, 0, 196, 222,
	0, 0, 0, 0, 225, 1627, 198, 0, 0, 231,
	231, 1282, 0, 0, 1567, 1569, 1582, 0, 0, 0,
	0, 174, 0, 0, 1585, 1589, 1597, 1592, 1594, 1600,
	0, 0, 119, 0, 0, 1709, 0, 160, 0, 0,
	0, 1602, 244, 245, 0, 231, 0, 231, 237, 231,
	1560, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	1606, 265, 0, 0, 0, 0, 0, 267, 351, 274,
	436, 443, 448, 450, 451, 452, 453, 1332, 0, 1399,
	1391, 1392, 1393, 0, 1303, 1398, 1400, 0, 0, 1308,
	0, 0, 0, 0, 1288, 1270, 0, 1301, 1273, 0,
	562, 0, 360, 1259, 1437, 1485, 1419, 0, 1488, 0,
	0, 1528, 0, 0, 0, 0, 0, 0, 0, 1721,
	1725, 0, 1714, 1715, 1748, 1854, 0, 0, 0, 1735,
	1855, 0, 361, 0, 361, 320, 0, 321, 322, 323,
	330, 331, 332, 333, 304, 307, 0, 318, 800, 802,
	0, 0, 808, 1015, 1321, 0, 0, 0, 0, 1844,
	2160, -2, -2, 2181, 0, 2547, 2549, 1836, 0, 2328,
	1838, 0, 0, -2, 0, 0, 0, 1819, 1802, 0,
	1877, 1869, 1871, 1873, 2890, 2647, 3035, 1803, 1804, 1952,
	0, 0, 1920, 368, 377, 378, 0, 380, 381, 742,
	0, 0, 0, 1980, 0, 0, 748, 0, 0, 0,
	949, 0, 0, 1577, 191, 0, 0, 1348, 1349, 1351,
	0, 1353, 1355, 1356, 1273, 0, 1360, 0, 2570, 0,
	1365, 1368, 1369, 0, 0, 1382, 1404, 0, 1413, 0,
	1553, 1563, 1557, 0, 1555, 1415, 0, 195, 224, 197,
	226, 221, 0, 1560, 0, 199, 209, 0, 0, 142,
	0, 0, 2640, 177, 175, 173, 117, 123, 125, 1564,
	163, 0, 144, 0, 246, 255, 1559, 257, 241, 231,
	0, 0, 1586, 1590, 1598, 0, 1613, 1614, 1615, 1616,
	0, 0, 0, 0, 276, 0, 277, 280, 281, 0,
	0, 442, 1273, 1331, 1272, 1390, 0, 1401, 1273, 0,
	0, 0, 0, 0, 0, 1275, 0, 1274, 0, 0,
	563, 566, 0, 569, 1971, 576, 0, 0, 0, 1492,
	0, 1539, 1537, 0, 1545, 0, 0, 0, 1697, 0,
	0, 1716, 1717, 583, 1741, 0, 0, 1748, 1759, 340,
	0, 343, 317, 0, 306, 0, 804, 0, 806, 0,
	1170, 1172, 0, 0, 2254, 2346, 0, 0, 2279, 2280,
	-2, 0, 2220, 2330, 2332, 0, 0, 0, 0, 0,
	1888, 1897, 379, 1610, 1610, 1974, 755, 756, 752, 754,
	0, 1573, 0, 1580, 233, 1346, 1350, 0, 1357, 0,
	0, 0, 1361, 1423, 0, 0, 1440, 1440, 1374, 0,
	0, 1407, 1408, 1328, 0, 1409, 1410, 1411, 1552, 1847,
	1558, 1273, 0, 0, 223, 228, 0, 0, 0, 0,
	0, 0, 162, 0, 235, 258, 1560, 0, 0, 1617,
	1618, 0, 0, 273, 293, 0, 465, 463, 1275, 0,
	1402, 1309, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1310, 1415, 0, 0, 1379, 1286, 0, 1289, 0,
	1271, 0, 567, 568, 571, 0, 1486, 0, 1493, 0,
	0, 1546, 0, 0, 1704, 1696, 1725, 1718, 1719, 1971,
	0, 1749, 0, 313, 314, 803, 0, 0, 1180, 1181,
	0, 0, 0, 0, 2341, 1839, 2221, 0, 0, 1872,
	1874, 1875, 1876, 743, 744, 0, 1574, 203, 0, 1417,
	1359, 1428, 0, 0, 0, 0, 0, 1375, 1405, 1406,
	1403, 1327, 0, 1556, 1554, 1384, 1417, 1419, 201, 0,
	1415, 0, 1337, 0, 0, 1340, 0, 0, 178, 2640,
	176, 0, 231, 721, 1610, 231, 0, 296, 0, 286,
	498, 464, 466, 0, 0, 470, 471, 472, 0, 0,
	475, 476, 477, 478, 0, 0, 483, 0, 0, 0,
	0, 488, 489, 1267, 0, 1395, 1397, 1413, 1415, 1328,
	0, 1290, 1332, 1288, 1487, 1491, 1489, 1529, 1415, 0,
	1413, 0, 1711, 1725, 1705, 1706, 0, 1721, 0, 0,
	361, 805, 807, 2338, 2358, 2347, -2, 2971, 2648, 0,
	2358, 2358, 2333, 2334, 0, 0, 1273, 0, 1362, 1424,
	1425, 0, 1420, 1421, 1422, 2569, 1363, 1364, 1366, 1367,
	1971, 0, 1414, 1423, 227, 1273, 1334, 0, 0, 1335,
	0, 0, 181, 0, 183, 259, 1608, 1611, 0, 282,
	0, 0, 439, 496, 0, 0, 467, 468, 490, 469,
	0, 0, 0, 481, 482, 484, 485, 486, 487, 1264,
	1266, 1273, 0, 1328, 1413, 1273, 0, 0, 0, 1273,
	1275, 1413, 0, 1328, 0, 1700, 1710, 0, 1720, 1697,
	0, 1744, 0, 342, 2343, 0, 0, 2349, 2350, 2351,
	2352, 2353, 2344, 2345, 757, 1352, 1358, 0, 1426, 0,
	1427, 0, 0, 0, 1383, 1412, 1428, 207, 1338, 0,
	1341, 0, 179, 0, 0, 291, 292, 495, 491, 0,
	0, 479, 480, 1394, 1396, 1273, 1328, 1971, 1276, 0,
	1278, 1275, 1287, 1328, 0, 1273, 0, 1723, 1699, 1703,
	2528, 1704, 1742, 0, 0, 0, 2355, 2356, 0, 0,
	0, 1429, 0, 1432, 1433, 0, 1430, 1403, 0, 0,
	231, 0, 1823, 473, 0, 1971, 1273, 1378, 1277, 1267,
	1273, 1415, 1971, 1413, 1693, 1725, 1711, 0, 1971, 2354,
	2357, 2348, 1416, 1431, 1434, 1435, 1385, 0, 0, 1612,
	294, 0, 0, 497, 492, 493, 474, 1376, 1971, 1265,
	1971, 1413, 1542, 1328, 0, 1700, 1971, 1745, 1325, 0,
	0, 494, 1377, 1540, 1328, 1273, 1722, 1694, 1743, 1339,
	1324, 0, 295, 1273, 1971, 0, 1971, 1543, 0, 1541,
	1325, 1342,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 640, 3, 646, 641, 3,
	652, 653, 644, 642, 657, 643, 654, 645, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 661, 658,
	632, 634, 633, 637, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 650, 3, 651, 647, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 659, 639, 660, 635,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 636,
	57975, 638, 57976, 648, 57977, 649, 57978, 655, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1625
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1638
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1639
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1640
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1641
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1646
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1647
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1648
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1651
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1654
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1662
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1663
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1740
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1766
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1855
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1867
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1985
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2017
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2041
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2050
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2071
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2079
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2115
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2126
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2138
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2159
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2221
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2230
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2241
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2249
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2260
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2270
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2280
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2289
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2300
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 175:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2306
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2332
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2337
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2428
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2472
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2482
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2491
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2543
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = true
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = false
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = nil
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2738
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2742
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2829
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2934
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3088
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = nil
		}
	case 297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3172
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3457
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3466
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3472
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3477
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3482
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3514
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = nil
		}
	case 362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3590
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3604
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3624
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3676
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3822
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3843
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3844
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3848
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3853
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3872
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "CREATE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3887
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3898
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = true
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = false
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = true
		}
	case 443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = false
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3993
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3994
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3996
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4028
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4029
		{
			return unimplemented(sqllex, "create window function")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4100
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4146
		{
			return unimplemented(sqllex, "create access method")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4147
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return unimplemented(sqllex, "create cast")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4149
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4150
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4151
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4152
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4153
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4154
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4156
		{
			return unimplemented(sqllex, "create publication")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4157
		{
			return unimplemented(sqllex, "create rule")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			return unimplemented(sqllex, "create server")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
		}
	case 517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4166
		{
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
		}
	case 519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4170
		{
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4173
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4179
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4180
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4181
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4182
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4183
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4184
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			return unimplemented(sqllex, "drop server")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4190
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4283
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4319
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4337
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4370
		{
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.str = ""
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4388
		{

			sqlVAL.union.val = nil
		}
	case 583:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "DELETE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4416
		{
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4428
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4443
		{
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "DROP")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4447
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4643
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4700
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4709
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4717
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4733
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4741
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4752
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "DELETE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "INSERT")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "DELETE")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "INSERT")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4931
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4964
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4972
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5055
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "GRANT")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5208
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5221
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "RESET")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "RESET")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5294
		{
			return helpWith(sqllex, "USE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5299
		{
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "USE")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5421
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5446
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5477
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5483
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5514
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			return unimplemented(sqllex, "set from current")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5568
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5573
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5582
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5591
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5603
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = tree.Low
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = tree.Normal
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = tree.High
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5742
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5743
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5744
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5749
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5751
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5755
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5757
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5759
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5765
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5772
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "SHOW")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5781
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = true
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = false
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = true
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5867
		{
			sqlVAL.union.val = false
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = false
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{
			return helpWith(sqllex, "FETCH")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5899
		{
			return helpWith(sqllex, "MOVE")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5938
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = int64(1)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = int64(-1)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = int64(1)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = int64(1)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = int64(-1)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5993
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5994
		{
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5997
		{
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6002
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.str = "client_encoding"
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6054
		{
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6056
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.str = "timezone"
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6090
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6177
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6226
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6232
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6309
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6339
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6349
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6362
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6370
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6381
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6403
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6419
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6430
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6435
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = true
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = true
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = false
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6471
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6472
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6473
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6490
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6516
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6517
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6533
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6541
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6549
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6585
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6590
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6592
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6596
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = true
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = false
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6611
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6616
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6657
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6662
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = true
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = false
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6694
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6701
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6705
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6709
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6719
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6730
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6744
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6752
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6757
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6762
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6766
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6780
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6796
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6801
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6806
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6811
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6816
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6836
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6849
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6854
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6865
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6894
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6902
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6923
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6928
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6933
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6946
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6969
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6981
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7047
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7057
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7070
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7289
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7363
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7364
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7366
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7378
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7379
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7390
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7418
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7431
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7471
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7546
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7582
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7597
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7625
		{

			sqlVAL.union.val = nil
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7631
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.str = ""
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7641
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = nil
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7664
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7668
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7704
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7717
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7731
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7732
		{
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7814
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7825
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7828
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.str = ""
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7970
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8077
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{

			sqlVAL.union.val = true
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = false
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8132
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8139
		{
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8236
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8247
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8264
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8274
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8289
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8357
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8360
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8361
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8444
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8529
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8538
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8546
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8591
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8594
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8597
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8649
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.str = ""
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8703
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = true
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8726
		{

			sqlVAL.union.val = true
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = false
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8743
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8757
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8769
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8781
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8792
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8803
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = false
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = true
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = true
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = nil
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8978
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8980
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8982
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8986
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9021
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9038
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:9056
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:9072
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9088
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9092
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = false
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = true
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = false
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = true
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = false
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9152
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9158
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9166
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.str = ""
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.str = ""
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9219
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9225
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9450
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9456
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9468
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9474
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9488
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9494
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9553
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = true
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = false
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9613
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.str = ""
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9653
		{
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9656
		{
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9657
		{
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9668
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9724
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9745
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9753
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9764
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9768
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9769
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9770
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9789
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9802
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9813
		{
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9836
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9837
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9844
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9851
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9856
		{
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9897
		{
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9899
		{
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.str = ""
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10016
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10021
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{

		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10053
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.str = ""
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.str = ""
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.str = ""
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.str = ""
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10108
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10134
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10163
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10243
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10288
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10379
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10394
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10573
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10574
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10575
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10636
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10680
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10696
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = true
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = false
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10750
		{
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = nil
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10764
		{
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = true
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = false
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = false
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = true
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10794
		{
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10797
		{
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10798
		{
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10851
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10856
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10882
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10915
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10971
		{
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10974
		{
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11041
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11043
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11058
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11080
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11085
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11090
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11111
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11127
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11158
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11200
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11210
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11256
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11286
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11319
		{
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = nil
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = true
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = false
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.str = tree.AstFull
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.str = tree.AstRight
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.str = tree.AstInner
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11439
		{
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.str = tree.AstHash
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.str = ""
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11531
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11537
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11543
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11553
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = true
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = false
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = true
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = false
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11602
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11615
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11623
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11624
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11642
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11652
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11665
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11672
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11721
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11733
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11734
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = types.Geography
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11783
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11791
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11825
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = nil
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = types.Int2
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = types.Int
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = types.Float4
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = types.Float
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11868
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11876
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11884
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = types.Bool
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = types.Float
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11917
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11923
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11945
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = types.String
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = true
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = false
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = types.Date
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11994
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12002
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12016
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12025
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12033
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12050
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = true
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = false
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = false
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = types.Interval
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12074
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12158
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12173
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = nil
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12203
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12263
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12412
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12420
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12526
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12542
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12603
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12619
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12641
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12749
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12757
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12853
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12858
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12884
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12893
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12908
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12942
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12953
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12954
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12978
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13044
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13143
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13169
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13174
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13183
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13201
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13210
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13215
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13220
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13230
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13235
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13244
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13245
		{
			return unimplemented(sqllex, "treat")
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13266
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13271
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13287
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13318
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13361
		{
			sqlVAL.str = ""
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13371
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13377
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13385
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13393
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13401
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13407
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13420
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13448
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13452
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13456
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13460
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13476
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13480
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13484
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13488
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13493
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13517
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13529
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13553
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13556
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13557
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13559
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13560
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13561
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13563
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13564
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13566
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13568
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13569
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13570
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13571
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13572
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13573
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13574
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13575
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13577
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13578
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13579
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13581
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13582
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13583
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13584
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13585
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13586
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13587
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13588
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13593
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13616
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13617
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13618
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13619
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13652
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13656
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13660
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13671
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13675
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13685
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13698
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13708
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13718
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13722
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13728
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13742
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13769
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13773
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13779
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13786
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13790
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13807
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13811
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13835
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13841
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13845
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13849
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13855
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13867
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13874
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13894
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13901
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13907
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13911
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13918
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13933
		{
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13934
		{
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13938
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13948
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13957
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13961
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13965
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13977
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13987
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13991
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14010
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14018
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14041
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14050
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14054
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14058
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14062
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14068
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14087
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14091
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14103
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14107
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14116
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14127
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14136
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14144
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14161
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14246
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14254
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14258
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14264
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14274
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14280
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14287
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14314
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14321
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14325
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14329
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14343
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14347
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14351
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14364
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14373
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14391
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14404
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14411
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14436
		{
			sqlVAL.str = ""
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14442
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14446
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
