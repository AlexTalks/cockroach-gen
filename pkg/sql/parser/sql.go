// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op {
		case tree.Plus:
			return expr, 0
		case tree.Minus:
			return unaryNegation(expr), 0
		}
	case tree.ComparisonOperator:
		switch op {
		case tree.RegMatch:
			return &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: expr}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:136

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:782
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_LOCALITIES_CHECK = lex.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13079

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1501,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 399,
	-2, 0,
	-1, 74,
	241, 236,
	508, 236,
	-2, 0,
	-1, 87,
	229, 1261,
	243, 1261,
	259, 395,
	386, 395,
	396, 1031,
	432, 395,
	445, 1031,
	492, 1031,
	519, 395,
	545, 1031,
	-2, 0,
	-1, 93,
	132, 1501,
	236, 1501,
	530, 1501,
	531, 1501,
	-2, 0,
	-1, 109,
	150, 1472,
	169, 1472,
	182, 1472,
	239, 1472,
	272, 1472,
	338, 1472,
	348, 1472,
	525, 1472,
	-2, 1443,
	-1, 148,
	158, 888,
	258, 888,
	389, 851,
	450, 851,
	491, 851,
	511, 888,
	513, 851,
	-2, 0,
	-1, 151,
	4, 1503,
	21, 1503,
	22, 1503,
	23, 1503,
	24, 1503,
	25, 1503,
	26, 1503,
	27, 1503,
	29, 1503,
	30, 1503,
	36, 1503,
	41, 1503,
	42, 1503,
	44, 1503,
	45, 1503,
	46, 1503,
	47, 1503,
	48, 1503,
	49, 1503,
	50, 1503,
	51, 1503,
	53, 1503,
	54, 1503,
	55, 1503,
	56, 1503,
	58, 1503,
	59, 1503,
	60, 1503,
	61, 1503,
	62, 1503,
	63, 1503,
	64, 1503,
	68, 1503,
	69, 1503,
	70, 1503,
	71, 1503,
	73, 1503,
	74, 1503,
	75, 1503,
	79, 1503,
	80, 1503,
	81, 1503,
	82, 1503,
	83, 1503,
	84, 1503,
	85, 1503,
	88, 1503,
	89, 1503,
	90, 1503,
	91, 1503,
	92, 1503,
	94, 1503,
	96, 1503,
	97, 1503,
	98, 1503,
	99, 1503,
	100, 1503,
	101, 1503,
	103, 1503,
	104, 1503,
	105, 1503,
	107, 1503,
	108, 1503,
	109, 1503,
	117, 1503,
	118, 1503,
	119, 1503,
	120, 1503,
	121, 1503,
	123, 1503,
	124, 1503,
	125, 1503,
	127, 1503,
	128, 1503,
	129, 1503,
	131, 1503,
	132, 1503,
	133, 1503,
	135, 1503,
	136, 1503,
	137, 1503,
	140, 1503,
	141, 1503,
	142, 1503,
	144, 1503,
	145, 1503,
	147, 1503,
	148, 1503,
	149, 1503,
	151, 1503,
	152, 1503,
	153, 1503,
	154, 1503,
	155, 1503,
	156, 1503,
	157, 1503,
	158, 1503,
	159, 1503,
	160, 1503,
	161, 1503,
	162, 1503,
	163, 1503,
	164, 1503,
	165, 1503,
	166, 1503,
	168, 1503,
	174, 1503,
	175, 1503,
	176, 1503,
	177, 1503,
	181, 1503,
	183, 1503,
	184, 1503,
	188, 1503,
	189, 1503,
	190, 1503,
	191, 1503,
	192, 1503,
	193, 1503,
	194, 1503,
	195, 1503,
	196, 1503,
	197, 1503,
	198, 1503,
	199, 1503,
	200, 1503,
	202, 1503,
	203, 1503,
	205, 1503,
	206, 1503,
	208, 1503,
	209, 1503,
	210, 1503,
	211, 1503,
	212, 1503,
	213, 1503,
	214, 1503,
	215, 1503,
	216, 1503,
	218, 1503,
	219, 1503,
	221, 1503,
	222, 1503,
	223, 1503,
	224, 1503,
	225, 1503,
	229, 1503,
	230, 1503,
	231, 1503,
	232, 1503,
	233, 1503,
	236, 1503,
	237, 1503,
	238, 1503,
	240, 1503,
	242, 1503,
	243, 1503,
	245, 1503,
	247, 1503,
	248, 1503,
	249, 1503,
	251, 1503,
	255, 1503,
	256, 1503,
	257, 1503,
	258, 1503,
	259, 1503,
	260, 1503,
	262, 1503,
	263, 1503,
	264, 1503,
	266, 1503,
	267, 1503,
	269, 1503,
	270, 1503,
	273, 1503,
	277, 1503,
	278, 1503,
	279, 1503,
	282, 1503,
	283, 1503,
	284, 1503,
	285, 1503,
	287, 1503,
	288, 1503,
	289, 1503,
	290, 1503,
	291, 1503,
	292, 1503,
	293, 1503,
	294, 1503,
	295, 1503,
	296, 1503,
	297, 1503,
	298, 1503,
	299, 1503,
	300, 1503,
	301, 1503,
	302, 1503,
	303, 1503,
	304, 1503,
	305, 1503,
	306, 1503,
	307, 1503,
	308, 1503,
	310, 1503,
	312, 1503,
	313, 1503,
	314, 1503,
	315, 1503,
	316, 1503,
	317, 1503,
	318, 1503,
	319, 1503,
	320, 1503,
	321, 1503,
	322, 1503,
	323, 1503,
	325, 1503,
	326, 1503,
	328, 1503,
	330, 1503,
	331, 1503,
	333, 1503,
	334, 1503,
	335, 1503,
	336, 1503,
	337, 1503,
	340, 1503,
	343, 1503,
	344, 1503,
	345, 1503,
	346, 1503,
	349, 1503,
	350, 1503,
	351, 1503,
	353, 1503,
	355, 1503,
	356, 1503,
	357, 1503,
	358, 1503,
	359, 1503,
	360, 1503,
	361, 1503,
	362, 1503,
	363, 1503,
	364, 1503,
	365, 1503,
	366, 1503,
	368, 1503,
	369, 1503,
	370, 1503,
	371, 1503,
	372, 1503,
	373, 1503,
	374, 1503,
	375, 1503,
	376, 1503,
	377, 1503,
	378, 1503,
	379, 1503,
	380, 1503,
	381, 1503,
	382, 1503,
	384, 1503,
	385, 1503,
	387, 1503,
	388, 1503,
	389, 1503,
	390, 1503,
	391, 1503,
	392, 1503,
	393, 1503,
	394, 1503,
	395, 1503,
	396, 1503,
	397, 1503,
	398, 1503,
	400, 1503,
	402, 1503,
	403, 1503,
	404, 1503,
	409, 1503,
	411, 1503,
	412, 1503,
	413, 1503,
	414, 1503,
	415, 1503,
	416, 1503,
	417, 1503,
	418, 1503,
	419, 1503,
	421, 1503,
	422, 1503,
	423, 1503,
	425, 1503,
	426, 1503,
	427, 1503,
	428, 1503,
	429, 1503,
	430, 1503,
	432, 1503,
	433, 1503,
	434, 1503,
	435, 1503,
	436, 1503,
	437, 1503,
	438, 1503,
	439, 1503,
	440, 1503,
	441, 1503,
	442, 1503,
	443, 1503,
	445, 1503,
	446, 1503,
	447, 1503,
	448, 1503,
	449, 1503,
	450, 1503,
	452, 1503,
	453, 1503,
	454, 1503,
	455, 1503,
	456, 1503,
	457, 1503,
	459, 1503,
	460, 1503,
	461, 1503,
	462, 1503,
	463, 1503,
	464, 1503,
	465, 1503,
	466, 1503,
	468, 1503,
	470, 1503,
	471, 1503,
	472, 1503,
	473, 1503,
	474, 1503,
	475, 1503,
	476, 1503,
	477, 1503,
	478, 1503,
	479, 1503,
	480, 1503,
	481, 1503,
	482, 1503,
	483, 1503,
	484, 1503,
	485, 1503,
	487, 1503,
	488, 1503,
	490, 1503,
	491, 1503,
	493, 1503,
	494, 1503,
	495, 1503,
	496, 1503,
	497, 1503,
	498, 1503,
	499, 1503,
	500, 1503,
	501, 1503,
	503, 1503,
	504, 1503,
	505, 1503,
	506, 1503,
	507, 1503,
	509, 1503,
	511, 1503,
	512, 1503,
	513, 1503,
	514, 1503,
	515, 1503,
	516, 1503,
	518, 1503,
	519, 1503,
	520, 1503,
	521, 1503,
	523, 1503,
	524, 1503,
	527, 1503,
	528, 1503,
	529, 1503,
	530, 1503,
	531, 1503,
	532, 1503,
	533, 1503,
	535, 1503,
	538, 1503,
	539, 1503,
	540, 1503,
	541, 1503,
	542, 1503,
	543, 1503,
	545, 1503,
	546, 1503,
	547, 1503,
	548, 1503,
	550, 1503,
	555, 1503,
	556, 1503,
	557, 1503,
	558, 1503,
	559, 1503,
	560, 1503,
	-2, 0,
	-1, 152,
	1, 1358,
	130, 1358,
	247, 1358,
	327, 1358,
	384, 1358,
	393, 1358,
	564, 1358,
	588, 1358,
	-2, 0,
	-1, 154,
	1, 1358,
	588, 1358,
	-2, 0,
	-1, 155,
	1, 1358,
	588, 1358,
	-2, 0,
	-1, 156,
	1, 1358,
	508, 1358,
	588, 1358,
	-2, 0,
	-1, 184,
	150, 1471,
	169, 1471,
	182, 1471,
	239, 1471,
	272, 1471,
	338, 1471,
	348, 1471,
	525, 1471,
	-2, 1446,
	-1, 230,
	4, 1510,
	5, 1510,
	6, 1510,
	7, 1510,
	8, 1510,
	9, 1510,
	10, 1510,
	21, 1510,
	22, 1510,
	23, 1510,
	24, 1510,
	25, 1510,
	26, 1510,
	27, 1510,
	29, 1510,
	30, 1510,
	36, 1510,
	37, 1510,
	41, 1510,
	42, 1510,
	43, 1510,
	44, 1510,
	45, 1510,
	46, 1510,
	47, 1510,
	48, 1510,
	49, 1510,
	50, 1510,
	51, 1510,
	53, 1510,
	54, 1510,
	55, 1510,
	56, 1510,
	58, 1510,
	59, 1510,
	60, 1510,
	61, 1510,
	62, 1510,
	63, 1510,
	64, 1510,
	65, 1510,
	66, 1510,
	67, 1510,
	68, 1510,
	69, 1510,
	70, 1510,
	71, 1510,
	73, 1510,
	74, 1510,
	75, 1510,
	77, 1510,
	79, 1510,
	80, 1510,
	81, 1510,
	82, 1510,
	83, 1510,
	84, 1510,
	85, 1510,
	88, 1510,
	89, 1510,
	90, 1510,
	91, 1510,
	92, 1510,
	94, 1510,
	96, 1510,
	97, 1510,
	98, 1510,
	99, 1510,
	100, 1510,
	101, 1510,
	103, 1510,
	104, 1510,
	105, 1510,
	106, 1510,
	107, 1510,
	108, 1510,
	109, 1510,
	110, 1510,
	111, 1510,
	112, 1510,
	113, 1510,
	114, 1510,
	115, 1510,
	116, 1510,
	117, 1510,
	118, 1510,
	119, 1510,
	120, 1510,
	121, 1510,
	122, 1510,
	123, 1510,
	124, 1510,
	125, 1510,
	126, 1510,
	127, 1510,
	128, 1510,
	129, 1510,
	131, 1510,
	132, 1510,
	133, 1510,
	135, 1510,
	136, 1510,
	137, 1510,
	140, 1510,
	141, 1510,
	142, 1510,
	144, 1510,
	145, 1510,
	147, 1510,
	148, 1510,
	149, 1510,
	151, 1510,
	152, 1510,
	153, 1510,
	154, 1510,
	155, 1510,
	156, 1510,
	157, 1510,
	158, 1510,
	159, 1510,
	160, 1510,
	161, 1510,
	162, 1510,
	163, 1510,
	164, 1510,
	165, 1510,
	166, 1510,
	167, 1510,
	168, 1510,
	174, 1510,
	175, 1510,
	176, 1510,
	177, 1510,
	181, 1510,
	183, 1510,
	184, 1510,
	187, 1510,
	188, 1510,
	189, 1510,
	190, 1510,
	191, 1510,
	192, 1510,
	193, 1510,
	194, 1510,
	195, 1510,
	196, 1510,
	197, 1510,
	198, 1510,
	199, 1510,
	200, 1510,
	202, 1510,
	203, 1510,
	205, 1510,
	206, 1510,
	208, 1510,
	209, 1510,
	210, 1510,
	211, 1510,
	212, 1510,
	213, 1510,
	214, 1510,
	215, 1510,
	216, 1510,
	217, 1510,
	218, 1510,
	219, 1510,
	221, 1510,
	222, 1510,
	223, 1510,
	224, 1510,
	225, 1510,
	229, 1510,
	230, 1510,
	231, 1510,
	232, 1510,
	233, 1510,
	235, 1510,
	236, 1510,
	237, 1510,
	238, 1510,
	240, 1510,
	242, 1510,
	243, 1510,
	244, 1510,
	245, 1510,
	246, 1510,
	247, 1510,
	248, 1510,
	249, 1510,
	250, 1510,
	251, 1510,
	255, 1510,
	256, 1510,
	257, 1510,
	258, 1510,
	259, 1510,
	260, 1510,
	262, 1510,
	263, 1510,
	264, 1510,
	266, 1510,
	267, 1510,
	268, 1510,
	269, 1510,
	270, 1510,
	271, 1510,
	273, 1510,
	277, 1510,
	278, 1510,
	279, 1510,
	280, 1510,
	281, 1510,
	282, 1510,
	283, 1510,
	284, 1510,
	285, 1510,
	287, 1510,
	288, 1510,
	289, 1510,
	290, 1510,
	291, 1510,
	292, 1510,
	293, 1510,
	294, 1510,
	295, 1510,
	296, 1510,
	297, 1510,
	298, 1510,
	299, 1510,
	300, 1510,
	301, 1510,
	302, 1510,
	303, 1510,
	304, 1510,
	305, 1510,
	306, 1510,
	307, 1510,
	308, 1510,
	310, 1510,
	311, 1510,
	312, 1510,
	313, 1510,
	314, 1510,
	315, 1510,
	316, 1510,
	317, 1510,
	318, 1510,
	319, 1510,
	320, 1510,
	321, 1510,
	322, 1510,
	323, 1510,
	324, 1510,
	325, 1510,
	326, 1510,
	327, 1510,
	328, 1510,
	329, 1510,
	330, 1510,
	331, 1510,
	332, 1510,
	333, 1510,
	334, 1510,
	335, 1510,
	336, 1510,
	337, 1510,
	340, 1510,
	344, 1510,
	345, 1510,
	346, 1510,
	349, 1510,
	350, 1510,
	351, 1510,
	352, 1510,
	353, 1510,
	354, 1510,
	355, 1510,
	356, 1510,
	357, 1510,
	358, 1510,
	359, 1510,
	360, 1510,
	361, 1510,
	362, 1510,
	363, 1510,
	364, 1510,
	365, 1510,
	366, 1510,
	368, 1510,
	369, 1510,
	370, 1510,
	371, 1510,
	372, 1510,
	373, 1510,
	374, 1510,
	375, 1510,
	376, 1510,
	377, 1510,
	378, 1510,
	379, 1510,
	380, 1510,
	381, 1510,
	382, 1510,
	384, 1510,
	385, 1510,
	387, 1510,
	388, 1510,
	389, 1510,
	390, 1510,
	391, 1510,
	392, 1510,
	393, 1510,
	394, 1510,
	395, 1510,
	396, 1510,
	397, 1510,
	398, 1510,
	400, 1510,
	402, 1510,
	403, 1510,
	404, 1510,
	409, 1510,
	411, 1510,
	412, 1510,
	413, 1510,
	414, 1510,
	415, 1510,
	416, 1510,
	417, 1510,
	418, 1510,
	419, 1510,
	421, 1510,
	422, 1510,
	423, 1510,
	424, 1510,
	425, 1510,
	426, 1510,
	427, 1510,
	428, 1510,
	429, 1510,
	430, 1510,
	432, 1510,
	433, 1510,
	434, 1510,
	435, 1510,
	436, 1510,
	437, 1510,
	438, 1510,
	439, 1510,
	440, 1510,
	441, 1510,
	442, 1510,
	443, 1510,
	445, 1510,
	446, 1510,
	447, 1510,
	448, 1510,
	449, 1510,
	450, 1510,
	451, 1510,
	452, 1510,
	453, 1510,
	454, 1510,
	455, 1510,
	456, 1510,
	457, 1510,
	458, 1510,
	459, 1510,
	460, 1510,
	461, 1510,
	462, 1510,
	463, 1510,
	464, 1510,
	465, 1510,
	466, 1510,
	468, 1510,
	470, 1510,
	471, 1510,
	472, 1510,
	473, 1510,
	474, 1510,
	475, 1510,
	476, 1510,
	477, 1510,
	478, 1510,
	479, 1510,
	480, 1510,
	481, 1510,
	482, 1510,
	483, 1510,
	484, 1510,
	485, 1510,
	487, 1510,
	488, 1510,
	489, 1510,
	490, 1510,
	491, 1510,
	493, 1510,
	494, 1510,
	495, 1510,
	496, 1510,
	497, 1510,
	498, 1510,
	499, 1510,
	500, 1510,
	501, 1510,
	503, 1510,
	504, 1510,
	505, 1510,
	506, 1510,
	507, 1510,
	509, 1510,
	511, 1510,
	512, 1510,
	513, 1510,
	514, 1510,
	515, 1510,
	516, 1510,
	517, 1510,
	518, 1510,
	519, 1510,
	520, 1510,
	521, 1510,
	523, 1510,
	524, 1510,
	526, 1510,
	527, 1510,
	528, 1510,
	529, 1510,
	530, 1510,
	531, 1510,
	532, 1510,
	533, 1510,
	534, 1510,
	535, 1510,
	538, 1510,
	539, 1510,
	540, 1510,
	541, 1510,
	542, 1510,
	543, 1510,
	545, 1510,
	546, 1510,
	547, 1510,
	548, 1510,
	550, 1510,
	555, 1510,
	556, 1510,
	557, 1510,
	558, 1510,
	559, 1510,
	560, 1510,
	561, 1510,
	569, 1510,
	576, 1510,
	577, 1510,
	578, 1510,
	585, 1510,
	589, 1510,
	-2, 0,
	-1, 729,
	4, 1259,
	21, 1259,
	22, 1259,
	23, 1259,
	24, 1259,
	25, 1259,
	26, 1259,
	27, 1259,
	29, 1259,
	30, 1259,
	36, 1259,
	41, 1259,
	42, 1259,
	44, 1259,
	45, 1259,
	46, 1259,
	47, 1259,
	48, 1259,
	49, 1259,
	50, 1259,
	51, 1259,
	53, 1259,
	54, 1259,
	55, 1259,
	56, 1259,
	58, 1259,
	59, 1259,
	60, 1259,
	61, 1259,
	62, 1259,
	63, 1259,
	64, 1259,
	68, 1259,
	69, 1259,
	70, 1259,
	71, 1259,
	73, 1259,
	74, 1259,
	75, 1259,
	79, 1259,
	80, 1259,
	81, 1259,
	82, 1259,
	83, 1259,
	84, 1259,
	85, 1259,
	88, 1259,
	89, 1259,
	90, 1259,
	91, 1259,
	92, 1259,
	94, 1259,
	96, 1259,
	97, 1259,
	98, 1259,
	99, 1259,
	100, 1259,
	101, 1259,
	103, 1259,
	104, 1259,
	105, 1259,
	107, 1259,
	108, 1259,
	109, 1259,
	117, 1259,
	118, 1259,
	119, 1259,
	120, 1259,
	121, 1259,
	123, 1259,
	124, 1259,
	125, 1259,
	127, 1259,
	128, 1259,
	129, 1259,
	131, 1259,
	132, 1259,
	133, 1259,
	135, 1259,
	136, 1259,
	137, 1259,
	140, 1259,
	141, 1259,
	142, 1259,
	144, 1259,
	145, 1259,
	147, 1259,
	148, 1259,
	149, 1259,
	151, 1259,
	152, 1259,
	153, 1259,
	154, 1259,
	155, 1259,
	156, 1259,
	157, 1259,
	158, 1259,
	159, 1259,
	160, 1259,
	161, 1259,
	162, 1259,
	163, 1259,
	164, 1259,
	165, 1259,
	166, 1259,
	168, 1259,
	174, 1259,
	175, 1259,
	176, 1259,
	177, 1259,
	181, 1259,
	183, 1259,
	184, 1259,
	188, 1259,
	189, 1259,
	190, 1259,
	191, 1259,
	192, 1259,
	193, 1259,
	194, 1259,
	195, 1259,
	196, 1259,
	197, 1259,
	198, 1259,
	199, 1259,
	200, 1259,
	202, 1259,
	203, 1259,
	205, 1259,
	206, 1259,
	208, 1259,
	209, 1259,
	210, 1259,
	211, 1259,
	212, 1259,
	213, 1259,
	214, 1259,
	215, 1259,
	216, 1259,
	218, 1259,
	219, 1259,
	221, 1259,
	222, 1259,
	223, 1259,
	224, 1259,
	225, 1259,
	229, 1259,
	230, 1259,
	231, 1259,
	232, 1259,
	233, 1259,
	236, 1259,
	237, 1259,
	238, 1259,
	240, 1259,
	242, 1259,
	243, 1259,
	245, 1259,
	247, 1259,
	248, 1259,
	249, 1259,
	251, 1259,
	255, 1259,
	256, 1259,
	257, 1259,
	258, 1259,
	259, 1259,
	260, 1259,
	262, 1259,
	263, 1259,
	264, 1259,
	266, 1259,
	267, 1259,
	269, 1259,
	270, 1259,
	273, 1259,
	277, 1259,
	278, 1259,
	279, 1259,
	282, 1259,
	283, 1259,
	284, 1259,
	285, 1259,
	287, 1259,
	288, 1259,
	289, 1259,
	290, 1259,
	291, 1259,
	292, 1259,
	293, 1259,
	294, 1259,
	295, 1259,
	296, 1259,
	297, 1259,
	298, 1259,
	299, 1259,
	300, 1259,
	301, 1259,
	302, 1259,
	303, 1259,
	304, 1259,
	305, 1259,
	306, 1259,
	307, 1259,
	308, 1259,
	310, 1259,
	312, 1259,
	313, 1259,
	314, 1259,
	315, 1259,
	316, 1259,
	317, 1259,
	318, 1259,
	319, 1259,
	320, 1259,
	321, 1259,
	322, 1259,
	323, 1259,
	325, 1259,
	326, 1259,
	328, 1259,
	330, 1259,
	331, 1259,
	333, 1259,
	334, 1259,
	335, 1259,
	336, 1259,
	337, 1259,
	340, 1259,
	344, 1259,
	345, 1259,
	346, 1259,
	349, 1259,
	350, 1259,
	351, 1259,
	353, 1259,
	355, 1259,
	356, 1259,
	357, 1259,
	358, 1259,
	359, 1259,
	360, 1259,
	361, 1259,
	362, 1259,
	363, 1259,
	364, 1259,
	365, 1259,
	366, 1259,
	368, 1259,
	369, 1259,
	370, 1259,
	371, 1259,
	372, 1259,
	373, 1259,
	374, 1259,
	375, 1259,
	376, 1259,
	377, 1259,
	378, 1259,
	379, 1259,
	380, 1259,
	381, 1259,
	382, 1259,
	384, 1259,
	385, 1259,
	387, 1259,
	388, 1259,
	389, 1259,
	390, 1259,
	391, 1259,
	392, 1259,
	393, 1259,
	394, 1259,
	395, 1259,
	396, 1259,
	397, 1259,
	398, 1259,
	400, 1259,
	402, 1259,
	403, 1259,
	404, 1259,
	409, 1259,
	411, 1259,
	412, 1259,
	413, 1259,
	414, 1259,
	415, 1259,
	416, 1259,
	417, 1259,
	418, 1259,
	419, 1259,
	421, 1259,
	422, 1259,
	423, 1259,
	425, 1259,
	426, 1259,
	427, 1259,
	428, 1259,
	429, 1259,
	430, 1259,
	432, 1259,
	433, 1259,
	434, 1259,
	435, 1259,
	436, 1259,
	437, 1259,
	438, 1259,
	439, 1259,
	440, 1259,
	441, 1259,
	442, 1259,
	443, 1259,
	445, 1259,
	446, 1259,
	447, 1259,
	448, 1259,
	449, 1259,
	450, 1259,
	452, 1259,
	453, 1259,
	454, 1259,
	455, 1259,
	456, 1259,
	457, 1259,
	459, 1259,
	460, 1259,
	461, 1259,
	462, 1259,
	463, 1259,
	464, 1259,
	465, 1259,
	466, 1259,
	468, 1259,
	470, 1259,
	471, 1259,
	472, 1259,
	473, 1259,
	474, 1259,
	475, 1259,
	476, 1259,
	477, 1259,
	478, 1259,
	479, 1259,
	480, 1259,
	481, 1259,
	482, 1259,
	483, 1259,
	484, 1259,
	485, 1259,
	487, 1259,
	488, 1259,
	490, 1259,
	491, 1259,
	493, 1259,
	494, 1259,
	495, 1259,
	496, 1259,
	497, 1259,
	498, 1259,
	499, 1259,
	500, 1259,
	501, 1259,
	503, 1259,
	504, 1259,
	505, 1259,
	506, 1259,
	507, 1259,
	509, 1259,
	511, 1259,
	512, 1259,
	513, 1259,
	514, 1259,
	515, 1259,
	516, 1259,
	518, 1259,
	519, 1259,
	520, 1259,
	521, 1259,
	523, 1259,
	524, 1259,
	527, 1259,
	528, 1259,
	529, 1259,
	530, 1259,
	531, 1259,
	532, 1259,
	533, 1259,
	535, 1259,
	538, 1259,
	539, 1259,
	540, 1259,
	541, 1259,
	542, 1259,
	543, 1259,
	545, 1259,
	546, 1259,
	547, 1259,
	548, 1259,
	550, 1259,
	555, 1259,
	556, 1259,
	557, 1259,
	558, 1259,
	559, 1259,
	560, 1259,
	-2, 0,
	-1, 748,
	186, 2294,
	508, 2294,
	568, 2294,
	587, 2294,
	-2, 0,
	-1, 749,
	186, 2400,
	508, 2400,
	568, 2400,
	587, 2400,
	-2, 0,
	-1, 750,
	186, 2281,
	508, 2281,
	568, 2281,
	587, 2281,
	-2, 0,
	-1, 752,
	186, 2532,
	508, 2532,
	568, 2532,
	587, 2532,
	-2, 0,
	-1, 754,
	186, 2573,
	508, 2573,
	568, 2573,
	587, 2573,
	-2, 0,
	-1, 761,
	186, 2427,
	508, 2427,
	568, 2427,
	587, 2427,
	-2, 685,
	-1, 794,
	587, 2230,
	590, 2230,
	-2, 962,
	-1, 795,
	587, 2232,
	590, 2232,
	-2, 963,
	-1, 796,
	587, 2231,
	590, 2231,
	-2, 964,
	-1, 797,
	590, 2157,
	-2, 965,
	-1, 820,
	182, 251,
	-2, 0,
	-1, 844,
	43, 2204,
	-2, 0,
	-1, 845,
	545, 1237,
	-2, 1032,
	-1, 861,
	4, 1639,
	21, 1639,
	22, 1639,
	23, 1639,
	24, 1639,
	25, 1639,
	26, 1639,
	27, 1639,
	29, 1639,
	30, 1639,
	36, 1639,
	41, 1639,
	42, 1639,
	44, 1639,
	45, 1639,
	46, 1639,
	47, 1639,
	48, 1639,
	49, 1639,
	50, 1639,
	51, 1639,
	53, 1639,
	54, 1639,
	55, 1639,
	56, 1639,
	58, 1639,
	59, 1639,
	60, 1639,
	61, 1639,
	62, 1639,
	63, 1639,
	64, 1639,
	68, 1639,
	69, 1639,
	70, 1639,
	71, 1639,
	73, 1639,
	74, 1639,
	75, 1639,
	79, 1639,
	80, 1639,
	81, 1639,
	82, 1639,
	83, 1639,
	84, 1639,
	85, 1639,
	88, 1639,
	89, 1639,
	90, 1639,
	91, 1639,
	92, 1639,
	94, 1639,
	96, 1639,
	97, 1639,
	98, 1639,
	99, 1639,
	100, 1639,
	101, 1639,
	103, 1639,
	104, 1639,
	105, 1639,
	107, 1639,
	108, 1639,
	109, 1639,
	117, 1639,
	118, 1639,
	119, 1639,
	120, 1639,
	121, 1639,
	123, 1639,
	124, 1639,
	125, 1639,
	127, 1639,
	128, 1639,
	129, 1639,
	131, 1639,
	132, 1639,
	133, 1639,
	135, 1639,
	136, 1639,
	137, 1639,
	140, 1639,
	141, 1639,
	142, 1639,
	144, 1639,
	145, 1639,
	147, 1639,
	148, 1639,
	149, 1639,
	151, 1639,
	152, 1639,
	153, 1639,
	154, 1639,
	155, 1639,
	156, 1639,
	157, 1639,
	158, 1639,
	159, 1639,
	160, 1639,
	161, 1639,
	162, 1639,
	163, 1639,
	164, 1639,
	165, 1639,
	166, 1639,
	168, 1639,
	174, 1639,
	175, 1639,
	176, 1639,
	177, 1639,
	181, 1639,
	183, 1639,
	184, 1639,
	188, 1639,
	189, 1639,
	190, 1639,
	191, 1639,
	192, 1639,
	193, 1639,
	194, 1639,
	195, 1639,
	196, 1639,
	197, 1639,
	198, 1639,
	199, 1639,
	200, 1639,
	202, 1639,
	203, 1639,
	205, 1639,
	206, 1639,
	208, 1639,
	209, 1639,
	210, 1639,
	211, 1639,
	212, 1639,
	213, 1639,
	214, 1639,
	215, 1639,
	216, 1639,
	218, 1639,
	219, 1639,
	221, 1639,
	222, 1639,
	223, 1639,
	224, 1639,
	225, 1639,
	229, 1639,
	230, 1639,
	231, 1639,
	232, 1639,
	233, 1639,
	236, 1639,
	237, 1639,
	238, 1639,
	240, 1639,
	242, 1639,
	243, 1639,
	245, 1639,
	247, 1639,
	248, 1639,
	249, 1639,
	251, 1639,
	255, 1639,
	256, 1639,
	257, 1639,
	258, 1639,
	259, 1639,
	260, 1639,
	262, 1639,
	263, 1639,
	264, 1639,
	266, 1639,
	267, 1639,
	269, 1639,
	270, 1639,
	273, 1639,
	277, 1639,
	278, 1639,
	279, 1639,
	282, 1639,
	283, 1639,
	284, 1639,
	285, 1639,
	287, 1639,
	288, 1639,
	289, 1639,
	290, 1639,
	291, 1639,
	292, 1639,
	293, 1639,
	294, 1639,
	295, 1639,
	296, 1639,
	297, 1639,
	298, 1639,
	299, 1639,
	300, 1639,
	301, 1639,
	302, 1639,
	303, 1639,
	304, 1639,
	305, 1639,
	306, 1639,
	307, 1639,
	308, 1639,
	310, 1639,
	312, 1639,
	313, 1639,
	314, 1639,
	315, 1639,
	316, 1639,
	317, 1639,
	318, 1639,
	319, 1639,
	320, 1639,
	321, 1639,
	322, 1639,
	323, 1639,
	325, 1639,
	326, 1639,
	328, 1639,
	330, 1639,
	331, 1639,
	333, 1639,
	334, 1639,
	335, 1639,
	336, 1639,
	337, 1639,
	340, 1639,
	344, 1639,
	345, 1639,
	346, 1639,
	349, 1639,
	350, 1639,
	351, 1639,
	353, 1639,
	355, 1639,
	356, 1639,
	357, 1639,
	358, 1639,
	359, 1639,
	360, 1639,
	361, 1639,
	362, 1639,
	363, 1639,
	364, 1639,
	365, 1639,
	366, 1639,
	368, 1639,
	369, 1639,
	370, 1639,
	371, 1639,
	372, 1639,
	373, 1639,
	374, 1639,
	375, 1639,
	376, 1639,
	377, 1639,
	378, 1639,
	379, 1639,
	380, 1639,
	381, 1639,
	382, 1639,
	384, 1639,
	385, 1639,
	387, 1639,
	388, 1639,
	389, 1639,
	390, 1639,
	391, 1639,
	392, 1639,
	393, 1639,
	394, 1639,
	395, 1639,
	396, 1639,
	397, 1639,
	398, 1639,
	400, 1639,
	402, 1639,
	403, 1639,
	404, 1639,
	409, 1639,
	411, 1639,
	412, 1639,
	413, 1639,
	414, 1639,
	415, 1639,
	416, 1639,
	417, 1639,
	418, 1639,
	419, 1639,
	421, 1639,
	422, 1639,
	423, 1639,
	425, 1639,
	426, 1639,
	427, 1639,
	428, 1639,
	429, 1639,
	430, 1639,
	432, 1639,
	433, 1639,
	434, 1639,
	435, 1639,
	436, 1639,
	437, 1639,
	438, 1639,
	439, 1639,
	440, 1639,
	441, 1639,
	442, 1639,
	443, 1639,
	445, 1639,
	446, 1639,
	447, 1639,
	448, 1639,
	449, 1639,
	450, 1639,
	452, 1639,
	453, 1639,
	454, 1639,
	455, 1639,
	456, 1639,
	457, 1639,
	459, 1639,
	460, 1639,
	461, 1639,
	462, 1639,
	463, 1639,
	464, 1639,
	465, 1639,
	466, 1639,
	468, 1639,
	470, 1639,
	471, 1639,
	472, 1639,
	473, 1639,
	474, 1639,
	475, 1639,
	476, 1639,
	477, 1639,
	478, 1639,
	479, 1639,
	480, 1639,
	481, 1639,
	482, 1639,
	483, 1639,
	484, 1639,
	485, 1639,
	487, 1639,
	488, 1639,
	490, 1639,
	491, 1639,
	493, 1639,
	494, 1639,
	495, 1639,
	496, 1639,
	497, 1639,
	498, 1639,
	499, 1639,
	500, 1639,
	501, 1639,
	503, 1639,
	504, 1639,
	505, 1639,
	506, 1639,
	507, 1639,
	509, 1639,
	511, 1639,
	512, 1639,
	513, 1639,
	514, 1639,
	515, 1639,
	516, 1639,
	518, 1639,
	519, 1639,
	520, 1639,
	521, 1639,
	523, 1639,
	524, 1639,
	527, 1639,
	528, 1639,
	529, 1639,
	530, 1639,
	531, 1639,
	532, 1639,
	533, 1639,
	535, 1639,
	538, 1639,
	539, 1639,
	540, 1639,
	541, 1639,
	542, 1639,
	543, 1639,
	545, 1639,
	546, 1639,
	547, 1639,
	548, 1639,
	550, 1639,
	555, 1639,
	556, 1639,
	557, 1639,
	558, 1639,
	559, 1639,
	560, 1639,
	-2, 0,
	-1, 871,
	259, 399,
	-2, 0,
	-1, 942,
	389, 852,
	450, 852,
	491, 852,
	513, 852,
	-2, 0,
	-1, 943,
	389, 851,
	450, 851,
	491, 851,
	513, 851,
	-2, 791,
	-1, 947,
	1, 902,
	584, 902,
	586, 902,
	588, 902,
	-2, 0,
	-1, 948,
	1, 826,
	584, 826,
	586, 826,
	588, 826,
	-2, 0,
	-1, 949,
	1, 830,
	584, 830,
	586, 830,
	588, 830,
	-2, 0,
	-1, 950,
	1, 961,
	182, 961,
	584, 961,
	586, 961,
	588, 961,
	-2, 0,
	-1, 958,
	1, 857,
	584, 857,
	586, 857,
	588, 857,
	-2, 0,
	-1, 965,
	1, 902,
	584, 902,
	586, 902,
	588, 902,
	-2, 0,
	-1, 966,
	1, 904,
	584, 904,
	586, 904,
	588, 904,
	-2, 0,
	-1, 967,
	1, 907,
	584, 907,
	586, 907,
	588, 907,
	-2, 0,
	-1, 973,
	1, 925,
	584, 925,
	586, 925,
	588, 925,
	-2, 0,
	-1, 974,
	1, 927,
	584, 927,
	586, 927,
	588, 927,
	-2, 0,
	-1, 979,
	1, 955,
	584, 955,
	586, 955,
	588, 955,
	-2, 0,
	-1, 1026,
	169, 1514,
	182, 1514,
	272, 1514,
	338, 1514,
	-2, 1450,
	-1, 1041,
	169, 1513,
	182, 1513,
	272, 1513,
	338, 1513,
	-2, 1447,
	-1, 1068,
	587, 2229,
	-2, 693,
	-1, 1097,
	5, 2221,
	585, 2219,
	-2, 2210,
	-1, 1105,
	5, 2242,
	585, 2239,
	-2, 2230,
	-1, 1106,
	5, 2243,
	585, 2240,
	-2, 2231,
	-1, 1114,
	587, 2227,
	-2, 2209,
	-1, 1115,
	585, 2656,
	-2, 2228,
	-1, 1138,
	585, 2655,
	-2, 2244,
	-1, 1139,
	5, 1714,
	-2, 2626,
	-1, 1140,
	5, 1715,
	-2, 2627,
	-1, 1141,
	5, 1716,
	-2, 2641,
	-1, 1142,
	5, 1717,
	-2, 2605,
	-1, 1143,
	5, 1718,
	-2, 2639,
	-1, 1144,
	5, 1726,
	-2, 2618,
	-1, 1145,
	5, 1713,
	-2, 2614,
	-1, 1146,
	5, 1713,
	-2, 2613,
	-1, 1147,
	5, 1713,
	-2, 2632,
	-1, 1148,
	5, 1724,
	-2, 2607,
	-1, 1149,
	5, 1729,
	-2, 2606,
	-1, 1150,
	5, 1731,
	-2, 2651,
	-1, 1153,
	5, 1753,
	-2, 2644,
	-1, 1154,
	5, 1745,
	-2, 2645,
	-1, 1155,
	5, 1753,
	-2, 2646,
	-1, 1156,
	5, 1749,
	-2, 2647,
	-1, 1157,
	5, 1699,
	-2, 2619,
	-1, 1158,
	5, 1700,
	-2, 2620,
	-1, 1159,
	5, 1701,
	-2, 2608,
	-1, 1187,
	5, 1736,
	-2, 2652,
	-1, 1188,
	5, 1737,
	-2, 2642,
	-1, 1189,
	5, 1738,
	546, 1738,
	-2, 2609,
	-1, 1190,
	5, 1739,
	546, 1739,
	-2, 2610,
	-1, 1227,
	585, 2239,
	-2, 2230,
	-1, 1228,
	585, 2240,
	-2, 2231,
	-1, 1328,
	186, 2573,
	508, 2573,
	568, 2573,
	587, 2573,
	-2, 0,
	-1, 1331,
	1, 671,
	588, 671,
	-2, 1366,
	-1, 1459,
	357, 2205,
	411, 2205,
	452, 2205,
	578, 2205,
	-2, 2195,
	-1, 1470,
	589, 2205,
	-2, 2206,
	-1, 1479,
	1, 1234,
	584, 1234,
	586, 1234,
	588, 1234,
	-2, 1499,
	-1, 1527,
	396, 1031,
	545, 1031,
	-2, 394,
	-1, 1544,
	43, 2203,
	-2, 997,
	-1, 1551,
	1, 1234,
	584, 1234,
	586, 1234,
	588, 1234,
	-2, 1499,
	-1, 1559,
	4, 1259,
	21, 1259,
	22, 1259,
	23, 1259,
	24, 1259,
	25, 1259,
	26, 1259,
	27, 1259,
	29, 1259,
	30, 1259,
	36, 1259,
	41, 1259,
	42, 1259,
	44, 1259,
	45, 1259,
	46, 1259,
	47, 1259,
	48, 1259,
	49, 1259,
	50, 1259,
	51, 1259,
	53, 1259,
	54, 1259,
	55, 1259,
	56, 1259,
	58, 1259,
	59, 1259,
	60, 1259,
	61, 1259,
	62, 1259,
	63, 1259,
	64, 1259,
	68, 1259,
	69, 1259,
	70, 1259,
	71, 1259,
	73, 1259,
	74, 1259,
	75, 1259,
	79, 1259,
	80, 1259,
	81, 1259,
	82, 1259,
	83, 1259,
	84, 1259,
	85, 1259,
	88, 1259,
	89, 1259,
	90, 1259,
	91, 1259,
	92, 1259,
	94, 1259,
	96, 1259,
	97, 1259,
	98, 1259,
	99, 1259,
	100, 1259,
	101, 1259,
	103, 1259,
	104, 1259,
	105, 1259,
	107, 1259,
	108, 1259,
	109, 1259,
	117, 1259,
	118, 1259,
	119, 1259,
	120, 1259,
	121, 1259,
	123, 1259,
	124, 1259,
	125, 1259,
	127, 1259,
	128, 1259,
	129, 1259,
	131, 1259,
	132, 1259,
	133, 1259,
	135, 1259,
	136, 1259,
	137, 1259,
	140, 1259,
	141, 1259,
	142, 1259,
	144, 1259,
	145, 1259,
	147, 1259,
	148, 1259,
	149, 1259,
	151, 1259,
	152, 1259,
	153, 1259,
	154, 1259,
	155, 1259,
	156, 1259,
	157, 1259,
	158, 1259,
	159, 1259,
	160, 1259,
	161, 1259,
	162, 1259,
	163, 1259,
	164, 1259,
	165, 1259,
	166, 1259,
	174, 1259,
	175, 1259,
	176, 1259,
	177, 1259,
	181, 1259,
	183, 1259,
	184, 1259,
	188, 1259,
	189, 1259,
	190, 1259,
	191, 1259,
	192, 1259,
	193, 1259,
	194, 1259,
	195, 1259,
	196, 1259,
	197, 1259,
	198, 1259,
	199, 1259,
	200, 1259,
	202, 1259,
	203, 1259,
	205, 1259,
	206, 1259,
	208, 1259,
	209, 1259,
	210, 1259,
	211, 1259,
	212, 1259,
	213, 1259,
	214, 1259,
	215, 1259,
	216, 1259,
	218, 1259,
	219, 1259,
	221, 1259,
	222, 1259,
	223, 1259,
	224, 1259,
	225, 1259,
	230, 1259,
	231, 1259,
	232, 1259,
	233, 1259,
	236, 1259,
	237, 1259,
	238, 1259,
	240, 1259,
	242, 1259,
	243, 1259,
	245, 1259,
	247, 1259,
	248, 1259,
	249, 1259,
	251, 1259,
	255, 1259,
	256, 1259,
	257, 1259,
	258, 1259,
	259, 1259,
	260, 1259,
	262, 1259,
	263, 1259,
	264, 1259,
	266, 1259,
	267, 1259,
	269, 1259,
	270, 1259,
	273, 1259,
	277, 1259,
	278, 1259,
	279, 1259,
	282, 1259,
	283, 1259,
	284, 1259,
	285, 1259,
	287, 1259,
	288, 1259,
	289, 1259,
	290, 1259,
	291, 1259,
	292, 1259,
	293, 1259,
	294, 1259,
	295, 1259,
	296, 1259,
	297, 1259,
	298, 1259,
	299, 1259,
	300, 1259,
	301, 1259,
	302, 1259,
	303, 1259,
	304, 1259,
	305, 1259,
	306, 1259,
	307, 1259,
	308, 1259,
	310, 1259,
	312, 1259,
	313, 1259,
	314, 1259,
	315, 1259,
	316, 1259,
	317, 1259,
	318, 1259,
	319, 1259,
	320, 1259,
	321, 1259,
	322, 1259,
	323, 1259,
	325, 1259,
	326, 1259,
	330, 1259,
	331, 1259,
	333, 1259,
	334, 1259,
	335, 1259,
	336, 1259,
	337, 1259,
	340, 1259,
	342, 1259,
	344, 1259,
	345, 1259,
	346, 1259,
	349, 1259,
	350, 1259,
	351, 1259,
	353, 1259,
	355, 1259,
	356, 1259,
	357, 1259,
	358, 1259,
	359, 1259,
	360, 1259,
	361, 1259,
	362, 1259,
	363, 1259,
	364, 1259,
	365, 1259,
	366, 1259,
	368, 1259,
	369, 1259,
	370, 1259,
	371, 1259,
	372, 1259,
	373, 1259,
	374, 1259,
	375, 1259,
	376, 1259,
	377, 1259,
	378, 1259,
	379, 1259,
	380, 1259,
	381, 1259,
	382, 1259,
	384, 1259,
	385, 1259,
	387, 1259,
	388, 1259,
	389, 1259,
	390, 1259,
	391, 1259,
	392, 1259,
	393, 1259,
	394, 1259,
	395, 1259,
	396, 1259,
	397, 1259,
	398, 1259,
	400, 1259,
	402, 1259,
	403, 1259,
	404, 1259,
	409, 1259,
	411, 1259,
	412, 1259,
	413, 1259,
	414, 1259,
	415, 1259,
	416, 1259,
	417, 1259,
	418, 1259,
	419, 1259,
	421, 1259,
	422, 1259,
	423, 1259,
	425, 1259,
	426, 1259,
	427, 1259,
	428, 1259,
	429, 1259,
	430, 1259,
	432, 1259,
	433, 1259,
	434, 1259,
	435, 1259,
	436, 1259,
	437, 1259,
	438, 1259,
	439, 1259,
	440, 1259,
	441, 1259,
	442, 1259,
	443, 1259,
	445, 1259,
	446, 1259,
	447, 1259,
	448, 1259,
	449, 1259,
	450, 1259,
	452, 1259,
	453, 1259,
	454, 1259,
	455, 1259,
	456, 1259,
	457, 1259,
	459, 1259,
	460, 1259,
	461, 1259,
	462, 1259,
	463, 1259,
	464, 1259,
	465, 1259,
	466, 1259,
	468, 1259,
	470, 1259,
	471, 1259,
	472, 1259,
	473, 1259,
	474, 1259,
	475, 1259,
	476, 1259,
	477, 1259,
	478, 1259,
	479, 1259,
	480, 1259,
	481, 1259,
	482, 1259,
	483, 1259,
	484, 1259,
	485, 1259,
	487, 1259,
	488, 1259,
	490, 1259,
	491, 1259,
	493, 1259,
	494, 1259,
	495, 1259,
	496, 1259,
	497, 1259,
	498, 1259,
	499, 1259,
	500, 1259,
	501, 1259,
	503, 1259,
	504, 1259,
	505, 1259,
	506, 1259,
	507, 1259,
	509, 1259,
	511, 1259,
	512, 1259,
	513, 1259,
	514, 1259,
	515, 1259,
	516, 1259,
	518, 1259,
	519, 1259,
	520, 1259,
	521, 1259,
	523, 1259,
	524, 1259,
	527, 1259,
	528, 1259,
	529, 1259,
	530, 1259,
	531, 1259,
	532, 1259,
	533, 1259,
	535, 1259,
	538, 1259,
	539, 1259,
	540, 1259,
	541, 1259,
	542, 1259,
	543, 1259,
	545, 1259,
	546, 1259,
	547, 1259,
	548, 1259,
	550, 1259,
	555, 1259,
	556, 1259,
	557, 1259,
	558, 1259,
	559, 1259,
	560, 1259,
	-2, 0,
	-1, 1582,
	1, 539,
	584, 539,
	586, 539,
	588, 539,
	-2, 1470,
	-1, 1585,
	4, 2650,
	11, 2650,
	12, 2650,
	14, 2650,
	15, 2650,
	16, 2650,
	17, 2650,
	18, 2650,
	19, 2650,
	21, 2650,
	22, 2650,
	23, 2650,
	24, 2650,
	25, 2650,
	26, 2650,
	27, 2650,
	29, 2650,
	30, 2650,
	33, 2650,
	34, 2650,
	36, 2650,
	38, 2650,
	41, 2650,
	42, 2650,
	44, 2650,
	45, 2650,
	46, 2650,
	47, 2650,
	48, 2650,
	49, 2650,
	50, 2650,
	51, 2650,
	53, 2650,
	54, 2650,
	55, 2650,
	56, 2650,
	58, 2650,
	59, 2650,
	60, 2650,
	61, 2650,
	62, 2650,
	63, 2650,
	64, 2650,
	67, 2650,
	68, 2650,
	69, 2650,
	70, 2650,
	71, 2650,
	73, 2650,
	74, 2650,
	75, 2650,
	76, 2650,
	79, 2650,
	80, 2650,
	81, 2650,
	82, 2650,
	83, 2650,
	84, 2650,
	85, 2650,
	86, 2650,
	88, 2650,
	89, 2650,
	90, 2650,
	91, 2650,
	92, 2650,
	94, 2650,
	95, 2650,
	96, 2650,
	97, 2650,
	98, 2650,
	99, 2650,
	100, 2650,
	101, 2650,
	103, 2650,
	104, 2650,
	105, 2650,
	106, 2650,
	107, 2650,
	108, 2650,
	109, 2650,
	117, 2650,
	118, 2650,
	119, 2650,
	120, 2650,
	121, 2650,
	123, 2650,
	124, 2650,
	125, 2650,
	127, 2650,
	128, 2650,
	129, 2650,
	131, 2650,
	132, 2650,
	133, 2650,
	135, 2650,
	136, 2650,
	137, 2650,
	140, 2650,
	141, 2650,
	142, 2650,
	144, 2650,
	145, 2650,
	147, 2650,
	148, 2650,
	149, 2650,
	151, 2650,
	152, 2650,
	153, 2650,
	154, 2650,
	155, 2650,
	156, 2650,
	157, 2650,
	158, 2650,
	159, 2650,
	160, 2650,
	161, 2650,
	162, 2650,
	163, 2650,
	164, 2650,
	165, 2650,
	166, 2650,
	170, 2650,
	171, 2650,
	172, 2650,
	173, 2650,
	174, 2650,
	175, 2650,
	176, 2650,
	177, 2650,
	180, 2650,
	181, 2650,
	183, 2650,
	184, 2650,
	187, 2650,
	188, 2650,
	189, 2650,
	190, 2650,
	191, 2650,
	192, 2650,
	193, 2650,
	194, 2650,
	195, 2650,
	196, 2650,
	197, 2650,
	198, 2650,
	199, 2650,
	200, 2650,
	202, 2650,
	203, 2650,
	205, 2650,
	206, 2650,
	208, 2650,
	209, 2650,
	210, 2650,
	211, 2650,
	212, 2650,
	213, 2650,
	214, 2650,
	215, 2650,
	216, 2650,
	217, 2650,
	218, 2650,
	219, 2650,
	220, 2650,
	221, 2650,
	222, 2650,
	223, 2650,
	224, 2650,
	225, 2650,
	227, 2650,
	228, 2650,
	230, 2650,
	231, 2650,
	232, 2650,
	233, 2650,
	235, 2650,
	236, 2650,
	237, 2650,
	238, 2650,
	240, 2650,
	242, 2650,
	243, 2650,
	244, 2650,
	245, 2650,
	246, 2650,
	247, 2650,
	248, 2650,
	249, 2650,
	250, 2650,
	251, 2650,
	253, 2650,
	254, 2650,
	255, 2650,
	256, 2650,
	257, 2650,
	258, 2650,
	259, 2650,
	260, 2650,
	262, 2650,
	263, 2650,
	264, 2650,
	266, 2650,
	267, 2650,
	268, 2650,
	269, 2650,
	270, 2650,
	271, 2650,
	273, 2650,
	277, 2650,
	278, 2650,
	279, 2650,
	282, 2650,
	283, 2650,
	284, 2650,
	285, 2650,
	286, 2650,
	287, 2650,
	288, 2650,
	289, 2650,
	290, 2650,
	291, 2650,
	292, 2650,
	293, 2650,
	294, 2650,
	295, 2650,
	296, 2650,
	297, 2650,
	298, 2650,
	299, 2650,
	300, 2650,
	301, 2650,
	302, 2650,
	303, 2650,
	304, 2650,
	305, 2650,
	306, 2650,
	307, 2650,
	308, 2650,
	310, 2650,
	311, 2650,
	312, 2650,
	313, 2650,
	314, 2650,
	315, 2650,
	316, 2650,
	317, 2650,
	318, 2650,
	319, 2650,
	320, 2650,
	321, 2650,
	322, 2650,
	323, 2650,
	325, 2650,
	326, 2650,
	329, 2650,
	330, 2650,
	331, 2650,
	333, 2650,
	334, 2650,
	335, 2650,
	336, 2650,
	337, 2650,
	340, 2650,
	344, 2650,
	345, 2650,
	346, 2650,
	347, 2650,
	349, 2650,
	350, 2650,
	351, 2650,
	353, 2650,
	355, 2650,
	356, 2650,
	357, 2650,
	358, 2650,
	359, 2650,
	360, 2650,
	361, 2650,
	362, 2650,
	363, 2650,
	364, 2650,
	365, 2650,
	366, 2650,
	368, 2650,
	369, 2650,
	370, 2650,
	371, 2650,
	372, 2650,
	373, 2650,
	374, 2650,
	375, 2650,
	376, 2650,
	377, 2650,
	378, 2650,
	379, 2650,
	380, 2650,
	381, 2650,
	382, 2650,
	384, 2650,
	385, 2650,
	387, 2650,
	388, 2650,
	389, 2650,
	390, 2650,
	391, 2650,
	392, 2650,
	393, 2650,
	394, 2650,
	395, 2650,
	396, 2650,
	397, 2650,
	398, 2650,
	400, 2650,
	402, 2650,
	403, 2650,
	404, 2650,
	409, 2650,
	410, 2650,
	411, 2650,
	412, 2650,
	413, 2650,
	414, 2650,
	415, 2650,
	416, 2650,
	417, 2650,
	418, 2650,
	419, 2650,
	421, 2650,
	422, 2650,
	423, 2650,
	424, 2650,
	425, 2650,
	426, 2650,
	427, 2650,
	428, 2650,
	429, 2650,
	430, 2650,
	431, 2650,
	432, 2650,
	433, 2650,
	434, 2650,
	435, 2650,
	436, 2650,
	437, 2650,
	438, 2650,
	439, 2650,
	440, 2650,
	441, 2650,
	442, 2650,
	443, 2650,
	445, 2650,
	446, 2650,
	447, 2650,
	448, 2650,
	449, 2650,
	450, 2650,
	452, 2650,
	453, 2650,
	454, 2650,
	455, 2650,
	456, 2650,
	457, 2650,
	458, 2650,
	459, 2650,
	460, 2650,
	461, 2650,
	462, 2650,
	463, 2650,
	464, 2650,
	465, 2650,
	466, 2650,
	468, 2650,
	470, 2650,
	471, 2650,
	472, 2650,
	473, 2650,
	474, 2650,
	475, 2650,
	476, 2650,
	477, 2650,
	478, 2650,
	479, 2650,
	480, 2650,
	481, 2650,
	482, 2650,
	483, 2650,
	484, 2650,
	485, 2650,
	487, 2650,
	488, 2650,
	489, 2650,
	490, 2650,
	491, 2650,
	493, 2650,
	494, 2650,
	495, 2650,
	496, 2650,
	497, 2650,
	498, 2650,
	499, 2650,
	500, 2650,
	501, 2650,
	503, 2650,
	504, 2650,
	505, 2650,
	506, 2650,
	507, 2650,
	509, 2650,
	511, 2650,
	512, 2650,
	513, 2650,
	514, 2650,
	515, 2650,
	516, 2650,
	518, 2650,
	519, 2650,
	520, 2650,
	521, 2650,
	523, 2650,
	524, 2650,
	527, 2650,
	528, 2650,
	529, 2650,
	530, 2650,
	531, 2650,
	532, 2650,
	533, 2650,
	535, 2650,
	538, 2650,
	539, 2650,
	540, 2650,
	541, 2650,
	542, 2650,
	543, 2650,
	545, 2650,
	546, 2650,
	547, 2650,
	548, 2650,
	550, 2650,
	555, 2650,
	556, 2650,
	557, 2650,
	558, 2650,
	559, 2650,
	560, 2650,
	561, 2650,
	563, 2650,
	566, 2650,
	567, 2650,
	568, 2650,
	569, 2650,
	570, 2650,
	571, 2650,
	573, 2650,
	574, 2650,
	575, 2650,
	576, 2650,
	577, 2650,
	578, 2650,
	579, 2650,
	580, 2650,
	581, 2650,
	583, 2650,
	586, 2650,
	587, 2650,
	589, 2650,
	590, 2650,
	-2, 0,
	-1, 1590,
	186, 2532,
	508, 2532,
	568, 2532,
	587, 2532,
	-2, 0,
	-1, 1639,
	389, 852,
	450, 852,
	491, 852,
	513, 852,
	-2, 0,
	-1, 1666,
	1, 847,
	584, 847,
	586, 847,
	588, 847,
	-2, 0,
	-1, 1667,
	1, 889,
	584, 889,
	586, 889,
	588, 889,
	-2, 0,
	-1, 1668,
	1, 897,
	584, 897,
	586, 897,
	588, 897,
	-2, 0,
	-1, 1671,
	1, 856,
	584, 856,
	586, 856,
	588, 856,
	-2, 0,
	-1, 1673,
	1, 862,
	584, 862,
	586, 862,
	588, 862,
	-2, 0,
	-1, 1676,
	1, 858,
	584, 858,
	586, 858,
	588, 858,
	-2, 0,
	-1, 1681,
	1, 871,
	584, 871,
	586, 871,
	588, 871,
	-2, 0,
	-1, 1710,
	1, 2595,
	584, 2595,
	586, 2595,
	587, 2595,
	588, 2595,
	-2, 923,
	-1, 1711,
	1, 2529,
	584, 2529,
	586, 2529,
	587, 2529,
	588, 2529,
	-2, 924,
	-1, 1715,
	1, 936,
	584, 936,
	586, 936,
	588, 936,
	-2, 0,
	-1, 1730,
	1, 1361,
	588, 1361,
	-2, 1366,
	-1, 1733,
	169, 1513,
	182, 1513,
	272, 1513,
	338, 1513,
	-2, 1451,
	-1, 1833,
	150, 1472,
	169, 1472,
	182, 1472,
	239, 1472,
	272, 1472,
	338, 1472,
	348, 1472,
	525, 1472,
	-2, 1918,
	-1, 1893,
	586, 2091,
	-2, 0,
	-1, 1928,
	150, 1472,
	169, 1472,
	182, 1472,
	239, 1472,
	272, 1472,
	338, 1472,
	348, 1472,
	525, 1472,
	-2, 1600,
	-1, 1962,
	508, 2529,
	587, 2529,
	590, 2529,
	-2, 0,
	-1, 1979,
	585, 1741,
	-2, 1729,
	-1, 2010,
	186, 2529,
	587, 2529,
	590, 2529,
	-2, 0,
	-1, 2058,
	1, 673,
	588, 673,
	-2, 1366,
	-1, 2184,
	220, 252,
	-2, 2238,
	-1, 2185,
	220, 253,
	-2, 302,
	-1, 2289,
	1, 849,
	584, 849,
	586, 849,
	588, 849,
	-2, 0,
	-1, 2290,
	1, 891,
	584, 891,
	586, 891,
	588, 891,
	-2, 0,
	-1, 2291,
	1, 899,
	584, 899,
	586, 899,
	588, 899,
	-2, 0,
	-1, 2292,
	1, 938,
	584, 938,
	586, 938,
	588, 938,
	-2, 0,
	-1, 2328,
	1, 873,
	584, 873,
	586, 873,
	588, 873,
	-2, 0,
	-1, 2384,
	429, 1540,
	430, 1540,
	-2, 1774,
	-1, 2415,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1794,
	-1, 2416,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1795,
	-1, 2417,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1796,
	-1, 2418,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1797,
	-1, 2419,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1798,
	-1, 2420,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1799,
	-1, 2421,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1800,
	-1, 2422,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1801,
	-1, 2434,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1813,
	-1, 2435,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1814,
	-1, 2436,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1815,
	-1, 2440,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1822,
	-1, 2446,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1826,
	-1, 2448,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1834,
	-1, 2449,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1835,
	-1, 2450,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1836,
	-1, 2451,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1837,
	-1, 2623,
	5, 2242,
	186, 2102,
	585, 2239,
	-2, 2230,
	-1, 2624,
	186, 2103,
	-2, 2601,
	-1, 2625,
	186, 2104,
	-2, 2426,
	-1, 2626,
	186, 2105,
	-2, 2312,
	-1, 2627,
	186, 2106,
	-2, 2366,
	-1, 2628,
	186, 2107,
	-2, 2411,
	-1, 2629,
	186, 2108,
	-2, 2527,
	-1, 2630,
	186, 2109,
	-2, 1901,
	-1, 2701,
	1, 1601,
	2, 1601,
	106, 1601,
	150, 1601,
	169, 1601,
	182, 1601,
	187, 1601,
	204, 1601,
	207, 1601,
	235, 1601,
	239, 1601,
	250, 1601,
	268, 1601,
	272, 1601,
	311, 1601,
	338, 1601,
	342, 1601,
	348, 1601,
	420, 1601,
	424, 1601,
	525, 1601,
	536, 1601,
	552, 1601,
	553, 1601,
	554, 1601,
	564, 1601,
	584, 1601,
	586, 1601,
	588, 1601,
	590, 1601,
	-2, 1600,
	-1, 2714,
	585, 2211,
	-2, 2225,
	-1, 2716,
	1, 319,
	552, 319,
	-2, 1499,
	-1, 2743,
	585, 1740,
	-2, 1730,
	-1, 2920,
	1, 1234,
	584, 1234,
	586, 1234,
	588, 1234,
	-2, 1499,
	-1, 3089,
	343, 1543,
	-2, 2640,
	-1, 3090,
	343, 1544,
	-2, 2512,
	-1, 3094,
	429, 2168,
	430, 2168,
	-2, 1899,
	-1, 3095,
	429, 2172,
	430, 2172,
	-2, 1900,
	-1, 3096,
	429, 2169,
	430, 2169,
	-2, 1899,
	-1, 3097,
	429, 2173,
	430, 2173,
	-2, 1900,
	-1, 3110,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1824,
	-1, 3111,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1828,
	-1, 3117,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1830,
	-1, 3337,
	1, 670,
	584, 670,
	586, 670,
	588, 670,
	-2, 1366,
	-1, 3493,
	43, 2203,
	-2, 998,
	-1, 3498,
	1, 1234,
	584, 1234,
	586, 1234,
	588, 1234,
	-2, 1499,
	-1, 3604,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1832,
	-1, 3611,
	244, 0,
	246, 0,
	329, 0,
	-2, 1851,
	-1, 3679,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1880,
	-1, 3680,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1881,
	-1, 3681,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1882,
	-1, 3685,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1886,
	-1, 3686,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1887,
	-1, 3687,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1888,
	-1, 3734,
	585, 2212,
	-2, 2226,
	-1, 3898,
	587, 2758,
	-2, 1425,
	-1, 3956,
	244, 0,
	246, 0,
	329, 0,
	-2, 1852,
	-1, 3959,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1855,
	-1, 3960,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1857,
	-1, 4052,
	587, 2227,
	-2, 1269,
	-1, 4198,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1856,
	-1, 4199,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1858,
	-1, 4210,
	244, 0,
	-2, 1891,
	-1, 4380,
	244, 0,
	-2, 1892,
	-1, 4562,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 2604,
}

const sqlPrivate = 57344

const sqlLast = 127711

var sqlAct = [...]int{
	266, 4658, 3482, 2985, 4744, 3248, 2998, 4555, 4614, 4543,
	4253, 4437, 4415, 4561, 4302, 3481, 4554, 4407, 4572, 4685,
	4530, 4511, 4458, 4433, 2106, 3939, 4573, 4514, 1220, 4574,
	4333, 2805, 4627, 4239, 2849, 2869, 4309, 4494, 2256, 1491,
	3644, 4154, 2181, 4384, 4560, 4115, 4095, 4048, 2265, 1231,
	4149, 4219, 4258, 2394, 1104, 4187, 3596, 3882, 4136, 3890,
	1051, 1293, 4138, 3359, 4318, 3825, 4033, 3515, 2656, 1300,
	3103, 1966, 4347, 4049, 2040, 796, 2463, 4129, 3509, 3863,
	4159, 1304, 3845, 3419, 2402, 3477, 1742, 759, 2114, 3362,
	2395, 3847, 1934, 3467, 1286, 3554, 2882, 1364, 3556, 2974,
	1606, 796, 3007, 3009, 1042, 3020, 4215, 3737, 2955, 2944,
	3291, 1456, 3271, 3263, 3938, 2263, 3231, 3000, 3006, 3252,
	1903, 3017, 869, 4, 2176, 3254, 1050, 175, 3995, 2986,
	2229, 2125, 4659, 2175, 2969, 2971, 3381, 873, 2807, 3230,
	3705, 2399, 2694, 1647, 4385, 2693, 1841, 1811, 1879, 3087,
	2476, 3016, 2541, 3356, 2948, 2152, 2159, 1463, 1298, 2897,
	2696, 791, 1967, 260, 1546, 2171, 1101, 2848, 2094, 864,
	1347, 2038, 2956, 3348, 2098, 2532, 1730, 259, 2653, 2460,
	2084, 2674, 1904, 2383, 1295, 2366, 2727, 1272, 1106, 3479,
	2364, 1583, 2979, 793, 1283, 2543, 1211, 1923, 797, 2216,
	2830, 3298, 1604, 4459, 1549, 798, 3010, 2793, 1333, 2726,
	676, 690, 2683, 1874, 698, 1193, 2535, 39, 1214, 1913,
	175, 2619, 1825, 2513, 2664, 2585, 184, 1920, 2365, 1743,
	753, 741, 1744, 1228, 1681, 2367, 1666, 2215, 802, 1210,
	2242, 1486, 185, 2113, 4615, 1574, 1581, 1108, 2388, 1082,
	2016, 2013, 805, 693, 44, 43, 1216, 41, 1191, 32,
	108, 30, 28, 1729, 802, 3140, 701, 1749, 936, 716,
	1497, 956, 845, 1757, 1758, 3719, 3134, 3720, 805, 3250,
	2029, 2029, 2029, 2029, 2029, 4757, 4016, 1223, 2029, 2673,
	1097, 4747, 1046, 3525, 888, 3534, 1788, 1103, 4732, 3534,
	4731, 3321, 2673, 1760, 2673, 1151, 4721, 4703, 4701, 4646,
	2190, 4257, 4257, 2190, 1046, 4603, 4596, 3524, 1490, 4604,
	2673, 4594, 2190, 4591, 4588, 2673, 1080, 4592, 4589, 1813,
	4558, 4557, 4556, 4551, 2190, 2190, 2050, 2050, 1759, 4550,
	4541, 4539, 4536, 2050, 4257, 4257, 4321, 4509, 1779, 4483,
	4476, 4257, 4475, 2734, 2673, 4470, 2673, 1776, 1208, 4257,
	4469, 4463, 4429, 4382, 4257, 2190, 4106, 2734, 3320, 4364,
	4361, 1757, 1758, 3925, 2190, 4358, 4311, 4274, 4273, 4257,
	4312, 2190, 2190, 4264, 4263, 1194, 1194, 2190, 4257, 4256,
	1342, 4226, 4200, 4257, 1788, 2190, 2734, 2666, 2190, 4178,
	4167, 1760, 1027, 2050, 3534, 4090, 4073, 3102, 3958, 2673,
	2673, 3952, 2734, 1672, 2673, 3306, 2264, 3906, 1026, 1613,
	1342, 3551, 3900, 1757, 1758, 3861, 3551, 1813, 4484, 3862,
	2754, 2730, 1782, 1783, 1784, 1785, 1759, 3729, 1243, 3727,
	3712, 3730, 1765, 3728, 2673, 3628, 3709, 1047, 4386, 2190,
	3624, 1041, 1036, 1760, 2673, 3550, 1250, 1757, 1758, 3551,
	1790, 1791, 1792, 1801, 1802, 1803, 3541, 2190, 3247, 3242,
	3542, 93, 2673, 2673, 3241, 4377, 4365, 3192, 2673, 1794,
	1788, 3193, 3190, 1197, 1195, 1198, 3191, 1760, 1759, 1787,
	1789, 3182, 4321, 2050, 3180, 3183, 1807, 2047, 2673, 3151,
	3024, 2996, 3149, 2673, 2050, 2252, 1757, 1758, 3150, 3709,
	2995, 2665, 2753, 1813, 2252, 1774, 1775, 2777, 4147, 4106,
	1244, 2673, 1759, 1226, 2538, 4074, 3925, 2733, 1599, 1788,
	1222, 2734, 1779, 2724, 2673, 2718, 1760, 2673, 2672, 2190,
	1765, 1776, 2673, 2251, 3542, 2872, 230, 2252, 1780, 2118,
	2792, 2063, 3201, 3202, 2028, 2044, 3139, 2047, 2950, 1224,
	2189, 2892, 1813, 2790, 1899, 1485, 3808, 3599, 3575, 1921,
	2164, 1759, 3526, 1649, 2710, 2709, 2708, 2707, 2706, 230,
	2489, 2490, 2491, 2508, 2509, 2510, 1199, 1787, 1789, 1196,
	1035, 3527, 1765, 1499, 232, 1034, 1033, 1032, 1031, 1499,
	2511, 1030, 1029, 1025, 1024, 1023, 3064, 4579, 1022, 1498,
	1021, 1020, 2539, 1019, 1018, 1017, 1782, 1783, 1784, 1785,
	1810, 1016, 1015, 1014, 1013, 1012, 1765, 232, 1011, 1010,
	1009, 934, 933, 1813, 2030, 2030, 2030, 2030, 2030, 1511,
	932, 931, 2030, 231, 930, 929, 1780, 928, 927, 926,
	925, 924, 2501, 923, 922, 921, 224, 920, 919, 918,
	917, 2497, 916, 1798, 915, 225, 1808, 914, 913, 912,
	911, 910, 1786, 1787, 1789, 1765, 231, 909, 908, 907,
	906, 1505, 905, 904, 903, 902, 901, 186, 891, 890,
	1804, 886, 1805, 1781, 2540, 4011, 2537, 3524, 885, 1774,
	1775, 879, 878, 2027, 863, 1244, 862, 819, 1499, 818,
	817, 816, 808, 807, 806, 1617, 774, 1796, 1810, 765,
	186, 3207, 1787, 1789, 764, 763, 747, 1603, 254, 253,
	252, 251, 1780, 250, 1309, 1106, 2502, 2503, 2504, 2505,
	249, 248, 247, 246, 245, 244, 2496, 243, 242, 241,
	240, 1812, 239, 238, 230, 237, 236, 1317, 1106, 235,
	234, 233, 1106, 4161, 1757, 1758, 3970, 148, 865, 1490,
	1810, 3750, 2047, 3723, 3552, 1806, 3294, 3162, 1367, 3145,
	3136, 1780, 1367, 3047, 2931, 3245, 2738, 2715, 1099, 1499,
	1309, 1781, 2700, 1795, 1760, 73, 2964, 868, 867, 2568,
	1924, 2665, 232, 1337, 1810, 2554, 2764, 2028, 2047, 2044,
	2753, 1106, 74, 1106, 2359, 1106, 2552, 2092, 1346, 2506,
	2507, 1309, 1351, 1756, 3246, 2049, 1947, 3217, 78, 1759,
	1852, 1493, 1777, 1773, 1353, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 2542, 1471, 1230, 1309, 4368, 1812,
	1510, 231, 2499, 1810, 4559, 230, 1786, 1466, 1882, 2259,
	1244, 230, 1882, 4538, 224, 1881, 2982, 1309, 87, 1881,
	4444, 4374, 4389, 225, 1309, 1461, 4366, 1781, 4251, 4214,
	3201, 3202, 1106, 4168, 1106, 3201, 3202, 1885, 1309, 1843,
	4146, 1880, 1504, 1489, 1106, 186, 1106, 4021, 3993, 1810,
	3992, 3986, 3985, 232, 1799, 3984, 3977, 3976, 871, 232,
	1555, 1558, 3974, 3969, 3966, 1277, 1280, 1049, 1290, 3965,
	49, 3866, 107, 3860, 3754, 3753, 1781, 93, 104, 3752,
	3733, 1331, 3700, 1765, 3699, 1812, 1761, 1762, 1763, 1764,
	1766, 1767, 1309, 2258, 3698, 3620, 1561, 1477, 3615, 3289,
	3238, 3229, 231, 1316, 3200, 3201, 3202, 3197, 231, 3196,
	2536, 1106, 1674, 802, 1106, 224, 4163, 3194, 3189, 3188,
	230, 224, 3218, 1360, 225, 1453, 1458, 805, 3187, 3184,
	225, 3181, 3161, 1326, 1812, 94, 2747, 2232, 1761, 1762,
	1763, 1764, 1766, 1767, 175, 175, 186, 2500, 1488, 3201,
	3202, 3144, 186, 1544, 1845, 1487, 3137, 1797, 3201, 3202,
	3135, 2997, 1771, 1772, 1778, 1800, 1777, 1773, 232, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 2701, 1496,
	3216, 1503, 3980, 1509, 1850, 1618, 3979, 1586, 1588, 2525,
	2966, 1756, 1843, 1844, 1337, 1842, 4751, 1337, 3806, 3207,
	2197, 230, 1755, 1207, 3207, 1812, 2195, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 4695, 4694, 231, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 3201, 3202, 3867,
	224, 230, 3243, 4660, 4613, 4611, 1232, 3646, 4501, 225,
	1106, 4436, 4425, 4422, 4421, 4420, 1106, 4401, 4388, 232,
	1597, 1577, 1602, 4387, 4362, 4346, 4345, 2466, 4331, 1690,
	4328, 186, 1611, 4327, 1616, 3210, 3211, 3203, 3204, 3205,
	3206, 3208, 3209, 230, 3207, 4322, 3312, 1047, 4270, 232,
	97, 1734, 2486, 2487, 2488, 2512, 2498, 2492, 4247, 2494,
	2495, 2493, 2480, 2481, 2482, 2483, 2484, 2485, 231, 4212,
	4195, 2736, 4194, 1598, 4175, 3217, 4174, 230, 4132, 4107,
	4010, 224, 3991, 3926, 3920, 1612, 3867, 3917, 3207, 230,
	225, 232, 3794, 3793, 3777, 3776, 1673, 3207, 231, 3774,
	1832, 3715, 183, 100, 230, 103, 3703, 3610, 1830, 1728,
	3553, 224, 186, 3535, 3501, 3436, 3394, 3361, 2472, 230,
	225, 1106, 1106, 1106, 3314, 232, 1623, 1106, 3166, 4162,
	230, 3165, 3160, 3126, 1228, 1640, 1228, 232, 872, 2943,
	231, 1888, 186, 148, 1887, 1886, 1883, 1810, 1875, 1675,
	3217, 1367, 232, 224, 2965, 1873, 2745, 2744, 2712, 2705,
	1106, 2671, 225, 796, 1901, 2550, 3207, 232, 1829, 1984,
	796, 1946, 1902, 1309, 231, 1897, 1757, 1758, 232, 1896,
	1895, 1894, 1731, 1893, 186, 1892, 231, 224, 1223, 2186,
	1223, 1739, 1950, 1891, 3217, 1910, 225, 1027, 1738, 224,
	1890, 231, 1889, 1963, 151, 1870, 1760, 1869, 225, 1868,
	2011, 1867, 1733, 1026, 224, 1866, 231, 1865, 186, 187,
	3218, 1864, 1810, 225, 1884, 1863, 1735, 231, 1958, 224,
	186, 1955, 1752, 1753, 1862, 1861, 1860, 1859, 225, 1309,
	224, 1759, 1907, 1908, 1858, 2981, 1106, 1857, 1951, 225,
	1309, 1763, 1764, 1766, 1767, 1856, 1845, 1831, 2083, 1828,
	186, 1931, 2260, 1823, 175, 1325, 1810, 3286, 1106, 1575,
	1047, 866, 3217, 1194, 1367, 1810, 1248, 1239, 4390, 230,
	1876, 1877, 4135, 4017, 3962, 2075, 2074, 3749, 2108, 2083,
	2085, 3726, 3718, 3148, 2703, 3218, 1580, 1337, 4231, 4019,
	2081, 3748, 1844, 2567, 3310, 1826, 3530, 3201, 3202, 2553,
	3219, 3220, 3221, 1942, 2056, 4692, 4684, 3201, 3202, 4076,
	2551, 2870, 1953, 1350, 4423, 4369, 802, 232, 2090, 3954,
	1343, 2055, 4323, 802, 1932, 4314, 4319, 4313, 2083, 3218,
	805, 4166, 4109, 4108, 1810, 4075, 4013, 805, 3929, 2083,
	3928, 3927, 3721, 4367, 1929, 1938, 1959, 1342, 3537, 1922,
	3536, 1924, 3597, 2007, 3211, 3203, 3204, 3205, 3206, 3208,
	3209, 1900, 3205, 3206, 3208, 3209, 231, 3397, 3870, 3428,
	3820, 4250, 3216, 1349, 2032, 1726, 3186, 2069, 1342, 224,
	1926, 1342, 1941, 1940, 2161, 1939, 1047, 1937, 225, 1936,
	1935, 2853, 1865, 1882, 1309, 1309, 3185, 2078, 1865, 3108,
	1881, 2835, 1639, 1345, 1367, 2118, 1978, 3218, 1964, 3791,
	186, 1348, 1007, 3363, 1226, 2058, 1226, 3484, 3546, 3483,
	1691, 1222, 1854, 1222, 1648, 2054, 4625, 3212, 3210, 3211,
	3203, 3204, 3205, 3206, 3208, 3209, 1954, 1339, 2257, 2281,
	4310, 4599, 4584, 4571, 2233, 3468, 3021, 1649, 2177, 3874,
	1224, 3857, 1224, 3822, 2533, 3817, 3799, 1008, 3572, 3335,
	2146, 4216, 2151, 2538, 1981, 2156, 3207, 3250, 3648, 4580,
	3154, 3212, 3210, 3211, 3203, 3204, 3205, 3206, 3208, 3209,
	2052, 2878, 2743, 3203, 3204, 3205, 3206, 3208, 3209, 3475,
	2061, 1898, 1878, 2226, 2182, 2187, 1554, 1482, 1309, 1320,
	1309, 1276, 1309, 4593, 2086, 2076, 4590, 3520, 4061, 2889,
	4266, 2080, 2832, 4243, 2886, 4059, 2884, 1344, 1309, 1309,
	3769, 4416, 4150, 4508, 1851, 4398, 1579, 3366, 3786, 1309,
	3223, 3004, 2978, 3460, 4644, 4643, 4581, 858, 3591, 2124,
	2877, 1309, 3835, 1309, 1309, 1309, 1206, 4292, 1627, 2079,
	4674, 2539, 3203, 3204, 3205, 3206, 3208, 3209, 4063, 802,
	1521, 1529, 2778, 3339, 1045, 2334, 796, 1688, 4746, 1005,
	2222, 2831, 3217, 805, 1340, 2144, 2332, 1003, 2796, 1483,
	2280, 2374, 1001, 1341, 999, 4285, 996, 2267, 1106, 2179,
	4276, 4104, 2070, 2794, 1488, 2227, 2239, 4103, 2975, 2796,
	1580, 1487, 3833, 3832, 1689, 3824, 988, 2737, 3814, 3813,
	3834, 3811, 3311, 3810, 2794, 3798, 2143, 3764, 3763, 3464,
	2155, 3463, 3305, 3159, 3158, 3157, 2273, 3156, 3112, 2895,
	2894, 2891, 2880, 2540, 2285, 2537, 2868, 2188, 2867, 2118,
	2372, 859, 2262, 2863, 1810, 2862, 2861, 2247, 1530, 2840,
	2839, 2800, 2725, 1044, 2447, 1732, 1106, 3341, 1106, 2341,
	2581, 2580, 2404, 4193, 2236, 1106, 2837, 1687, 1984, 1984,
	1367, 2809, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 2208, 1106,
	2207, 1106, 1106, 1106, 1106, 2249, 4058, 3218, 1577, 2370,
	2244, 2268, 2244, 2245, 2241, 4679, 3426, 4267, 1625, 802,
	4244, 1326, 1620, 1350, 2363, 3573, 1767, 1106, 1350, 2356,
	2376, 1106, 1106, 805, 2253, 3363, 2254, 1525, 4026, 1106,
	3772, 2115, 4675, 1106, 1342, 1106, 1106, 2206, 1047, 2307,
	1047, 3123, 1046, 1367, 1262, 2833, 3396, 2272, 993, 1106,
	1106, 1106, 1106, 2257, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 2373, 2542, 2812, 2111, 2374, 2289, 3027, 1567,
	3121, 1566, 2785, 1349, 2857, 1565, 2833, 1564, 1349, 2462,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 2514,
	2515, 4025, 2717, 1106, 2116, 2117, 2850, 2851, 2462, 1543,
	4680, 2348, 2277, 2514, 2530, 1228, 1724, 1538, 2328, 2149,
	2400, 2401, 1367, 772, 2351, 2297, 2823, 2338, 2387, 1700,
	1579, 1228, 3067, 2059, 2112, 2372, 1484, 2087, 2088, 2576,
	1621, 3100, 3213, 3214, 3215, 1332, 2371, 1106, 1367, 3212,
	3210, 3211, 3203, 3204, 3205, 3206, 3208, 3209, 2622, 2622,
	2636, 3085, 2514, 2362, 2360, 2657, 2659, 3209, 2533, 1223,
	2361, 2663, 2375, 2368, 3427, 4077, 1027, 2478, 1641, 1027,
	1027, 2034, 2458, 1942, 2036, 1223, 2850, 2851, 4409, 2536,
	2041, 2529, 2391, 4705, 2043, 2392, 2393, 2850, 2851, 2046,
	2162, 688, 2294, 1303, 2288, 1978, 1978, 2822, 2246, 3581,
	1686, 2456, 983, 1637, 4577, 2713, 4192, 1704, 2688, 2836,
	4682, 3118, 4643, 1725, 1670, 861, 860, 683, 4060, 1043,
	4057, 2470, 770, 2350, 2298, 1737, 1040, 1972, 2468, 1670,
	2680, 3070, 3580, 3061, 2542, 3119, 1324, 2474, 4102, 3124,
	2158, 1309, 1309, 899, 2799, 3812, 1931, 4045, 2015, 1479,
	1194, 1343, 1649, 1981, 1981, 2888, 1649, 3637, 2527, 3809,
	3099, 2578, 2811, 1343, 4655, 2157, 2579, 2373, 2702, 2582,
	1550, 2583, 2584, 3462, 3424, 2290, 2781, 2126, 2731, 1047,
	1514, 4041, 175, 1367, 3338, 2679, 1683, 2887, 3795, 1047,
	1667, 2890, 2885, 1047, 2883, 2783, 2767, 2444, 4411, 2153,
	2130, 1337, 2631, 2357, 2618, 2661, 1551, 2648, 2687, 2795,
	2692, 2773, 2860, 2698, 2699, 2838, 1669, 1984, 984, 1548,
	2685, 2686, 2669, 2670, 3783, 2681, 4708, 2766, 2116, 2117,
	2784, 1669, 4663, 1592, 4662, 4042, 2728, 1884, 2291, 1929,
	2723, 2371, 2452, 4632, 856, 3944, 855, 1605, 2194, 2193,
	3943, 2782, 1235, 1668, 2333, 1367, 2739, 2127, 2154, 997,
	2141, 2453, 1626, 3069, 2347, 2331, 2454, 997, 1339, 1309,
	2459, 809, 997, 3517, 998, 2775, 997, 4578, 3092, 3093,
	1339, 1047, 3842, 1527, 2750, 1106, 1106, 3413, 1106, 2746,
	2799, 4688, 2801, 3066, 1233, 1226, 2769, 1876, 1877, 4681,
	1524, 1631, 1222, 4490, 3796, 2810, 3518, 2542, 2749, 2758,
	796, 1226, 1309, 2761, 2752, 2762, 2776, 1261, 1222, 2798,
	3120, 4055, 2768, 2770, 892, 4545, 2118, 4546, 2881, 4735,
	3122, 1224, 771, 4235, 2871, 2147, 3843, 1237, 2858, 3350,
	2865, 3414, 3781, 1309, 2947, 2864, 2842, 1224, 1344, 1038,
	3405, 983, 1701, 2099, 2029, 1309, 2162, 1309, 2100, 4417,
	1344, 2779, 4431, 2131, 2442, 2099, 3634, 2445, 2989, 2962,
	2100, 1550, 1309, 1306, 2638, 1040, 4576, 3841, 2142, 2843,
	880, 773, 3412, 3018, 3517, 769, 2349, 2296, 2926, 2852,
	2854, 2855, 2856, 2928, 3068, 2922, 2804, 2826, 2814, 2817,
	3028, 3029, 1622, 1236, 3406, 1340, 3439, 1624, 985, 983,
	2841, 3035, 3036, 3037, 1341, 2138, 1106, 1340, 2441, 3340,
	1698, 1039, 737, 2859, 3378, 3114, 1341, 1246, 2150, 2132,
	2133, 4356, 3048, 1040, 3049, 1871, 4037, 4480, 994, 2866,
	3308, 4038, 4606, 802, 2461, 3404, 2876, 2958, 3635, 2923,
	2797, 2455, 4607, 2128, 4124, 3022, 2162, 805, 684, 4410,
	2174, 2457, 4631, 3045, 1978, 2716, 4654, 984, 175, 2139,
	1106, 2101, 2121, 802, 3025, 4056, 1106, 1106, 1488, 3030,
	3377, 3031, 3044, 2101, 4348, 2929, 3003, 805, 2105, 1702,
	2921, 1699, 4040, 2109, 3053, 2129, 3055, 4349, 3057, 2991,
	2105, 2932, 2941, 2952, 2935, 2796, 2937, 2951, 4043, 3940,
	2137, 2993, 4205, 3072, 2173, 3074, 900, 810, 811, 1912,
	2815, 2358, 1981, 2973, 4528, 984, 2122, 4519, 2984, 3042,
	4350, 4189, 1106, 1106, 2994, 685, 3075, 4087, 1106, 3077,
	3005, 4686, 3052, 3351, 3054, 2293, 3056, 2287, 3382, 986,
	2980, 1106, 1106, 2980, 706, 1636, 1638, 1106, 1106, 3023,
	2102, 2107, 2469, 1106, 1822, 3164, 2684, 2120, 2992, 3065,
	893, 894, 2102, 2107, 4709, 2697, 2099, 1736, 3564, 1703,
	3050, 2100, 1046, 3051, 686, 1342, 687, 3557, 1323, 2165,
	3650, 4696, 4352, 2140, 2172, 2524, 4134, 1342, 2542, 3384,
	1916, 3934, 987, 3745, 1251, 2443, 4139, 3850, 1106, 1106,
	1106, 2134, 3115, 3945, 1106, 4351, 3848, 3593, 3083, 2150,
	1654, 4438, 4478, 3091, 1106, 4140, 881, 882, 1916, 3058,
	3564, 4575, 1746, 4353, 4642, 4039, 1972, 1972, 3082, 3557,
	3850, 1106, 3081, 2103, 4640, 4687, 3080, 2148, 1919, 3848,
	2387, 4457, 3782, 3086, 3147, 2103, 1912, 985, 813, 812,
	4630, 4479, 3383, 1914, 3865, 4330, 1234, 4188, 3101, 4125,
	3888, 3689, 3505, 2214, 4046, 1909, 1919, 3142, 3143, 4689,
	1249, 1917, 3146, 4736, 3559, 1242, 3388, 2135, 2145, 1747,
	2109, 2682, 4605, 3852, 2101, 675, 3989, 3941, 2097, 3558,
	2390, 2119, 2109, 2071, 1746, 3299, 4714, 2166, 2030, 1917,
	3138, 2105, 4265, 4339, 3113, 985, 2068, 1741, 814, 815,
	2149, 4397, 3889, 3828, 1915, 3815, 3852, 3768, 3851, 3357,
	3633, 1106, 1106, 1106, 1106, 1745, 3559, 1916, 3506, 3497,
	3386, 1106, 1106, 1106, 3353, 2963, 1106, 2957, 2945, 2240,
	2234, 3558, 2095, 2228, 1518, 3265, 1106, 1228, 1367, 895,
	896, 3851, 1106, 2220, 1106, 3257, 3258, 3739, 1253, 4439,
	2200, 3760, 2844, 1228, 746, 3704, 1746, 2675, 4495, 3594,
	2799, 3387, 4460, 2102, 2107, 1919, 2339, 2064, 3555, 3891,
	4155, 1367, 2066, 2096, 4308, 2380, 1037, 3153, 986, 3946,
	1914, 1747, 2942, 1228, 4190, 1264, 1367, 1745, 4306, 4246,
	2816, 1223, 2678, 2278, 3240, 883, 884, 1047, 1917, 3369,
	3717, 3740, 3365, 3364, 3262, 1984, 2759, 1223, 3106, 1367,
	3259, 3292, 2763, 2067, 3084, 4137, 3279, 1918, 3261, 1677,
	1676, 1671, 2722, 2721, 1309, 1309, 2774, 3741, 2720, 3738,
	3846, 987, 2719, 2677, 3856, 3304, 986, 1223, 2676, 1044,
	3690, 1915, 2949, 1559, 4404, 1918, 2103, 1106, 2104, 3691,
	1573, 1571, 3269, 1747, 898, 4303, 4354, 1560, 3318, 1745,
	2104, 1106, 4355, 3947, 4254, 3471, 4116, 2820, 3288, 3273,
	2108, 1309, 3775, 3849, 3990, 3547, 1984, 2238, 3267, 3765,
	4651, 4435, 4172, 3565, 3560, 3561, 3562, 3563, 3293, 987,
	4233, 1822, 4713, 2109, 1106, 3345, 3346, 1337, 3026, 3235,
	3236, 3237, 2169, 3268, 2108, 1055, 3849, 3336, 3277, 3329,
	1309, 3297, 2381, 2927, 3280, 3281, 3367, 3285, 3251, 3371,
	2925, 3342, 2266, 1630, 2845, 2846, 3278, 3440, 4498, 3264,
	4405, 2255, 1309, 3266, 1309, 3565, 3560, 3561, 3562, 3563,
	1655, 4505, 4241, 3344, 4440, 4492, 3761, 1303, 2269, 3368,
	2161, 1367, 3373, 4171, 1918, 3375, 2167, 3996, 2271, 2161,
	3706, 2549, 1309, 1720, 3274, 2343, 1309, 3309, 4255, 3283,
	2279, 3284, 2282, 2283, 2284, 4523, 3354, 3429, 4653, 1064,
	4595, 4424, 3399, 1722, 4211, 1972, 3442, 4242, 3444, 1309,
	1719, 3448, 3301, 3302, 3303, 3454, 1309, 2168, 1309, 3988,
	3855, 3232, 1367, 3609, 3570, 1717, 1695, 3330, 3569, 796,
	3315, 3316, 3300, 3317, 3272, 4499, 1693, 4406, 3326, 3422,
	1309, 3319, 1665, 1663, 3195, 3337, 3742, 1226, 3125, 1661,
	2946, 2879, 1309, 3425, 1222, 1659, 2834, 3343, 3358, 3766,
	745, 3403, 1657, 1226, 3417, 3480, 3276, 3437, 2748, 1228,
	1222, 2352, 1978, 3513, 1651, 1646, 1644, 3489, 1569, 1949,
	1945, 1723, 1608, 1224, 3233, 3385, 3589, 2330, 3588, 1741,
	3063, 2104, 3062, 1226, 1309, 1309, 3395, 3033, 3496, 1224,
	1222, 3511, 3401, 3018, 3408, 2369, 1682, 258, 2302, 1572,
	1570, 3409, 3018, 897, 2219, 3410, 3466, 1309, 3469, 3430,
	3504, 3411, 2199, 1223, 3415, 2012, 3533, 3438, 1855, 1224,
	1981, 1619, 1542, 2548, 4570, 3389, 3390, 4088, 3391, 3392,
	3393, 3819, 3522, 1978, 3461, 3818, 3457, 4089, 3451, 4072,
	4491, 4153, 4094, 4085, 3449, 3441, 4030, 1367, 3455, 3887,
	1367, 3512, 3878, 3574, 3831, 2345, 3816, 3789, 3787, 2344,
	3767, 3500, 995, 3275, 3495, 3485, 4628, 3630, 2842, 2976,
	2968, 3431, 3432, 2961, 3433, 3434, 3435, 1721, 3514, 2953,
	3473, 2939, 802, 1106, 1718, 2924, 2765, 3492, 3507, 1106,
	1106, 1981, 3493, 1106, 1106, 1106, 805, 1106, 3494, 1716,
	1694, 3465, 175, 175, 2760, 2198, 1106, 1984, 2196, 2178,
	1692, 3567, 2163, 3519, 2136, 1106, 1664, 1662, 1954, 3566,
	1106, 2123, 3528, 1660, 3521, 3587, 1367, 3545, 4619, 1658,
	1584, 3549, 2110, 2051, 2048, 1106, 1656, 2045, 2042, 2037,
	2035, 2031, 3584, 1367, 3543, 3531, 3532, 3586, 1650, 1645,
	1643, 3590, 1568, 1984, 1984, 1106, 1106, 2329, 1106, 1106,
	1106, 2022, 4148, 3510, 1750, 3452, 1957, 3104, 4644, 2072,
	2172, 3078, 3076, 3595, 4533, 2355, 1106, 3577, 3612, 3578,
	1106, 3579, 1984, 1984, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 3583, 1106, 3662, 1203, 3663, 3568,
	4139, 4177, 2091, 1106, 1106, 1984, 3592, 1000, 1002, 1004,
	1106, 2353, 1047, 4170, 4169, 4101, 3622, 3623, 4022, 4140,
	3019, 1106, 1523, 1204, 4334, 2796, 2796, 4341, 2821, 3899,
	2118, 2292, 1228, 1228, 1714, 1715, 1106, 733, 2237, 1226,
	2794, 2818, 1284, 1285, 2325, 2321, 1222, 4532, 2299, 4064,
	4096, 1642, 3105, 2824, 3619, 3617, 4376, 2354, 3997, 1757,
	1758, 3975, 3380, 2825, 1751, 1367, 2847, 3629, 1754, 1318,
	1252, 4647, 3735, 3453, 4638, 1224, 4600, 3827, 3701, 3645,
	3636, 3638, 3639, 2938, 3652, 2825, 1223, 1223, 689, 1760,
	2772, 1303, 255, 2327, 1757, 1758, 3875, 2221, 3722, 3826,
	1329, 2886, 2884, 3660, 2893, 2400, 3653, 3661, 3665, 2875,
	2873, 789, 1106, 3667, 2827, 3743, 3744, 3693, 4485, 4683,
	4451, 4252, 2874, 1285, 1759, 846, 3640, 1285, 4445, 3755,
	3756, 3757, 1106, 1205, 2400, 3668, 3702, 2829, 3708, 672,
	175, 3694, 4403, 700, 1978, 4325, 4301, 1490, 4234, 3659,
	2828, 3885, 3877, 3864, 3732, 3499, 2983, 3713, 3714, 1759,
	2662, 2057, 1965, 3307, 4712, 1106, 1106, 3697, 3710, 3711,
	4525, 3201, 3202, 1757, 1758, 4526, 4525, 2788, 2789, 4447,
	1629, 4526, 2786, 2787, 3967, 2544, 1628, 3747, 2788, 2786,
	1978, 1978, 2577, 3884, 1697, 4657, 3724, 1696, 4326, 4286,
	3725, 4098, 1981, 4093, 4092, 3963, 3746, 1106, 3641, 3446,
	3443, 1849, 1848, 4698, 4664, 4489, 4488, 4487, 2920, 1978,
	1978, 4391, 4304, 4280, 4232, 4230, 4228, 4127, 4113, 4062,
	4018, 1309, 3325, 3800, 1309, 3327, 3328, 3923, 3905, 3859,
	3331, 3785, 3332, 3778, 3333, 3503, 3502, 3374, 1981, 1981,
	3324, 1984, 1978, 3060, 3804, 3041, 3040, 3805, 3807, 3039,
	3038, 2967, 2940, 2819, 2756, 2751, 2741, 2740, 3771, 2729,
	2473, 2346, 2326, 2322, 3829, 3823, 2320, 1981, 1981, 2319,
	3751, 2318, 1309, 3821, 2317, 2316, 2235, 3792, 1106, 2209,
	3797, 2205, 2204, 1972, 2203, 2202, 1228, 1106, 2201, 3901,
	2025, 2024, 2023, 2021, 1956, 3871, 2019, 1309, 1309, 1309,
	1981, 1713, 3908, 2842, 1712, 1652, 3892, 1537, 1536, 1535,
	1534, 3034, 1226, 1226, 1309, 1533, 2989, 1532, 1531, 1222,
	1222, 1526, 1522, 1520, 3854, 1519, 1476, 1475, 1474, 1473,
	1309, 1358, 1357, 1356, 1355, 1354, 1367, 1322, 3912, 1321,
	1223, 3872, 3844, 3018, 3896, 3853, 1271, 1270, 1224, 1224,
	1269, 1268, 1267, 3893, 1972, 3840, 1266, 1265, 1263, 1258,
	1367, 1257, 2019, 1106, 1106, 1256, 3858, 3876, 1255, 1106,
	1106, 1984, 1114, 2019, 1106, 1106, 1254, 1106, 3895, 870,
	8, 1186, 1106, 3924, 2062, 1006, 992, 4408, 4044, 2342,
	1706, 3881, 3879, 1106, 92, 1528, 3838, 3894, 3897, 832,
	86, 2170, 3784, 3358, 962, 3903, 4522, 1512, 4430, 1106,
	840, 4507, 3907, 3873, 3902, 3376, 2896, 2301, 262, 262,
	262, 3915, 678, 679, 1653, 694, 678, 694, 704, 3948,
	3932, 744, 3930, 3922, 2303, 762, 3287, 2704, 3913, 3914,
	768, 3918, 3957, 3919, 3931, 3961, 4477, 262, 3921, 3971,
	3163, 4383, 4204, 2547, 1853, 3244, 3949, 88, 1090, 1136,
	4123, 4122, 3942, 4031, 3770, 3008, 4120, 877, 4119, 1969,
	1228, 1971, 1054, 262, 1370, 4544, 2073, 3880, 1228, 1096,
	2089, 2082, 1367, 2742, 1367, 2621, 3937, 1113, 1978, 1110,
	1973, 1228, 1975, 1112, 1111, 1974, 1872, 1109, 1968, 3883,
	2987, 3529, 1309, 1309, 1578, 1576, 964, 2077, 2467, 1294,
	2531, 1367, 3152, 1846, 1070, 4002, 1092, 2528, 1247, 3292,
	1081, 1069, 3270, 3249, 1223, 3516, 3731, 2379, 850, 3198,
	2534, 1238, 1223, 2645, 2637, 1228, 2633, 1228, 3334, 2977,
	1727, 4218, 3987, 1824, 2988, 1223, 1981, 1352, 3933, 1074,
	2465, 1837, 3130, 2389, 3523, 4023, 4024, 1459, 3290, 1309,
	1470, 1294, 2735, 4050, 4529, 4050, 3649, 2213, 1202, 1367,
	1201, 1309, 1245, 1200, 1309, 4513, 1226, 4054, 4005, 4065,
	4510, 4008, 2160, 1222, 4053, 1367, 3994, 3916, 4001, 1223,
	175, 1223, 4004, 4067, 4068, 3998, 3478, 678, 678, 3999,
	4000, 4009, 2065, 4003, 4012, 262, 2780, 2477, 3486, 1086,
	4027, 1469, 1224, 4066, 3255, 3548, 1309, 1309, 1978, 1539,
	767, 4259, 1098, 4097, 1809, 4099, 1294, 1294, 2917, 2916,
	4029, 1584, 4400, 1584, 1338, 1336, 1309, 1335, 1334, 4671,
	4734, 3780, 3779, 229, 3098, 1748, 1740, 226, 1367, 228,
	227, 4128, 3736, 1309, 4117, 3296, 4100, 4598, 3802, 3470,
	4086, 23, 22, 21, 112, 42, 20, 150, 4114, 128,
	147, 146, 120, 145, 144, 1972, 1981, 143, 1228, 142,
	149, 4091, 141, 140, 135, 4111, 4084, 4156, 1309, 1309,
	1309, 4145, 139, 138, 137, 136, 134, 132, 4105, 133,
	264, 1367, 4081, 127, 131, 130, 4050, 4110, 129, 126,
	125, 124, 123, 1106, 1106, 1106, 122, 4112, 121, 119,
	4176, 1972, 1972, 118, 117, 4173, 4118, 116, 115, 114,
	4070, 1367, 1223, 113, 4157, 758, 1106, 755, 4133, 1106,
	1106, 61, 4160, 4079, 4151, 4142, 4082, 60, 111, 1106,
	1972, 1972, 1984, 110, 4158, 19, 40, 1106, 1106, 1835,
	1226, 14, 65, 1840, 66, 18, 4165, 1222, 1226, 4144,
	13, 35, 1367, 91, 1309, 1222, 102, 101, 36, 99,
	4196, 1226, 4180, 1972, 4179, 98, 34, 17, 1222, 4182,
	3758, 16, 15, 96, 3759, 1367, 1224, 4184, 4191, 95,
	33, 31, 11, 1106, 1224, 9, 37, 2691, 4185, 1933,
	12, 5, 1106, 180, 179, 182, 178, 1224, 181, 90,
	1106, 177, 176, 4213, 1984, 1226, 4207, 1226, 89, 4201,
	29, 10, 1222, 1106, 1222, 3788, 1106, 3790, 172, 4317,
	3869, 81, 4126, 174, 173, 171, 170, 169, 82, 79,
	1106, 168, 85, 167, 80, 4143, 4237, 1367, 84, 4227,
	83, 1224, 27, 1224, 1309, 4262, 4224, 4225, 6, 1309,
	1309, 64, 7, 4186, 3571, 105, 106, 38, 4164, 4238,
	77, 76, 75, 26, 63, 25, 213, 212, 1068, 4245,
	211, 210, 209, 4236, 208, 207, 4279, 206, 201, 200,
	205, 203, 202, 204, 199, 216, 215, 4291, 3830, 4316,
	221, 220, 219, 218, 1367, 217, 214, 1309, 4307, 223,
	198, 197, 4277, 196, 3480, 194, 190, 4281, 189, 4282,
	193, 195, 192, 191, 188, 1228, 1228, 222, 72, 165,
	166, 4288, 4283, 4320, 71, 164, 163, 162, 3458, 161,
	4297, 4335, 160, 159, 4324, 1106, 1106, 4305, 4296, 158,
	70, 24, 4340, 4050, 4050, 2, 4300, 4344, 1226, 1,
	4299, 0, 1106, 1984, 0, 1222, 0, 4363, 4315, 3490,
	0, 0, 4359, 4360, 0, 0, 4269, 4338, 0, 1223,
	1223, 3498, 0, 0, 0, 4295, 0, 4337, 4336, 1978,
	0, 0, 0, 4343, 1224, 4357, 4342, 0, 1106, 0,
	4332, 1106, 4160, 0, 1470, 0, 0, 0, 1228, 0,
	0, 0, 0, 4372, 4373, 0, 0, 0, 4371, 1972,
	0, 1228, 0, 3539, 3540, 4396, 4293, 0, 0, 0,
	2954, 0, 0, 0, 4381, 0, 4050, 0, 0, 0,
	0, 0, 0, 1240, 0, 0, 0, 1981, 0, 4050,
	0, 1470, 0, 0, 4395, 0, 0, 0, 0, 4375,
	2108, 1978, 1223, 0, 1106, 1106, 4418, 4392, 4419, 0,
	0, 0, 0, 0, 1106, 1223, 1260, 4434, 0, 1228,
	4413, 4412, 1228, 0, 0, 0, 1309, 0, 262, 0,
	262, 262, 0, 1289, 262, 1299, 1309, 1309, 0, 0,
	0, 0, 4426, 0, 4428, 0, 1319, 4050, 0, 0,
	4050, 0, 0, 1309, 0, 762, 4320, 0, 0, 1981,
	0, 4468, 0, 0, 4442, 4443, 4454, 1106, 1106, 4456,
	0, 4449, 4446, 1223, 4448, 4453, 1223, 1106, 0, 262,
	4441, 262, 262, 1289, 0, 262, 262, 4462, 0, 1972,
	0, 1299, 0, 0, 0, 4464, 0, 4473, 0, 4474,
	4465, 0, 262, 0, 1492, 4466, 4467, 4461, 0, 0,
	0, 4472, 4500, 1106, 1106, 0, 1106, 0, 0, 0,
	4504, 4482, 4471, 0, 0, 1516, 0, 0, 4486, 0,
	0, 0, 0, 0, 0, 4481, 4512, 4515, 0, 4527,
	0, 0, 0, 0, 1541, 0, 0, 1299, 0, 0,
	1978, 262, 262, 0, 1289, 1226, 1226, 4503, 4531, 4549,
	4502, 0, 1222, 1222, 4524, 4521, 0, 0, 0, 1106,
	1106, 1106, 4553, 0, 4517, 762, 4552, 262, 262, 0,
	4534, 4516, 0, 0, 4520, 0, 4547, 0, 0, 0,
	0, 1224, 1224, 0, 4548, 2019, 4540, 0, 0, 1106,
	877, 3201, 3202, 0, 3219, 3220, 3221, 4582, 1981, 4432,
	0, 0, 4587, 0, 4566, 4567, 4569, 0, 4568, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 4601,
	0, 4583, 0, 4452, 0, 0, 0, 0, 1226, 4608,
	0, 0, 4610, 0, 0, 1222, 4585, 4624, 0, 4612,
	0, 1226, 0, 1106, 0, 0, 2225, 4622, 1222, 0,
	0, 4623, 4609, 0, 0, 0, 4629, 0, 0, 4618,
	4616, 0, 4617, 2384, 1224, 262, 3216, 0, 0, 4620,
	4621, 0, 0, 4645, 0, 4626, 0, 1224, 0, 4635,
	4636, 4641, 4649, 4639, 4637, 262, 0, 0, 0, 0,
	0, 4650, 1228, 0, 1228, 4512, 2108, 0, 4515, 1226,
	4652, 4666, 1226, 4648, 0, 4661, 1222, 4669, 4667, 1222,
	4678, 0, 4665, 4434, 0, 0, 4531, 0, 4677, 4676,
	4050, 4673, 4050, 4656, 0, 0, 0, 0, 0, 0,
	0, 4691, 0, 0, 0, 1224, 4672, 0, 1224, 4668,
	0, 4670, 0, 4535, 4690, 0, 1223, 4693, 1223, 4537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4706,
	3207, 4699, 4700, 4704, 1106, 1106, 4702, 0, 0, 0,
	0, 0, 0, 1106, 4707, 1106, 1106, 4710, 1068, 0,
	4697, 0, 1068, 4719, 4716, 4725, 0, 0, 0, 4728,
	4730, 4722, 4729, 4727, 4724, 0, 0, 4723, 1451, 0,
	0, 4726, 1451, 0, 4737, 0, 4738, 4733, 2639, 0,
	3836, 4740, 2471, 0, 4742, 0, 4743, 2989, 0, 4745,
	0, 4741, 4739, 0, 4748, 3127, 3128, 0, 1835, 0,
	0, 0, 1106, 4753, 4749, 4755, 0, 0, 4750, 4756,
	0, 4758, 4759, 4717, 4718, 4745, 4752, 0, 0, 4271,
	4272, 0, 0, 3201, 3202, 0, 3219, 3220, 3221, 0,
	1972, 0, 0, 0, 0, 0, 3217, 0, 0, 0,
	0, 0, 0, 0, 0, 3953, 0, 0, 0, 4287,
	0, 4289, 2644, 4290, 0, 678, 3909, 3910, 3911, 0,
	0, 0, 3322, 3323, 0, 0, 0, 0, 0, 0,
	4754, 0, 0, 1303, 0, 1365, 262, 0, 262, 1464,
	0, 0, 262, 0, 0, 4045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 1289, 262, 3216, 262,
	0, 0, 1972, 0, 0, 262, 1492, 694, 1810, 3352,
	0, 0, 262, 1492, 0, 0, 0, 0, 0, 4041,
	0, 0, 0, 4034, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	4032, 1757, 1758, 0, 0, 0, 262, 0, 3402, 4036,
	0, 0, 1226, 0, 1226, 0, 0, 0, 0, 1222,
	0, 1222, 0, 0, 1788, 0, 0, 0, 0, 0,
	3416, 1760, 3418, 4042, 0, 3225, 3226, 3227, 3228, 0,
	0, 3218, 0, 0, 0, 0, 762, 0, 1224, 0,
	1224, 0, 3207, 0, 0, 0, 0, 1813, 0, 0,
	3450, 0, 0, 0, 3456, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 4035, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4427, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 3223, 0, 0, 0,
	0, 4014, 4015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 0, 3608,
	0, 0, 0, 0, 0, 0, 0, 2019, 2019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3217, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 0, 1294, 1294, 0, 0, 3213, 3214, 3215, 0,
	0, 0, 0, 3212, 3210, 3211, 3203, 3204, 3205, 3206,
	3208, 3209, 0, 0, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 2019, 4037, 1303, 0, 0, 0, 4038,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 1757,
	1758, 0, 0, 0, 0, 2019, 0, 2019, 0, 0,
	0, 262, 0, 0, 1459, 262, 0, 0, 0, 0,
	0, 262, 1788, 0, 0, 0, 1780, 262, 1061, 1760,
	0, 1451, 0, 0, 0, 2019, 0, 0, 0, 2019,
	4040, 1470, 0, 262, 0, 262, 0, 0, 0, 678,
	0, 262, 0, 3218, 0, 1813, 4043, 4181, 0, 4183,
	0, 0, 0, 762, 1759, 0, 0, 877, 0, 0,
	0, 0, 0, 2912, 1779, 3088, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 4597, 0, 0, 0, 0,
	0, 0, 262, 0, 1289, 262, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 2904, 2902, 0, 762,
	0, 0, 0, 2906, 2908, 2898, 262, 0, 0, 0,
	0, 0, 0, 2300, 0, 0, 0, 0, 262, 262,
	0, 262, 0, 262, 0, 262, 0, 262, 1948, 0,
	0, 0, 0, 4229, 0, 0, 0, 0, 1068, 2644,
	1786, 0, 0, 0, 1451, 0, 2639, 2639, 1782, 1783,
	1784, 1785, 2335, 0, 0, 2336, 0, 2337, 1765, 0,
	0, 1781, 0, 0, 0, 0, 1470, 0, 0, 262,
	0, 0, 0, 4039, 1294, 0, 0, 0, 3213, 3214,
	3215, 0, 0, 0, 0, 3212, 3210, 3211, 3203, 3204,
	3205, 3206, 3208, 3209, 0, 744, 0, 0, 0, 762,
	0, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 4046, 0, 0, 0, 1470, 0, 1470, 1812,
	2644, 2644, 0, 0, 0, 0, 0, 0, 4298, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3605, 3606,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2900, 1451, 0, 0, 0, 0, 0,
	0, 0, 2479, 0, 2914, 0, 0, 0, 0, 0,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 2913, 2905, 2903, 2907, 2909,
	2899, 2901, 2915, 0, 0, 0, 2639, 2639, 2639, 2639,
	2911, 0, 0, 0, 0, 0, 1810, 0, 3669, 3670,
	3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680,
	3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 0, 3692,
	0, 0, 678, 2918, 0, 0, 0, 0, 0, 0,
	0, 0, 3839, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 678, 0, 1786, 0,
	0, 2191, 0, 262, 0, 678, 0, 0, 0, 0,
	2644, 2644, 2644, 2644, 0, 0, 0, 262, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 0, 0, 0, 0, 1303, 1303, 1812, 0, 0,
	0, 262, 1299, 0, 0, 694, 0, 0, 0, 0,
	0, 1788, 1303, 0, 0, 2755, 0, 0, 1760, 0,
	0, 262, 0, 0, 262, 0, 0, 0, 262, 0,
	262, 0, 0, 0, 0, 1289, 0, 262, 262, 0,
	1299, 1299, 2771, 0, 1813, 0, 0, 262, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 2919, 0,
	0, 0, 1776, 0, 0, 0, 0, 2910, 1777, 1773,
	1451, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 2808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3603, 2019, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 262, 1765, 0, 0,
	0, 74, 1470, 1470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1451, 0, 0, 0, 78, 0, 0,
	0, 0, 262, 2930, 0, 0, 0, 2403, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 1492, 0, 0,
	262, 74, 262, 0, 0, 0, 0, 87, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 78, 0, 2972,
	1774, 1775, 0, 0, 0, 1470, 0, 4071, 0, 2808,
	0, 678, 1451, 0, 0, 0, 0, 0, 0, 4080,
	3001, 877, 4083, 2808, 2808, 0, 0, 871, 0, 0,
	2225, 0, 0, 1780, 0, 0, 0, 87, 1451, 49,
	262, 107, 0, 0, 0, 0, 93, 104, 0, 0,
	2545, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	1289, 262, 0, 0, 0, 1492, 0, 1492, 1299, 262,
	0, 0, 1289, 0, 1289, 0, 1289, 871, 0, 0,
	0, 0, 0, 0, 4141, 0, 0, 0, 0, 49,
	0, 107, 0, 0, 0, 0, 93, 104, 0, 2639,
	2639, 0, 0, 0, 94, 1810, 0, 0, 0, 0,
	262, 262, 262, 262, 1289, 0, 0, 1289, 0, 262,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 2714, 0, 0, 0, 0,
	0, 0, 0, 262, 94, 0, 0, 1786, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2644, 2644, 0, 0, 0, 1781, 0,
	0, 0, 0, 1451, 0, 0, 0, 0, 0, 2639,
	2639, 2639, 2639, 2639, 2639, 2639, 2639, 2639, 2639, 2639,
	2639, 2639, 2639, 2639, 2639, 2639, 2639, 2639, 2639, 0,
	2639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2019, 0, 0, 0, 1812, 0, 1470, 0,
	0, 0, 0, 0, 2019, 0, 0, 2019, 0, 97,
	0, 0, 0, 0, 0, 1451, 0, 0, 0, 0,
	0, 0, 0, 2644, 2644, 2644, 2644, 2644, 2644, 2644,
	2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644,
	2644, 2644, 2644, 0, 2644, 0, 0, 1492, 0, 0,
	2791, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 183, 100, 0, 103, 0, 0, 0, 0, 2019,
	0, 0, 4294, 0, 0, 0, 0, 1777, 1773, 775,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 230,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 148, 0, 786, 0, 0, 0, 0, 0,
	0, 183, 100, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 232, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 4210, 0, 0, 231, 232, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 780, 0, 224,
	0, 0, 0, 787, 0, 262, 0, 0, 225, 0,
	678, 0, 0, 151, 0, 678, 0, 785, 678, 0,
	0, 678, 678, 0, 0, 0, 0, 678, 187, 0,
	186, 0, 0, 0, 0, 262, 231, 4248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 784, 0, 0, 0, 73,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	1589, 739, 0, 262, 0, 0, 74, 262, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 2019, 0, 0,
	0, 0, 78, 0, 0, 0, 782, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2808, 2808, 262, 0,
	3349, 0, 0, 0, 0, 0, 2808, 0, 0, 3360,
	0, 0, 0, 0, 0, 0, 0, 2808, 3360, 0,
	2808, 3360, 87, 0, 3360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	262, 3349, 0, 262, 0, 790, 0, 0, 0, 0,
	1294, 0, 0, 2614, 2615, 2616, 2617, 2610, 2611, 2612,
	2613, 0, 871, 3349, 0, 262, 0, 3421, 3421, 0,
	0, 1289, 0, 1793, 0, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 0, 4380, 2808, 0, 2808,
	0, 3447, 2808, 3349, 0, 0, 2808, 3349, 0, 0,
	0, 0, 0, 2225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 2590, 2591, 2592, 2593, 94,
	0, 262, 3474, 0, 0, 3476, 2808, 0, 781, 262,
	0, 0, 0, 262, 0, 0, 1299, 0, 2602, 2603,
	2604, 2605, 2598, 2599, 2600, 2601, 2606, 2607, 2608, 2609,
	0, 262, 0, 0, 0, 0, 2972, 0, 0, 1289,
	0, 262, 738, 0, 2808, 0, 678, 0, 0, 0,
	0, 0, 0, 2808, 0, 0, 788, 0, 1451, 0,
	0, 0, 779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 2972, 0, 0, 2972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1451, 2586, 2587, 2588, 2589, 2594, 2595, 2596, 2597,
	0, 0, 0, 0, 0, 0, 1451, 0, 0, 776,
	3576, 0, 0, 1793, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 2732, 1793, 0, 3582, 0, 1451,
	1289, 262, 0, 262, 0, 0, 0, 783, 0, 1289,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 0, 3256, 0, 1068, 0, 262,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 1068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1788, 0, 0, 183, 100, 3282, 103,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 3295, 1793, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 230, 0, 1813, 3647, 1793, 0,
	0, 0, 872, 1793, 0, 1759, 3313, 148, 0, 1757,
	1758, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 1760,
	0, 1451, 232, 0, 2639, 0, 0, 0, 0, 0,
	0, 0, 2225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 1793, 151, 0,
	0, 0, 1294, 1793, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 1779, 0, 0, 0, 0, 0,
	0, 231, 1451, 1776, 262, 262, 0, 0, 2639, 1782,
	1783, 1784, 1785, 0, 224, 0, 0, 0, 0, 1765,
	0, 0, 0, 225, 0, 0, 678, 678, 2644, 3201,
	3202, 0, 3219, 3220, 3221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 1492, 1492,
	0, 3614, 0, 0, 0, 0, 1798, 3602, 0, 1808,
	0, 0, 1492, 1492, 1492, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 2644, 1804, 0, 1805, 0, 0, 1765, 0,
	0, 0, 1774, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3216, 0, 0, 0, 0, 3295,
	1796, 0, 0, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 1787, 1789, 1451, 0, 762,
	1451, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 3421, 0, 0, 0, 0, 2639, 0, 0,
	0, 0, 0, 0, 0, 262, 1795, 0, 0, 0,
	0, 2643, 0, 0, 1780, 0, 0, 1810, 3207, 0,
	0, 0, 0, 0, 1793, 3349, 0, 262, 0, 0,
	1793, 0, 0, 0, 0, 0, 1451, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 1451, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 262, 1464, 0, 0, 1365, 262, 1786,
	0, 2644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3223, 0, 0, 0, 1810, 2808, 262, 0,
	1781, 0, 0, 0, 0, 0, 0, 3001, 3001, 0,
	0, 0, 0, 877, 877, 2808, 0, 0, 0, 2972,
	2972, 0, 0, 877, 2808, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 3217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 1786, 0,
	0, 0, 0, 3626, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	3642, 1470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3972,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 3176, 0, 0, 0, 3177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 3218,
	0, 0, 262, 0, 0, 0, 0, 0, 1492, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3734, 262, 0, 0, 0, 0, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2808, 2808, 0, 3421,
	2808, 0, 0, 0, 0, 0, 0, 4052, 0, 4052,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2808, 0, 3360, 0, 0, 0, 1492, 1492, 262, 3349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3349, 0, 262, 3349, 0, 262, 0, 3421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2808, 0, 2808, 262, 0, 0,
	0, 0, 0, 1911, 3213, 3214, 3215, 0, 0, 0,
	0, 3212, 3210, 3211, 3203, 3204, 3205, 3206, 3208, 3209,
	0, 0, 0, 0, 0, 2808, 0, 0, 0, 0,
	4130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4052, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	1451, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	0, 0, 0, 0, 0, 1793, 0, 1793, 1793, 1793,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 2643,
	2643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 2808, 1793, 3360, 0, 0, 4240, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 1451, 4260, 1451, 4260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 762, 0, 0,
	0, 1451, 0, 0, 0, 1793, 0, 0, 3421, 0,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3349, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 1793, 0,
	0, 1793, 0, 0, 1793, 0, 0, 4240, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 2808, 0, 0, 0, 1451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4329, 0, 1451, 0, 0, 0, 0,
	0, 4007, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4052, 4052, 3201,
	3202, 0, 3219, 3220, 3221, 0, 0, 0, 4020, 0,
	0, 0, 0, 0, 1793, 262, 262, 3222, 0, 2643,
	2643, 2643, 2643, 0, 0, 0, 1793, 0, 1793, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 1451, 3647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3421, 4394, 0, 0,
	0, 0, 0, 0, 4240, 0, 1757, 1758, 0, 0,
	0, 0, 0, 0, 3216, 0, 0, 0, 0, 0,
	4052, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 1451, 0, 4052, 0, 0, 1760, 0, 0, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 1451, 1813, 0, 1794, 1788, 0, 0, 0, 0,
	0, 1759, 1760, 0, 0, 4130, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4052, 0, 262, 4052, 0, 0, 0, 1813, 0,
	0, 0, 1451, 0, 3360, 0, 0, 1759, 3207, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 1451, 1776, 0, 0, 0,
	1492, 0, 1492, 0, 0, 0, 0, 0, 1365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4496, 0, 1068, 0, 4202, 0,
	1757, 1758, 3223, 0, 0, 1765, 0, 4260, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 1451, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 2808,
	1760, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 4202,
	0, 1765, 0, 0, 3217, 0, 0, 0, 0, 0,
	262, 0, 1787, 1789, 0, 0, 1813, 0, 0, 0,
	0, 0, 2403, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 1451, 1779, 0, 3647, 1798, 0,
	0, 1808, 1793, 1793, 1776, 1793, 0, 0, 1787, 1789,
	0, 0, 0, 0, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 1780, 0, 0, 1774, 1775, 1810, 0, 0, 0,
	0, 262, 0, 0, 2403, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 3116, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 4240, 0, 0, 0, 0, 1314, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 3218,
	1806, 1053, 0, 0, 0, 1053, 0, 2808, 0, 0,
	0, 0, 0, 0, 4052, 0, 4052, 0, 1793, 1492,
	0, 0, 0, 0, 0, 0, 1787, 1789, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1068, 1068, 0, 0, 0, 0,
	0, 0, 1774, 1775, 1494, 0, 1500, 0, 1506, 0,
	0, 0, 0, 1492, 0, 0, 1781, 0, 0, 1793,
	1793, 0, 2643, 2643, 0, 0, 1793, 0, 0, 0,
	0, 1786, 0, 0, 0, 1780, 3222, 3222, 0, 0,
	1793, 1793, 0, 0, 0, 0, 0, 0, 0, 3001,
	1793, 0, 1781, 0, 0, 0, 0, 0, 2808, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 3001, 1812, 1595, 1793, 1600, 0, 1799,
	0, 0, 0, 0, 3213, 3214, 3215, 1609, 0, 1614,
	0, 3212, 3210, 3211, 3203, 3204, 3205, 3206, 3208, 3209,
	0, 0, 0, 0, 1068, 0, 0, 1810, 0, 0,
	1812, 0, 2643, 2643, 2643, 2643, 2643, 2643, 2643, 2643,
	2643, 2643, 2643, 2643, 2643, 2643, 2643, 2643, 2643, 2643,
	2643, 2643, 0, 2643, 3222, 3222, 3222, 3222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1678, 0, 0, 1684, 0, 1786,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 1812, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 1779, 0,
	0, 0, 0, 1834, 0, 0, 0, 1776, 1793, 1847,
	0, 0, 74, 1138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 0, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	1757, 1758, 1782, 1783, 1784, 1785, 1760, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 871, 0,
	1760, 0, 1813, 0, 1905, 1905, 1905, 0, 0, 0,
	49, 1759, 107, 0, 0, 0, 0, 93, 104, 1798,
	0, 1779, 1808, 0, 0, 0, 1813, 0, 0, 1787,
	1789, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 1793,
	1793, 0, 0, 1793, 3222, 3222, 1793, 0, 0, 0,
	1793, 1806, 0, 0, 0, 0, 1229, 1793, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	1793, 1053, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 1793, 1793, 1793, 1793, 0, 0,
	0, 0, 0, 1793, 0, 1793, 1787, 1789, 3222, 3222,
	3222, 3222, 3222, 3222, 3222, 3222, 3222, 3222, 3222, 3222,
	3222, 3222, 3222, 3222, 3222, 3222, 3222, 3222, 0, 0,
	0, 3222, 1786, 0, 1793, 1793, 0, 0, 0, 0,
	97, 1780, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 1781, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 100, 0, 103, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1793, 1810, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 148, 0, 0, 0, 1810, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 1781, 73, 1771, 1772,
	1778, 1800, 1777, 1773, 151, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 74, 0, 0, 0, 2522, 187,
	1781, 0, 2523, 0, 0, 0, 0, 231, 0, 0,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 1793, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 1587, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	1793, 0, 0, 0, 1793, 1793, 0, 0, 1793, 1793,
	871, 2323, 0, 1793, 0, 0, 0, 1793, 0, 0,
	0, 0, 1793, 0, 107, 0, 0, 0, 0, 93,
	104, 0, 0, 0, 0, 0, 0, 2643, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 2378,
	0, 2382, 0, 0, 0, 0, 0, 94, 2396, 0,
	0, 2643, 0, 0, 0, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 0, 2446, 0, 2448, 2449, 2450, 2451, 0, 0,
	0, 0, 0, 0, 3201, 3202, 0, 3219, 3220, 3221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2475, 0, 0, 0, 0, 0, 3613, 1229, 0, 0,
	0, 0, 1834, 0, 0, 0, 2526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2556, 2559, 2562, 2565, 0, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 1229, 0, 0, 0, 3216,
	0, 0, 0, 1229, 0, 2635, 0, 2647, 2649, 2654,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 1793, 1793, 0,
	0, 0, 0, 0, 1229, 0, 0, 1793, 1793, 3222,
	2643, 0, 0, 0, 0, 0, 1793, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 183, 100, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3222, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	1793, 0, 230, 3207, 0, 0, 0, 1793, 0, 0,
	872, 1229, 0, 0, 1793, 148, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 1794, 1788, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 1229, 0, 3223, 0, 0,
	0, 1807, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 187, 0, 0, 0, 0, 0, 1759, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 3217,
	0, 0, 224, 0, 0, 0, 1776, 0, 0, 3222,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 1793, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 3201, 3202, 0, 3219, 3220, 3221, 1793,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 1757, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2933, 2934,
	0, 2936, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 1798, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 0, 3218, 0, 0, 0, 3216, 0,
	0, 1813, 0, 0, 0, 1804, 0, 1805, 0, 0,
	1759, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 1229,
	0, 0, 0, 3109, 0, 0, 0, 0, 0, 3059,
	1806, 0, 3207, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 1795, 0,
	0, 0, 1985, 0, 1765, 0, 1229, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3213,
	3214, 3215, 0, 0, 0, 0, 3212, 3210, 3211, 3203,
	3204, 3205, 3206, 3208, 3209, 0, 0, 0, 0, 1814,
	1815, 0, 0, 0, 0, 0, 3223, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 1774, 1775, 0,
	1793, 0, 1781, 1229, 1793, 0, 0, 0, 3217, 0,
	0, 0, 0, 0, 0, 3110, 3111, 0, 0, 0,
	0, 3117, 0, 0, 0, 0, 0, 1229, 0, 1799,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3131, 3132, 0, 0, 0, 0, 2526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 3155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3167, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 3218, 1786, 0, 0, 1229, 1229, 0,
	0, 3978, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 1781, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 1788,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 2654, 2654, 2654, 0, 0, 0,
	0, 0, 1813, 1812, 0, 0, 0, 0, 0, 1905,
	0, 1759, 0, 0, 0, 0, 0, 3260, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 1229, 0, 1229, 0, 1229, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 1229, 0, 0, 0, 707, 0, 3213, 3214,
	3215, 708, 1229, 0, 0, 3212, 3210, 3211, 3203, 3204,
	3205, 3206, 3208, 3209, 1229, 0, 1229, 1229, 1229, 0,
	0, 0, 0, 0, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 710, 0, 0, 0, 1765, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 730, 1808, 0, 0, 0, 0,
	0, 0, 1787, 1789, 0, 0, 0, 3379, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 1985, 1985, 1229, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 714,
	0, 1780, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 1794, 1788, 0, 0, 0, 1229, 0,
	0, 1760, 0, 0, 0, 1229, 1781, 0, 0, 0,
	1807, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	736, 1229, 717, 1799, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	737, 0, 718, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2396, 0, 0, 0,
	0, 0, 3600, 3601, 0, 0, 3604, 0, 0, 738,
	3607, 0, 0, 0, 0, 0, 719, 0, 0, 3611,
	0, 734, 735, 732, 0, 0, 0, 0, 3618, 727,
	0, 0, 720, 3260, 0, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 1229, 1229, 1797, 0, 3631, 0,
	1765, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 3654, 3655,
	0, 3656, 3657, 3658, 721, 3616, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 1229, 1798, 0, 3664,
	1808, 0, 0, 3666, 0, 0, 0, 1787, 1789, 723,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 1805, 0, 740, 0,
	1985, 0, 0, 1774, 1775, 0, 3695, 3696, 0, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 3707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 1229, 3716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 1806,
	0, 0, 0, 0, 0, 0, 73, 0, 46, 45,
	0, 0, 0, 0, 0, 1229, 0, 1795, 0, 0,
	0, 0, 0, 74, 0, 0, 152, 0, 1810, 0,
	0, 0, 0, 0, 0, 3762, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	67, 0, 0, 0, 0, 3773, 0, 48, 1229, 154,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 47, 0, 87,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 3801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 50, 68, 0, 0, 0,
	0, 0, 0, 0, 51, 0, 0, 0, 0, 57,
	0, 0, 0, 155, 0, 0, 0, 0, 1799, 0,
	0, 49, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	3904, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	3179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 3950, 3951, 0, 0,
	0, 0, 3955, 3956, 1794, 1788, 0, 3959, 3960, 0,
	0, 0, 1760, 0, 0, 3964, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 3968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 97, 3973, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 53, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 56, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 58, 183, 100, 0, 103, 0, 0, 0,
	54, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 62,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 153,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 1229, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 1808, 0, 0, 1229, 151, 0, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 1229,
	187, 0, 0, 0, 0, 1804, 0, 1805, 231, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 1985, 0,
	0, 224, 1229, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 1796, 0, 0, 0, 0, 1229, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 1115,
	0, 0, 186, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 1985,
	1806, 0, 0, 0, 0, 263, 263, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 1229, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4197, 4198, 4199, 0,
	0, 0, 0, 0, 0, 1229, 0, 1229, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 2396,
	0, 0, 4208, 4209, 1229, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 1229, 0, 0, 0, 1229,
	4217, 4220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 724, 0, 0, 1229,
	0, 1229, 0, 0, 0, 1229, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 708, 0, 1229, 0, 4261, 0, 0, 0, 0,
	0, 0, 0, 4268, 0, 1229, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 4275, 0, 0, 1053,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	709, 0, 0, 4284, 0, 0, 0, 0, 0, 0,
	0, 710, 0, 0, 0, 0, 0, 1229, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 730, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 712, 0, 0, 0, 0, 0,
	1229, 3178, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 714,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 0,
	1985, 0, 0, 0, 0, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 1229,
	0, 4399, 0, 729, 4402, 0, 0, 1794, 1788, 0,
	0, 0, 0, 0, 0, 1760, 1229, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 1985, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 1985, 1985, 0, 0, 0,
	1779, 0, 726, 0, 0, 0, 0, 1053, 1053, 1776,
	0, 0, 0, 0, 0, 0, 0, 4450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2396, 717, 0, 0, 0, 0, 0, 0, 0,
	4220, 0, 0, 0, 1782, 1783, 1784, 1785, 1229, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	737, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 738,
	0, 1787, 1789, 0, 0, 0, 719, 0, 0, 0,
	0, 734, 735, 732, 0, 0, 0, 0, 1804, 727,
	1805, 0, 720, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 4565, 4565, 4565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 4586, 0, 721, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 740, 0,
	0, 0, 0, 0, 1229, 0, 4565, 1229, 0, 725,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 263, 263, 0,
	0, 263, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	1229, 1229, 1229, 0, 0, 0, 263, 1312, 263, 263,
	0, 1312, 263, 263, 0, 1781, 0, 1229, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 1229,
	0, 0, 1799, 0, 0, 0, 0, 4565, 4711, 0,
	1312, 0, 0, 0, 0, 0, 4715, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 1985, 0, 1312, 0, 263, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 1312, 263, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	0, 1312, 0, 1229, 3175, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 1229, 0, 1229, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 1229, 1229, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	1229, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 0, 0, 0,
	0, 0, 1229, 0, 0, 823, 0, 0, 0, 0,
	824, 0, 1229, 0, 1229, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 261, 261, 0, 0, 1028, 0, 825,
	0, 842, 0, 0, 0, 0, 0, 0, 1048, 1229,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 0, 826, 0, 0, 1229,
	0, 827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 1229, 803, 0, 0,
	0, 0, 0, 851, 1212, 0, 0, 0, 0, 828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 1229, 1229, 1229, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 1229, 0, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 829, 0,
	0, 830, 0, 1807, 1229, 0, 0, 0, 0, 0,
	0, 0, 853, 0, 0, 0, 0, 739, 0, 263,
	1813, 0, 0, 0, 0, 1985, 0, 0, 0, 1759,
	1312, 0, 0, 0, 263, 263, 263, 0, 0, 1779,
	0, 0, 263, 0, 0, 1229, 0, 1229, 1776, 263,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 852, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 1312,
	1229, 0, 0, 1765, 0, 0, 0, 1229, 0, 0,
	0, 0, 1229, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 833, 0, 1808, 0, 0, 0, 0, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 1229, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 834, 0, 0, 0, 0, 1774, 1775, 1229, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 1780,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	820, 0, 844, 0, 0, 0, 0, 0, 0, 0,
	0, 835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 1312, 1312, 263, 841, 0, 0, 0,
	0, 1229, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 1229, 0, 0, 837, 856, 0,
	855, 1810, 0, 0, 838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 839, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 263, 857,
	0, 854, 263, 0, 0, 0, 0, 740, 263, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 1229, 1786, 0, 1229, 0, 0, 0, 1229,
	263, 0, 263, 0, 0, 0, 0, 0, 263, 1229,
	1229, 0, 0, 0, 1781, 0, 0, 1312, 0, 1312,
	0, 1312, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 1312, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 1312, 263,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 1312, 1312, 1312, 0, 0, 109, 0, 0,
	0, 0, 1812, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 263, 0, 263, 0,
	263, 0, 263, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 109, 1797, 109, 0, 109, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 261, 261, 0, 0, 261, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 1048, 109,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 109, 0,
	0, 0, 0, 261, 0, 261, 261, 0, 0, 261,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 1229, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 261, 0, 0, 0,
	0, 0, 0, 1218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 935, 0, 983, 0, 0, 0, 0,
	0, 261, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 943,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 257,
	257, 674, 0, 0, 0, 957, 0, 941, 940, 0,
	0, 0, 0, 0, 263, 0, 0, 1312, 0, 0,
	0, 0, 1028, 0, 0, 0, 0, 0, 0, 959,
	263, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	945, 0, 0, 1827, 0, 991, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 955, 0, 0, 0, 0,
	0, 1833, 0, 972, 0, 1839, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 984, 947, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 263, 0, 0, 0, 263, 0, 263, 0, 948,
	0, 0, 0, 0, 263, 263, 0, 0, 981, 0,
	1312, 1312, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 950, 0, 0, 0, 0, 0, 0,
	0, 939, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 1925, 0, 1928, 0, 109,
	951, 952, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 960,
	958, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	0, 969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 1312, 0, 0, 0, 0, 988,
	980, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 263,
	0, 1312, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 1225, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 1312, 946, 0, 0, 990, 0, 0, 0,
	0, 261, 1927, 261, 1312, 0, 1312, 0, 0, 803,
	0, 0, 0, 0, 0, 0, 803, 263, 944, 0,
	0, 1312, 976, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 979, 263, 0, 263, 0,
	0, 0, 0, 261, 0, 0, 263, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 0, 989, 970, 0, 0, 963, 961,
	0, 966, 0, 0, 0, 0, 0, 967, 0, 0,
	937, 0, 986, 0, 0, 0, 0, 263, 263, 263,
	263, 0, 0, 0, 0, 0, 263, 0, 0, 263,
	0, 0, 0, 0, 938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 968, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 987, 0, 0, 263, 0,
	0, 0, 0, 971, 0, 0, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1048,
	0, 1048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 261,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 1275,
	0, 1275, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 261,
	0, 1028, 0, 0, 1028, 1028, 0, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 1468, 1312, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 803, 261, 0, 261, 0, 261, 0, 261,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2464, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 261, 0, 0, 0, 0, 1312, 0,
	1833, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 1312, 0, 0, 0, 1593, 1594,
	263, 0, 0, 0, 263, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1212, 0, 0, 0,
	1107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1928, 0, 0, 0, 263, 263, 0, 1312,
	263, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 1312, 263, 1312, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 0, 263, 1312, 0, 1312, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 1225, 0, 0, 0, 0, 263, 0, 0, 1312,
	263, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 1312, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 261, 0,
	0, 0, 261, 0, 261, 0, 1312, 0, 263, 1312,
	263, 261, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 109, 0,
	109, 0, 0, 1943, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 0,
	1468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 109, 1312, 0, 109, 0, 0,
	261, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	1275, 0, 1312, 261, 0, 0, 0, 1468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 267, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 803, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 795,
	0, 0, 0, 261, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 261, 261, 261, 261, 0, 0,
	0, 0, 0, 261, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 2211, 0, 0, 261, 2218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2231, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2243, 0, 2243, 0, 0, 0,
	1312, 0, 2250, 1312, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	263, 0, 0, 2218, 0, 263, 2275, 0, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2295, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 1312, 1312, 0,
	2308, 0, 2310, 0, 2312, 0, 2314, 0, 2315, 0,
	0, 0, 0, 1312, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1212, 1312,
	0, 0, 0, 263, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 1212, 0, 0, 0, 0, 0,
	2340, 0, 0, 0, 0, 0, 0, 0, 1369, 1312,
	0, 0, 1369, 0, 0, 0, 0, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 1225, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1311, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 0, 1312, 0, 0, 0, 0, 0, 109,
	109, 0, 109, 109, 109, 0, 0, 0, 0, 1927,
	0, 1312, 1312, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 109, 0, 109, 109,
	109, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 261, 261, 0, 0, 263, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	1312, 263, 0, 1312, 263, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 1312, 0, 0, 0, 2711, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 1312, 0, 0, 0,
	0, 0, 0, 261, 261, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 1927, 1312, 0, 0, 263, 0,
	1212, 0, 0, 1048, 0, 0, 0, 1312, 263, 261,
	0, 0, 1312, 0, 0, 0, 0, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2757, 0, 0, 1275, 0, 0, 0, 1275,
	0, 1275, 0, 0, 0, 0, 0, 1312, 1312, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 2231, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 803, 0, 0, 0, 0,
	1312, 0, 0, 261, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 1368, 0, 0, 0,
	1368, 0, 0, 0, 0, 1225, 0, 0, 1310, 0,
	0, 1312, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 261, 1310,
	0, 0, 0, 263, 0, 0, 0, 1468, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 261, 1312, 261, 0, 0,
	0, 2218, 0, 1312, 263, 0, 1310, 0, 1312, 1312,
	2231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	1311, 0, 0, 1312, 0, 0, 1312, 0, 0, 0,
	1310, 3032, 0, 1212, 1212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1369, 0, 0, 0, 0, 0,
	3043, 0, 3046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3071, 1468, 3073, 1468, 0, 0, 0, 0, 0,
	3079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 3107, 0, 0, 0, 0, 0, 1225, 1225,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 1369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 1311, 0,
	1311, 0, 1311, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1212, 1311, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 1311, 0, 1311, 1311, 1311, 0, 263, 0, 0,
	0, 795, 0, 0, 0, 0, 0, 0, 795, 261,
	0, 1310, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 261, 263, 0,
	0, 0, 261, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 0, 1225, 0, 0, 0, 1757, 1758, 0, 0,
	0, 0, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 0, 0, 0, 1788,
	1369, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 1212, 1813, 0, 0, 0, 0, 0, 0, 1212,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 1275, 0, 0, 0, 1468, 1468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1369, 0, 0, 0, 0, 0, 3347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 1310, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 1782, 1783, 1784, 1785, 0,
	3398, 3400, 0, 0, 2231, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 0,
	0, 0, 1369, 0, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1927, 0, 0,
	0, 0, 1798, 0, 0, 1808, 109, 0, 1369, 0,
	0, 0, 1787, 1789, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 1927, 109, 1927, 0, 0, 1310, 0, 1310, 0,
	1310, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 1310, 1310, 0, 0,
	3487, 1780, 0, 0, 3491, 0, 0, 1310, 261, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 1310,
	0, 1310, 1310, 1310, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 1311, 0, 795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3544, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 1369, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 3585, 0, 1468, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 1368, 0,
	0, 0, 0, 0, 0, 1369, 0, 0, 0, 0,
	3598, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2464, 0,
	261, 1368, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1311, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1927, 1927, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	261, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 1310,
	1310, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 1927, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 1368, 0, 0, 0, 0, 0, 1776, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 2231, 0,
	0, 0, 0, 109, 0, 1927, 0, 261, 1927, 2231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 2231, 0, 0, 0, 0, 3886,
	0, 0, 1782, 1783, 1784, 1785, 0, 1310, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 795, 1798,
	1310, 0, 1808, 0, 261, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 3935, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 1310, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 1310, 261, 1310, 0, 0, 1369, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	1310, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 261, 0, 0, 0, 1369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 1311, 1311, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 1927, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4069,
	1799, 0, 1311, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2231, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1311, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 1311, 0, 1311, 0,
	0, 0, 1369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2231, 0, 0, 0, 0, 0, 0, 0,
	1311, 0, 4152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 3174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 1369, 0, 0,
	1369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 0, 1794, 1788, 0, 0, 0, 4249, 0, 0,
	1760, 0, 0, 0, 1368, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 1368, 0, 0,
	0, 0, 0, 0, 0, 1759, 1369, 0, 0, 0,
	0, 0, 1310, 1310, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 1369, 1776, 0, 0, 0, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 4370, 1468, 0, 0,
	1310, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 1798, 0, 0, 1808,
	1310, 0, 0, 0, 1310, 1369, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 1805, 0, 1310, 0, 0,
	0, 0, 1774, 1775, 1310, 0, 1310, 0, 0, 0,
	1368, 0, 0, 0, 0, 0, 0, 795, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	1310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4455, 0, 0, 0, 1806, 0,
	0, 0, 1310, 1310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 1311, 1368, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 4506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 4542, 0, 0, 0, 1794, 1788, 1799, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 1311, 1311, 1311,
	0, 0, 1807, 0, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 1812, 1813,
	0, 1368, 0, 0, 0, 0, 0, 0, 1759, 0,
	1311, 0, 0, 0, 0, 0, 1369, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 4602, 0, 0, 0, 0, 0, 0, 0,
	1369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 3173,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 1369, 0, 1369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 1311, 1311, 0, 1774, 1775, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1369,
	0, 1311, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 1311, 1311, 0, 1310,
	0, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1369, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	1310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 1311, 1311,
	1311, 0, 0, 0, 0, 1310, 1310, 1310, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 1369, 0, 0, 1368, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1369, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 2523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1369, 0, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 1311,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1310, 1310, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 1369, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1368, 0, 1310,
	0, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1310, 1310, 1310, 0,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 1311, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 0, 0, 1310, 1310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 1310, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 1371, 278, 279, 1372, 1373,
	1374, 1310, 1375, 620, 1376, 1377, 1378, 1379, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1380, 625, 290, 291, 292, 293,
	294, 295, 1381, 1382, 0, 296, 626, 627, 628, 1383,
	297, 298, 629, 1384, 1313, 1385, 299, 300, 301, 302,
	303, 304, 305, 0, 1386, 307, 308, 309, 306, 310,
	1387, 311, 0, 312, 313, 314, 315, 316, 317, 1388,
	318, 319, 320, 1170, 321, 322, 323, 1389, 1390, 1392,
	1391, 1393, 1394, 1395, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1396, 333, 330, 331, 1397, 334, 332,
	335, 1398, 336, 337, 338, 1399, 1400, 339, 340, 341,
	1401, 342, 343, 1402, 344, 345, 346, 1403, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1404, 268, 1405, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1406,
	365, 366, 1407, 1408, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1409, 378,
	638, 1410, 639, 379, 1411, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 1412, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1413, 1172, 395, 643, 644, 1414, 645, 1415, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1416, 409,
	411, 410, 1417, 412, 647, 1177, 413, 414, 1178, 1418,
	415, 0, 0, 0, 416, 417, 420, 1419, 1420, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1421, 270, 1181, 460, 461, 1422,
	648, 462, 649, 464, 465, 1423, 0, 466, 0, 1424,
	1425, 468, 469, 470, 1426, 1427, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1428, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1429, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1430, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1431, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1432, 546, 547, 545, 548, 549, 550, 1433, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1434, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1435, 578, 579, 0, 575, 566, 1436,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1437,
	588, 661, 662, 663, 664, 1438, 597, 1439, 589, 590,
	591, 665, 592, 666, 1440, 593, 594, 595, 596, 0,
	598, 599, 1441, 1442, 600, 601, 602, 604, 605, 603,
	606, 1443, 607, 1444, 0, 608, 609, 610, 667, 668,
	669, 1445, 612, 611, 613, 670, 1446, 614, 1447, 1448,
	1449, 1450, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1366, 0, 0, 0, 0, 0, 0, 0,
	2689, 0, 0, 0, 0, 0, 0, 0, 2690, 271,
	273, 272, 274, 275, 276, 277, 1371, 278, 279, 1372,
	1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 1380, 625, 290, 291, 292,
	293, 294, 295, 1381, 1382, 0, 296, 626, 627, 628,
	1383, 297, 298, 629, 1384, 1313, 1385, 299, 300, 301,
	302, 303, 304, 305, 0, 1386, 307, 308, 309, 306,
	310, 1387, 311, 0, 312, 313, 314, 315, 316, 317,
	1388, 318, 319, 320, 1170, 321, 322, 323, 1389, 1390,
	1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 1396, 333, 330, 331, 1397, 334,
	332, 335, 1398, 336, 337, 338, 1399, 1400, 339, 340,
	341, 1401, 342, 343, 1402, 344, 345, 346, 1403, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 1404, 268, 1405, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	1406, 365, 366, 1407, 1408, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1409,
	378, 638, 1410, 639, 379, 1411, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 1412, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1413, 1172, 395, 643, 644, 1414, 645, 1415,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1416,
	409, 411, 410, 1417, 412, 647, 1177, 413, 414, 1178,
	1418, 415, 0, 0, 0, 416, 417, 420, 1419, 1420,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1421, 270, 1181, 460, 461,
	1422, 648, 462, 649, 464, 465, 1423, 0, 466, 0,
	1424, 1425, 468, 469, 470, 1426, 1427, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1428, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 1429, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 1430, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1431, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1432, 546, 547, 545, 548, 549, 550, 1433,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 1434, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 1435, 578, 579, 0, 575, 566,
	1436, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	1437, 588, 661, 662, 663, 664, 1438, 597, 1439, 589,
	590, 591, 665, 592, 666, 1440, 593, 594, 595, 596,
	0, 598, 599, 1441, 1442, 600, 601, 602, 604, 605,
	603, 606, 1443, 607, 1444, 0, 608, 609, 610, 667,
	668, 669, 1445, 612, 611, 613, 670, 1446, 614, 1447,
	1448, 1449, 1450, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 0, 0, 3625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3627, 271, 273,
	272, 274, 275, 276, 277, 1371, 278, 279, 1372, 1373,
	1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1380, 625, 290, 291, 292, 293,
	294, 295, 1381, 1382, 0, 296, 626, 627, 628, 1383,
	297, 298, 629, 1384, 1313, 1385, 299, 300, 301, 302,
	303, 304, 305, 0, 1386, 307, 308, 309, 306, 310,
	1387, 311, 0, 312, 313, 314, 315, 316, 317, 1388,
	318, 319, 320, 1170, 321, 322, 323, 1389, 1390, 1392,
	1391, 1393, 1394, 1395, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1396, 333, 330, 331, 1397, 334, 332,
	335, 1398, 336, 337, 338, 1399, 1400, 339, 340, 341,
	1401, 342, 343, 1402, 344, 345, 346, 1403, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1404, 268, 1405, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1406,
	365, 366, 1407, 1408, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1409, 378,
	638, 1410, 639, 379, 1411, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 1412, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1413, 1172, 395, 643, 644, 1414, 645, 1415, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1416, 409,
	411, 410, 1417, 412, 647, 1177, 413, 414, 1178, 1418,
	415, 0, 0, 0, 416, 417, 420, 1419, 1420, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1421, 270, 1181, 460, 461, 1422,
	648, 462, 649, 464, 465, 1423, 0, 466, 0, 1424,
	1425, 468, 469, 470, 1426, 1427, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1428, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1429, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1430, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1431, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1432, 546, 547, 545, 548, 549, 550, 1433, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1434, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1435, 578, 579, 0, 575, 566, 1436,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1437,
	588, 661, 662, 663, 664, 1438, 597, 1439, 589, 590,
	591, 665, 592, 666, 1440, 593, 594, 595, 596, 0,
	598, 599, 1441, 1442, 600, 601, 602, 604, 605, 603,
	606, 1443, 607, 1444, 0, 608, 609, 610, 667, 668,
	669, 1445, 612, 611, 613, 670, 1446, 614, 1447, 1448,
	1449, 1450, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 1366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4006, 271, 273, 272, 274, 275, 276, 277, 1371, 278,
	279, 1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378,
	1379, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1380, 625, 290,
	291, 292, 293, 294, 295, 1381, 1382, 0, 296, 626,
	627, 628, 1383, 297, 298, 629, 1384, 1313, 1385, 299,
	300, 301, 302, 303, 304, 305, 0, 1386, 307, 308,
	309, 306, 310, 1387, 311, 0, 312, 313, 314, 315,
	316, 317, 1388, 318, 319, 320, 1170, 321, 322, 323,
	1389, 1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1396, 333, 330, 331,
	1397, 334, 332, 335, 1398, 336, 337, 338, 1399, 1400,
	339, 340, 341, 1401, 342, 343, 1402, 344, 345, 346,
	1403, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1404, 268, 1405,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1406, 365, 366, 1407, 1408, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1409, 378, 638, 1410, 639, 379, 1411, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	1412, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1413, 1172, 395, 643, 644, 1414,
	645, 1415, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1416, 409, 411, 410, 1417, 412, 647, 1177, 413,
	414, 1178, 1418, 415, 0, 0, 0, 416, 417, 420,
	1419, 1420, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1421, 270, 1181,
	460, 461, 1422, 648, 462, 649, 464, 465, 1423, 0,
	466, 0, 1424, 1425, 468, 469, 470, 1426, 1427, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1428, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1429, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1430,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1431, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1432, 546, 547, 545, 548, 549,
	550, 1433, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1434,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1435, 578, 579, 0,
	575, 566, 1436, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1437, 588, 661, 662, 663, 664, 1438, 597,
	1439, 589, 590, 591, 665, 592, 666, 1440, 593, 594,
	595, 596, 0, 598, 599, 1441, 1442, 600, 601, 602,
	604, 605, 603, 606, 1443, 607, 1444, 0, 608, 609,
	610, 667, 668, 669, 1445, 612, 611, 613, 670, 1446,
	614, 1447, 1448, 1449, 1450, 615, 616, 671, 617, 618,
	619, 0, 1366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4203, 271,
	273, 272, 274, 275, 276, 277, 1371, 278, 279, 1372,
	1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 1380, 625, 290, 291, 292,
	293, 294, 295, 1381, 1382, 0, 296, 626, 627, 628,
	1383, 297, 298, 629, 1384, 1313, 1385, 299, 300, 301,
	302, 303, 304, 305, 0, 1386, 307, 308, 309, 306,
	310, 1387, 311, 0, 312, 313, 314, 315, 316, 317,
	1388, 318, 319, 320, 1170, 321, 322, 323, 1389, 1390,
	1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 1396, 333, 330, 331, 1397, 334,
	332, 335, 1398, 336, 337, 338, 1399, 1400, 339, 340,
	341, 1401, 342, 343, 1402, 344, 345, 346, 1403, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 1404, 268, 1405, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	1406, 365, 366, 1407, 1408, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1409,
	378, 638, 1410, 639, 379, 1411, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 1412, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1413, 1172, 395, 643, 644, 1414, 645, 1415,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1416,
	409, 411, 410, 1417, 412, 647, 1177, 413, 414, 1178,
	1418, 415, 0, 0, 0, 416, 417, 420, 1419, 1420,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1421, 270, 1181, 460, 461,
	1422, 648, 462, 649, 464, 465, 1423, 0, 466, 0,
	1424, 1425, 468, 469, 470, 1426, 1427, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1428, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 1429, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 1430, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1431, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1432, 546, 547, 545, 548, 549, 550, 1433,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 1434, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 1435, 578, 579, 0, 575, 566,
	1436, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	1437, 588, 661, 662, 663, 664, 1438, 597, 1439, 589,
	590, 591, 665, 592, 666, 1440, 593, 594, 595, 596,
	0, 598, 599, 1441, 1442, 600, 601, 602, 604, 605,
	603, 606, 1443, 607, 1444, 0, 608, 609, 610, 667,
	668, 669, 1445, 612, 611, 613, 670, 1446, 614, 1447,
	1448, 1449, 1450, 615, 616, 671, 617, 618, 619, 0,
	1366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4078, 271, 273, 272,
	274, 275, 276, 277, 1371, 278, 279, 1372, 1373, 1374,
	0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 1380, 625, 290, 291, 292, 293, 294,
	295, 1381, 1382, 0, 296, 626, 627, 628, 1383, 297,
	298, 629, 1384, 1313, 1385, 299, 300, 301, 302, 303,
	304, 305, 0, 1386, 307, 308, 309, 306, 310, 1387,
	311, 0, 312, 313, 314, 315, 316, 317, 1388, 318,
	319, 320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391,
	1393, 1394, 1395, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 1396, 333, 330, 331, 1397, 334, 332, 335,
	1398, 336, 337, 338, 1399, 1400, 339, 340, 341, 1401,
	342, 343, 1402, 344, 345, 346, 1403, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 1404, 268, 1405, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 1406, 365,
	366, 1407, 1408, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1409, 378, 638,
	1410, 639, 379, 1411, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 1412, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1413, 1172, 395, 643, 644, 1414, 645, 1415, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1416, 409, 411,
	410, 1417, 412, 647, 1177, 413, 414, 1178, 1418, 415,
	0, 0, 0, 416, 417, 420, 1419, 1420, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1421, 270, 1181, 460, 461, 1422, 648,
	462, 649, 464, 465, 1423, 0, 466, 0, 1424, 1425,
	468, 469, 470, 1426, 1427, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1428, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 1429,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 1430, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1431, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1432, 546, 547, 545, 548, 549, 550, 1433, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 1434, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 1435, 578, 579, 0, 575, 566, 1436, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 1437, 588,
	661, 662, 663, 664, 1438, 597, 1439, 589, 590, 591,
	665, 592, 666, 1440, 593, 594, 595, 596, 0, 598,
	599, 1441, 1442, 600, 601, 602, 604, 605, 603, 606,
	1443, 607, 1444, 0, 608, 609, 610, 667, 668, 669,
	1445, 612, 611, 613, 670, 1446, 614, 1447, 1448, 1449,
	1450, 615, 616, 671, 617, 618, 619, 0, 1366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3936, 271, 273, 272, 274, 275,
	276, 277, 1371, 278, 279, 1372, 1373, 1374, 0, 1375,
	620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 1380, 625, 290, 291, 292, 293, 294, 295, 1381,
	1382, 0, 296, 626, 627, 628, 1383, 297, 298, 629,
	1384, 1313, 1385, 299, 300, 301, 302, 303, 304, 305,
	0, 1386, 307, 308, 309, 306, 310, 1387, 311, 0,
	312, 313, 314, 315, 316, 317, 1388, 318, 319, 320,
	1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394,
	1395, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	1396, 333, 330, 331, 1397, 334, 332, 335, 1398, 336,
	337, 338, 1399, 1400, 339, 340, 341, 1401, 342, 343,
	1402, 344, 345, 346, 1403, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 1404, 268, 1405, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 1406, 365, 366, 1407,
	1408, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1409, 378, 638, 1410, 639,
	379, 1411, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 1412, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1413, 1172,
	395, 643, 644, 1414, 645, 1415, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1416, 409, 411, 410, 1417,
	412, 647, 1177, 413, 414, 1178, 1418, 415, 0, 0,
	0, 416, 417, 420, 1419, 1420, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1421, 270, 1181, 460, 461, 1422, 648, 462, 649,
	464, 465, 1423, 0, 466, 0, 1424, 1425, 468, 469,
	470, 1426, 1427, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1428, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 1429, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 1430, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1431, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1432, 546,
	547, 545, 548, 549, 550, 1433, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 1434, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	1435, 578, 579, 0, 575, 566, 1436, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 1437, 588, 661, 662,
	663, 664, 1438, 597, 1439, 589, 590, 591, 665, 592,
	666, 1440, 593, 594, 595, 596, 0, 598, 599, 1441,
	1442, 600, 601, 602, 604, 605, 603, 606, 1443, 607,
	1444, 0, 608, 609, 610, 667, 668, 669, 1445, 612,
	611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615,
	616, 671, 617, 618, 619, 0, 1366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3643, 271, 273, 272, 274, 275, 276, 277,
	1371, 278, 279, 1372, 1373, 1374, 0, 1375, 620, 1376,
	1377, 1378, 1379, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1380,
	625, 290, 291, 292, 293, 294, 295, 1381, 1382, 0,
	296, 626, 627, 628, 1383, 297, 298, 629, 1384, 1313,
	1385, 299, 300, 301, 302, 303, 304, 305, 0, 1386,
	307, 308, 309, 306, 310, 1387, 311, 0, 312, 313,
	314, 315, 316, 317, 1388, 318, 319, 320, 1170, 321,
	322, 323, 1389, 1390, 1392, 1391, 1393, 1394, 1395, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1396, 333,
	330, 331, 1397, 334, 332, 335, 1398, 336, 337, 338,
	1399, 1400, 339, 340, 341, 1401, 342, 343, 1402, 344,
	345, 346, 1403, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1404,
	268, 1405, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1406, 365, 366, 1407, 1408, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1409, 378, 638, 1410, 639, 379, 1411,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 1412, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1413, 1172, 395, 643,
	644, 1414, 645, 1415, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1416, 409, 411, 410, 1417, 412, 647,
	1177, 413, 414, 1178, 1418, 415, 0, 0, 0, 416,
	417, 420, 1419, 1420, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1421,
	270, 1181, 460, 461, 1422, 648, 462, 649, 464, 465,
	1423, 0, 466, 0, 1424, 1425, 468, 469, 470, 1426,
	1427, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1428,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1429, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1430, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1431, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1432, 546, 547, 545,
	548, 549, 550, 1433, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1434, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1435, 578,
	579, 0, 575, 566, 1436, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1437, 588, 661, 662, 663, 664,
	1438, 597, 1439, 589, 590, 591, 665, 592, 666, 1440,
	593, 594, 595, 596, 0, 598, 599, 1441, 1442, 600,
	601, 602, 604, 605, 603, 606, 1443, 607, 1444, 0,
	608, 609, 610, 667, 668, 669, 1445, 612, 611, 613,
	670, 1446, 614, 1447, 1448, 1449, 1450, 615, 616, 671,
	617, 618, 619, 0, 1366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3472, 271, 273, 272, 274, 275, 276, 277, 1371, 278,
	279, 1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378,
	1379, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1380, 625, 290,
	291, 292, 293, 294, 295, 1381, 1382, 0, 296, 626,
	627, 628, 1383, 297, 298, 629, 1384, 1313, 1385, 299,
	300, 301, 302, 303, 304, 305, 0, 1386, 307, 308,
	309, 306, 310, 1387, 311, 0, 312, 313, 314, 315,
	316, 317, 1388, 318, 319, 320, 1170, 321, 322, 323,
	1389, 1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1396, 333, 330, 331,
	1397, 334, 332, 335, 1398, 336, 337, 338, 1399, 1400,
	339, 340, 341, 1401, 342, 343, 1402, 344, 345, 346,
	1403, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1404, 268, 1405,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1406, 365, 366, 1407, 1408, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1409, 378, 638, 1410, 639, 379, 1411, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	1412, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1413, 1172, 395, 643, 644, 1414,
	645, 1415, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1416, 409, 411, 410, 1417, 412, 647, 1177, 413,
	414, 1178, 1418, 415, 0, 0, 0, 416, 417, 420,
	1419, 1420, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1421, 270, 1181,
	460, 461, 1422, 648, 462, 649, 464, 465, 1423, 0,
	466, 0, 1424, 1425, 468, 469, 470, 1426, 1427, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1428, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1429, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1430,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1431, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1432, 546, 547, 545, 548, 549,
	550, 1433, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1434,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1435, 578, 579, 0,
	575, 566, 1436, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1437, 588, 661, 662, 663, 664, 1438, 597,
	1439, 589, 590, 591, 665, 592, 666, 1440, 593, 594,
	595, 596, 0, 598, 599, 1441, 1442, 600, 601, 602,
	604, 605, 603, 606, 1443, 607, 1444, 0, 608, 609,
	610, 667, 668, 669, 1445, 612, 611, 613, 670, 1446,
	614, 1447, 1448, 1449, 1450, 615, 616, 671, 617, 618,
	619, 0, 1366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2546, 271,
	273, 272, 274, 275, 276, 277, 1371, 278, 279, 1372,
	1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 1380, 625, 290, 291, 292,
	293, 294, 295, 1381, 1382, 0, 296, 626, 627, 628,
	1383, 297, 298, 629, 1384, 1313, 1385, 299, 300, 301,
	302, 303, 304, 305, 0, 1386, 307, 308, 309, 306,
	310, 1387, 311, 0, 312, 313, 314, 315, 316, 317,
	1388, 318, 319, 320, 1170, 321, 322, 323, 1389, 1390,
	1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 1396, 333, 330, 331, 1397, 334,
	332, 335, 1398, 336, 337, 338, 1399, 1400, 339, 340,
	341, 1401, 342, 343, 1402, 344, 345, 346, 1403, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 1404, 268, 1405, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	1406, 365, 366, 1407, 1408, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1409,
	378, 638, 1410, 639, 379, 1411, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 1412, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1413, 1172, 395, 643, 644, 1414, 645, 1415,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1416,
	409, 411, 410, 1417, 412, 647, 1177, 413, 414, 1178,
	1418, 415, 0, 0, 0, 416, 417, 420, 1419, 1420,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1421, 270, 1181, 460, 461,
	1422, 648, 462, 649, 464, 465, 1423, 0, 466, 0,
	1424, 1425, 468, 469, 470, 1426, 1427, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1428, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 1429, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 1430, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1431, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1432, 546, 547, 545, 548, 549, 550, 1433,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 1434, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 1435, 578, 579, 0, 575, 566,
	1436, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	1437, 588, 661, 662, 663, 664, 1438, 597, 1439, 589,
	590, 591, 665, 592, 666, 1440, 593, 594, 595, 596,
	0, 598, 599, 1441, 1442, 600, 601, 602, 604, 605,
	603, 606, 1443, 607, 1444, 0, 608, 609, 610, 667,
	668, 669, 1445, 612, 611, 613, 670, 1446, 614, 1447,
	1448, 1449, 1450, 615, 616, 671, 617, 618, 619, 1462,
	0, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2192, 0, 271, 273,
	272, 274, 275, 276, 277, 1371, 278, 279, 1372, 1373,
	1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1380, 625, 290, 291, 292, 293,
	294, 295, 1381, 1382, 0, 296, 626, 627, 628, 1383,
	297, 298, 629, 1384, 1313, 1385, 299, 300, 301, 302,
	303, 304, 305, 0, 1386, 307, 308, 309, 306, 310,
	1387, 311, 0, 312, 313, 314, 315, 316, 317, 1388,
	318, 319, 320, 1170, 321, 322, 323, 1389, 1390, 1392,
	1391, 1393, 1394, 1395, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1396, 333, 330, 331, 1397, 334, 332,
	335, 1398, 336, 337, 338, 1399, 1400, 339, 340, 341,
	1401, 342, 343, 1402, 344, 345, 346, 1403, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1404, 268, 1405, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1406,
	365, 366, 1407, 1408, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1409, 378,
	638, 1410, 639, 379, 1411, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 1412, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1413, 1172, 395, 643, 644, 1414, 645, 1415, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1416, 409,
	411, 410, 1417, 412, 647, 1177, 413, 414, 1178, 1418,
	415, 0, 0, 0, 416, 417, 420, 1419, 1420, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1421, 270, 1181, 460, 461, 1422,
	648, 462, 649, 464, 465, 1423, 0, 466, 0, 1424,
	1425, 468, 469, 470, 1426, 1427, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1428, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1429, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1430, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1431, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1432, 546, 547, 545, 548, 549, 550, 1433, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1434, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1435, 578, 579, 0, 575, 566, 1436,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1437,
	588, 661, 662, 663, 664, 1438, 597, 1439, 589, 590,
	591, 665, 592, 666, 1440, 593, 594, 595, 596, 0,
	598, 599, 1441, 1442, 600, 601, 602, 604, 605, 603,
	606, 1443, 607, 1444, 0, 608, 609, 610, 667, 668,
	669, 1445, 612, 611, 613, 670, 1446, 614, 1447, 1448,
	1449, 1450, 615, 616, 671, 617, 618, 619, 1363, 0,
	1366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 1371, 278, 279, 1372, 1373, 1374,
	0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 1380, 625, 290, 291, 292, 293, 294,
	295, 1381, 1382, 0, 296, 626, 627, 628, 1383, 297,
	298, 629, 1384, 1313, 1385, 299, 300, 301, 302, 303,
	304, 305, 0, 1386, 307, 308, 309, 306, 310, 1387,
	311, 0, 312, 313, 314, 315, 316, 317, 1388, 318,
	319, 320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391,
	1393, 1394, 1395, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 1396, 333, 330, 331, 1397, 334, 332, 335,
	1398, 336, 337, 338, 1399, 1400, 339, 340, 341, 1401,
	342, 343, 1402, 344, 345, 346, 1403, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 1404, 268, 1405, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 1406, 365,
	366, 1407, 1408, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1409, 378, 638,
	1410, 639, 379, 1411, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 1412, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1413, 1172, 395, 643, 644, 1414, 645, 1415, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1416, 409, 411,
	410, 1417, 412, 647, 1177, 413, 414, 1178, 1418, 415,
	0, 0, 0, 416, 417, 420, 1419, 1420, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1421, 270, 1181, 460, 461, 1422, 648,
	462, 649, 464, 465, 1423, 0, 466, 0, 1424, 1425,
	468, 469, 470, 1426, 1427, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1428, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 1429,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 1430, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1431, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1432, 546, 547, 545, 548, 549, 550, 1433, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 1434, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 1435, 578, 579, 0, 575, 566, 1436, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 1437, 588,
	661, 662, 663, 664, 1438, 597, 1439, 589, 590, 591,
	665, 592, 666, 1440, 593, 594, 595, 596, 0, 598,
	599, 1441, 1442, 600, 601, 602, 604, 605, 603, 606,
	1443, 607, 1444, 0, 608, 609, 610, 667, 668, 669,
	1445, 612, 611, 613, 670, 1446, 614, 1447, 1448, 1449,
	1450, 615, 616, 671, 617, 618, 619, 1366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1371, 278, 279, 1372, 1373, 1374, 0, 1375, 620,
	1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	1380, 625, 290, 291, 292, 293, 294, 295, 1381, 1382,
	0, 296, 626, 627, 628, 1383, 297, 298, 629, 1384,
	1313, 1385, 299, 300, 301, 302, 303, 304, 305, 0,
	1386, 307, 308, 309, 306, 310, 1387, 311, 0, 312,
	313, 314, 315, 316, 317, 1388, 318, 319, 320, 1170,
	321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394, 1395,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 1396,
	333, 330, 331, 1397, 334, 332, 335, 1398, 336, 337,
	338, 1399, 1400, 339, 340, 341, 1401, 342, 343, 1402,
	344, 345, 346, 1403, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	1404, 268, 1405, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 1406, 365, 366, 1407, 1408,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1409, 378, 638, 1410, 639, 379,
	1411, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 1412, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1413, 1172, 395,
	643, 644, 1414, 645, 1415, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1416, 409, 411, 410, 1417, 412,
	647, 1177, 413, 414, 1178, 1418, 415, 0, 0, 0,
	416, 417, 420, 1419, 1420, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1421, 270, 1181, 460, 461, 1422, 648, 462, 649, 464,
	465, 1423, 0, 466, 0, 1424, 1425, 468, 469, 470,
	1426, 1427, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1428, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 1429, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 1430, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1431, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1432, 546, 547,
	545, 548, 549, 550, 1433, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 1434, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 1435,
	578, 579, 0, 575, 566, 1436, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 1437, 588, 661, 662, 663,
	664, 1438, 597, 1439, 589, 590, 591, 665, 592, 666,
	1440, 593, 594, 595, 596, 0, 598, 599, 1441, 1442,
	600, 601, 602, 604, 605, 603, 606, 1443, 607, 1444,
	0, 608, 609, 610, 667, 668, 669, 1445, 612, 611,
	613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615, 616,
	671, 617, 618, 619, 2521, 0, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	2518, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	2519, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 2517, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	2520, 0, 0, 0, 0, 0, 0, 1089, 2516, 0,
	1049, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 230, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	232, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 1585,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 224, 615, 616, 671, 617, 618, 619, 1063,
	0, 225, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 1838, 1836, 0, 0, 1087, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 230, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 232, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 1585, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 224, 615, 616, 671,
	617, 618, 619, 1063, 0, 225, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1838, 3129, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 232, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 1585, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	224, 615, 616, 671, 617, 618, 619, 1063, 0, 225,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 1838, 1836, 0, 0, 1087, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 2650, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 2655, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 2651, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	2652, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 2566, 1087,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 2564, 0, 2563, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 2561, 0,
	2560, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 2558, 0, 2557, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1089,
	2555, 0, 1680, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 1679, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 1052, 1087,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 1067, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 1089, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	4518, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 1067, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 2398, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 2397, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	1067, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 4278, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 1067, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 3898, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1906, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 3621, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1906, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 2655, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 1836, 0, 2660, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	2658, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 2646, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 2634, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 2632, 1087,
	2623, 2630, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 2626,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 2627, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 2628,
	430, 2625, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 2629,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 2624, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 2620, 1087, 2623, 2630, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 2626, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 2627, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 2628, 430, 2625, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 2629, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 2624, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 1844,
	0, 1089, 0, 0, 0, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	2377, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	2324, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 1685, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 1615, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 1610, 1087,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 1601, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	1596, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 1508, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1507, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 1502, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1501, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 1495, 1087,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 1315, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 1089, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 4564,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 4563, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 4562, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 4564, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 4563, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 4222, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 4223, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 4221, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079,
	3096, 3097, 1088, 1089, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 3094, 3095, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 1089, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 2385, 2386, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 0, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 2642, 0, 0, 0, 0, 0, 0,
	2640, 2641, 271, 273, 272, 274, 275, 276, 277, 1089,
	278, 279, 0, 1087, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 0, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	3089, 3090, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 2088, 271,
	273, 272, 274, 275, 276, 277, 1089, 278, 279, 0,
	1087, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 0, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 4564, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 0, 1132, 0, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 0, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 4563, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1049,
	0, 1227, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 1087, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 1128, 0, 296, 626, 627, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1213, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 270, 1181, 460, 461, 0,
	1133, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	1219, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 1221, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 0, 575, 566, 232,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 1585, 668,
	669, 0, 612, 611, 613, 670, 1227, 614, 0, 0,
	0, 224, 615, 616, 671, 617, 618, 619, 0, 0,
	225, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 0,
	1217, 0, 1930, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 1128, 0,
	296, 626, 627, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1213, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	270, 1181, 460, 461, 0, 1133, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 1219, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 1221, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 230, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 0, 575, 566, 232, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 1585, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 224, 615, 616, 671,
	617, 618, 619, 0, 0, 225, 0, 0, 0, 3253,
	0, 1227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1217, 0, 1930, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 1128, 0, 296, 626, 627, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1213, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 270, 1181, 460, 461, 0,
	1133, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	1219, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 1221, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 1209,
	0, 1227, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	1217, 0, 1215, 1129, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 1128, 0, 296, 626, 627, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1213, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 270, 1181, 460, 461, 0,
	1133, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	1219, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 1221, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1227, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 0,
	1217, 0, 1215, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 1128, 0,
	296, 626, 627, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1213, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	270, 1181, 460, 461, 0, 1133, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 1219, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 1221, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1227, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 0, 1217, 0, 1215, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 1128, 0, 296, 626, 627, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 270, 1181, 460, 461, 0,
	1133, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1227, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 0,
	0, 0, 4051, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 1128, 0,
	296, 626, 627, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	270, 1181, 460, 461, 0, 1133, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 1221, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 2489, 2490, 2491, 2508, 2509, 2510, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 2511, 0, 620, 0, 1828, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 1813, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 2501, 0, 307, 308, 309,
	306, 310, 0, 311, 2497, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 2502,
	2503, 2504, 2505, 361, 362, 363, 635, 0, 0, 2496,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 2506, 2507, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 2499, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	2500, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 1812, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 1049, 0, 1308, 2486, 2487, 2488, 2512, 2498,
	2492, 0, 2494, 2495, 2493, 2480, 2481, 2482, 2483, 2484,
	2485, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1313, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1172, 395, 643, 644, 0,
	645, 0, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 0, 1181,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 230, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 232, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 1585, 668, 669, 0, 612, 611, 613, 670, 1582,
	614, 1308, 0, 0, 224, 615, 616, 671, 617, 618,
	619, 0, 0, 225, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 186, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 232,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 1585, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 224, 615, 616, 671, 617, 618, 619, 1308, 1307,
	225, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 186, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1308, 1307, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 1607,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1313, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 0,
	1181, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1308, 1307, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 3538, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 2270, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1308,
	2184, 0, 0, 0, 0, 2185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 1607, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 2183, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1308, 1307, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	1607, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1227, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 0, 0, 0, 1591, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 1128, 0, 296, 626, 627, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 270, 1181, 460, 461, 0,
	1133, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1049, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 230, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 232, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 1585, 668, 669, 0, 612,
	611, 613, 670, 265, 614, 0, 0, 0, 224, 615,
	616, 671, 617, 618, 619, 0, 0, 225, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 186,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	265, 3002, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 1944, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 265, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 4720, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 3488, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1579, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	265, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 2990, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 265, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 3646, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	889, 614, 794, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 2261, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 801, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 887, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	799, 580, 581, 582, 583, 584, 800, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 792, 614, 794,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 804, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 801, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 799, 580, 581,
	582, 583, 584, 800, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 1983,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 0, 1989, 0, 288, 1979,
	289, 1995, 0, 2002, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 2005, 2006, 0, 0, 297, 298,
	0, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 1152, 329, 1993,
	1992, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 0,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 1991, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 2000, 2001, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 0, 380, 381, 382, 383, 384, 0, 0,
	0, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 1986, 1987, 0, 1982, 0, 397, 398, 1174,
	0, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 0, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 0, 462,
	1994, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 0, 1182, 473, 1183,
	0, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 1976, 486, 487, 488, 1977,
	489, 490, 491, 0, 492, 0, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1990,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 0, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1988, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 2004, 569, 570, 571, 572, 0, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1996,
	1997, 1998, 1999, 0, 597, 0, 589, 590, 591, 0,
	592, 0, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 0, 1980, 2003, 0,
	612, 611, 613, 0, 0, 614, 0, 0, 794, 0,
	615, 616, 0, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 1970, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 801, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 799, 580, 581, 582,
	583, 584, 800, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 794, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 804, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 801, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 2304,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 2305, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 799, 580, 581, 582,
	583, 584, 800, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 2306, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 2053, 614, 1308, 2020, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 804, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1313, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 2017, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 0,
	1181, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 2018, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	2014, 614, 1308, 2020, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 2017, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 2018,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 794, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 801, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 2009, 541, 542,
	543, 544, 0, 2010, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	799, 580, 581, 582, 583, 584, 800, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 2008, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 794, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 804, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 801, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 1961, 541, 542,
	543, 544, 0, 1962, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	799, 580, 581, 582, 583, 584, 800, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 1960, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 1308,
	2020, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 804, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 2017, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 2018, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1308, 1307, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 3837, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1308, 1307, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1313, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 0, 1181, 460,
	461, 3459, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1635, 0, 1308, 1307, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 804, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 1634, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	1633, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 1632, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1553,
	0, 1308, 1307, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1552, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1513, 0,
	1308, 1307, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1313, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 0, 1181, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1481, 0, 1308,
	1307, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1480, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1302, 0, 1308, 1307,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1301, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1308, 1307, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1313, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 0,
	1181, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 1308, 2020, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 2060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 1308,
	1307, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 1308,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 2809, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 2806, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 2813, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 3015, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	2812, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 3012, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 3014, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 3011, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 2811, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 3013, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 2809, 297, 298,
	629, 0, 0, 2803, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 2806, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 2813, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	2812, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 2802, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 2811, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 2810, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1708, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	1707, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 1711, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 1709, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 1710, 611, 613,
	670, 1455, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1457, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 1219, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1452, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1454,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1219,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1359, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1361, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 1219, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 703, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 702, 276, 277, 692, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 695, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 696, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 697, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 691,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 692, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 695,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 696, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 697, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	1219, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 3407, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 2960, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2959, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 2276, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 2217, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	2224, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 2223, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 2210, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 2212, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 2180, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 1219, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1557, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1556, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1472, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1465, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1467,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1292, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1291, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1282, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1281, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1279,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1278, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1274, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1273, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 673, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	256, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	695, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 696,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 697, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 2313, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 2311, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 2309, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 2230, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 2039, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 2033, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 876, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 875, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 874, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 3015, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 4121, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 760, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1329, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 1327, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 761, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 757, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 1330, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 756, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 760, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1329, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	1327, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 761,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 757, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 1330, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 756, 662, 663, 664, 0, 597, 0,
	589, 1328, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 682, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 681, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 680, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 265, 3002, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 265, 4131, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 4393, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 4028, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 3803, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 2695, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 265, 3002, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 2999, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 2286, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 2274, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 760, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 750, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 761, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	757, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	1590, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 756, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1563, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1562, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1547, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1545, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1540, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1517, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1515, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1478, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1460, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1297, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1296, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1288,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1287, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 1241, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 766, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 760, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 750, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 748, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 749, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 761, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 751, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 757, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 752, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 756, 662,
	663, 664, 0, 597, 0, 589, 754, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 742, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 743, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	705, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 699, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 677, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 3508, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 3445, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 3423, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 3420, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 3372, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 3370, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 3355, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 2970, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 743, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	2248, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 0, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1259, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 1192, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 0, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 0, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 0, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 0, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 1794, 1788, 1759, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 1779, 0,
	0, 0, 0, 1807, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 1798,
	0, 0, 1808, 1765, 0, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	1798, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	1787, 1789, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 1780, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 1794, 1788, 0, 0,
	1799, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 1781, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	1813, 1812, 0, 0, 0, 0, 0, 1794, 1788, 1759,
	0, 1799, 0, 0, 0, 1760, 0, 0, 0, 1779,
	0, 0, 0, 0, 1807, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 1812, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 4497, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	0, 0, 0, 1765, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 4493,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	1798, 0, 0, 1808, 1765, 0, 0, 0, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1787, 1789, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1780,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 1794, 1788, 0,
	0, 1799, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1781, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 1813, 1812, 0, 0, 0, 0, 0, 1794, 1788,
	1759, 0, 1799, 0, 0, 0, 1760, 0, 0, 0,
	1779, 0, 0, 0, 0, 1807, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 1812, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 4414,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 0, 1765, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	4379, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 1798, 0, 0, 1808, 1765, 0, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 1798, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 1787, 1789, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1780, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 1794, 1788,
	0, 0, 1799, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1781, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 1813, 1812, 0, 0, 0, 0, 0, 1794,
	1788, 1759, 0, 1799, 0, 0, 0, 1760, 0, 0,
	0, 1779, 0, 0, 0, 0, 1807, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1812, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	4378, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 4206, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 1798, 0, 0, 1808, 1765, 0, 0, 0,
	0, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 1798, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 1787, 1789, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 1780, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 1794,
	1788, 0, 0, 1799, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 1781, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 1813, 1812, 0, 0, 0, 0, 0,
	1794, 1788, 1759, 0, 1799, 0, 0, 0, 1760, 0,
	0, 0, 1779, 0, 0, 0, 0, 1807, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1812, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 4047, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 3983, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 1798, 0, 0, 1808, 1765, 0, 0,
	0, 0, 0, 1787, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 1798, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 1780, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	1794, 1788, 0, 0, 1799, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1781, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 1813, 1812, 0, 0, 0, 0,
	0, 1794, 1788, 1759, 0, 1799, 0, 0, 0, 1760,
	0, 0, 0, 1779, 0, 0, 0, 0, 1807, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1812, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 3982, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 3981, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 1798, 0, 0, 1808, 1765, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 1798, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 1787, 1789, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1780, 1805, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 1794, 1788, 0, 0, 1799, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 1781,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 1813, 1812, 0, 0, 0,
	0, 0, 1794, 1788, 1759, 0, 1799, 0, 0, 0,
	1760, 0, 0, 0, 1779, 0, 0, 0, 0, 1807,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 1812, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 3651, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 0, 1765, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 3171, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 1798, 0, 0, 1808, 1765,
	0, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 1805, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 1798, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 1787, 1789, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 1780, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 1794, 1788, 0, 0, 1799, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	1781, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 1813, 1812, 0, 0,
	0, 0, 0, 1794, 1788, 1759, 0, 1799, 0, 0,
	0, 1760, 0, 0, 0, 1779, 0, 0, 0, 0,
	1807, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 1812, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 3170, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 3169, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 1798, 0, 0, 1808,
	1765, 0, 0, 0, 0, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 1798, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1787, 1789, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1780, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	1758, 1781, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 1794, 1788, 0, 0, 0, 0, 0, 1799, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 1812,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 3168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 3133, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 0, 1765, 4634,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1788, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 1798, 0, 0, 1808, 0,
	0, 1807, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 1804, 0, 1805, 0, 0, 1759, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 1794, 1788, 0, 0, 0, 0, 3104, 0,
	1760, 1782, 1783, 1784, 1785, 1795, 0, 0, 0, 1807,
	0, 1765, 0, 3233, 0, 0, 1810, 3232, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 4633, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 1798, 0,
	0, 1808, 0, 0, 1776, 0, 0, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 1781,
	0, 0, 0, 3105, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 0, 1795, 1808,
	0, 0, 0, 0, 0, 0, 1787, 1789, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	1796, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 1786, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 2668, 0, 0, 0, 0, 0,
	0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1799,
	0, 0, 0, 1794, 1788, 0, 0, 0, 2667, 0,
	0, 1760, 0, 0, 0, 0, 1795, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 1796, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 1757, 1758, 1780, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 1795, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 1794, 1788, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 1813, 0, 0,
	0, 0, 0, 1765, 0, 0, 1759, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	1798, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 1780,
	1765, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	1808, 0, 1806, 0, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 1046, 0, 0, 1804, 0, 1805, 0, 0, 0,
	0, 1810, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 1788, 0,
	0, 0, 0, 1786, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 1806,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	1779, 1799, 0, 0, 0, 0, 0, 0, 1810, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	3239, 0, 0, 0, 1797, 0, 0, 0, 1799, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 1812,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3632, 0, 0, 0, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1788, 0, 0, 0, 3234, 0, 0,
	1760, 0, 0, 0, 1786, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 1799, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 1798, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 1810, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 1788, 0, 0, 0, 3172, 1786,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 1782, 1783, 1784, 1785, 1813, 0, 0,
	0, 0, 0, 1765, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 1799, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 1808, 0, 0, 0, 0, 1812, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 1780,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	1808, 0, 1806, 0, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 1804, 0, 1805, 0, 0, 0,
	0, 1810, 0, 1774, 1775, 0, 0, 0, 0, 0,
	3199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 1788, 0,
	0, 0, 0, 1786, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 1806,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	1779, 1799, 0, 0, 0, 0, 0, 0, 1810, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 1799, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 1812,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 1786, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 1799, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 1798, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767,
}

var sqlPact = [...]int{
	10737, -1000, -1000, -1000, -1000, 173, -1000, -1000, 172, 171,
	168, 167, 165, 164, 162, 161, 160, 159, 157, -1000,
	-1000, -1000, -1000, -1000, -1000, 156, -1000, -1000, 155, -1000,
	154, 153, 152, -1000, -1000, 145, -1000, 143, -1000, -1000,
	-1000, -1000, 142, 141, 140, 92328, 91781, 92868, 2263, 113002,
	99376, 1999, 83057, 112455, 82510, 111908, 2108, 10144, 111361, 2682,
	138, -1000, 110814, 137, 136, 131, -1000, 110267, -1000, 1803,
	-1000, 128, -1000, 6167, 67705, 126, 125, 124, 2179, 123,
	-1000, 122, 121, -1000, -1000, 119, -1000, 12333, 1495, -1000,
	118, 116, -1000, 766, 97195, 114, 113, 2288, 110, 103,
	67158, 101, 100, 2232, 2782, -1000, -1000, 1985, -1000, -1000,
	98, 97, 96, 95, 94, 92, 91, 90, 89, 83,
	82, -1000, 81, 80, 79, 76, 74, -1000, 72, 71,
	70, -1000, 69, -1000, 67, 66, 65, 63, 62, 61,
	60, 59, 57, 56, 53, 52, 44, 43, 13211, -1000,
	-1000, 1856, 1674, 1672, 1670, 1665, 1657, 990, 42, 41,
	40, 37, 36, 35, 34, 33, 27, 26, 25, 23,
	22, 20, 17, 16, 15, 135, 14, 13, 10, 9,
	8, 7, 2, 2257, -1000, 1504, 915, 31976, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 120022, 113542, 1, -105, -2, -1000,
	3225, 1051, 55637, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 501, 2084, 772, -1000, -1000, -1000,
	109727, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2253,
	-70, -1000, 1952, -1000, -1000, -1000, -1000, -1000, 771, -1000,
	2248, 270, 2169, -1000, -1000, -1000, 3240, 2386, 3614, 3606,
	3603, 3599, 3597, 119482, 1735, 3596, 2456, 3595, 3594, 3590,
	3589, 3588, 3585, 3584, -1000, 91234, 1046, 90687, 90140, 3270,
	109187, 89593, 108640, 76504, 47702, 755, 3239, -1000, -1000, -1000,
	-1000, -1000, -1000, 113542, -1000, 1044, -1000, -1000, 3577, 3575,
	2044, 760, 98829, -1000, 1943, -1000, 933, 33698, -1000, 1315,
	-1000, 33698, 247, -1000, -1000, -1000, -1000, -1000, -1000, 3573,
	3572, 3571, 3570, 3569, -1000, -1000, 81963, 25036, 81416, 80869,
	108093, 24477, 89046, 88499, 3567, 3566, 3565, 3564, 107546, 75945,
	1042, 1428, -1000, -1000, -1000, -1000, -1000, -1000, -25, 73709,
	3369, 113542, -1000, 244, -1000, -1000, -1000, -1000, -1000, -1000,
	47116, 607, 46530, 679, 45944, 637, -1000, -1000, -1000, -1000,
	75386, -1000, 106999, 2372, 3563, 3561, 1135, 3560, 3154, 1718,
	3559, 1780, 1219, 3556, 3555, 3553, 3548, 3547, 3546, 3545,
	1425, 106452, 2860, 1433, 105905, 1684, 74827, 1041, 87952, 92868,
	2544, 105358, 1390, 1384, -1000, -1000, -1000, -1000, 2986, 2779,
	2778, 1347, -1000, -1000, -1000, -1000, 58927, 8506, 5785, -1000,
	-1000, 11474, 104811, 61712, 92868, 92868, -1000, -1000, -1000, -1000,
	-1000, 45358, 526, 44772, 725, -1000, -1000, 59484, 2806, -1000,
	-1000, -1000, -1000, 44186, 417, 43600, 713, 113542, -1000, 2859,
	1820, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2315, 1636, 3408,
	2633, 74268, 2011, 1418, 3207, 2984, 2983, 1512, 2982, 3543,
	2528, 2970, 2963, 2957, 2951, 2950, 1650, 2502, 411, 2501,
	31390, 2834, 1658, 43014, 1499, 1508, 2944, 2934, 3422, 1940,
	1927, 2015, 80322, 3542, 3539, 3176, 2933, 2918, 2693, 2911,
	-1000, 2805, 1424, -1000, -1000, -1000, -1000, 1463, -1000, -1000,
	-1000, -1000, 83597, -1000, -1000, 1280, -1000, -1000, 1280, -1000,
	-1000, -1000, -1000, -1000, 1237, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1504, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2008, -1000, 2033,
	-1000, -1000, 2445, 3156, 3156, 3156, 3238, 466, 455, -1000,
	135, -1000, -1000, 126764, -1000, -1000, 48276, 48276, 48276, 48276,
	48276, 48276, 48276, 48276, 2120, -1000, 758, -1000, -1000, 802,
	-1000, 754, 663, 603, -1000, -1000, -1000, -1000, -1000, -1000,
	752, -1000, -1000, -1000, -1000, -1000, -1000, 3369, -1000, 27886,
	-1000, -1000, -1000, 460, 751, 48276, -1000, -1000, 3437, 3436,
	1029, -1000, 243, 957, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2856, 750, 742, -1000,
	739, 732, 731, 730, 729, -1000, -1000, -1000, 720, 716,
	712, 710, 706, 704, 702, 700, -1000, 1965, -1000, -1000,
	-1000, -1000, -1000, -1000, 650, 643, 643, 643, -1000, 1036,
	-1000, -1000, -1000, 306, 641, 302, 640, 639, 636, -1000,
	697, 695, 688, 680, 678, 676, 675, 674, 670, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1035, -1000, -1000, -1000,
	-1000, -26, 113542, -1000, 501, -26, -1000, -1000, 667, -1000,
	36006, 36006, 36006, -1000, -1000, 2243, 48276, -1000, 2460, -1000,
	-20, -20, 878, 57272, -1000, 54522, 878, 310, 815, 63349,
	-1000, 2804, -1000, -1000, 666, 239, -1000, -1000, -1000, -1000,
	25593, 2803, 113542, 113542, 92868, 92868, 92868, 3532, 3049, 48276,
	-1000, -1000, 71508, 113542, 93408, -1000, -1000, 3354, 68245, 70968,
	113542, 2853, 70428, 3531, -1000, -1000, -1000, -1000, -1000, 3028,
	3530, 3529, 3528, -1000, 113542, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 217, 3008, -1000, -1000, 96648, 217, 3007, -1000,
	217, 3006, -1000, 96108, -1000, -1000, 2200, 3005, -1000, -1000,
	219, 3004, -1000, -1000, -1000, 218, 3001, -1000, -1000, 238,
	-97, 3000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 126764, -1000, -1000, -1000, 69881, -1000,
	3186, -1000, -1000, 113542, -1000, 48276, -1000, 3353, 1931, 77608,
	3287, -39, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2427,
	2417, 1124, 2277, -1000, 3059, 1361, -1000, 33698, 3123, -1000,
	-1000, -1000, 230, 25593, -1000, -1000, -1000, -1000, -1000, -1000,
	2251, 2999, 1405, -1000, 2275, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2025, 2988, -1000, 2049, 2981, 1968, -1000,
	-1000, 2146, -1000, 3170, -1000, -1000, 1639, 2979, -19, -1000,
	-1000, 2475, -1000, -1000, -1000, -1000, -1000, 2013, -1000, 984,
	2976, -1000, 87405, 61155, 59484, 73709, -30, -1000, -1000, -1000,
	-1000, -192, -1000, 23918, 126764, -1000, -1000, -1000, -1000, 1721,
	126764, 903, -1000, -1000, 2975, -1000, 126764, 897, -1000, -1000,
	2972, -1000, 2850, -1000, -1000, 2353, -1000, -1000, 3526, -1000,
	-1000, 3523, -1000, 3522, 3520, 3519, -1000, 1659, 1946, 3517,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86865, 2241,
	-1000, -1000, 85771, 2842, -1000, 2346, 3284, -1000, 86318, 1038,
	-1000, 984, 2336, -1000, 95568, 949, 2333, -1000, 3514, 3266,
	2578, 984, 2332, -1000, -1000, -1000, -1000, -1000, 1033, -1000,
	64981, -1000, 64981, -1000, 1556, -1000, 118942, -20, 92868, 3369,
	-1000, -43, -1000, -1000, -1000, 1051, -1000, 58380, -1000, 58380,
	98282, 77061, 974, 757, 66611, 126764, -1000, -1000, -1000, -1000,
	126764, -1000, -1000, -1000, -174, 2632, -1000, 77061, 60598, 126764,
	-1000, -1000, -1000, -1000, 126764, -1000, -1000, -1000, 77061, 85771,
	-1000, 104264, 85231, -1000, -1000, 1420, 2472, -1000, -1000, -1000,
	77061, 1309, 77061, 77061, 77061, -1000, 103717, -1000, -1000, 2002,
	1635, 3172, 2000, 92868, -1000, 1805, -1000, -1000, -1000, 3198,
	113542, -1000, -1000, 2836, -1000, 69334, 95028, -1000, 94488, -1000,
	93948, -1000, 92868, -1000, 92868, -1000, 3513, 3512, 3509, -1000,
	-1000, 3507, -1000, 3504, 3190, -1000, 3501, 42428, 126764, 3189,
	-1000, 3500, 3277, 2834, 126764, -1000, 2995, 1664, 1653, 113542,
	-1000, -1000, 113542, -1000, 113542, -1000, -1000, -1000, 1454, -1000,
	-1000, 2426, -1000, -1000, -1000, -1000, 92868, 1256, -1000, -1000,
	-1000, -1000, -1000, -1000, 2893, 3499, 1682, -1000, 1804, -1000,
	2795, 3167, -1000, 1337, 1678, -1000, -1000, 224, -1000, -1000,
	-39, -1000, 118402, -1000, 2445, -1000, 113542, -1000, 2373, 2817,
	2833, 1416, 2261, 2517, -1000, 41842, 2529, 51720, 2274, 135,
	-1000, -1000, 135, 135, 33124, -1000, -1000, 68245, 68245, 25593,
	1248, 48276, 48276, 48276, 48276, 48276, 48276, 48276, 48276, 48276,
	48276, 48276, 48276, 48276, 48276, 48276, 48276, 48276, 48276, 48276,
	48276, 48276, 48276, 48276, 48276, 48276, 48276, 48276, 48276, 48276,
	48276, 48276, 48276, 48276, 48276, 48276, 48276, 2057, 48276, 1236,
	48276, 48276, 48276, 48276, 1844, -1000, -1000, 1868, 522, 2003,
	663, -1000, -1000, -1000, 3392, 3392, 3392, 412, 412, 412,
	127129, 127129, 613, 3498, 802, -1000, 48276, -1000, 102, 57819,
	48276, 26152, -1000, 455, 8452, 2467, -1000, 453, 26738, -1000,
	-1000, -1000, 27886, 603, 41256, 48276, 993, 126764, -1000, -1000,
	1430, 3407, 23360, 2868, 2687, 660, 814, 803, 30804, 30218,
	29632, 29046, 797, 48276, 48276, 48276, 48276, 48276, 48276, 48276,
	48276, -1000, -1000, 3414, -1000, 3407, -1000, -1000, -1000, -1000,
	3407, 1247, 1246, 3407, -1000, 3407, 3407, 6272, 6272, 40682,
	40096, 39510, 52294, 38924, 48276, 28460, 38338, 37752, -1000, 113542,
	-26, 3352, 48276, 211, -1000, 125120, -1000, 211, 211, 656,
	-48, 126764, 2479, 2479, 56182, 2351, 2124, 2124, 2124, -1000,
	878, 18867, 878, 102630, 2136, 878, 878, 205, 237, 442,
	53977, 2460, 102630, 790, 654, -10, -11, -12, -1000, -1000,
	-13, -14, -1000, -1000, 92868, 653, 26152, 25593, 200, 1900,
	-51, 2518, 2514, 2509, -1000, 2508, -1000, 1720, -53, 1234,
	92868, 113542, 3497, -123, -1000, 6330, -59, -1000, 1114, 199,
	3407, -1000, -1000, -1000, -1000, -1000, 3495, 3494, -1000, 1026,
	652, 651, 401, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 650, 643, 643, 643, -1000, 306, 641, 302, 640,
	639, 636, -1000, -1000, -1000, -1000, -1000, 2792, 92868, 113542,
	3493, -192, 93408, -78, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 113542, -1000, -1000, -1000, 3492, -1000, 92868, -1000,
	-1000, 92868, 217, 2971, -1000, 92868, -1000, 92868, 216, 2953,
	-1000, -1000, 113542, -1000, 92868, 92868, -1000, 113542, 113542, 113542,
	77061, 77061, 220, -1000, 92868, 895, -69, 1140, -39, -1000,
	-1000, -1000, 1280, -1000, 1693, -1000, -1000, -1000, -1000, -1000,
	-1000, 1394, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1029, -1000, -1000, -1000, -1000, -1000, -1000, 3404, 3399, -27,
	-1000, -1000, 25593, -1000, -40, 1611, 1921, 1233, -1000, 79775,
	2337, 3178, 3491, 2566, 3165, 1555, -1000, 1453, -1000, 3255,
	83597, 3303, 3339, 1336, -1000, 2780, -1000, -1000, 931, 1527,
	1686, 1232, 1231, 83597, 2049, -1000, 68245, -1000, 2564, 3236,
	1410, 1421, 1410, 1410, 1330, -1000, 83597, 1683, 1228, 1227,
	1225, 1853, 1848, -1000, -1000, 1955, -1000, 1220, 1218, 833,
	1842, -1000, -45, 3299, 3311, 1305, -1000, 2775, 1214, -1000,
	-1000, -1000, 3233, 92868, 25593, 1564, 1562, 1557, 1662, 1213,
	-29, -1000, 3292, 1212, 1211, -1000, 5150, -1000, 77061, 1948,
	2952, 2630, 873, 2623, -1000, -1000, -1000, 873, -30, 73709,
	113542, 197, -1000, 102, 48276, 48276, 102, 48276, 102, 3267,
	2948, -1000, -1000, -1000, -1000, -1000, 3490, 1885, 2453, -1000,
	-1000, 634, 2331, 2774, 113542, 2531, -32, 92868, -1000, 68794,
	2946, 72055, 2049, 2330, -1000, -1000, 84684, -1000, 2940, 501,
	2328, -1000, 649, 3489, 2937, -1000, 117862, -1000, 3186, 1192,
	2936, 1086, 740, 3348, -1000, 740, 65521, -1000, 113542, -1000,
	-20, 5735, 78695, -76, -85, 425, -1000, 103177, 113542, 1085,
	79235, 113542, 3131, 982, 59484, -1000, 59484, -86, -174, 2608,
	1402, 974, 974, 873, -1000, 873, -1000, 92868, 2825, -1000,
	-1000, 77061, 974, 974, 974, -1000, -1000, -1000, -1000, 3488,
	3487, 3484, 3483, -1000, -1000, 983, 92868, 113542, 92868, -1000,
	196, -1000, 113542, -1000, 113542, 113542, 92868, -1000, 983, 113542,
	983, 113542, 983, 113542, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 102, -1000, 126764, -1000, 48276, -1000, -1000, 3481, 1594,
	-1000, 2820, -1000, 2818, -1000, 19, -1000, -1000, -1000, -1000,
	-1000, -1000, 1812, -1000, -1000, -1000, -1000, 92868, 92868, 92868,
	92868, 113542, 3072, -1000, 113542, 3070, 92868, -1000, -1000, 83597,
	-1000, 2373, 2817, -1000, -1000, -1000, -1000, -1000, -1000, 1621,
	2185, -1000, 2489, -1000, 1505, -1000, -1000, -1000, 126764, 52851,
	-1000, -1000, 126764, 1759, -1000, 51146, 50572, -1000, -1000, 1610,
	92868, 2530, -1000, 2530, -183, -1000, 124819, 2483, 92868, -1000,
	-1000, -1000, -1000, -1000, 929, 753, 753, 1245, 1245, 1245,
	1245, 3278, 7845, 360, 8609, 15865, 15865, 8585, 8585, 8585,
	8585, 8585, 15865, 495, 412, 412, 495, 495, 495, 495,
	495, 412, 412, 412, 15865, 15865, 15865, 412, 127129, 7881,
	9624, 48276, 48276, 1210, 1849, 522, 8009, 48276, 5128, 5128,
	5128, 5128, -1000, 1713, -1000, -1000, -1000, -1000, 2772, 628,
	52294, 52294, -1000, -1000, -1000, -1000, 27312, 48276, -1000, -1000,
	-1000, -1000, 37166, -1000, -1000, 124100, -317, 424, -1000, 193,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 420, -176, -34, -1000, 48276, 48276, 48276,
	415, -1000, 192, 48276, 113542, -1000, 17632, 789, -82, -1000,
	-87, 1417, -1000, 48276, -1000, -1000, 1209, -1000, 1207, 1206,
	1205, -1000, 627, 396, -1000, 190, -1000, 2122, 626, 623,
	48276, -1000, -1000, -1000, -1000, -1000, 124059, -1000, -1000, 123679,
	-1000, -1000, 123638, -1000, -1000, 123258, -1000, -1000, -1000, 126500,
	17209, 16542, 11674, 6709, 11031, 10430, -92, 395, -95, 393,
	926, 906, 392, 383, 382, -104, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -109, 381,
	-1000, 2768, -176, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 373, -1000, 371, -1000, 126393, -176, 368, 7778, -1000,
	52294, 52294, 52294, 52294, -1000, 365, -1000, 124691, -1000, 126129,
	36592, 36592, 36592, 364, 125764, 48276, -176, -112, -1000, -117,
	-1000, -1000, 497, -118, 1005, 36006, 55087, 25593, -1000, 1005,
	1005, 48276, -1000, 48276, 2498, -1000, -1000, -1000, -1000, 2484,
	2323, 2479, 56182, -1000, -1000, -1000, -1000, 102630, -1000, 3369,
	2760, -1000, 102630, -1000, -1000, 113542, 501, -1000, 102630, 102630,
	25593, 878, -1000, 878, 102630, 761, -1000, -1000, -1000, -1000,
	-1000, 363, 62257, -34, 189, 25593, 984, -1000, -1000, 2610,
	2610, 2610, 2610, -1000, -1000, 113542, 1204, -35, -93, -1000,
	3368, -1000, 1982, -1000, 68245, -1000, 801, 1118, 25593, -1000,
	-1000, -1000, 619, -1000, 3407, 3407, -1000, 3407, 113542, 2765,
	182, -1000, 115, 72055, 72055, 3478, -1000, -1000, 217, -1000,
	92868, 217, 217, -1000, 92868, 92868, 2200, -1000, 219, -1000,
	218, -1000, -1000, -97, -1000, 995, 33698, -1000, 1280, -1000,
	-1000, 1570, -1000, 1936, -1000, 1243, -1000, -1000, -1000, -1000,
	33698, -1000, 2462, 113542, 113542, 92868, -1000, 113542, -1000, 2050,
	72055, -1000, 2327, 117322, 2312, 68245, 113542, -1000, -1000, 612,
	947, 2478, 2477, 1081, 113542, 113542, 2474, 116782, 116242, -1000,
	3475, 113542, 1997, 48276, 3232, 2181, 2239, 102, 102, -1000,
	102, 102, 102, -1000, 611, 1320, 92868, 92868, 113542, 72055,
	92868, 1903, -1000, -1000, -1000, -1000, -1000, 84137, -1000, -1000,
	3411, 3410, -1000, 1410, -1000, -1000, -1000, 1410, 2049, 1840,
	113542, 72055, 92868, 72055, 115702, 115162, -1000, 1645, 113542, 1414,
	-1000, 833, 2005, 102, 102, -1000, 102, 102, 102, 610,
	25593, 1905, -1000, 2852, 113542, 3435, 114622, 3434, 113542, 113542,
	113542, 72055, 3161, 113542, 113542, 72055, 5150, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 73169, 1091,
	984, 1644, 1203, 1201, 83597, 59484, 981, 59484, 2570, -1000,
	-1000, 22802, -1000, 126764, 126764, -1000, 126764, -1000, 68794, 113542,
	-1000, 1034, 113542, 79235, 953, 2932, 64441, -192, 974, 77061,
	92868, -32, 2531, 113542, -1000, -1000, 2049, 2931, 501, 2322,
	-1000, 77061, 3347, 2928, 609, 3474, 3473, -1000, 92868, 2240,
	2321, -1000, -1000, 114082, 3039, 833, 113542, 1005, 56182, 1874,
	-1000, 62804, 1056, 113542, 1763, 107, -1000, -1000, -1000, 4,
	113542, -1000, 808, -1000, -1000, 5735, 5735, 974, -291, 608,
	-1000, 872, 870, 60041, 77061, -120, -1000, -1000, -1000, -1000,
	2312, 92868, 113542, 1279, 2576, 113542, -131, -1000, 187, 605,
	-1000, 2352, -1000, -174, -1000, 982, 59484, 2752, 2748, -1000,
	-1000, 994, -1000, 1333, 974, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -21, 113542, -192, -192,
	-33, -35, -1000, 983, -1000, 983, -1000, 983, -1000, 126764,
	-1000, -1000, 1593, 1560, 113542, -1000, 25593, 113542, 92868, 25593,
	92868, 2816, 2814, -1000, -1000, -1000, 113542, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1098, -1000, 1759, 2184, -1000, 603,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2407,
	-1000, -36, 33124, 880, -1000, -1000, 92868, -22, 48276, 48276,
	6778, 5597, 48276, 52294, 52294, -1000, 48276, 4880, -1000, -1000,
	-1000, -1000, -1000, 2747, 602, 48276, 68245, 9253, 6888, -1000,
	362, 10045, 495, -1000, 48276, -1000, 566, -1000, 359, 35432,
	-1000, 125393, -56, -136, -1000, 19438, -176, -141, -1000, -1000,
	799, -1000, 2941, -1000, 48276, 125500, 2345, 2065, 1774, 1601,
	3407, 3433, 22244, -1000, 66066, 1006, 2152, 123217, -1000, -1000,
	-1000, -1000, 68245, 68245, 48276, 48276, -1000, 48276, 48276, 48276,
	-1000, -1000, -1000, 3407, 927, -1000, -1000, -1000, 927, -1000,
	-1000, 1410, -1000, 1410, -1000, 48276, -1000, -1000, 2745, 48276,
	-1000, 68245, 68245, 52294, 52294, 52294, 52294, 52294, 52294, 52294,
	52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294,
	52294, 52294, 52294, 2443, 52294, 3390, 3390, 3390, 997, -1000,
	2812, 2745, 48276, 48276, 68245, 358, 348, 346, -1000, 48276,
	-176, -1000, -1000, 8988, 601, -1000, 2397, -1000, 2686, -1000,
	48276, -1000, -144, -1000, 2460, -1000, -1000, 2686, 2686, -146,
	126764, 56182, 56182, -1000, 596, 48276, 2480, -1000, -1000, 788,
	-315, -1000, 864, -1000, -1000, -1000, -1000, -1000, 501, -1000,
	-1000, -1000, 186, 102630, 102630, 787, -1000, -147, -1000, -1000,
	-149, -1000, 3346, 344, 25593, -1000, 1005, 2624, -1000, -1000,
	-1000, -1000, -1000, -1000, -192, 113542, 113542, 2168, 3431, -1000,
	3409, 798, 783, 184, 3407, 343, 339, 338, -192, 113542,
	113542, 113542, -1000, -1000, -1000, -1000, 217, -1000, -1000, -1000,
	216, -1000, -1000, -1000, -1000, 2562, -1000, -39, -1000, -1000,
	-1000, 48276, -1000, -1000, 3177, 1200, 1199, -1000, -1000, -1000,
	-1000, 2749, -1000, 2927, -1000, 2310, -1000, 1072, -1000, 1689,
	-1000, 48276, 594, 2573, 590, 589, 3471, 2110, 3469, 1082,
	2925, 2200, 2924, 2200, -1000, -1000, -1000, 941, -1000, 126764,
	2181, -1000, 588, 587, -1000, -40, 1590, 1775, 1197, 992,
	-1000, -1000, -1000, -1000, 48276, 48276, 102090, -1000, 459, 3170,
	-23, -1000, -1000, -1000, 1630, 1195, 1193, -1000, -1000, -1000,
	-1000, 2049, 1616, 1191, 1190, -1000, -1000, -1000, -1000, -1000,
	2308, -1000, -1000, 2923, 991, -1000, 2889, 2885, 900, 113542,
	-1000, 989, -1000, -1000, -1000, -1000, 48276, -1000, -45, 1187,
	3281, 2306, 92868, -1000, 2200, 2921, 1185, -1000, 1184, -1000,
	-1000, -1000, 3290, 3289, 1180, -1000, -1000, -1000, -1000, -1000,
	72612, -1000, 113542, 72055, 92868, 1835, 873, -1000, 2414, 873,
	981, 2744, -1000, 2523, 987, 92868, 3467, 337, -161, -46,
	68245, 3345, -1000, 2234, 581, 92868, 904, -1000, 3369, -1000,
	-1000, -1000, 985, -1000, 3283, 92868, 3344, 2919, 984, 102,
	92868, 3418, -1000, -1000, 3343, 92868, 2916, 2238, 2305, 2435,
	833, 78155, 984, 2144, -81, -1000, 1763, 34846, 3168, -164,
	-1000, -1000, -1000, 1005, 65521, 56182, 48276, 3466, -169, -1000,
	-1000, -1000, -1000, -1000, 99923, 99923, 77061, 77061, 77061, 974,
	113542, 113542, 79235, -1000, -1000, 582, 113542, 113542, 579, -1000,
	113542, 113542, 3465, 77061, -64, 578, -1000, 863, 862, 860,
	-1000, -1000, -1000, -1000, -1000, -1000, 982, -1000, -174, 59484,
	102, -1000, 2165, 92868, -1000, 21686, -1000, -1000, -1000, -1000,
	-1000, -1000, 983, -1000, -1000, 2058, 2271, 2058, 1731, 1726,
	-1000, -1000, 2180, -1000, -1000, -1000, -1000, 2533, 3148, 25593,
	3313, 5128, 48276, 48276, 262, 4762, 1376, 5128, 48276, 48276,
	68245, 12473, -178, 48276, 48276, -1000, 48276, 780, 126764, -1000,
	3430, 48276, 333, 328, -1000, -1000, -1000, 3406, -1000, -1000,
	-1000, 126764, 48276, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	327, -1000, 179, -1000, -1000, -1000, 120562, -1000, 48276, 326,
	3231, -1000, 321, 320, 9451, 446, 122837, 122796, 122416, 319,
	-1000, -1000, 316, 315, 126764, 2812, 126764, -1000, -1000, 874,
	874, 1386, 1386, 1386, 1386, 3390, 869, 1066, 541, 944,
	944, 944, 988, 997, 997, 944, 944, 944, 997, 2743,
	2468, 577, 9602, -1000, -1000, 126764, 126764, 314, -1000, -1000,
	-1000, -176, 312, 8988, -1000, 2680, 3228, 126764, -1000, 56182,
	2680, 2680, -1000, -1000, 2323, 113542, 126764, 56182, -1000, 2760,
	-1000, 20007, -1000, 25593, -1000, -1000, -1000, -1000, 3369, -1000,
	62257, -1000, 575, -1000, 108, -1000, 2624, -1000, 858, -1000,
	-1000, 77061, 77061, -192, -268, -1000, -1000, 779, 3458, 796,
	25593, 311, -1000, -1000, -1000, -192, -192, -192, -1000, -1000,
	-1000, 3129, 126764, 113542, 113542, 1409, 101550, 113542, 2913, -1000,
	4797, -1000, 1081, 122375, 56727, -1000, 56727, 113542, -1000, -1000,
	-1000, 1904, 1479, 3457, 1128, -1000, 3200, 113542, -1000, 113542,
	-1000, -1000, -1000, 113542, 113542, 92868, 113542, -1000, 72055, 2899,
	-180, 126764, -65, -1000, 857, -1000, 1397, -1000, 21128, 113542,
	72055, 92868, 113542, 72055, 92868, 2910, 113542, 2088, -1000, -1000,
	2881, -1000, 2897, -181, 25593, -1000, 3429, 3428, 2909, 3204,
	-1000, 113542, 3426, 113542, 92868, 3126, -1000, -1000, -1000, -1000,
	-1000, 1609, 1179, 1173, 981, -71, 574, -1000, 855, -1000,
	-1000, 854, -1000, 981, -1000, 77061, 59484, 3456, 501, -1000,
	2565, -1000, 97735, 2196, 102, -1000, 3455, 100470, 573, -1000,
	2160, -1000, 778, -1000, 2399, 72055, 2049, 102, 92868, -1000,
	-1000, 501, 304, -72, -1000, 3035, 1076, 25593, 92868, 2908,
	2437, 833, 78155, -1000, 1192, 2517, -1000, -79, -1000, 624,
	102, 2144, -1000, -81, 126764, -1000, 853, -1000, -186, -1000,
	-1000, 297, -1000, 3125, 3124, -1000, 2660, 56727, 571, 569,
	113542, 3112, -1000, -1000, -187, 2404, 2404, 77061, 59484, 77061,
	-1000, 982, 873, -1000, 2348, -1000, -1000, -1000, -1000, -1000,
	25593, 1524, -1000, 567, 565, -1000, -1000, -1000, -1000, 3148,
	5128, 5128, 48276, 48276, 48276, 5128, 12473, -194, -1000, 5128,
	5128, -176, -1000, -1000, 125393, -1000, -1000, -1000, 126764, -1000,
	20570, 2061, -1000, 121995, -1000, 33124, -1000, -1000, 48276, 48276,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 52294, 2728,
	564, 68245, -1000, -1000, 293, 998, 48276, 49998, 2460, 998,
	998, -1000, -195, -1000, -1000, -1000, 3369, 108, -1000, -1000,
	3454, 25593, -1000, 77061, -1000, -1000, 3453, 795, -1000, 3452,
	-1000, -1000, -1000, -1000, -1000, 2600, 3340, -1000, 1841, -1000,
	113542, -1000, 113542, -1000, 25593, 113542, 2704, 1271, -1000, 947,
	2464, 553, 52294, 92868, 876, -1000, 3321, 2664, -197, -1000,
	113542, 48276, 113542, -202, -203, 2290, -1000, -1000, 1268, 48276,
	-1000, -1000, -1000, 68245, 543, 2200, 2200, -208, -209, -1000,
	-1000, -1000, 48276, 1172, 113542, 34272, -1000, 3451, 3170, -1000,
	-1000, -1000, -1000, -1000, -1000, 113542, -1000, 113542, -1000, 48276,
	1167, -1000, -1000, -1000, 3424, 2200, 25593, 2200, -1000, 2200,
	3204, 1117, 113542, 72055, 92868, -1000, 2381, 2381, 77061, 59484,
	-1000, -97, 981, -1000, 3338, 2552, 3450, -1000, -1000, -1000,
	-1000, 2463, -1000, -1000, 113542, 2449, 976, -1000, -210, -1000,
	849, 847, 79235, 953, 907, -1000, -98, 540, -1000, 844,
	-1000, -1000, -1000, -1000, 501, 3337, -1000, 3423, 528, 525,
	113542, 2233, 523, 25593, 3162, 833, 78155, -1000, 3039, 1763,
	-1000, 2295, 113542, 3164, -1000, 2517, 522, -1000, 974, 521,
	520, 2313, 2313, -211, 56727, 56727, -216, 519, 974, -1000,
	-217, -1000, -1000, -1000, -1000, -1000, -114, -1000, 848, 820,
	-1000, -1000, 92868, 92868, 48276, 48276, -1000, 5128, 5128, 5128,
	-1000, 285, -1000, -1000, 2144, 3226, -1000, -115, 121954, 121574,
	4500, 52294, 68245, -223, -1000, -1000, 113542, 126764, -142, -1000,
	126764, 518, 513, 419, -1000, -1000, -1000, 774, -1000, -1000,
	-1000, 3449, -1000, 101010, 113542, -1000, -1000, 2019, -1000, -1000,
	-1000, 113542, 2304, -1000, -1000, -1000, 1079, 48276, 9602, 512,
	48276, -1000, 3334, -1000, 2540, 2729, 1887, 56727, -1000, 3148,
	-1000, 121533, -1000, 1075, 1870, -1000, -1000, -1000, 126764, 3204,
	56727, -1000, -1000, 510, 509, 126764, 508, 836, 2725, -1000,
	-1000, -1000, -1000, -1000, 126764, 507, 3281, -1000, -1000, -1000,
	-1000, 2200, 92868, -1000, -1000, -1000, -1000, -224, -1000, -1000,
	1875, 102, 2042, 2591, -1000, 2196, 506, -1000, -1000, 2189,
	2560, -1000, 100470, 33698, 33698, 284, 3320, 907, -1000, 3400,
	-1000, 3113, 3113, 48276, 3312, 102, -1000, 3418, 56727, -1000,
	92868, 56727, 2219, 1955, 2420, 78155, -1000, 2435, -1000, -1000,
	-225, 113542, 1763, -1000, -1000, 77061, 77061, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1075, -226,
	-231, -1000, 77061, -1000, -1000, 2348, -1000, 113542, -1000, 113542,
	-1000, -1000, -234, -236, -1000, 2141, 48276, 33124, -1000, -1000,
	4500, -237, -1000, -162, -1000, 3310, 49998, 3445, 3444, 3443,
	-1000, -1000, -1000, 1811, -1000, -1000, -1000, 2907, 2667, 121153,
	2401, 113542, 121112, -1000, 2727, -1000, -1000, 2552, 503, -1000,
	-1000, -1000, -1000, 880, 113542, 2552, 2663, 92868, 1077, -239,
	2058, 2058, 48276, 32550, 2078, 48276, -1000, -1000, 3204, -1000,
	2718, 3401, -1000, 953, -1000, 2075, 113542, -1000, 3195, -1000,
	3075, -1000, -1000, -1000, 2565, 102, -1000, -1000, -1000, -244,
	126764, 102, -1000, 277, -245, 1076, -246, 92868, 1833, -1000,
	833, -1000, 2437, 1005, -1000, -1000, -247, -253, 1887, 1075,
	2005, -254, -1000, -255, -256, -1000, -1000, 268, 49424, 49424,
	49424, -176, -183, -1000, 113542, 502, -1000, -1000, -1000, -1000,
	-1000, 2876, 979, -1000, 2199, 1827, 21, 1078, -1000, -1000,
	2005, 113542, -1000, -1000, -1000, 978, 501, -1000, 48276, 1075,
	-262, -1000, 1055, -263, -1000, 1052, -265, -1000, 2724, -1000,
	-270, 2200, 977, 3260, -1000, -1000, -1000, 2189, 92868, -271,
	-1000, -1000, 2220, -1000, 2552, 976, -1000, -1000, -1000, 1075,
	500, 1887, 499, 1435, 833, -1000, -1000, 1410, 3162, 3009,
	974, 974, 2552, 1887, 962, -1000, 974, -1000, -1000, -1000,
	2935, -1000, 53408, 2191, 1724, 124518, 2935, 2935, -1000, -1000,
	113542, 3249, -1000, 2212, 2202, 1492, -1000, -1000, -1000, -1000,
	-1000, -1000, 2664, -277, 3246, 2401, 126764, 2552, -1000, 2058,
	2590, -1000, 2058, 2722, -1000, 2017, -1000, -1000, -1000, 1637,
	3395, 2411, 498, -1000, 113542, 1714, 1712, 3442, 2042, 2189,
	1887, 56727, 2552, 56727, -1000, -1000, 113542, -1000, 1955, 1312,
	-1000, -1000, 2005, 2552, 1005, 494, -1000, -1000, 1706, 3316,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 828, -1000,
	3056, -1000, 1095, 2137, 2137, 1005, -1000, 827, 2199, -1000,
	-1000, 481, -1000, 480, -1000, 2155, -1000, -1000, -1000, -1000,
	113542, -1000, -1000, 3441, -1000, 953, -1000, 2552, -278, 2005,
	-279, -1000, -192, 1833, -1000, 1541, 962, 2005, -1000, 1707,
	-1000, -1000, 2134, 48850, 48276, -1000, 3371, -1000, -1000, 2490,
	-1000, -1000, 48276, 2664, 48276, 48276, 63896, -280, -1000, 2189,
	2005, 1075, 962, 1887, 1435, 65521, 1005, 962, -1000, -1000,
	-1000, 126764, -1000, -1000, -1000, 126764, -1000, -286, -288, -291,
	99923, 2175, 2411, 962, 1887, 1005, 2552, -1000, -273, -1000,
	1005, 2005, 1150, -295, -1000, -1000, -1000, -1000, 1005, 2552,
	-1000, 2005, -1000, -1000, -1000, -1000, 461, -1000, -1000, 2005,
	962, 48276, 962, 1005, -301, 1005, -1000, 2005, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4209, 4205, 4201, 4200, 4199, 4193, 4192, 4189, 4187,
	4186, 4185, 4184, 4180, 4179, 4178, 4177, 4174, 4173, 4172,
	4171, 4170, 4168, 4166, 4165, 4163, 4161, 4160, 4159, 4156,
	4155, 4153, 4152, 4151, 4150, 4146, 4145, 4144, 4143, 4142,
	4141, 4140, 4139, 4138, 4137, 4135, 4134, 4132, 4131, 4130,
	4127, 4126, 4125, 4124, 4123, 4122, 4121, 4120, 4117, 4116,
	4115, 4114, 4113, 55, 4112, 4111, 4108, 4102, 4100, 4098,
	4094, 4093, 4092, 4091, 4089, 4088, 4087, 4086, 4085, 4084,
	4083, 4081, 4080, 4079, 64, 4078, 262, 4071, 4070, 4068,
	4062, 4061, 4059, 4058, 4056, 4055, 4054, 4053, 4051, 261,
	4050, 122, 169, 4049, 4046, 3619, 4045, 4042, 259, 4041,
	4040, 4039, 4033, 270, 4032, 4031, 4027, 4026, 4025, 4019,
	4018, 4017, 4016, 4013, 4011, 100, 202, 4010, 4005, 217,
	4004, 4002, 4001, 3996, 3995, 3993, 3988, 3987, 3981, 3977,
	230, 3975, 257, 3973, 3969, 3968, 3967, 3964, 3963, 3959,
	3958, 3956, 3952, 3951, 3950, 3949, 3948, 3945, 3944, 3943,
	3939, 3937, 3936, 3935, 3934, 3933, 3932, 3924, 3923, 3922,
	3920, 3919, 3917, 3914, 3913, 3912, 3911, 3910, 3909, 3907,
	236, 268, 201, 3906, 3905, 255, 254, 3904, 3903, 3902,
	3901, 3899, 117, 6, 38, 3898, 3897, 93, 91, 82,
	105, 98, 95, 3895, 107, 3892, 137, 77, 3891, 15,
	2, 260, 242, 12221, 226, 3890, 3889, 3887, 235, 185,
	3886, 232, 3885, 3884, 3883, 3882, 3881, 70, 56, 174,
	168, 156, 155, 703, 3880, 153, 99, 78, 59, 41,
	9, 83, 203, 22, 3879, 244, 8, 132, 1, 30,
	3878, 3877, 3875, 3874, 3612, 135, 3872, 253, 231, 159,
	3869, 3868, 3864, 326, 3862, 3861, 46, 3860, 94, 96,
	134, 31, 121, 3859, 144, 33, 3855, 160, 63, 3854,
	157, 97, 84, 12346, 13203, 3851, 111, 61, 130, 3017,
	177, 163, 186, 173, 158, 164, 184, 205, 198, 166,
	290, 3849, 240, 3848, 3322, 74, 171, 147, 5168, 3847,
	3846, 3842, 85, 189, 109, 3836, 3827, 72, 11, 14,
	4, 7, 136, 23, 24, 16, 3822, 25, 114, 45,
	21, 3820, 27, 3815, 3813, 3812, 3810, 3808, 49, 151,
	3807, 265, 3806, 104, 53, 47, 3804, 39, 211, 3802,
	224, 119, 3798, 3794, 241, 199, 187, 3793, 68, 223,
	3792, 3791, 3790, 3789, 3787, 120, 3, 129, 3784, 3783,
	140, 3781, 51, 228, 190, 3780, 67, 3779, 3778, 172,
	108, 131, 267, 143, 212, 113, 219, 181, 221, 3776,
	3774, 3773, 178, 3771, 3770, 216, 152, 3769, 3768, 194,
	271, 89, 50, 86, 229, 80, 183, 149, 3767, 192,
	3766, 3765, 263, 176, 208, 12, 17, 102, 118, 3763,
	5, 222, 150, 227, 112, 3762, 7453, 2284, 2835, 3761,
	3760, 139, 116, 76, 128, 146, 249, 71, 3758, 3757,
	2909, 3756, 3754, 3753, 3752, 175, 3750, 3748, 3747, 142,
	145, 197, 3746, 90, 73, 52, 20, 125, 239, 256,
	110, 218, 196, 245, 3745, 3744, 3741, 182, 3740, 48,
	115, 154, 191, 246, 57, 3739, 162, 3738, 141, 788,
	65, 148, 3737, 213, 3736, 3735, 3734, 3733, 3732, 3730,
	3729, 305, 225, 3727, 3725, 3723, 34, 180, 3721, 248,
	195, 167, 92, 60, 3720, 87, 4047, 3719, 247, 2283,
	81, 250, 2058, 251, 3716, 1269, 69, 3715, 0, 14140,
	8553, 11319, 14538, 3714, 3940, 3712, 3711, 3709, 206, 138,
	3708, 3706, 3705, 103, 3704, 79, 3703, 3701, 66, 3700,
	37, 18, 19, 29, 26, 297, 54, 3699, 3698, 28,
	124, 126, 3697, 258, 215, 3695, 3694, 3693, 3692, 106,
	3691, 43, 3690, 40, 3689, 3686, 44, 13, 32, 3677,
	3676, 193, 3674, 209, 237, 3664, 161, 3657, 3318, 133,
	3656, 3655, 3653, 62, 58, 243, 88, 3651, 272, 3650,
	3267, 3648, 3647, 42, 3646, 3644, 234, 200, 170, 207,
	3642, 3641, 165, 3640, 3639, 3635, 269, 3634, 3630, 3629,
	36, 3628, 10, 3627, 3626, 204, 3082, 3625, 3624, 35,
	3621, 179,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 31, 32, 32, 33, 34,
	34, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 17, 17, 37, 37, 18, 18, 39, 39,
	19, 19, 40, 40, 585, 585, 597, 597, 22, 22,
	42, 42, 23, 43, 16, 586, 586, 586, 586, 35,
	24, 44, 28, 28, 28, 28, 28, 195, 195, 195,
	195, 21, 21, 38, 38, 230, 230, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 581, 581, 232, 232, 231, 225, 225,
	226, 226, 587, 587, 233, 233, 233, 235, 235, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 480,
	480, 480, 513, 513, 512, 512, 512, 511, 511, 601,
	601, 602, 602, 602, 602, 602, 128, 128, 378, 378,
	378, 52, 52, 52, 52, 52, 576, 576, 197, 197,
	197, 199, 199, 198, 198, 198, 198, 198, 75, 75,
	592, 592, 593, 593, 591, 594, 594, 594, 196, 196,
	196, 124, 124, 124, 124, 124, 124, 125, 125, 126,
	126, 200, 200, 200, 202, 202, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 206, 15, 15, 15, 15,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 104,
	104, 515, 515, 516, 516, 191, 191, 192, 192, 192,
	192, 193, 193, 194, 194, 194, 66, 66, 203, 203,
	205, 205, 204, 204, 204, 204, 204, 54, 54, 54,
	54, 54, 54, 54, 55, 55, 55, 55, 55, 56,
	56, 56, 56, 56, 56, 57, 57, 57, 57, 57,
	57, 64, 64, 64, 64, 64, 182, 182, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 72, 72, 72, 72, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 604, 604, 605, 605, 606, 606,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 81, 81, 340, 340,
	303, 303, 82, 82, 82, 83, 83, 84, 84, 68,
	68, 574, 574, 355, 355, 471, 471, 69, 582, 582,
	582, 584, 584, 583, 583, 86, 86, 377, 377, 87,
	87, 87, 87, 87, 87, 88, 88, 88, 88, 88,
	88, 88, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 96, 96, 96, 96,
	96, 97, 97, 97, 94, 94, 94, 91, 91, 91,
	90, 90, 90, 95, 95, 95, 573, 292, 292, 93,
	93, 93, 92, 92, 92, 356, 356, 98, 98, 98,
	98, 304, 99, 99, 99, 99, 99, 99, 99, 99,
	102, 102, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 473, 473, 100, 100, 100,
	438, 438, 105, 105, 105, 393, 393, 106, 106, 106,
	106, 106, 107, 107, 107, 107, 107, 107, 107, 107,
	127, 127, 127, 127, 127, 127, 127, 578, 578, 348,
	348, 257, 257, 257, 257, 117, 117, 117, 117, 118,
	118, 118, 119, 119, 187, 187, 134, 134, 134, 134,
	134, 133, 133, 133, 133, 133, 133, 58, 58, 58,
	59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
	63, 63, 63, 136, 136, 598, 598, 138, 135, 135,
	135, 137, 137, 137, 137, 139, 140, 140, 140, 140,
	140, 140, 140, 140, 141, 141, 505, 505, 364, 364,
	503, 503, 525, 525, 504, 504, 310, 310, 310, 310,
	310, 311, 311, 311, 514, 514, 514, 514, 514, 514,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 188,
	188, 189, 190, 190, 190, 190, 190, 165, 165, 165,
	181, 181, 181, 181, 181, 181, 181, 168, 168, 168,
	152, 152, 143, 143, 143, 143, 143, 143, 143, 147,
	147, 147, 147, 147, 147, 147, 147, 144, 144, 154,
	154, 154, 154, 154, 148, 148, 149, 149, 149, 149,
	175, 175, 151, 151, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 145, 145, 145, 145, 156, 156, 156,
	156, 400, 400, 400, 180, 180, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 178, 178, 178, 178, 178, 178, 595, 595, 596,
	596, 172, 172, 172, 172, 172, 172, 452, 452, 166,
	166, 166, 166, 171, 171, 171, 171, 174, 174, 174,
	174, 383, 383, 163, 163, 163, 164, 164, 164, 169,
	169, 170, 167, 167, 173, 173, 173, 173, 146, 146,
	146, 146, 608, 608, 608, 176, 176, 162, 162, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	609, 609, 158, 158, 158, 157, 157, 157, 157, 160,
	160, 161, 161, 161, 161, 161, 161, 159, 150, 179,
	575, 575, 571, 571, 571, 571, 571, 571, 571, 571,
	572, 572, 572, 572, 577, 577, 110, 110, 110, 110,
	110, 120, 120, 120, 120, 120, 111, 111, 111, 111,
	111, 113, 113, 112, 112, 112, 112, 76, 76, 76,
	76, 76, 14, 14, 14, 77, 77, 248, 248, 209,
	209, 209, 329, 329, 210, 210, 318, 318, 318, 318,
	207, 207, 208, 208, 78, 78, 610, 610, 610, 588,
	588, 588, 589, 589, 589, 589, 589, 589, 312, 312,
	313, 313, 418, 418, 418, 418, 418, 316, 316, 316,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 319,
	319, 234, 234, 234, 327, 328, 328, 320, 320, 326,
	325, 325, 324, 324, 323, 323, 321, 322, 322, 322,
	331, 331, 330, 333, 333, 332, 417, 534, 534, 536,
	536, 536, 536, 536, 536, 536, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 401, 401,
	611, 611, 532, 532, 532, 533, 528, 528, 529, 529,
	529, 529, 529, 314, 314, 315, 315, 315, 315, 530,
	531, 346, 346, 456, 535, 535, 537, 537, 539, 612,
	612, 612, 612, 612, 612, 613, 613, 613, 416, 416,
	415, 415, 338, 338, 540, 540, 540, 540, 541, 541,
	541, 541, 541, 544, 543, 542, 542, 542, 542, 542,
	80, 80, 80, 380, 380, 379, 379, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 184, 184, 260, 260, 74, 74, 74, 12,
	12, 12, 590, 590, 590, 79, 79, 79, 79, 79,
	79, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 580, 580, 579, 579, 261, 261, 615, 615, 85,
	85, 85, 85, 85, 85, 85, 85, 474, 474, 475,
	475, 73, 73, 73, 73, 73, 402, 402, 399, 399,
	398, 398, 345, 345, 454, 454, 454, 455, 265, 265,
	266, 266, 227, 227, 227, 30, 29, 20, 20, 25,
	25, 26, 26, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 27, 27, 46, 46, 46, 46, 47, 47,
	47, 47, 50, 50, 51, 51, 45, 45, 45, 45,
	48, 48, 41, 41, 599, 599, 600, 600, 116, 116,
	121, 121, 121, 121, 121, 122, 122, 122, 122, 123,
	123, 123, 123, 132, 132, 183, 183, 183, 183, 183,
	183, 183, 53, 53, 53, 53, 65, 65, 65, 65,
	130, 617, 617, 617, 131, 131, 131, 616, 616, 258,
	258, 412, 412, 413, 413, 618, 618, 414, 414, 414,
	414, 414, 251, 250, 252, 252, 253, 253, 71, 71,
	71, 243, 243, 242, 240, 240, 517, 517, 245, 245,
	245, 246, 246, 236, 236, 237, 237, 238, 238, 239,
	239, 249, 249, 619, 619, 108, 108, 108, 186, 186,
	302, 302, 302, 409, 409, 409, 339, 339, 272, 272,
	411, 411, 411, 411, 376, 376, 376, 185, 185, 353,
	353, 366, 366, 367, 367, 468, 468, 368, 114, 114,
	115, 115, 129, 129, 213, 213, 211, 211, 211, 211,
	211, 211, 211, 211, 218, 218, 219, 219, 220, 220,
	221, 222, 222, 222, 222, 357, 357, 223, 223, 223,
	212, 212, 212, 214, 214, 214, 214, 214, 214, 214,
	217, 217, 217, 217, 224, 224, 224, 216, 216, 551,
	551, 551, 553, 553, 555, 555, 554, 554, 550, 550,
	552, 552, 614, 614, 382, 382, 382, 336, 337, 334,
	334, 335, 335, 343, 343, 341, 342, 342, 344, 344,
	453, 453, 453, 228, 228, 228, 373, 373, 373, 373,
	374, 374, 405, 405, 403, 403, 403, 403, 404, 404,
	406, 406, 406, 407, 407, 408, 408, 370, 370, 371,
	371, 372, 372, 372, 372, 434, 434, 215, 215, 215,
	350, 350, 350, 351, 351, 424, 424, 424, 424, 424,
	424, 425, 425, 423, 423, 423, 423, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 458, 459, 459, 352,
	352, 460, 410, 410, 569, 569, 569, 570, 570, 451,
	451, 461, 461, 461, 461, 461, 461, 449, 449, 450,
	450, 469, 470, 470, 386, 386, 386, 386, 384, 384,
	387, 387, 387, 387, 387, 385, 385, 462, 462, 462,
	462, 375, 375, 463, 463, 463, 463, 464, 465, 465,
	466, 466, 419, 420, 420, 476, 476, 476, 476, 478,
	349, 349, 349, 349, 349, 527, 526, 526, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 493,
	493, 493, 493, 493, 493, 493, 479, 479, 479, 479,
	479, 483, 483, 483, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 484, 484, 489, 489, 490,
	490, 490, 485, 486, 491, 491, 491, 491, 620, 620,
	495, 495, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 481, 481, 481, 488, 488, 488, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	394, 394, 396, 396, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 428, 428, 428, 428, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 545, 545, 545, 545, 545, 545,
	545, 545, 430, 430, 548, 548, 549, 549, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 556, 556, 557,
	557, 559, 559, 560, 560, 561, 562, 562, 562, 563,
	564, 564, 558, 558, 565, 565, 565, 565, 566, 566,
	567, 567, 567, 567, 567, 568, 568, 568, 568, 568,
	440, 440, 441, 441, 447, 447, 447, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 309, 309, 308, 262, 262, 262, 262, 262,
	262, 362, 362, 360, 360, 360, 363, 363, 361, 361,
	359, 359, 358, 358, 437, 437, 435, 435, 439, 439,
	388, 388, 494, 494, 494, 494, 494, 494, 494, 494,
	389, 389, 389, 397, 390, 390, 391, 391, 391, 391,
	391, 431, 432, 392, 392, 392, 433, 433, 442, 446,
	446, 445, 444, 444, 443, 443, 421, 421, 422, 422,
	369, 369, 621, 621, 365, 365, 467, 467, 467, 467,
	306, 306, 354, 354, 305, 305, 297, 297, 298, 298,
	298, 298, 347, 347, 448, 448, 496, 496, 497, 497,
	498, 498, 499, 499, 500, 501, 502, 436, 436, 282,
	281, 269, 270, 280, 279, 278, 268, 271, 275, 276,
	277, 273, 274, 288, 287, 286, 241, 244, 293, 294,
	294, 296, 296, 295, 295, 284, 285, 472, 267, 299,
	299, 300, 300, 300, 301, 301, 301, 301, 263, 263,
	264, 264, 289, 289, 290, 291, 291, 283, 283, 283,
	254, 254, 254, 255, 255, 256, 256, 510, 510, 507,
	507, 507, 508, 508, 508, 509, 509, 509, 509, 506,
	506, 506, 506, 506, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 519, 519, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 521, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 524, 524,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 9, 6, 8, 4, 4,
	5, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 1, 0, 6, 6,
	6, 6, 6, 6, 4, 4, 4, 4, 3, 4,
	4, 4, 7, 7, 9, 8, 9, 5, 3, 5,
	7, 4, 12, 4, 12, 1, 3, 5, 5, 2,
	5, 3, 6, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 1, 12, 3,
	1, 0, 1, 1, 2, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 9, 5, 2,
	6, 4, 7, 7, 7, 5, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 4, 3, 2, 2, 1, 2, 1, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 2,
	6, 3, 3, 4, 4, 3, 1, 3, 2, 3,
	3, 1, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 13, 16, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 5, 5, 5, 2, 2, 0,
	1, 3, 11, 12, 9, 5, 3, 1, 5, 10,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 12, 15,
	3, 1, 0, 4, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 588, -101, -98, -66, -64, -105, -106,
	-87, -107, -100, -127, -132, -114, -115, -116, -128, -134,
	-183, -188, -189, -190, -3, -52, -54, -67, -86, -88,
	-99, -109, -108, -110, -117, -124, -120, -104, -58, -129,
	-133, -142, -184, -185, -186, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-137, -138, 452, -53, -65, -131, -130, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -603, 102, -552, -89,
	-92, -123, -607, 161, 219, -111, -112, 364, -118, -119,
	417, -121, -122, 419, 162, -60, -59, 156, -211, -213,
	-135, -136, -187, -143, -144, -145, -146, -147, -148, -149,
	-175, -150, -151, -152, -153, -154, -155, -159, -178, -156,
	-157, -158, -161, -160, -162, -167, -163, -164, -165, -166,
	-168, -169, -171, -172, -173, -174, -176, -177, 457, -170,
	-179, 518, 49, 472, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -551, -90, -91, -94, -96,
	-97, -93, -95, 416, -214, -212, 585, 533, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 554, 563, -217, -215, -216, -224,
	444, 541, 492, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, -304, 2, -284, -289, -290,
	-291, -283, -254, -521, -524, 4, -518, -522, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 500, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 474, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 465, 468, 470, 471, 472, 491, 473, 475, 479,
	480, 481, 482, 476, 477, 490, 484, 485, 487, 488,
	493, 494, 495, 496, 497, 498, 499, 501, 503, 511,
	512, 513, 515, 518, 519, 520, 521, 509, 523, 524,
	527, 528, 529, 532, 530, 531, 533, 535, 538, 539,
	540, 546, 545, 547, 550, 555, 556, 558, 559, 560,
	36, 50, 51, 54, 56, 58, 69, 70, 71, 75,
	124, 125, 153, 164, 165, 177, 190, 191, 203, 205,
	213, 214, 215, 237, 238, 240, 245, 267, 333, 335,
	351, 355, 370, 374, 378, 380, 394, 429, 466, 478,
	483, 504, 505, 506, 507, 514, 516, 541, 542, 543,
	548, 557, -304, 2, -284, 342, -277, 2, -254, -254,
	381, 28, 2, 28, 369, 446, 495, 497, 2, -578,
	-348, 2, 28, -257, -254, 102, 201, 444, -277, 2,
	-578, -348, 25, 2, -254, 2, 356, 22, 27, 66,
	77, 98, 140, 163, 185, 188, -606, 358, 388, 432,
	448, 490, 501, 515, 2, 545, 288, 445, 492, 229,
	120, 520, 439, -590, 437, 438, 356, 386, 425, 204,
	534, -258, 2, 434, -254, 288, 2, 588, 94, 278,
	74, 429, 449, -140, 512, -139, 504, 439, -141, -505,
	2, 310, -254, 588, 588, 588, 28, -267, -254, 492,
	229, 439, 120, 488, 588, 2, 492, 361, 545, 445,
	120, 391, 229, 520, 188, 140, 27, 126, 439, -590,
	288, -576, 2, -571, 4, -522, -518, -298, -297, 492,
	498, 120, -291, -283, 578, -290, 588, 588, 588, 2,
	248, 249, 390, 389, 449, 450, 588, 588, 588, 588,
	437, 2, 163, 22, 27, 66, 93, 98, 126, 185,
	188, 347, -604, 358, 388, 448, 490, 494, 501, 515,
	-589, 473, 68, 414, 439, -588, -590, 288, 520, 140,
	-398, 120, 278, 199, 528, 497, 495, 526, 132, 236,
	531, 530, 588, 588, -102, 2, 585, 32, 31, -101,
	-105, 142, 452, -206, 492, 241, 2, -254, 588, 588,
	2, 248, 249, 437, 438, 588, 588, 186, -571, 2,
	588, 588, 2, 248, 249, 437, 438, 241, 2, 68,
	441, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 2, -181, 449, 473, 210,
	47, 46, 74, 28, 387, 79, 362, 121, 148, 521,
	202, 229, 230, 256, 93, 94, -400, 44, 249, 68,
	248, 438, -595, 437, -452, 493, 440, 446, 487, 260,
	434, 512, 102, 535, 426, 560, 391, 392, 485, 404,
	279, 157, 187, 4, 120, 310, 451, 504, 278, 433,
	365, 84, -614, 2, 492, -616, 2, 512, 512, 2,
	-616, 2, -616, 2, -616, 2, -617, 512, 557, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, -212, -214, -213, 588,
	588, 588, 588, 588, 588, 588, -181, 449, 2, 74,
	28, -341, -343, 525, 239, 150, 348, -211, -213, 2,
	-551, -503, 2, -426, -525, -428, 576, 577, 569, 489,
	67, -308, 327, 561, -440, 126, 526, 342, -524, -429,
	-442, 153, 358, 429, -363, 8, 9, 5, 6, 7,
	-263, -430, -436, 517, 167, 332, -301, 589, 10, 585,
	-548, -213, -441, 37, 205, 65, -507, -300, -264, -479,
	240, -299, -283, -545, -546, 4, -518, -519, -508, -482,
	-490, -486, -487, -493, -254, -521, 77, 111, 112, 110,
	115, 114, 281, 280, 116, 113, 451, 534, 66, 36,
	213, 214, 245, 333, 215, 75, -547, 141, -520, 237,
	238, 466, 51, 394, 177, 125, 124, 335, 56, 54,
	542, -491, 122, 504, 505, 506, 507, 190, 191, 58,
	164, 165, 355, 378, 483, 514, 516, 203, 267, 43,
	106, 187, 235, 217, 244, 246, 250, 268, 271, 311,
	324, 329, 352, 354, 424, 458, -620, 543, 478, 69,
	70, -553, 396, -554, -277, -553, 588, 588, 590, 588,
	-334, -336, -337, 2, 28, 138, 585, 2, -457, 2,
	-458, -462, -213, 261, -461, 585, -459, 583, -284, 343,
	-549, 430, -545, -546, -263, -283, -300, 4, -518, -520,
	587, -338, 585, 120, 492, 78, 229, 163, -393, 585,
	-254, 28, 342, 508, 590, -335, 385, -438, 585, 342,
	186, 345, 60, 292, 2, 2, 2, 2, 2, 213,
	-254, 492, 119, 2, 259, 2, 2, 2, 2, 2,
	2, 2, -356, 213, 2, -284, 545, -356, 213, 2,
	-356, 213, 2, -399, 2, 87, -268, 213, 2, -254,
	-292, 213, 2, -287, -289, -296, 213, 2, -294, -254,
	-516, 213, 2, -515, -510, 10, -509, 5, 4, -518,
	-522, -519, -521, 77, -426, 2, -129, 2, 60, -254,
	545, 2, 2, 454, 2, 585, -140, 71, 512, 43,
	449, -413, 2, -414, -250, -251, -252, -469, -253, 247,
	384, 393, 564, 130, 327, 560, -503, -598, 186, 568,
	508, -503, -364, 587, 2, 2, 2, 2, 2, 2,
	-462, 213, -284, 2, -281, -506, 4, -518, -522, -519,
	-523, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 110,
	111, 113, 112, 114, 115, 116, 126, 130, 134, 138,
	139, 143, 146, 150, 167, 169, 182, 185, 186, 201,
	204, 207, 220, 234, 239, 241, 261, 265, 272, 280,
	281, 327, 332, 338, 342, 343, 347, 348, 367, 383,
	399, 420, 444, 451, 469, 486, 492, 502, 508, 510,
	517, 525, 526, 534, 536, 544, 549, 551, 552, 553,
	554, -524, 2, -462, 213, 2, -286, 213, -462, -289,
	2, -268, 2, -280, -506, 2, -305, 213, -284, -285,
	-289, -287, 2, 2, 2, 2, 2, -294, 2, -515,
	213, 2, 545, 241, 508, 590, -354, -297, -298, -502,
	8, -347, -254, 587, -426, 2, -129, -113, 2, 182,
	-426, 213, 2, -129, 213, 2, -426, 213, 2, -129,
	213, 2, -592, 2, -515, 213, -254, 2, 292, 2,
	2, 515, 2, 98, 492, 119, 2, 413, -605, 432,
	519, 2, 2, 2, 2, 2, 2, 2, 492, -273,
	2, -254, 182, 476, -294, 213, -295, 2, 445, -615,
	396, -515, 213, 2, 545, -287, 213, 2, -287, 229,
	243, -268, 213, 2, 497, 495, 497, 495, 186, 2,
	241, 2, 241, 2, -463, 2, -464, -458, -465, 583,
	343, -473, 2, -472, -509, 541, -102, 585, -102, 585,
	449, 585, -515, -284, -284, -426, 2, -129, -113, 2,
	-426, 2, -129, 2, -126, -515, -125, 585, 186, -426,
	2, -129, -113, 2, -426, 2, -129, 2, -206, 182,
	2, 120, 492, -181, 2, 182, 536, 2, 8, 2,
	220, -515, 440, 392, 174, 2, 454, 2, 455, 74,
	-400, 560, 74, 186, 2, 186, 2, -383, 2, 554,
	186, 2, 2, -575, 2, 342, 186, 2, 186, 2,
	186, 2, 186, 2, 186, 2, -180, 450, 513, 491,
	389, 249, 2, -129, 551, -113, 249, 248, -426, 551,
	2, -596, 182, 438, -426, 2, 511, 258, 158, 186,
	-383, 2, 186, 2, 186, 2, 5, 2, 390, 474,
	2, 247, 384, 474, 2, -284, -608, 28, 2, 492,
	545, 445, 2, 2, 88, 89, 186, 2, 186, 2,
	200, 186, 2, 186, 492, 560, 2, -375, -462, -412,
	-413, -412, 508, -341, -343, -181, 454, 2, -218, -373,
	-220, 182, -403, -404, -221, 272, 169, 338, -222, -382,
	28, 138, -382, -382, 60, 586, 586, 11, 12, 76,
	41, 576, 577, 578, 579, 180, 580, 581, 574, 575,
	573, 566, 567, 571, 253, 254, 95, 570, 568, 86,
	286, 431, 170, 171, 172, 173, 410, 227, 34, 228,
	14, 15, 16, -308, 33, 347, 271, 561, 217, 458,
	569, 17, 18, 19, 244, 246, 329, 50, 220, -262,
	358, -307, 489, 67, -426, -426, -426, -426, -426, -426,
	-426, -426, 354, 585, -369, -421, 583, -213, 585, 585,
	585, 585, -502, -213, -426, -440, 586, -361, 585, -213,
	-440, -435, 585, 429, 583, 585, -443, -426, 5, 5,
	5, 585, 587, -556, 555, 182, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 380, -484, 585, -483, 585, -483, -483, 546, -481,
	585, 563, 556, 585, -481, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 546, 590,
	-553, -338, 585, -365, -467, -426, 578, -365, -365, 342,
	-358, -426, 106, -386, 250, 311, 187, 268, 424, 235,
	-423, 589, -423, -451, 563, -213, -459, -283, -213, -461,
	585, -457, -451, -103, -502, -86, -99, -108, -129, -142,
	-185, -186, 578, -284, 585, 186, 585, 587, -506, 186,
	-347, -268, -284, -299, -300, -305, 2, 137, -358, -571,
	520, 439, 445, -347, -257, 38, -437, -476, -477, -527,
	589, -526, -479, -489, -485, -488, 370, 374, -508, 54,
	542, -491, 240, 4, -518, -520, 237, 238, 466, 51,
	394, 177, 125, 124, 335, 56, 504, 505, 506, 507,
	190, 191, 58, 543, 478, 69, 70, -571, 520, 439,
	445, -347, 182, -513, 2, -512, -511, 116, 451, -509,
	5, 2, 153, 2, 2, 2, -254, -233, 590, 64,
	418, 153, -356, 213, -233, 153, -233, 153, -306, 213,
	-305, -233, 153, -233, 590, 153, -233, 590, 153, 587,
	590, 153, -513, 2, -399, -505, -358, 38, -413, 2,
	126, -511, -618, 590, 270, -311, 285, 326, 209, 343,
	558, 336, 130, -514, 5, 4, -436, -448, 126, 278,
	240, -496, -498, 8, -497, 9, -499, 576, 577, -504,
	-503, 109, 587, -506, -230, 411, 452, 357, -229, 24,
	29, 142, 231, 314, 539, 159, -324, 232, -321, 361,
	153, 470, 529, -585, -586, 436, 499, 500, 90, 336,
	452, 357, 411, 153, -379, -381, 38, 118, 314, 356,
	61, 224, 290, 291, 472, 548, 153, 452, 357, 411,
	357, 24, 142, -245, -242, 452, -586, 99, 411, 484,
	383, -586, -232, 470, 529, -585, -586, 436, 411, -231,
	-326, -321, 361, 153, 589, 24, 142, 411, 452, 357,
	-601, -602, 29, 411, 357, -579, -550, 554, 153, -462,
	213, -593, -125, 262, 5, 10, -515, -125, -354, 590,
	590, -506, 578, 438, 437, 153, 153, 153, 153, 182,
	327, 2, 2, 2, 2, 2, 188, -588, -606, 2,
	2, -284, 213, -340, 342, -574, -355, 492, -284, 182,
	327, 43, -286, 213, 2, -289, 545, -579, 327, -288,
	213, -284, 38, 585, 327, 2, -399, 2, 229, -550,
	327, -463, -302, -284, -458, -302, 452, -277, 38, -423,
	-284, 586, 590, -473, -473, -515, -194, 554, 186, 102,
	585, 585, -206, -470, 590, -469, 220, -516, -126, -515,
	414, -515, -574, -268, 2, -284, 2, 492, 251, -515,
	-194, 220, -515, -515, -515, -505, 28, 455, 2, -180,
	450, 513, 89, 455, 2, -284, 492, 120, 229, 80,
	-254, -577, 182, -572, 425, 439, 520, -571, -284, 120,
	-284, 120, -284, 120, -284, -284, 2, 2, 2, 2,
	2, 85, 2, -426, 2, 85, 2, 46, -596, 182,
	2, 511, 2, 511, 2, -254, -254, -254, 473, 270,
	-284, 493, -609, 2, 186, 182, 2, 492, 229, 492,
	229, 120, 186, 74, 120, 28, 492, 435, -233, 590,
	-258, -218, -373, -505, -374, -373, -219, -218, -221, 182,
	393, 530, 314, 456, 255, -404, -403, 28, -426, -408,
	176, 313, -426, -406, -428, 576, 577, -497, -499, -357,
	336, -212, -212, -212, -344, -453, -426, 383, 229, -478,
	-476, -476, -282, -506, 504, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, 271, 217, 458, 50, 220, -426, 508, -426, -426,
	-426, -426, 308, 327, 332, 517, 167, 527, 138, 336,
	-621, 486, 40, -433, -213, -362, 585, -447, 35, 469,
	28, -440, 585, 2, -421, -426, -422, -309, -307, -254,
	576, 577, 578, 579, 580, 581, 566, 567, 568, 14,
	15, 16, 571, 575, 573, 574, 180, 95, 570, 286,
	431, 86, 170, 171, 172, 173, 253, 254, 17, 18,
	19, 34, 569, -359, -358, -358, 586, 544, 28, 138,
	578, 2, 586, 590, 38, 586, -426, -359, -439, -435,
	-358, -446, -445, 551, -394, -395, 559, 295, 123, 211,
	293, -396, 443, -500, 8, -506, 578, -557, 175, 204,
	585, 586, 2, 586, 2, 586, -426, 2, 586, -426,
	2, 586, -426, 2, 586, -426, 2, 586, 2, -426,
	-426, -426, -426, -426, -426, -426, -358, 8, -500, -500,
	504, 504, -500, -500, -500, -492, 370, 371, 372, 373,
	273, 274, 275, 276, 374, 375, 376, 377, 300, 301,
	302, 303, 296, 297, 298, 299, 304, 305, 306, 307,
	195, 196, 197, 198, 191, 192, 193, 194, -492, -388,
	2, -494, -358, 4, 559, 295, 123, 211, 293, 443,
	5, -388, 2, -389, 2, -426, -358, -390, -427, -428,
	576, 577, 569, -308, -440, -391, 2, -426, -359, -426,
	57, 265, 510, -392, -426, 186, -358, -358, 2, -358,
	2, -554, 38, -358, -350, 590, 186, 38, 4, -350,
	-350, 585, 586, 590, -387, 208, 289, 284, 243, -387,
	-457, -386, 250, -384, 352, -384, -384, -451, -269, 583,
	591, -506, -451, -450, -449, 38, -277, 349, -451, -451,
	587, 586, -450, 584, -569, 585, 588, 588, 588, 588,
	588, -284, 585, -358, -506, 587, 475, 2, 586, 244,
	244, 244, 244, 430, 586, 508, -573, -292, -296, 2,
	554, -101, 344, 586, 590, -349, 37, 583, 587, -500,
	2, 2, -495, 546, 585, 585, -395, 585, 186, -573,
	-296, 2, -348, 590, 508, -254, 2, -284, -356, -233,
	153, -356, -356, -233, 590, 153, -268, -287, -292, -294,
	-296, -254, -515, -516, -233, -288, -598, 586, 512, -414,
	-310, 393, 468, 412, 447, 488, 8, 9, 8, 9,
	590, -506, 590, -599, 93, 508, 78, 439, -247, 279,
	508, -417, 213, 78, -528, -271, 93, -529, -254, 72,
	526, 383, 185, 151, -599, 93, 383, -599, 93, 2,
	231, 93, 452, 473, 28, 60, -462, 41, 41, 28,
	-597, 325, 266, 550, 186, 560, 492, 229, 439, 508,
	508, -462, -381, -476, 118, 290, 291, 60, -501, -496,
	576, 577, -501, 60, -501, -501, -501, 554, -286, -462,
	439, 508, 508, 508, 402, 402, -242, 508, 508, -619,
	568, 402, 590, 41, 41, 28, -597, 325, 266, 186,
	508, -305, -269, 540, 42, 540, 42, 540, 508, 42,
	439, 508, 590, 42, 508, 508, -580, -259, 105, 320,
	283, 321, 97, 317, 96, 316, 103, 318, 104, 319,
	547, 330, 63, 315, 294, 322, -260, -261, 363, 538,
	-515, 452, 357, 411, 153, 220, -470, 220, -470, -297,
	-254, 587, -129, -426, -426, -129, -426, -129, 46, 153,
	2, -615, 259, 585, -314, 327, 186, -347, -471, 241,
	590, -355, -571, 153, -512, -380, -379, 327, -288, 213,
	2, 153, -338, 327, 147, 585, 391, 2, 153, -270,
	213, -255, -254, -399, -236, 496, 153, -377, 536, -409,
	-129, 585, 126, 38, -409, -366, -367, -468, -368, -271,
	585, -277, -423, -102, -472, 586, 586, 586, -193, 346,
	-192, -254, 5, -206, 536, -313, -418, -417, -532, -533,
	-528, 271, 229, 526, 243, 168, -339, -272, -271, 119,
	-200, 554, -125, -126, 586, -470, 220, 476, -194, -194,
	-470, -470, -284, 182, -515, -194, -194, -194, 2, 2,
	2, 2, -383, -284, -268, -305, -284, 587, -347, -347,
	-296, -292, -383, -268, -383, -268, -383, -268, -129, -426,
	2, 449, 182, 182, 587, -383, 391, 120, 492, 361,
	229, -284, -305, -284, -305, -268, 120, -268, 121, -284,
	-462, -374, -219, 343, 255, 456, -406, -407, -428, 429,
	430, -407, 429, 430, 8, 9, 8, 9, -223, 460,
	331, -356, 590, -227, 39, 134, 255, -284, 560, 149,
	-426, -426, 508, -621, 486, -433, 149, -426, 308, 332,
	517, 167, 527, 138, 336, 186, 585, -427, -427, 586,
	-360, -426, -426, 584, 593, 586, 587, 586, -343, 590,
	-341, -426, -358, -358, 586, 587, -358, -347, 584, 584,
	590, 586, -444, -445, 143, -426, 508, 508, 508, 508,
	585, 586, 587, -562, 353, 585, 585, -426, 586, 586,
	586, 586, 38, 590, 590, 590, 586, 590, 590, 590,
	586, 586, 586, 590, 586, 560, 560, 586, 586, 586,
	586, 590, 586, 590, 586, 186, 586, 586, -397, 367,
	586, 11, 12, 576, 577, 578, 579, 180, 580, 581,
	574, 575, 573, 566, 567, 568, 86, 286, 431, 14,
	15, 16, -308, 244, 220, -427, -427, -427, -427, 586,
	-431, -432, 186, 182, 38, -392, -392, -392, 586, 186,
	-358, 586, 586, 585, -555, 288, 327, 586, -420, -419,
	552, -467, -351, 2, -457, -279, -506, -420, -420, -358,
	-426, 250, 250, -385, 536, 342, -387, -457, -450, -502,
	-425, -424, 184, 39, 134, 323, 216, -450, -277, -338,
	-450, -450, -506, -451, -451, -449, 586, -570, -502, 586,
	-352, -460, -549, -343, 587, -506, -203, -550, -182, 5,
	332, -182, -182, -182, -347, 508, 508, 25, 368, -476,
	583, 584, 8, -506, 585, -500, -500, -500, -347, 186,
	186, 186, -512, -512, 2, -233, -356, -233, -233, -305,
	-306, -233, -233, -233, -378, 554, -503, -413, 524, 83,
	393, 504, -503, -229, 411, -271, -271, -284, -293, -254,
	199, 403, -512, 327, -417, 213, -235, 327, -476, -278,
	-254, 585, -401, 556, 255, 255, 536, -271, -278, 255,
	213, -271, 213, -278, 2, -278, -581, 393, 337, -426,
	60, -322, 277, 391, 328, -230, 411, 452, 357, -129,
	-129, -129, -129, -129, 585, -598, 536, 137, -284, -305,
	-284, -293, -512, -288, 452, 357, 411, 324, -299, -501,
	-501, -379, 452, 357, 411, -293, -512, -286, -512, -241,
	213, -254, -241, 213, 439, -268, 402, 560, 45, -619,
	-231, -129, -129, -129, -129, -129, 585, -269, -232, 411,
	5, 213, -271, 5, -271, 213, 5, -254, -271, -293,
	-512, -602, 24, 142, -271, -293, -512, -259, -515, 332,
	532, -579, 439, 508, 508, -462, -125, -197, 554, -125,
	-191, 225, 578, -576, -254, 545, -254, -312, -315, -313,
	-271, -209, -210, 556, 554, 153, -303, -284, 583, -194,
	-515, -284, -471, -294, -295, 153, -338, 327, -515, 38,
	153, 585, 2, 2, -287, 342, 327, -270, 213, -237,
	144, -619, -268, -420, -351, -376, -411, 420, 342, -339,
	541, -277, -376, -353, 590, 186, 568, 587, -339, -466,
	578, -102, -102, -194, 590, 585, 568, 568, 585, -515,
	-515, 586, 590, -235, -284, -270, 229, 229, -276, -255,
	586, 590, 587, 585, -202, 346, -201, 145, 257, 242,
	462, 463, 464, 465, 136, 461, -470, -200, -126, 186,
	186, -61, 554, 492, -194, 589, -254, -383, -383, -383,
	449, 449, -254, -280, -268, -284, -281, -305, 182, 182,
	-268, 530, -407, 343, 282, -453, -228, 562, -284, 589,
	-426, -426, 149, 149, -426, -427, -427, -426, 149, 186,
	585, -426, -437, 33, 33, 586, 590, -422, -426, -307,
	586, 544, -343, -343, 586, 578, -506, 589, 586, -435,
	146, -426, 502, 295, 211, 293, -396, 293, -396, -396,
	-500, 5, -506, 578, -563, -274, 585, -254, 552, -342,
	348, 586, -478, -476, -426, -426, -426, -426, -426, -500,
	-481, -481, -496, -496, -426, -431, -426, -478, -476, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, 138,
	327, 336, -427, -432, -431, -426, -426, -476, 586, 586,
	586, -358, -101, 585, 288, -370, 204, -426, -470, 590,
	-370, -370, 586, -457, -457, 585, -426, 250, 584, 590,
	592, 568, -338, 587, -449, -450, 584, 586, 590, 586,
	590, -410, 38, 586, -506, -420, -205, -204, 135, 53,
	107, 133, 332, -347, -347, 345, 5, 8, 583, 584,
	587, -500, 586, 586, 586, -347, -347, -347, -233, -233,
	119, 314, -426, 508, 508, 60, 220, 153, 327, 538,
	-534, -529, 151, -426, 585, 229, 585, 585, 2, -225,
	-226, 142, 452, 24, -600, 2, 536, 153, -233, 153,
	-233, 558, -322, 585, 585, 508, 439, -247, 508, 554,
	-358, -426, -195, 126, -505, -586, 589, -586, 589, 439,
	508, 508, 439, 508, 508, 327, 153, 554, 166, 166,
	560, -241, 554, -358, 508, -480, 48, 26, 327, -287,
	-233, 153, 508, 508, 520, 452, -515, 332, -293, -512,
	-288, 452, 357, 411, -470, -199, 346, -198, 145, 422,
	136, 257, 222, -470, -197, 186, 241, 554, -288, 2,
	586, 586, 590, -535, 38, 340, 340, 585, -284, -82,
	554, -469, -502, -582, 554, 43, -286, 38, 153, -579,
	-129, -288, -474, -475, 5, 38, -284, 153, 342, 327,
	-238, 264, -619, -510, -550, -343, -376, -365, 328, 91,
	586, -420, -367, -351, -426, 2, 586, -192, -193, -515,
	-515, -515, -194, -206, -206, -418, -316, 585, -270, -255,
	585, -206, -272, 2, -516, 590, 585, 568, 568, 568,
	-200, -470, -125, -129, 346, -284, 578, -383, -328, -327,
	361, 336, -328, 429, 429, 343, 176, 260, -227, -269,
	-426, -426, 149, 33, 33, -426, -426, -437, 586, -426,
	-426, -358, 584, 5, -426, 586, 586, 8, -426, 586,
	587, -564, -254, -426, 586, 60, 586, 586, 590, 590,
	586, 586, 586, 586, 586, 586, 586, -432, 186, 138,
	336, 585, 586, 586, -101, -434, 207, 60, -457, -434,
	-434, -385, -347, -457, -424, -269, 583, -506, -502, -460,
	585, 587, -204, 568, -515, -515, 554, 584, 2, 583,
	-506, 586, 119, -271, -271, 492, 429, -241, 383, -417,
	153, -536, 93, -538, 76, 168, 102, 327, 332, 526,
	383, 72, 126, 399, -611, 38, 565, 586, -345, -454,
	-549, 585, -254, -345, -347, 327, 481, 126, 327, 126,
	549, 119, 2, 520, 79, -271, -278, -347, -347, -284,
	-293, -512, 160, 586, 590, 568, 2, 578, 578, -293,
	-512, -288, -293, -512, -286, 153, -241, 359, 166, 160,
	586, -269, 5, 5, 153, -266, 76, -271, 5, -271,
	-287, 119, 439, 508, 508, -197, 590, 585, 568, 568,
	-197, -516, -125, 2, -338, -329, 231, -271, -533, -530,
	-531, 383, -537, -539, 168, 383, -129, 2, -208, -207,
	-254, 5, 585, -314, 346, 584, -584, 346, -583, 117,
	136, -512, -380, -129, -288, -338, 586, 590, 147, -402,
	536, -269, -284, 153, -239, 263, -619, -510, -236, -405,
	-403, 139, 585, 342, -129, -343, 568, 586, 586, 119,
	119, 223, 152, -345, 585, 585, -347, 119, 586, -201,
	-202, -515, -125, -515, -200, -470, -62, -63, 229, 93,
	366, -281, 492, 229, 585, 585, -227, -426, -426, -426,
	586, -343, -506, 578, -558, 361, 586, -453, -426, -426,
	-427, 186, 585, -437, 586, -559, 553, -426, -371, -372,
	-426, 428, 108, 205, -559, -559, 586, -502, 2, -515,
	2, 583, 2, 220, 38, 402, -417, -278, -282, -275,
	-254, 168, 213, 332, 549, -401, 255, 585, -427, -284,
	585, 2, 30, -612, 130, 234, 586, 590, -455, -265,
	-254, -426, -455, 586, 586, 332, 332, 549, -426, -476,
	585, -233, -233, 586, 586, -426, 508, -505, 100, -503,
	2, -586, -241, -268, -426, 508, 5, -233, -282, -233,
	-233, -266, 520, -293, -512, -288, -198, -199, -515, -125,
	-197, 38, -319, 233, 2, -535, 255, -275, 255, -610,
	554, 586, 590, 568, 568, -312, -209, -83, -84, 509,
	-469, 590, 585, 568, -338, 38, 5, 585, 585, -254,
	342, 585, -269, -249, 92, -619, -510, -237, -376, 328,
	-347, 93, -405, -433, -194, 585, 585, -317, 81, 94,
	127, 212, 189, 230, 473, 479, 28, -317, 586, -345,
	-345, 586, 585, -194, 586, 590, 28, 585, 28, 585,
	-284, -305, -358, -358, 586, -343, 60, 590, 586, 586,
	-427, -437, 586, -560, -561, -274, 590, 585, 585, 453,
	584, 2, -241, 383, -254, -538, -275, 327, 536, -426,
	-256, 585, -426, 38, 234, 131, 218, -416, -613, 101,
	482, 221, -454, -227, 586, -415, 536, 399, -266, -345,
	585, 585, 585, 568, 186, 585, -480, -233, -287, 586,
	-591, 397, -129, -323, -324, 220, 585, -318, 342, 119,
	314, -207, -503, -503, 586, 38, -84, 9, -583, -584,
	-426, 38, -129, -474, -345, -284, -345, 342, -243, -242,
	272, -510, -238, 586, -278, -376, -516, -516, -415, 586,
	586, -516, -63, -347, -347, 586, 586, -565, 391, 430,
	206, -358, -344, 586, 590, 38, -372, 2, 2, 2,
	402, 153, 208, 586, -540, 287, -254, 586, 131, 218,
	-319, 585, -228, -455, -319, 208, -284, -587, 536, 586,
	-331, -330, -327, -333, -332, -327, -358, -503, 100, 359,
	-358, -266, -594, 187, -593, 5, 10, -209, 359, -346,
	-456, -271, 82, 119, -329, -129, 586, -129, 586, 586,
	-402, 586, -284, -240, -517, 402, 404, -619, -239, -420,
	586, 586, -416, -415, -325, -321, 586, 586, 586, 586,
	-566, -567, 50, 523, 109, -426, -566, -566, -561, -563,
	168, 554, -541, -544, -543, 342, 459, 187, 360, 586,
	481, 548, -325, -347, 554, -338, -426, -415, 586, 590,
	541, 586, 590, 541, 586, 186, 586, -233, -196, 554,
	46, -318, -284, 586, 590, 382, 132, 142, -319, -610,
	-415, 585, -416, 585, -246, -245, -619, -496, -249, 139,
	-194, -194, -319, -416, -210, 554, -194, -568, 151, -567,
	379, 181, 429, 379, 181, -568, -568, -275, 55, -543,
	342, -544, 342, 530, 132, -612, 586, 55, -540, -319,
	-330, 220, -332, 186, 359, 437, -593, 30, -248, -247,
	585, -456, 430, 430, 2, -323, -318, -416, -345, -319,
	-345, -244, -347, -243, 328, 530, -325, -319, -420, 109,
	204, 503, 314, 33, 568, -542, 314, 418, 64, 452,
	-542, -420, 568, -541, 585, 585, 346, -347, 2, -209,
	-319, 586, -325, 586, -240, 452, -210, -325, 429, 350,
	-567, -426, 23, 332, 126, -426, -612, -358, -358, -193,
	585, 586, -318, -325, -415, -210, -416, -246, -366, -420,
	-210, 586, 586, -193, -234, 64, 418, -248, -210, -416,
	-420, -319, -420, -420, -320, -321, 508, 586, -420, -319,
	-325, 585, -325, -210, -358, -210, -420, 586, -420, -320,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 542, 543, 545, 546, 547, 549,
	550, 552, 554, 556, 557, 558, 560, 561, 563, 564,
	565, 566, 567, 569, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	636, 638, 0, 1335, 1337, 1339, 1341, 0, 781, 0,
	36, 37, 39, 0, -2, 327, 329, 331, 0, 358,
	360, 361, 363, 365, 366, 367, 369, -2, 0, 475,
	476, 478, 480, -2, 0, 976, 978, 0, 625, 627,
	0, 981, 983, 0, 0, 647, 648, 0, 1442, -2,
	641, 643, 645, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 727, 729, 731, 733, 735, 737, 738, 740,
	742, 744, 745, 747, 748, 750, 752, 754, 756, 758,
	760, 762, 764, 766, 768, 770, 772, 774, -2, 777,
	778, -2, -2, 0, -2, -2, -2, 1353, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 419, 421, 423,
	425, 427, 430, 432, 434, 1500, 482, 484, 486, 488,
	490, 492, 494, 0, -2, 1514, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 103,
	104, 105, 106, 107, 108, 109, 110, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 101, 71, 0, 0, 1473, 1475, 1477, 1479,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 544, 548, 551, 553, 555,
	559, 562, 568, 570, 572, 527, 528, 531, 2205, 2222,
	2223, 2224, 2227, 2228, 2229, 2230, 2231, 2232, 2675, 2757,
	2758, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 529, 530, 1153, 0, 596, 594, 2190, 597,
	2476, 599, 601, 469, 470, 471, 472, 473, 474, 0,
	618, 609, 1512, 619, 621, 622, 623, 624, 591, 589,
	0, 618, 2258, 616, 1333, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 398, 1202, 1203,
	1204, 1318, 1319, 2520, 1360, 0, 227, 637, -2, -2,
	-2, 2640, -2, 669, -2, 676, 2644, 2523, 681, 0,
	683, -2, 686, 1336, 1338, 1340, 779, 780, 2208, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 237, -2, -2, -2, -2, 0, 0,
	2568, 2310, 2158, 2224, 2161, 2156, 328, 330, 332, 333,
	0, 0, 0, 0, 0, 0, 359, 362, 364, 368,
	-2, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1037, 1029, 1030, 1260, 0, 0,
	0, -2, 477, 479, 532, 533, 0, 1501, 1501, 540,
	541, -2, 0, 0, 0, 0, 298, 285, 977, 979,
	980, 0, 0, 0, 0, 626, 628, 0, 0, 266,
	982, 984, 985, 0, 0, 0, 0, 0, 300, 0,
	0, 642, 644, 646, 711, 713, 715, 717, 719, 721,
	723, 725, 728, 730, 732, 734, 736, 739, 741, 743,
	746, 749, 751, 753, 755, 757, 759, 761, 763, 765,
	767, 769, 771, 773, 775, 776, 787, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 879, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	957, 0, 0, 790, 792, 793, 794, 0, 853, 877,
	878, 887, 0, 1193, 1502, 1362, 1343, 1357, 1362, 1345,
	1346, 1347, 1348, 1349, 1354, 1356, 1350, 1351, 1352, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 420, 422,
	424, 426, 428, 431, 433, 435, -2, 1471, 1472, 483,
	485, 487, 489, 491, 493, 495, 629, 0, 631, 0,
	791, -2, 0, 1506, 1506, 1506, 0, 0, 1472, 1470,
	0, 634, 635, 690, 691, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 1862, 0, 692, -2, 1895,
	1897, 2615, 2450, 2640, 2031, 1899, 1900, 1901, 1902, 1903,
	0, 1905, 1906, 1907, 1908, 1909, 1910, 0, 1912, 0,
	1917, 1918, 1919, 0, 2622, 2135, 2218, -2, 0, 0,
	2628, 2214, 0, 1998, 1935, -2, -2, 2241, 2220, 1706,
	1707, 1708, 1709, 1710, -2, -2, 2658, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 0, 2603,
	2623, 2624, 2629, 2631, 2625, 2612, 1960, 2323, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1733, 1742, -2, -2, -2, -2, -2, -2, -2,
	2616, 2617, 2634, 2637, 2643, 2648, 2649, 2621, 2630, 2657,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 1734, -2, -2, -2,
	-2, 1489, 2489, 1492, 1153, 1490, 1474, 1476, 0, 1478,
	0, 0, 0, 1483, 1509, 1507, 0, 1558, 1487, 1488,
	1576, 1576, 1600, 0, 1581, 0, 1600, 1501, 1627, 0,
	1587, 2512, 1936, 1937, 0, 2224, 2219, -2, -2, 2655,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 0,
	598, 600, 0, 0, 0, 617, 1511, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 403, 404, 405, 2623,
	0, 0, 0, 410, 0, 412, 413, 414, 415, 416,
	417, 418, 196, 2623, 500, 525, 0, 196, 2623, 503,
	196, 2623, 506, 0, 509, 1258, 196, 2623, 512, 2186,
	196, 2623, 515, 517, 2194, 196, 2623, 521, 2201, 2199,
	522, 2623, 524, 303, 301, 302, 2237, 2238, 2245, 2246,
	2247, 2248, 2656, 2658, 1329, 1330, 1331, 1332, 0, 1359,
	1259, 639, 640, 0, 664, 0, 668, 2611, -2, 0,
	2532, -2, 672, 1363, 1367, 1368, 1369, 1370, 1371, 0,
	0, 0, 0, 1376, 0, 0, 678, 0, 0, 665,
	666, 684, 687, 0, 782, 783, 784, 785, 786, 70,
	0, 2623, 1627, 72, 0, 2180, 2249, 2250, 2251, 2252,
	2253, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684,
	2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694,
	2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714,
	2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724,
	2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734,
	2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744,
	2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754,
	2755, 2756, 76, 0, 2623, 81, 0, 2623, 0, -2,
	92, 0, 102, 0, 2183, 111, 0, 2623, 0, 2155,
	-2, 0, 208, 286, 287, 288, 289, 0, 1004, -2,
	2623, 1201, 0, 0, 0, 0, 967, 2152, 2157, 968,
	2176, 969, 2162, 0, 334, 335, 336, 337, 338, 0,
	339, 2623, 341, 342, 0, 344, 345, 2623, 347, 348,
	0, 350, 0, 249, 250, 2623, 372, 374, 0, 376,
	377, 0, 379, 0, 0, 0, 383, -2, 399, 0,
	396, 386, 387, 389, 390, 391, 392, 393, 0, 439,
	437, 2191, 0, 0, -2, 2623, 0, 1001, 0, 0,
	1238, -2, 2623, 1198, 0, 1245, 2623, 1241, 0, -2,
	0, 1499, 2623, 1380, 1033, 1034, 1035, 1036, 1639, 466,
	0, 1407, 0, 1409, 0, 1428, 1633, 1576, 0, 0,
	1638, 0, -2, 585, 2207, -2, 535, 0, 536, 0,
	-2, 0, 315, 0, 0, 986, 987, 988, 989, 990,
	993, 994, 995, 996, 1613, 267, 269, 0, 0, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 0, 0,
	649, 0, 0, 788, 789, 0, 0, 799, 800, 801,
	0, 315, 2524, 2485, 2344, 808, 0, 811, 814, -2,
	0, 0, 0, 0, 818, 0, 823, 824, 825, 0,
	0, 829, 831, 975, 833, 0, 0, 835, 0, 839,
	0, 842, 0, 844, 0, 846, -2, -2, -2, 854,
	855, -2, 860, -2, 0, 864, -2, 0, 866, 0,
	869, -2, 0, 879, 875, 876, 0, 0, 0, 0,
	895, 896, 0, 905, 0, 908, 909, 910, 0, 912,
	913, 0, 915, 916, 917, 918, 0, 0, 921, 922,
	-2, -2, 926, 928, 0, -2, 0, 944, 0, 948,
	0, 0, 956, 0, 0, 795, 796, 196, 1631, 1342,
	-2, 1344, 0, -2, 0, 630, 0, 633, 1531, 1457,
	1454, 0, 1528, 1529, 1458, 0, 0, 0, 1465, 0,
	1504, 1505, 0, 0, 0, 1444, 1445, 0, 0, 0,
	0, 2037, 2038, 2039, 2040, 2053, 2041, 2042, 2052, 2050,
	2051, 2043, 2044, 2049, 2063, 2064, 2054, 2055, 2045, 2058,
	2056, 2057, 2059, 2060, 2061, 2062, 0, 0, 2068, 0,
	2046, 2047, 2048, 2076, 0, 0, 2077, 0, 2079, 0,
	2069, 2065, 2066, 2067, 0, 1841, 1843, 2143, 0, 0,
	0, 2075, 2070, 2071, 1779, 1780, 1781, 1782, 1783, 1816,
	1820, 1821, 0, 0, 1896, 2140, 2139, 1898, 0, 0,
	2091, 0, 1911, -2, 0, 2032, 2086, 0, 0, 1920,
	1921, 1922, 0, 0, 2091, 0, 0, 2134, 1932, 1933,
	1771, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 1719, 0, 1721, 0, 1722, 1723, 1730, 1743,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 2115, -2, 0, 0, 0, 0, 1735, 0,
	1491, 0, 0, 1562, 2144, 2148, 2149, 1562, 1562, 0,
	0, 2092, 1624, 1624, 0, 0, 1619, 1619, 1619, 1617,
	1600, 0, 1600, 1610, 0, 1600, 1600, 0, -2, 1581,
	0, 0, 1610, 0, 1594, 573, 575, 577, 579, 580,
	581, 583, 1628, 1629, 0, 0, 0, 0, 2225, 0,
	0, 0, 0, 0, 2210, 0, 355, 0, 0, 0,
	2578, 2523, -2, 603, 620, 1501, 0, 2094, 1654, 1658,
	0, 1660, 1661, 1662, 1663, 1664, 0, 0, 1655, -2,
	1731, 1733, 1754, 2242, 2243, 2244, 1714, 1715, 1716, 1717,
	1718, 1726, 1713, 1713, 1713, 1724, 1753, 1745, 1753, 1749,
	1699, 1700, 1701, 1736, 1737, 1738, 1739, 0, 2578, 2523,
	-2, 611, 0, 0, 1439, 212, 214, 215, 216, 217,
	218, 400, 0, 407, 408, 409, 0, 496, 0, 194,
	195, 0, 196, 2623, 501, 0, 504, 0, 196, 2623,
	2150, 510, 0, 513, 0, 0, 519, 0, 0, 0,
	0, 0, 196, 1441, 0, 0, 0, 0, -2, 674,
	679, 680, 0, 1365, 0, 1372, 701, 702, 703, 1374,
	1375, 0, 1377, 677, 704, 705, 706, 707, 708, 709,
	0, 2164, 2165, 2166, 2167, 2170, 2171, 0, 0, 675,
	694, 682, 0, 688, 112, 1315, 0, 0, 155, 0,
	1315, 1315, 0, 0, 0, 0, 181, 0, 1072, 0,
	0, 0, 0, 127, 140, 151, 124, 125, 0, 0,
	0, 0, 0, 0, 82, 1175, 0, 1178, 0, 0,
	0, 0, 0, 0, 0, 1191, 0, 0, 0, 0,
	0, 0, 0, 98, 99, 0, 139, 0, 0, 1404,
	0, 134, 114, 0, 0, 127, 141, 153, 0, 185,
	187, 1069, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 219, 0, 0, 0, 1199, 0, 1498, 0, 0,
	2623, 0, 1613, 2392, -2, -2, 267, 1613, 966, 0,
	0, 2225, 2160, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 378, 380, 381, 382, 0, 1237, 0, 388,
	429, 1124, 2623, 0, 0, 456, 451, 0, 453, 0,
	0, 0, 1174, 2623, 1172, 2195, 0, 1196, 0, 1153,
	2623, 2193, 0, 0, 0, 1246, 2234, 1255, 1259, 1394,
	0, 468, 0, 1410, 1412, 0, 0, 1634, 0, 1636,
	1576, 1501, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 273, 0, 1612, 0, 0, 1613, 267,
	2500, 315, 315, 1613, 651, 1613, 653, 0, 0, 802,
	803, 0, 315, 315, 315, 809, 810, 812, 813, -2,
	-2, -2, -2, 815, 816, 902, 0, 0, 0, 901,
	828, 832, 0, 960, 2508, 2523, 2578, 973, 902, 2310,
	902, 2310, 902, 2310, 843, 845, 848, 890, 898, 859,
	865, 0, 861, 867, 870, 0, 872, 880, -2, 0,
	882, 0, 884, 0, 886, 902, 903, 906, 911, 914,
	919, 920, 0, 935, 940, 941, 937, 0, 0, 0,
	0, 0, 0, 951, 952, 0, 0, 959, 1192, 0,
	1355, 1531, 1457, 632, 1448, 1530, 1449, 1456, 1459, 0,
	0, 1461, 0, 1463, 0, 1526, 1527, 1534, 1535, 0,
	1545, 1546, 1538, 0, -2, 0, 0, 1541, 1542, 1467,
	0, 1484, 1485, 1486, 1515, 1518, 1274, 0, 2757, 1775,
	1649, 1776, 1777, 2179, 0, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, -2, -2, -2, -2, -2,
	-2, -2, -2, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, -2, -2, -2, 1817, 1818, 1819,
	-2, 2078, 2080, 0, 2143, 0, -2, 0, -2, -2,
	-2, -2, 1838, 0, 1840, 1845, 1847, 1849, 0, 0,
	0, 0, 2142, 1859, 2126, 2127, 0, 0, 2034, 2035,
	2036, 1844, 0, 1863, 2141, 2138, 0, 0, 2072, 0,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 0, 2090, 1514, 1924, 0, 0, 0,
	0, 1931, 1916, 2088, 0, 2087, 0, 0, 0, 2098,
	0, 2133, 2129, 0, 2177, 1770, 1757, 1758, 1759, 1760,
	1761, 1762, 1772, 0, 2174, 2211, 2217, 2008, 0, 0,
	0, 1961, 1962, 1963, 1964, 1965, 0, 1967, 1968, 0,
	1970, 1971, 0, 1973, 1974, 0, 1976, 1977, 1978, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 0, 0,
	1980, 0, 2101, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1982, 0, 1984, 2092, 2112, 0, 0, 1864,
	0, 0, 0, 0, 2032, 0, 1987, 2092, 2120, 0,
	0, 0, 0, 0, 2092, 0, 2125, 0, 1994, 0,
	1996, 1493, 0, 0, 1644, 0, 0, 0, 2147, 1644,
	1644, 0, 1557, 0, 0, 1620, 1621, 1622, 1623, 0,
	0, 1624, 0, 1614, 1618, 1615, 1616, 1610, 1573, 0,
	0, 2181, 1610, 1579, 1609, 0, 1153, 1599, 1610, 1610,
	0, -2, 1583, 1600, 0, 0, 574, 576, 578, 582,
	584, 0, 0, 1514, -2, 0, -2, 317, 1152, 0,
	0, 0, 0, 593, 595, 0, 0, 516, 0, 608,
	0, 587, 0, 590, 0, 1645, 1648, 0, 0, 1659,
	1665, 1666, 0, -2, 0, 0, 1755, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 411, 526, 196, 498,
	0, 196, 196, 507, 0, 0, 196, 518, 196, 2202,
	196, 2200, 304, 523, 1440, 230, 0, 667, 0, 1364,
	1373, 0, 698, 0, 700, 0, 2168, 2172, 2169, 2173,
	0, 689, 0, 0, 0, 0, 1314, 0, 1281, 0,
	0, 159, 2623, 0, 198, 0, 0, 1117, 2187, 0,
	1109, 0, 0, 2330, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 1177, 1179, 1186, 1188, 0, 1182, 2175,
	0, 0, 1183, 0, 1185, 1187, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	1403, 1404, 0, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 2154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 1231, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 0, 0,
	-2, 0, 0, 0, 0, 0, 240, 0, 306, 2153,
	2163, 0, 991, 992, 340, 343, 346, 349, 236, 0,
	384, 0, 0, 1039, 1014, 0, 0, 438, 315, 0,
	0, 452, 456, 2204, 999, 1170, 1173, 0, 1153, 2623,
	1210, 0, 0, 0, 0, 0, 0, 1244, 0, 0,
	2623, 2182, 2233, 2234, 1396, 1404, 0, 1644, 0, 1426,
	1413, 0, 0, 0, 1426, 1430, 1431, 1433, 1434, 0,
	0, 1635, 1641, 534, 586, 1501, 1501, 315, 313, 2453,
	311, 308, 310, 0, 0, 0, 1040, 1042, 1043, 1044,
	198, 0, 2234, 1109, 2381, 2234, 0, 1416, 1418, 0,
	261, 0, 270, 1613, 268, 273, 0, 0, 0, 450,
	650, 655, 797, 0, 315, 805, 806, 807, 850, 892,
	900, 939, 817, 819, 820, 821, 0, 0, 974, 970,
	971, 972, 834, 902, 837, 902, 840, 902, 863, 868,
	874, 881, 0, 0, 0, 894, 0, 0, 0, 0,
	0, 0, 0, 945, 946, 947, 949, 954, 953, 958,
	1632, 1452, 1453, 1455, 0, 1464, 0, 0, 1540, -2,
	-2, 1539, 1543, 1544, -2, -2, -2, -2, 1460, 0,
	1469, 1466, 0, 1525, 1272, 1273, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1860, 0, -2, 1839, 1842,
	1846, 1848, 1850, 0, 0, 0, 0, 0, 0, 2081,
	0, 2083, 1861, 2136, 2139, 2074, 0, 2030, 0, 0,
	1513, 1514, 1514, 0, 1930, 0, 2089, 0, 2096, 2097,
	0, 1923, 0, 2130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 1966, 1969,
	1972, 1975, 0, 0, 0, 0, 1955, 0, 0, 0,
	1959, 1725, 1711, 0, 1753, 1751, 1752, 1746, 1753, 1750,
	1703, 0, 1702, 0, 1979, 0, 1981, 1983, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 1868, 1869, 1889, 1986,
	2118, 2119, 0, 0, 0, 0, 0, 0, 1992, 0,
	2124, 1993, 1995, 1501, 0, 1494, 0, 1559, 1548, 1643,
	0, 2145, 1613, 1561, 1563, 2146, 2184, 1548, 1548, 0,
	2093, 0, 0, 1604, 0, 0, 0, 1606, 1577, 0,
	0, 1571, 0, 1567, 1568, 1569, 1570, 1578, 1153, 1608,
	1580, 1584, 2211, 0, 1610, 0, 1595, 0, 1597, 1630,
	0, 1589, 1592, 0, 0, 2226, 1644, 0, 351, 356,
	357, 352, 353, 354, 602, 0, 0, 0, 0, 2095,
	0, 1650, 0, 1656, 0, 0, 0, 0, 610, 0,
	0, 0, 213, 1438, 406, 497, 196, 502, 505, 2151,
	196, 511, 514, 520, 226, 0, 663, -2, 696, 697,
	699, 0, 695, 156, 1315, 0, 0, 1277, 1279, 2198,
	1283, 1289, 1292, 0, 161, 2623, 172, 0, 1088, 0,
	2185, 0, 0, 0, 0, 0, 0, 1317, 0, 0,
	2623, 196, 2623, 196, 175, 177, 180, 0, 184, 182,
	0, 1076, 0, 0, 1079, 113, 1315, 0, 0, 116,
	120, 128, 129, 132, 0, 0, 0, 138, 0, 0,
	0, 1294, 1298, 1306, 0, 0, 0, 1180, 1181, 1184,
	1190, 83, 0, 0, 0, 1302, 1304, 1310, 93, 94,
	2623, 2196, 96, 2623, 0, 1276, 0, 0, 0, 0,
	186, 118, 122, 130, 131, 133, 0, 1312, 115, 0,
	211, 0, 0, 201, 196, 2623, 0, 203, 0, 204,
	205, 220, 0, 0, 0, 1002, 1003, 1232, 1194, 1195,
	0, 1200, 0, 0, 0, 0, 1613, 232, 0, 1613,
	240, 0, 2159, 0, 371, 0, 0, 0, 0, 1038,
	1135, 0, 1009, 0, 0, 0, 444, 440, 0, 449,
	455, 454, 460, -2, 0, 0, 0, 0, -2, 0,
	0, 1248, 1242, 1243, 0, 0, 0, 0, 2623, 1398,
	1404, 0, 1499, 1514, 467, 1405, 1426, 0, 0, 0,
	1415, 1411, 1408, 1644, 0, 0, 0, 0, 0, 1637,
	1640, 537, 538, 290, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 1045, 1049, 0, 2234, 2234, 0, 2189,
	0, 0, 0, 0, 271, 0, 274, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 273, 263, 1613, 0,
	0, 652, 0, 0, 804, 0, 827, 836, 838, 841,
	883, 885, 902, 929, 930, 1066, 0, 1066, 0, 0,
	950, 1462, 0, 1537, 1468, 1519, 1520, 0, 1274, 0,
	1778, 1823, 0, 0, -2, 0, 0, 1827, 0, 0,
	0, -2, 0, 0, 0, 2082, 2084, 0, 2138, 2073,
	1925, 0, 0, 0, 1929, 1913, 1914, 0, 2033, 2099,
	2128, 2132, 0, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	0, 2178, 2212, 2216, 2006, 2007, 2011, 2192, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 1748, 0, 0, 2100, 2111, 2113, 1865, 1866, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, -2,
	-2, -2, 1883, 1884, 1885, -2, -2, -2, 1890, 0,
	0, 0, 2114, 2116, 2117, 2121, 2122, 0, 1989, 1990,
	1991, 2123, 0, 1501, 1495, 1556, 0, 1642, 1560, 0,
	1556, 1556, 1508, 1602, 0, 0, 1626, 0, 1574, 0,
	1575, 0, 1607, 0, 1582, 1585, 1586, 1596, 0, 1588,
	0, 1591, 0, 1925, -2, 316, 318, 320, 0, 323,
	324, 0, 0, 605, 606, 604, 588, 0, 0, 1652,
	0, 0, 1728, 1732, 1756, 613, 614, 612, 499, 508,
	228, 0, 1611, 0, 0, 0, 0, 0, 0, 197,
	1086, 1116, 0, 0, 0, 1108, 0, 0, 1122, 163,
	164, 0, 0, 0, 0, 173, 0, 0, 170, 0,
	179, 183, 1073, 0, 0, 0, 0, 1282, 0, 0,
	0, 135, 136, 137, 0, 142, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1388, 1389,
	0, 1383, 0, 0, 0, 199, 0, 0, 0, 1271,
	222, 0, 0, 0, 0, 0, 1235, 1236, 1295, 1299,
	1307, 0, 0, 0, 240, 238, 0, 241, 0, 244,
	245, 0, 247, 240, 234, 0, 0, 0, 1153, 385,
	1012, 1123, 0, 1125, 0, 1010, 0, 0, 1124, 436,
	0, 443, 0, 457, 0, 0, 1174, 0, 0, 1197,
	1208, 1153, 0, 1247, 1249, 0, 1257, 0, 0, 0,
	1400, 1404, 0, 1393, 1394, 1533, 1406, 1424, -2, 0,
	0, 1514, 1432, 1429, 1435, 1436, 0, 312, 0, 307,
	309, 0, 293, 0, 0, 1041, 1046, 0, 0, 0,
	0, 0, 1417, 1419, 0, 0, 0, 0, 0, 0,
	262, 273, 1613, 299, 0, 798, 822, 893, 931, 1065,
	0, 0, 933, 0, 0, 1536, 1523, 1524, 1521, 1274,
	1825, 1829, 0, 0, 0, 1831, -2, 0, 1853, -2,
	-2, 2085, 2137, 1904, 1514, 1926, 1928, 1915, 2131, 1773,
	0, 2013, 2010, 0, 1997, 0, 1950, 1951, 0, 0,
	1954, 1956, 1957, 1958, 1712, 1705, 1704, 2110, 0, 0,
	0, 0, 1988, 1496, 0, 2002, 0, 0, 1564, 2002,
	2002, 1603, 0, 1605, 1572, 1565, 0, 2212, 1598, 1590,
	0, 0, 321, 0, 325, 326, 0, 1646, 1651, 0,
	1657, 1727, 229, 157, 158, 1286, 1290, 1287, 0, 160,
	0, 1087, 0, 1090, 0, 0, 0, 0, 1097, 1109,
	0, 0, 0, 0, 0, 1110, 0, 1139, 0, 1262,
	1269, 0, -2, 0, 0, 0, 166, 189, 0, 0,
	190, 1316, 168, 0, 0, 196, 196, 0, 0, 1278,
	1280, 1293, 0, 0, 0, 0, 145, 0, 0, 1296,
	1300, 1308, 1303, 1305, 1311, 0, 97, 0, 1390, 0,
	0, 1313, 209, 210, 0, 196, 0, 196, 202, 196,
	1271, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	233, 305, 240, 373, 0, 1060, 0, 1135, 1127, 1128,
	1129, 0, 1134, 1136, 0, 0, 1026, 1011, 0, 1022,
	0, 0, 1039, 1014, 0, 441, 458, 0, 461, 0,
	464, 1000, 1171, 1205, 1153, 0, 1239, 0, 0, 0,
	0, 0, 0, 0, 1402, 1404, 0, 1395, 1396, 1426,
	1532, 0, 0, 0, 1414, 1533, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 275,
	0, 276, 277, 278, 264, 265, 654, 656, 0, 0,
	662, 1064, 0, 0, 0, 0, 1522, 1833, -2, -2,
	1854, 0, 2213, 2215, 1514, 0, 1999, 1516, 0, 0,
	-2, 0, 0, 0, 1497, 1480, 0, 1555, 1547, 1549,
	1551, 2511, 2305, 2622, 1481, 1482, 1625, 0, 1593, 322,
	607, 0, 1653, 0, 0, 1288, 162, 0, 1091, 1092,
	2188, 1094, 0, 1096, 1098, 1099, 1100, 0, 1103, 2236,
	0, 1107, 0, 1118, 1140, 0, 1149, 0, 1264, 1274,
	1268, 0, 1266, 1151, 0, 165, 167, 191, 188, 1271,
	0, 169, 178, 0, 0, 117, 0, 0, 2299, 148,
	146, 144, 95, 1275, 119, 0, 211, 221, 1270, 223,
	206, 196, 0, 1297, 1301, 1309, 242, 0, 243, 246,
	0, 0, 1075, 0, 1013, 1126, 0, 1137, 1138, 1016,
	0, 1015, 0, 0, 0, 0, 0, 442, 445, 0,
	448, 0, 0, 0, 0, 0, 1250, 1248, 0, 1256,
	0, 0, 0, 1382, 0, 0, 1397, 1398, 465, 1420,
	0, 0, 1426, 1437, 292, 0, 0, 1047, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1048, 1151, 0,
	0, 1115, 0, 297, 272, 0, 658, 0, 660, 0,
	932, 934, 0, 0, 1927, 2017, 0, 0, 1952, 1953,
	-2, 0, 1893, 2001, 2003, 0, 0, 0, 0, 0,
	1566, 1647, 1284, 0, 1291, 1089, 1093, 0, 0, 0,
	1157, 0, 0, 1111, 0, 1143, 1144, 1060, 0, 1145,
	1146, 1147, 1263, 1525, 1269, 1060, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 200, 224, 1271, 239,
	257, 0, 1206, 1014, 1074, 0, 0, 1024, 0, 1027,
	0, 1023, 1020, 1021, 1012, 0, 446, 447, 462, 0,
	463, 0, 1209, 0, 0, 1257, 0, 0, 1385, 1381,
	1404, 1399, 1400, 1644, 1423, 1427, 0, 0, 1149, 1151,
	1071, 0, 657, 0, 0, 942, 943, 0, 0, 0,
	0, 2012, 1517, 1894, 0, 0, 1550, 1552, 1553, 1554,
	1285, 0, 0, 1102, 1162, 0, 0, 0, 1141, 1142,
	1071, 0, 1267, 1265, 1120, 0, 1153, 171, 0, 1151,
	0, 1080, 0, 0, 1083, 0, 0, 149, 2299, 147,
	0, 196, 260, 0, 254, 252, 253, 1016, 0, 0,
	1131, 1133, 0, 1028, 1060, 1026, 459, 1207, 1240, 1151,
	0, 1149, 0, 1392, 1404, 1386, 1387, 0, 1402, 0,
	315, 315, 1060, 1149, 1014, 1070, 315, 659, 661, 2009,
	2029, 2018, -2, 2581, 2306, 0, 2029, 2029, 2004, 2005,
	0, 0, 1104, 1158, 1159, 0, 1154, 1155, 1156, 2235,
	1105, 1106, 1139, 0, 0, 1157, 192, 1060, 1077, 0,
	0, 1078, 0, 0, 152, 0, 154, 225, 248, 0,
	0, 1008, 0, 1130, 0, 0, 0, 0, 1075, 1016,
	1149, 0, 1060, 0, 1378, 1391, 0, 1401, 1382, 0,
	294, 295, 1071, 1060, 1644, 0, 296, 2014, 0, 0,
	2020, 2021, 2022, 2023, 2024, 2015, 2016, 1095, 0, 1160,
	0, 1161, 0, 0, 0, 1644, 1148, 0, 1162, 176,
	1081, 0, 1084, 0, 150, 0, 255, 256, 1005, 1007,
	0, 1132, 1017, 0, 1019, 1014, 1025, 1060, 0, 1071,
	0, 1384, 2197, 1385, 1421, 0, 1014, 1071, 1114, 0,
	2026, 2027, 0, 0, 0, 1163, 0, 1166, 1167, 0,
	1164, 1119, 0, 1139, 0, 0, 0, 0, 1018, 1016,
	1071, 1151, 1014, 1149, 1392, 0, 1644, 1014, 2025, 2028,
	2019, 1101, 1165, 1168, 1169, 1150, 1121, 0, 0, 258,
	0, 1063, 1008, 1014, 1149, 1644, 1060, 1379, 1644, 1112,
	1644, 1068, 0, 0, 1059, 1061, 1062, 1006, 1644, 1060,
	1253, 1071, 1422, 1113, 1082, 1067, 0, 259, 1251, 1071,
	1014, 0, 1014, 1644, 0, 1644, 1254, 1068, 1252, 1085,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 574, 3, 580, 575, 3,
	585, 586, 578, 576, 590, 577, 587, 579, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 593, 3,
	566, 568, 567, 571, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 583, 3, 584, 581, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 591, 573, 592, 569,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 570, 57909, 572,
	57910, 582, 57911, 588, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1364
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1369
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1371
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1374
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1375
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1376
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1377
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1378
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1379
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1380
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1381
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1382
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1383
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1384
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1391
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1400
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1402
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1405
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1406
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1407
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1408
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1409
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1411
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1538
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1568
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1581
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1648
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1704
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1713
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1734
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1742
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1765
		{
		}
	case 127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1766
		{
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1770
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1779
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1791
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1796
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1803
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1815
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1822
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1830
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1850
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1869
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1879
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1889
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1898
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1909
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1915
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 150:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1946
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2032
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2075
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2078
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2084
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2136
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = nil
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = true
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = false
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2313
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2316
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2351
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2363
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2402
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2521
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2638
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = nil
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "alter function")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2919
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2928
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2934
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2939
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2944
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2949
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2954
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2985
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = nil
		}
	case 316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3061
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3075
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3241
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3261
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "CREATE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3299
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3303
		{
			return unimplemented(sqllex, "create access method")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			return unimplemented(sqllex, "create cast")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3306
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3308
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3309
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3310
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3312
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3313
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3315
		{
			return unimplemented(sqllex, "create publication")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3316
		{
			return unimplemented(sqllex, "create rule")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			return unimplemented(sqllex, "create server")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3324
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3325
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3328
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3329
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3333
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3336
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3339
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3341
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3342
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3343
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3344
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3347
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3350
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			return unimplemented(sqllex, "drop server")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3354
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3480
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3515
		{

			sqlVAL.union.val = nil
		}
	case 457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "DELETE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3602
		{
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3628
		{
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DROP")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3828
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3894
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3918
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3926
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "DELETE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "INSERT")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "DELETE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "INSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4007
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4040
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4129
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4133
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "GRANT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4184
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4196
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "RESET")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "RESET")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "USE")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4270
		{
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "USE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4477
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4494
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			return unimplemented(sqllex, "set from current")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4508
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4513
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = tree.Low
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = tree.Normal
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = tree.High
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4664
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4667
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4668
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4670
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4678
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "SHOW")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4687
		{
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4688
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4691
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.str = "client_encoding"
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.str = "timezone"
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4742
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4760
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4823
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4832
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = true
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = true
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = false
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5144
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5184
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5191
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = true
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = false
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = true
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = false
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5308
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5329
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5357
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5410
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5418
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5449
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
		}
	case 942:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5462
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5485
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5566
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5573
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5580
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5713
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5765
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5827
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5828
		{
			return helpWith(sqllex, "RESUME")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5855
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5997
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6013
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6042
		{

			sqlVAL.union.val = nil
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.str = ""
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6058
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = nil
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6081
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6085
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6111
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6125
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6140
		{
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6142
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6223
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6237
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6241
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6247
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6263
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6268
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.str = ""
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6411
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6511
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6536
		{

			sqlVAL.union.val = true
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = false
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6547
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6548
		{
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6649
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6660
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6677
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6687
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6702
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6767
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6769
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6770
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6771
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6772
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6928
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6937
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6956
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6961
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6971
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6973
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6977
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6980
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6983
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6985
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6998
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = true
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{

			sqlVAL.union.val = true
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = false
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7063
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7077
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7089
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7101
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7111
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7121
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = nil
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7231
		{
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7257
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7259
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7261
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7263
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7267
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7305
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7323
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7342
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7359
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7376
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7380
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = false
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = true
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = false
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = true
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = false
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7434
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7440
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7446
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7454
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.str = ""
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.str = ""
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7513
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7519
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7744
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7750
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7762
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7768
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7782
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7788
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7805
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7806
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7810
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7869
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7877
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7917
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7947
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7976
		{
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7993
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7997
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8025
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8038
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8040
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8044
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.str = ""
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8157
		{

		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8172
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.str = ""
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.str = ""
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.str = ""
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.str = ""
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8241
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8288
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8292
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8301
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8350
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8377
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8381
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8419
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8472
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8487
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8631
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8668
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8773
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8789
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = true
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = false
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8842
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8843
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = nil
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8856
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8857
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = true
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = false
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = false
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = true
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8886
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8887
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8890
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8891
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8953
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8958
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9017
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9076
		{
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9111
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9112
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9145
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9160
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9182
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9192
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9203
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9234
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9273
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9283
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9329
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9359
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9392
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = nil
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = true
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = false
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.str = tree.AstFull
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.str = tree.AstRight
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.str = tree.AstInner
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9511
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9512
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.str = tree.AstHash
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.str = ""
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9581
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9604
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9616
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9626
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = true
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = false
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = true
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = false
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9675
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9688
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9696
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9697
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9715
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9717
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9725
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9738
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9745
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9794
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9807
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = types.Geography
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9856
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9864
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9890
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9898
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = nil
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = types.Int2
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = types.Int
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = types.Float4
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = types.Float
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9941
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9949
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9957
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = types.Bool
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9971
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = types.Float
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9990
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9996
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10018
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = types.String
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = true
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = false
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = types.Date
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10067
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10075
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10089
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10098
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10106
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10123
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = true
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = false
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = false
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = types.Interval
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10147
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10246
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = nil
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10276
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10485
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10672
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10694
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10802
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10810
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10911
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10937
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10946
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10961
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10991
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11002
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11003
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11027
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11093
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11223
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11269
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11279
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11288
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11289
		{
			return unimplemented(sqllex, "treat")
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11310
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.str = ""
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11464
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11532
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11561
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = tree.Any
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = tree.Some
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = tree.All
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = tree.Div
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.LT
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = tree.GT
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = tree.LE
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = tree.GE
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = tree.NE
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = tree.JSONExists
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = tree.Contains
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = tree.ContainedBy
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = tree.LShift
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = tree.RShift
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.Concat
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = tree.JSONFetchVal
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = tree.JSONFetchText
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = tree.JSONFetchValPath
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = tree.JSONFetchTextPath
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = tree.JSONSomeExists
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = tree.JSONAllExists
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = tree.NotRegMatch
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = tree.RegIMatch
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = tree.NotRegIMatch
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = tree.Overlaps
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = tree.Like
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11977
		{
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11978
		{
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12058
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12131
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12147
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12184
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12196
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12409
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12422
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12429
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.str = ""
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
